
// @from(Start 4102856, End 4133393)
Iw0 = z((rz0) => {
  Object.defineProperty(rz0, "__esModule", {
    value: !0
  });
  rz0.SEMATTRS_NET_HOST_CARRIER_ICC = rz0.SEMATTRS_NET_HOST_CARRIER_MNC = rz0.SEMATTRS_NET_HOST_CARRIER_MCC = rz0.SEMATTRS_NET_HOST_CARRIER_NAME = rz0.SEMATTRS_NET_HOST_CONNECTION_SUBTYPE = rz0.SEMATTRS_NET_HOST_CONNECTION_TYPE = rz0.SEMATTRS_NET_HOST_NAME = rz0.SEMATTRS_NET_HOST_PORT = rz0.SEMATTRS_NET_HOST_IP = rz0.SEMATTRS_NET_PEER_NAME = rz0.SEMATTRS_NET_PEER_PORT = rz0.SEMATTRS_NET_PEER_IP = rz0.SEMATTRS_NET_TRANSPORT = rz0.SEMATTRS_FAAS_INVOKED_REGION = rz0.SEMATTRS_FAAS_INVOKED_PROVIDER = rz0.SEMATTRS_FAAS_INVOKED_NAME = rz0.SEMATTRS_FAAS_COLDSTART = rz0.SEMATTRS_FAAS_CRON = rz0.SEMATTRS_FAAS_TIME = rz0.SEMATTRS_FAAS_DOCUMENT_NAME = rz0.SEMATTRS_FAAS_DOCUMENT_TIME = rz0.SEMATTRS_FAAS_DOCUMENT_OPERATION = rz0.SEMATTRS_FAAS_DOCUMENT_COLLECTION = rz0.SEMATTRS_FAAS_EXECUTION = rz0.SEMATTRS_FAAS_TRIGGER = rz0.SEMATTRS_EXCEPTION_ESCAPED = rz0.SEMATTRS_EXCEPTION_STACKTRACE = rz0.SEMATTRS_EXCEPTION_MESSAGE = rz0.SEMATTRS_EXCEPTION_TYPE = rz0.SEMATTRS_DB_SQL_TABLE = rz0.SEMATTRS_DB_MONGODB_COLLECTION = rz0.SEMATTRS_DB_REDIS_DATABASE_INDEX = rz0.SEMATTRS_DB_HBASE_NAMESPACE = rz0.SEMATTRS_DB_CASSANDRA_COORDINATOR_DC = rz0.SEMATTRS_DB_CASSANDRA_COORDINATOR_ID = rz0.SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = rz0.SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = rz0.SEMATTRS_DB_CASSANDRA_TABLE = rz0.SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL = rz0.SEMATTRS_DB_CASSANDRA_PAGE_SIZE = rz0.SEMATTRS_DB_CASSANDRA_KEYSPACE = rz0.SEMATTRS_DB_MSSQL_INSTANCE_NAME = rz0.SEMATTRS_DB_OPERATION = rz0.SEMATTRS_DB_STATEMENT = rz0.SEMATTRS_DB_NAME = rz0.SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = rz0.SEMATTRS_DB_USER = rz0.SEMATTRS_DB_CONNECTION_STRING = rz0.SEMATTRS_DB_SYSTEM = rz0.SEMATTRS_AWS_LAMBDA_INVOKED_ARN = void 0;
  rz0.SEMATTRS_MESSAGING_DESTINATION_KIND = rz0.SEMATTRS_MESSAGING_DESTINATION = rz0.SEMATTRS_MESSAGING_SYSTEM = rz0.SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = rz0.SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = rz0.SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT = rz0.SEMATTRS_AWS_DYNAMODB_COUNT = rz0.SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS = rz0.SEMATTRS_AWS_DYNAMODB_SEGMENT = rz0.SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = rz0.SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = rz0.SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = rz0.SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = rz0.SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = rz0.SEMATTRS_AWS_DYNAMODB_SELECT = rz0.SEMATTRS_AWS_DYNAMODB_INDEX_NAME = rz0.SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET = rz0.SEMATTRS_AWS_DYNAMODB_LIMIT = rz0.SEMATTRS_AWS_DYNAMODB_PROJECTION = rz0.SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ = rz0.SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = rz0.SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = rz0.SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = rz0.SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY = rz0.SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = rz0.SEMATTRS_HTTP_CLIENT_IP = rz0.SEMATTRS_HTTP_ROUTE = rz0.SEMATTRS_HTTP_SERVER_NAME = rz0.SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = rz0.SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH = rz0.SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = rz0.SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH = rz0.SEMATTRS_HTTP_USER_AGENT = rz0.SEMATTRS_HTTP_FLAVOR = rz0.SEMATTRS_HTTP_STATUS_CODE = rz0.SEMATTRS_HTTP_SCHEME = rz0.SEMATTRS_HTTP_HOST = rz0.SEMATTRS_HTTP_TARGET = rz0.SEMATTRS_HTTP_URL = rz0.SEMATTRS_HTTP_METHOD = rz0.SEMATTRS_CODE_LINENO = rz0.SEMATTRS_CODE_FILEPATH = rz0.SEMATTRS_CODE_NAMESPACE = rz0.SEMATTRS_CODE_FUNCTION = rz0.SEMATTRS_THREAD_NAME = rz0.SEMATTRS_THREAD_ID = rz0.SEMATTRS_ENDUSER_SCOPE = rz0.SEMATTRS_ENDUSER_ROLE = rz0.SEMATTRS_ENDUSER_ID = rz0.SEMATTRS_PEER_SERVICE = void 0;
  rz0.DBSYSTEMVALUES_FILEMAKER = rz0.DBSYSTEMVALUES_DERBY = rz0.DBSYSTEMVALUES_FIREBIRD = rz0.DBSYSTEMVALUES_ADABAS = rz0.DBSYSTEMVALUES_CACHE = rz0.DBSYSTEMVALUES_EDB = rz0.DBSYSTEMVALUES_FIRSTSQL = rz0.DBSYSTEMVALUES_INGRES = rz0.DBSYSTEMVALUES_HANADB = rz0.DBSYSTEMVALUES_MAXDB = rz0.DBSYSTEMVALUES_PROGRESS = rz0.DBSYSTEMVALUES_HSQLDB = rz0.DBSYSTEMVALUES_CLOUDSCAPE = rz0.DBSYSTEMVALUES_HIVE = rz0.DBSYSTEMVALUES_REDSHIFT = rz0.DBSYSTEMVALUES_POSTGRESQL = rz0.DBSYSTEMVALUES_DB2 = rz0.DBSYSTEMVALUES_ORACLE = rz0.DBSYSTEMVALUES_MYSQL = rz0.DBSYSTEMVALUES_MSSQL = rz0.DBSYSTEMVALUES_OTHER_SQL = rz0.SemanticAttributes = rz0.SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = rz0.SEMATTRS_MESSAGE_COMPRESSED_SIZE = rz0.SEMATTRS_MESSAGE_ID = rz0.SEMATTRS_MESSAGE_TYPE = rz0.SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = rz0.SEMATTRS_RPC_JSONRPC_ERROR_CODE = rz0.SEMATTRS_RPC_JSONRPC_REQUEST_ID = rz0.SEMATTRS_RPC_JSONRPC_VERSION = rz0.SEMATTRS_RPC_GRPC_STATUS_CODE = rz0.SEMATTRS_RPC_METHOD = rz0.SEMATTRS_RPC_SERVICE = rz0.SEMATTRS_RPC_SYSTEM = rz0.SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = rz0.SEMATTRS_MESSAGING_KAFKA_PARTITION = rz0.SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = rz0.SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP = rz0.SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY = rz0.SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY = rz0.SEMATTRS_MESSAGING_CONSUMER_ID = rz0.SEMATTRS_MESSAGING_OPERATION = rz0.SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = rz0.SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = rz0.SEMATTRS_MESSAGING_CONVERSATION_ID = rz0.SEMATTRS_MESSAGING_MESSAGE_ID = rz0.SEMATTRS_MESSAGING_URL = rz0.SEMATTRS_MESSAGING_PROTOCOL_VERSION = rz0.SEMATTRS_MESSAGING_PROTOCOL = rz0.SEMATTRS_MESSAGING_TEMP_DESTINATION = void 0;
  rz0.FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = rz0.FaasDocumentOperationValues = rz0.FAASDOCUMENTOPERATIONVALUES_DELETE = rz0.FAASDOCUMENTOPERATIONVALUES_EDIT = rz0.FAASDOCUMENTOPERATIONVALUES_INSERT = rz0.FaasTriggerValues = rz0.FAASTRIGGERVALUES_OTHER = rz0.FAASTRIGGERVALUES_TIMER = rz0.FAASTRIGGERVALUES_PUBSUB = rz0.FAASTRIGGERVALUES_HTTP = rz0.FAASTRIGGERVALUES_DATASOURCE = rz0.DbCassandraConsistencyLevelValues = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_ANY = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_THREE = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_TWO = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_ONE = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = rz0.DBCASSANDRACONSISTENCYLEVELVALUES_ALL = rz0.DbSystemValues = rz0.DBSYSTEMVALUES_COCKROACHDB = rz0.DBSYSTEMVALUES_MEMCACHED = rz0.DBSYSTEMVALUES_ELASTICSEARCH = rz0.DBSYSTEMVALUES_GEODE = rz0.DBSYSTEMVALUES_NEO4J = rz0.DBSYSTEMVALUES_DYNAMODB = rz0.DBSYSTEMVALUES_COSMOSDB = rz0.DBSYSTEMVALUES_COUCHDB = rz0.DBSYSTEMVALUES_COUCHBASE = rz0.DBSYSTEMVALUES_REDIS = rz0.DBSYSTEMVALUES_MONGODB = rz0.DBSYSTEMVALUES_HBASE = rz0.DBSYSTEMVALUES_CASSANDRA = rz0.DBSYSTEMVALUES_COLDFUSION = rz0.DBSYSTEMVALUES_H2 = rz0.DBSYSTEMVALUES_VERTICA = rz0.DBSYSTEMVALUES_TERADATA = rz0.DBSYSTEMVALUES_SYBASE = rz0.DBSYSTEMVALUES_SQLITE = rz0.DBSYSTEMVALUES_POINTBASE = rz0.DBSYSTEMVALUES_PERVASIVE = rz0.DBSYSTEMVALUES_NETEZZA = rz0.DBSYSTEMVALUES_MARIADB = rz0.DBSYSTEMVALUES_INTERBASE = rz0.DBSYSTEMVALUES_INSTANTDB = rz0.DBSYSTEMVALUES_INFORMIX = void 0;
  rz0.MESSAGINGOPERATIONVALUES_RECEIVE = rz0.MessagingDestinationKindValues = rz0.MESSAGINGDESTINATIONKINDVALUES_TOPIC = rz0.MESSAGINGDESTINATIONKINDVALUES_QUEUE = rz0.HttpFlavorValues = rz0.HTTPFLAVORVALUES_QUIC = rz0.HTTPFLAVORVALUES_SPDY = rz0.HTTPFLAVORVALUES_HTTP_2_0 = rz0.HTTPFLAVORVALUES_HTTP_1_1 = rz0.HTTPFLAVORVALUES_HTTP_1_0 = rz0.NetHostConnectionSubtypeValues = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_NR = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_GSM = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_LTE = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = rz0.NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = rz0.NetHostConnectionTypeValues = rz0.NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = rz0.NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = rz0.NETHOSTCONNECTIONTYPEVALUES_CELL = rz0.NETHOSTCONNECTIONTYPEVALUES_WIRED = rz0.NETHOSTCONNECTIONTYPEVALUES_WIFI = rz0.NetTransportValues = rz0.NETTRANSPORTVALUES_OTHER = rz0.NETTRANSPORTVALUES_INPROC = rz0.NETTRANSPORTVALUES_PIPE = rz0.NETTRANSPORTVALUES_UNIX = rz0.NETTRANSPORTVALUES_IP = rz0.NETTRANSPORTVALUES_IP_UDP = rz0.NETTRANSPORTVALUES_IP_TCP = rz0.FaasInvokedProviderValues = rz0.FAASINVOKEDPROVIDERVALUES_GCP = rz0.FAASINVOKEDPROVIDERVALUES_AZURE = rz0.FAASINVOKEDPROVIDERVALUES_AWS = void 0;
  rz0.MessageTypeValues = rz0.MESSAGETYPEVALUES_RECEIVED = rz0.MESSAGETYPEVALUES_SENT = rz0.RpcGrpcStatusCodeValues = rz0.RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = rz0.RPCGRPCSTATUSCODEVALUES_DATA_LOSS = rz0.RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = rz0.RPCGRPCSTATUSCODEVALUES_INTERNAL = rz0.RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = rz0.RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = rz0.RPCGRPCSTATUSCODEVALUES_ABORTED = rz0.RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = rz0.RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = rz0.RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = rz0.RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = rz0.RPCGRPCSTATUSCODEVALUES_NOT_FOUND = rz0.RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = rz0.RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = rz0.RPCGRPCSTATUSCODEVALUES_UNKNOWN = rz0.RPCGRPCSTATUSCODEVALUES_CANCELLED = rz0.RPCGRPCSTATUSCODEVALUES_OK = rz0.MessagingOperationValues = rz0.MESSAGINGOPERATIONVALUES_PROCESS = void 0;
  var qX = _b1(),
    YV0 = "aws.lambda.invoked_arn",
    WV0 = "db.system",
    JV0 = "db.connection_string",
    FV0 = "db.user",
    XV0 = "db.jdbc.driver_classname",
    VV0 = "db.name",
    CV0 = "db.statement",
    KV0 = "db.operation",
    HV0 = "db.mssql.instance_name",
    zV0 = "db.cassandra.keyspace",
    wV0 = "db.cassandra.page_size",
    EV0 = "db.cassandra.consistency_level",
    UV0 = "db.cassandra.table",
    NV0 = "db.cassandra.idempotence",
    $V0 = "db.cassandra.speculative_execution_count",
    qV0 = "db.cassandra.coordinator.id",
    MV0 = "db.cassandra.coordinator.dc",
    LV0 = "db.hbase.namespace",
    RV0 = "db.redis.database_index",
    OV0 = "db.mongodb.collection",
    TV0 = "db.sql.table",
    PV0 = "exception.type",
    SV0 = "exception.message",
    _V0 = "exception.stacktrace",
    jV0 = "exception.escaped",
    yV0 = "faas.trigger",
    kV0 = "faas.execution",
    xV0 = "faas.document.collection",
    fV0 = "faas.document.operation",
    vV0 = "faas.document.time",
    bV0 = "faas.document.name",
    gV0 = "faas.time",
    hV0 = "faas.cron",
    mV0 = "faas.coldstart",
    dV0 = "faas.invoked_name",
    uV0 = "faas.invoked_provider",
    pV0 = "faas.invoked_region",
    cV0 = "net.transport",
    lV0 = "net.peer.ip",
    iV0 = "net.peer.port",
    nV0 = "net.peer.name",
    aV0 = "net.host.ip",
    sV0 = "net.host.port",
    rV0 = "net.host.name",
    oV0 = "net.host.connection.type",
    tV0 = "net.host.connection.subtype",
    eV0 = "net.host.carrier.name",
    AC0 = "net.host.carrier.mcc",
    BC0 = "net.host.carrier.mnc",
    QC0 = "net.host.carrier.icc",
    IC0 = "peer.service",
    GC0 = "enduser.id",
    ZC0 = "enduser.role",
    DC0 = "enduser.scope",
    YC0 = "thread.id",
    WC0 = "thread.name",
    JC0 = "code.function",
    FC0 = "code.namespace",
    XC0 = "code.filepath",
    VC0 = "code.lineno",
    CC0 = "http.method",
    KC0 = "http.url",
    HC0 = "http.target",
    zC0 = "http.host",
    wC0 = "http.scheme",
    EC0 = "http.status_code",
    UC0 = "http.flavor",
    NC0 = "http.user_agent",
    $C0 = "http.request_content_length",
    qC0 = "http.request_content_length_uncompressed",
    MC0 = "http.response_content_length",
    LC0 = "http.response_content_length_uncompressed",
    RC0 = "http.server_name",
    OC0 = "http.route",
    TC0 = "http.client_ip",
    PC0 = "aws.dynamodb.table_names",
    SC0 = "aws.dynamodb.consumed_capacity",
    _C0 = "aws.dynamodb.item_collection_metrics",
    jC0 = "aws.dynamodb.provisioned_read_capacity",
    yC0 = "aws.dynamodb.provisioned_write_capacity",
    kC0 = "aws.dynamodb.consistent_read",
    xC0 = "aws.dynamodb.projection",
    fC0 = "aws.dynamodb.limit",
    vC0 = "aws.dynamodb.attributes_to_get",
    bC0 = "aws.dynamodb.index_name",
    gC0 = "aws.dynamodb.select",
    hC0 = "aws.dynamodb.global_secondary_indexes",
    mC0 = "aws.dynamodb.local_secondary_indexes",
    dC0 = "aws.dynamodb.exclusive_start_table",
    uC0 = "aws.dynamodb.table_count",
    pC0 = "aws.dynamodb.scan_forward",
    cC0 = "aws.dynamodb.segment",
    lC0 = "aws.dynamodb.total_segments",
    iC0 = "aws.dynamodb.count",
    nC0 = "aws.dynamodb.scanned_count",
    aC0 = "aws.dynamodb.attribute_definitions",
    sC0 = "aws.dynamodb.global_secondary_index_updates",
    rC0 = "messaging.system",
    oC0 = "messaging.destination",
    tC0 = "messaging.destination_kind",
    eC0 = "messaging.temp_destination",
    AK0 = "messaging.protocol",
    BK0 = "messaging.protocol_version",
    QK0 = "messaging.url",
    IK0 = "messaging.message_id",
    GK0 = "messaging.conversation_id",
    ZK0 = "messaging.message_payload_size_bytes",
    DK0 = "messaging.message_payload_compressed_size_bytes",
    YK0 = "messaging.operation",
    WK0 = "messaging.consumer_id",
    JK0 = "messaging.rabbitmq.routing_key",
    FK0 = "messaging.kafka.message_key",
    XK0 = "messaging.kafka.consumer_group",
    VK0 = "messaging.kafka.client_id",
    CK0 = "messaging.kafka.partition",
    KK0 = "messaging.kafka.tombstone",
    HK0 = "rpc.system",
    zK0 = "rpc.service",
    wK0 = "rpc.method",
    EK0 = "rpc.grpc.status_code",
    UK0 = "rpc.jsonrpc.version",
    NK0 = "rpc.jsonrpc.request_id",
    $K0 = "rpc.jsonrpc.error_code",
    qK0 = "rpc.jsonrpc.error_message",
    MK0 = "message.type",
    LK0 = "message.id",
    RK0 = "message.compressed_size",
    OK0 = "message.uncompressed_size";
  rz0.SEMATTRS_AWS_LAMBDA_INVOKED_ARN = YV0;
  rz0.SEMATTRS_DB_SYSTEM = WV0;
  rz0.SEMATTRS_DB_CONNECTION_STRING = JV0;
  rz0.SEMATTRS_DB_USER = FV0;
  rz0.SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = XV0;
  rz0.SEMATTRS_DB_NAME = VV0;
  rz0.SEMATTRS_DB_STATEMENT = CV0;
  rz0.SEMATTRS_DB_OPERATION = KV0;
  rz0.SEMATTRS_DB_MSSQL_INSTANCE_NAME = HV0;
  rz0.SEMATTRS_DB_CASSANDRA_KEYSPACE = zV0;
  rz0.SEMATTRS_DB_CASSANDRA_PAGE_SIZE = wV0;
  rz0.SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL = EV0;
  rz0.SEMATTRS_DB_CASSANDRA_TABLE = UV0;
  rz0.SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = NV0;
  rz0.SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = $V0;
  rz0.SEMATTRS_DB_CASSANDRA_COORDINATOR_ID = qV0;
  rz0.SEMATTRS_DB_CASSANDRA_COORDINATOR_DC = MV0;
  rz0.SEMATTRS_DB_HBASE_NAMESPACE = LV0;
  rz0.SEMATTRS_DB_REDIS_DATABASE_INDEX = RV0;
  rz0.SEMATTRS_DB_MONGODB_COLLECTION = OV0;
  rz0.SEMATTRS_DB_SQL_TABLE = TV0;
  rz0.SEMATTRS_EXCEPTION_TYPE = PV0;
  rz0.SEMATTRS_EXCEPTION_MESSAGE = SV0;
  rz0.SEMATTRS_EXCEPTION_STACKTRACE = _V0;
  rz0.SEMATTRS_EXCEPTION_ESCAPED = jV0;
  rz0.SEMATTRS_FAAS_TRIGGER = yV0;
  rz0.SEMATTRS_FAAS_EXECUTION = kV0;
  rz0.SEMATTRS_FAAS_DOCUMENT_COLLECTION = xV0;
  rz0.SEMATTRS_FAAS_DOCUMENT_OPERATION = fV0;
  rz0.SEMATTRS_FAAS_DOCUMENT_TIME = vV0;
  rz0.SEMATTRS_FAAS_DOCUMENT_NAME = bV0;
  rz0.SEMATTRS_FAAS_TIME = gV0;
  rz0.SEMATTRS_FAAS_CRON = hV0;
  rz0.SEMATTRS_FAAS_COLDSTART = mV0;
  rz0.SEMATTRS_FAAS_INVOKED_NAME = dV0;
  rz0.SEMATTRS_FAAS_INVOKED_PROVIDER = uV0;
  rz0.SEMATTRS_FAAS_INVOKED_REGION = pV0;
  rz0.SEMATTRS_NET_TRANSPORT = cV0;
  rz0.SEMATTRS_NET_PEER_IP = lV0;
  rz0.SEMATTRS_NET_PEER_PORT = iV0;
  rz0.SEMATTRS_NET_PEER_NAME = nV0;
  rz0.SEMATTRS_NET_HOST_IP = aV0;
  rz0.SEMATTRS_NET_HOST_PORT = sV0;
  rz0.SEMATTRS_NET_HOST_NAME = rV0;
  rz0.SEMATTRS_NET_HOST_CONNECTION_TYPE = oV0;
  rz0.SEMATTRS_NET_HOST_CONNECTION_SUBTYPE = tV0;
  rz0.SEMATTRS_NET_HOST_CARRIER_NAME = eV0;
  rz0.SEMATTRS_NET_HOST_CARRIER_MCC = AC0;
  rz0.SEMATTRS_NET_HOST_CARRIER_MNC = BC0;
  rz0.SEMATTRS_NET_HOST_CARRIER_ICC = QC0;
  rz0.SEMATTRS_PEER_SERVICE = IC0;
  rz0.SEMATTRS_ENDUSER_ID = GC0;
  rz0.SEMATTRS_ENDUSER_ROLE = ZC0;
  rz0.SEMATTRS_ENDUSER_SCOPE = DC0;
  rz0.SEMATTRS_THREAD_ID = YC0;
  rz0.SEMATTRS_THREAD_NAME = WC0;
  rz0.SEMATTRS_CODE_FUNCTION = JC0;
  rz0.SEMATTRS_CODE_NAMESPACE = FC0;
  rz0.SEMATTRS_CODE_FILEPATH = XC0;
  rz0.SEMATTRS_CODE_LINENO = VC0;
  rz0.SEMATTRS_HTTP_METHOD = CC0;
  rz0.SEMATTRS_HTTP_URL = KC0;
  rz0.SEMATTRS_HTTP_TARGET = HC0;
  rz0.SEMATTRS_HTTP_HOST = zC0;
  rz0.SEMATTRS_HTTP_SCHEME = wC0;
  rz0.SEMATTRS_HTTP_STATUS_CODE = EC0;
  rz0.SEMATTRS_HTTP_FLAVOR = UC0;
  rz0.SEMATTRS_HTTP_USER_AGENT = NC0;
  rz0.SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH = $C0;
  rz0.SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = qC0;
  rz0.SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH = MC0;
  rz0.SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = LC0;
  rz0.SEMATTRS_HTTP_SERVER_NAME = RC0;
  rz0.SEMATTRS_HTTP_ROUTE = OC0;
  rz0.SEMATTRS_HTTP_CLIENT_IP = TC0;
  rz0.SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = PC0;
  rz0.SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY = SC0;
  rz0.SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = _C0;
  rz0.SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = jC0;
  rz0.SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = yC0;
  rz0.SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ = kC0;
  rz0.SEMATTRS_AWS_DYNAMODB_PROJECTION = xC0;
  rz0.SEMATTRS_AWS_DYNAMODB_LIMIT = fC0;
  rz0.SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET = vC0;
  rz0.SEMATTRS_AWS_DYNAMODB_INDEX_NAME = bC0;
  rz0.SEMATTRS_AWS_DYNAMODB_SELECT = gC0;
  rz0.SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = hC0;
  rz0.SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = mC0;
  rz0.SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = dC0;
  rz0.SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = uC0;
  rz0.SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = pC0;
  rz0.SEMATTRS_AWS_DYNAMODB_SEGMENT = cC0;
  rz0.SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS = lC0;
  rz0.SEMATTRS_AWS_DYNAMODB_COUNT = iC0;
  rz0.SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT = nC0;
  rz0.SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = aC0;
  rz0.SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = sC0;
  rz0.SEMATTRS_MESSAGING_SYSTEM = rC0;
  rz0.SEMATTRS_MESSAGING_DESTINATION = oC0;
  rz0.SEMATTRS_MESSAGING_DESTINATION_KIND = tC0;
  rz0.SEMATTRS_MESSAGING_TEMP_DESTINATION = eC0;
  rz0.SEMATTRS_MESSAGING_PROTOCOL = AK0;
  rz0.SEMATTRS_MESSAGING_PROTOCOL_VERSION = BK0;
  rz0.SEMATTRS_MESSAGING_URL = QK0;
  rz0.SEMATTRS_MESSAGING_MESSAGE_ID = IK0;
  rz0.SEMATTRS_MESSAGING_CONVERSATION_ID = GK0;
  rz0.SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = ZK0;
  rz0.SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = DK0;
  rz0.SEMATTRS_MESSAGING_OPERATION = YK0;
  rz0.SEMATTRS_MESSAGING_CONSUMER_ID = WK0;
  rz0.SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY = JK0;
  rz0.SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY = FK0;
  rz0.SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP = XK0;
  rz0.SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = VK0;
  rz0.SEMATTRS_MESSAGING_KAFKA_PARTITION = CK0;
  rz0.SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = KK0;
  rz0.SEMATTRS_RPC_SYSTEM = HK0;
  rz0.SEMATTRS_RPC_SERVICE = zK0;
  rz0.SEMATTRS_RPC_METHOD = wK0;
  rz0.SEMATTRS_RPC_GRPC_STATUS_CODE = EK0;
  rz0.SEMATTRS_RPC_JSONRPC_VERSION = UK0;
  rz0.SEMATTRS_RPC_JSONRPC_REQUEST_ID = NK0;
  rz0.SEMATTRS_RPC_JSONRPC_ERROR_CODE = $K0;
  rz0.SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = qK0;
  rz0.SEMATTRS_MESSAGE_TYPE = MK0;
  rz0.SEMATTRS_MESSAGE_ID = LK0;
  rz0.SEMATTRS_MESSAGE_COMPRESSED_SIZE = RK0;
  rz0.SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = OK0;
  rz0.SemanticAttributes = qX.createConstMap([YV0, WV0, JV0, FV0, XV0, VV0, CV0, KV0, HV0, zV0, wV0, EV0, UV0, NV0, $V0, qV0, MV0, LV0, RV0, OV0, TV0, PV0, SV0, _V0, jV0, yV0, kV0, xV0, fV0, vV0, bV0, gV0, hV0, mV0, dV0, uV0, pV0, cV0, lV0, iV0, nV0, aV0, sV0, rV0, oV0, tV0, eV0, AC0, BC0, QC0, IC0, GC0, ZC0, DC0, YC0, WC0, JC0, FC0, XC0, VC0, CC0, KC0, HC0, zC0, wC0, EC0, UC0, NC0, $C0, qC0, MC0, LC0, RC0, OC0, TC0, PC0, SC0, _C0, jC0, yC0, kC0, xC0, fC0, vC0, bC0, gC0, hC0, mC0, dC0, uC0, pC0, cC0, lC0, iC0, nC0, aC0, sC0, rC0, oC0, tC0, eC0, AK0, BK0, QK0, IK0, GK0, ZK0, DK0, YK0, WK0, JK0, FK0, XK0, VK0, CK0, KK0, HK0, zK0, wK0, EK0, UK0, NK0, $K0, qK0, MK0, LK0, RK0, OK0]);
  var TK0 = "other_sql",
    PK0 = "mssql",
    SK0 = "mysql",
    _K0 = "oracle",
    jK0 = "db2",
    yK0 = "postgresql",
    kK0 = "redshift",
    xK0 = "hive",
    fK0 = "cloudscape",
    vK0 = "hsqldb",
    bK0 = "progress",
    gK0 = "maxdb",
    hK0 = "hanadb",
    mK0 = "ingres",
    dK0 = "firstsql",
    uK0 = "edb",
    pK0 = "cache",
    cK0 = "adabas",
    lK0 = "firebird",
    iK0 = "derby",
    nK0 = "filemaker",
    aK0 = "informix",
    sK0 = "instantdb",
    rK0 = "interbase",
    oK0 = "mariadb",
    tK0 = "netezza",
    eK0 = "pervasive",
    AH0 = "pointbase",
    BH0 = "sqlite",
    QH0 = "sybase",
    IH0 = "teradata",
    GH0 = "vertica",
    ZH0 = "h2",
    DH0 = "coldfusion",
    YH0 = "cassandra",
    WH0 = "hbase",
    JH0 = "mongodb",
    FH0 = "redis",
    XH0 = "couchbase",
    VH0 = "couchdb",
    CH0 = "cosmosdb",
    KH0 = "dynamodb",
    HH0 = "neo4j",
    zH0 = "geode",
    wH0 = "elasticsearch",
    EH0 = "memcached",
    UH0 = "cockroachdb";
  rz0.DBSYSTEMVALUES_OTHER_SQL = TK0;
  rz0.DBSYSTEMVALUES_MSSQL = PK0;
  rz0.DBSYSTEMVALUES_MYSQL = SK0;
  rz0.DBSYSTEMVALUES_ORACLE = _K0;
  rz0.DBSYSTEMVALUES_DB2 = jK0;
  rz0.DBSYSTEMVALUES_POSTGRESQL = yK0;
  rz0.DBSYSTEMVALUES_REDSHIFT = kK0;
  rz0.DBSYSTEMVALUES_HIVE = xK0;
  rz0.DBSYSTEMVALUES_CLOUDSCAPE = fK0;
  rz0.DBSYSTEMVALUES_HSQLDB = vK0;
  rz0.DBSYSTEMVALUES_PROGRESS = bK0;
  rz0.DBSYSTEMVALUES_MAXDB = gK0;
  rz0.DBSYSTEMVALUES_HANADB = hK0;
  rz0.DBSYSTEMVALUES_INGRES = mK0;
  rz0.DBSYSTEMVALUES_FIRSTSQL = dK0;
  rz0.DBSYSTEMVALUES_EDB = uK0;
  rz0.DBSYSTEMVALUES_CACHE = pK0;
  rz0.DBSYSTEMVALUES_ADABAS = cK0;
  rz0.DBSYSTEMVALUES_FIREBIRD = lK0;
  rz0.DBSYSTEMVALUES_DERBY = iK0;
  rz0.DBSYSTEMVALUES_FILEMAKER = nK0;
  rz0.DBSYSTEMVALUES_INFORMIX = aK0;
  rz0.DBSYSTEMVALUES_INSTANTDB = sK0;
  rz0.DBSYSTEMVALUES_INTERBASE = rK0;
  rz0.DBSYSTEMVALUES_MARIADB = oK0;
  rz0.DBSYSTEMVALUES_NETEZZA = tK0;
  rz0.DBSYSTEMVALUES_PERVASIVE = eK0;
  rz0.DBSYSTEMVALUES_POINTBASE = AH0;
  rz0.DBSYSTEMVALUES_SQLITE = BH0;
  rz0.DBSYSTEMVALUES_SYBASE = QH0;
  rz0.DBSYSTEMVALUES_TERADATA = IH0;
  rz0.DBSYSTEMVALUES_VERTICA = GH0;
  rz0.DBSYSTEMVALUES_H2 = ZH0;
  rz0.DBSYSTEMVALUES_COLDFUSION = DH0;
  rz0.DBSYSTEMVALUES_CASSANDRA = YH0;
  rz0.DBSYSTEMVALUES_HBASE = WH0;
  rz0.DBSYSTEMVALUES_MONGODB = JH0;
  rz0.DBSYSTEMVALUES_REDIS = FH0;
  rz0.DBSYSTEMVALUES_COUCHBASE = XH0;
  rz0.DBSYSTEMVALUES_COUCHDB = VH0;
  rz0.DBSYSTEMVALUES_COSMOSDB = CH0;
  rz0.DBSYSTEMVALUES_DYNAMODB = KH0;
  rz0.DBSYSTEMVALUES_NEO4J = HH0;
  rz0.DBSYSTEMVALUES_GEODE = zH0;
  rz0.DBSYSTEMVALUES_ELASTICSEARCH = wH0;
  rz0.DBSYSTEMVALUES_MEMCACHED = EH0;
  rz0.DBSYSTEMVALUES_COCKROACHDB = UH0;
  rz0.DbSystemValues = qX.createConstMap([TK0, PK0, SK0, _K0, jK0, yK0, kK0, xK0, fK0, vK0, bK0, gK0, hK0, mK0, dK0, uK0, pK0, cK0, lK0, iK0, nK0, aK0, sK0, rK0, oK0, tK0, eK0, AH0, BH0, QH0, IH0, GH0, ZH0, DH0, YH0, WH0, JH0, FH0, XH0, VH0, CH0, KH0, HH0, zH0, wH0, EH0, UH0]);
  var NH0 = "all",
    $H0 = "each_quorum",
    qH0 = "quorum",
    MH0 = "local_quorum",
    LH0 = "one",
    RH0 = "two",
    OH0 = "three",
    TH0 = "local_one",
    PH0 = "any",
    SH0 = "serial",
    _H0 = "local_serial";
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_ALL = NH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = $H0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = qH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = MH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_ONE = LH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_TWO = RH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_THREE = OH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = TH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_ANY = PH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = SH0;
  rz0.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = _H0;
  rz0.DbCassandraConsistencyLevelValues = qX.createConstMap([NH0, $H0, qH0, MH0, LH0, RH0, OH0, TH0, PH0, SH0, _H0]);
  var jH0 = "datasource",
    yH0 = "http",
    kH0 = "pubsub",
    xH0 = "timer",
    fH0 = "other";
  rz0.FAASTRIGGERVALUES_DATASOURCE = jH0;
  rz0.FAASTRIGGERVALUES_HTTP = yH0;
  rz0.FAASTRIGGERVALUES_PUBSUB = kH0;
  rz0.FAASTRIGGERVALUES_TIMER = xH0;
  rz0.FAASTRIGGERVALUES_OTHER = fH0;
  rz0.FaasTriggerValues = qX.createConstMap([jH0, yH0, kH0, xH0, fH0]);
  var vH0 = "insert",
    bH0 = "edit",
    gH0 = "delete";
  rz0.FAASDOCUMENTOPERATIONVALUES_INSERT = vH0;
  rz0.FAASDOCUMENTOPERATIONVALUES_EDIT = bH0;
  rz0.FAASDOCUMENTOPERATIONVALUES_DELETE = gH0;
  rz0.FaasDocumentOperationValues = qX.createConstMap([vH0, bH0, gH0]);
  var hH0 = "alibaba_cloud",
    mH0 = "aws",
    dH0 = "azure",
    uH0 = "gcp";
  rz0.FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = hH0;
  rz0.FAASINVOKEDPROVIDERVALUES_AWS = mH0;
  rz0.FAASINVOKEDPROVIDERVALUES_AZURE = dH0;
  rz0.FAASINVOKEDPROVIDERVALUES_GCP = uH0;
  rz0.FaasInvokedProviderValues = qX.createConstMap([hH0, mH0, dH0, uH0]);
  var pH0 = "ip_tcp",
    cH0 = "ip_udp",
    lH0 = "ip",
    iH0 = "unix",
    nH0 = "pipe",
    aH0 = "inproc",
    sH0 = "other";
  rz0.NETTRANSPORTVALUES_IP_TCP = pH0;
  rz0.NETTRANSPORTVALUES_IP_UDP = cH0;
  rz0.NETTRANSPORTVALUES_IP = lH0;
  rz0.NETTRANSPORTVALUES_UNIX = iH0;
  rz0.NETTRANSPORTVALUES_PIPE = nH0;
  rz0.NETTRANSPORTVALUES_INPROC = aH0;
  rz0.NETTRANSPORTVALUES_OTHER = sH0;
  rz0.NetTransportValues = qX.createConstMap([pH0, cH0, lH0, iH0, nH0, aH0, sH0]);
  var rH0 = "wifi",
    oH0 = "wired",
    tH0 = "cell",
    eH0 = "unavailable",
    Az0 = "unknown";
  rz0.NETHOSTCONNECTIONTYPEVALUES_WIFI = rH0;
  rz0.NETHOSTCONNECTIONTYPEVALUES_WIRED = oH0;
  rz0.NETHOSTCONNECTIONTYPEVALUES_CELL = tH0;
  rz0.NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = eH0;
  rz0.NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = Az0;
  rz0.NetHostConnectionTypeValues = qX.createConstMap([rH0, oH0, tH0, eH0, Az0]);
  var Bz0 = "gprs",
    Qz0 = "edge",
    Iz0 = "umts",
    Gz0 = "cdma",
    Zz0 = "evdo_0",
    Dz0 = "evdo_a",
    Yz0 = "cdma2000_1xrtt",
    Wz0 = "hsdpa",
    Jz0 = "hsupa",
    Fz0 = "hspa",
    Xz0 = "iden",
    Vz0 = "evdo_b",
    Cz0 = "lte",
    Kz0 = "ehrpd",
    Hz0 = "hspap",
    zz0 = "gsm",
    wz0 = "td_scdma",
    Ez0 = "iwlan",
    Uz0 = "nr",
    Nz0 = "nrnsa",
    $z0 = "lte_ca";
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = Bz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = Qz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = Iz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = Gz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = Zz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = Dz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = Yz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = Wz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = Jz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = Fz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = Xz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = Vz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_LTE = Cz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = Kz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = Hz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_GSM = zz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = wz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = Ez0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_NR = Uz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = Nz0;
  rz0.NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = $z0;
  rz0.NetHostConnectionSubtypeValues = qX.createConstMap([Bz0, Qz0, Iz0, Gz0, Zz0, Dz0, Yz0, Wz0, Jz0, Fz0, Xz0, Vz0, Cz0, Kz0, Hz0, zz0, wz0, Ez0, Uz0, Nz0, $z0]);
  var qz0 = "1.0",
    Mz0 = "1.1",
    Lz0 = "2.0",
    Rz0 = "SPDY",
    Oz0 = "QUIC";
  rz0.HTTPFLAVORVALUES_HTTP_1_0 = qz0;
  rz0.HTTPFLAVORVALUES_HTTP_1_1 = Mz0;
  rz0.HTTPFLAVORVALUES_HTTP_2_0 = Lz0;
  rz0.HTTPFLAVORVALUES_SPDY = Rz0;
  rz0.HTTPFLAVORVALUES_QUIC = Oz0;
  rz0.HttpFlavorValues = {
    HTTP_1_0: qz0,
    HTTP_1_1: Mz0,
    HTTP_2_0: Lz0,
    SPDY: Rz0,
    QUIC: Oz0
  };
  var Tz0 = "queue",
    Pz0 = "topic";
  rz0.MESSAGINGDESTINATIONKINDVALUES_QUEUE = Tz0;
  rz0.MESSAGINGDESTINATIONKINDVALUES_TOPIC = Pz0;
  rz0.MessagingDestinationKindValues = qX.createConstMap([Tz0, Pz0]);
  var Sz0 = "receive",
    _z0 = "process";
  rz0.MESSAGINGOPERATIONVALUES_RECEIVE = Sz0;
  rz0.MESSAGINGOPERATIONVALUES_PROCESS = _z0;
  rz0.MessagingOperationValues = qX.createConstMap([Sz0, _z0]);
  var jz0 = 0,
    yz0 = 1,
    kz0 = 2,
    xz0 = 3,
    fz0 = 4,
    vz0 = 5,
    bz0 = 6,
    gz0 = 7,
    hz0 = 8,
    mz0 = 9,
    dz0 = 10,
    uz0 = 11,
    pz0 = 12,
    cz0 = 13,
    lz0 = 14,
    iz0 = 15,
    nz0 = 16;
  rz0.RPCGRPCSTATUSCODEVALUES_OK = jz0;
  rz0.RPCGRPCSTATUSCODEVALUES_CANCELLED = yz0;
  rz0.RPCGRPCSTATUSCODEVALUES_UNKNOWN = kz0;
  rz0.RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = xz0;
  rz0.RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = fz0;
  rz0.RPCGRPCSTATUSCODEVALUES_NOT_FOUND = vz0;
  rz0.RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = bz0;
  rz0.RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = gz0;
  rz0.RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = hz0;
  rz0.RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = mz0;
  rz0.RPCGRPCSTATUSCODEVALUES_ABORTED = dz0;
  rz0.RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = uz0;
  rz0.RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = pz0;
  rz0.RPCGRPCSTATUSCODEVALUES_INTERNAL = cz0;
  rz0.RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = lz0;
  rz0.RPCGRPCSTATUSCODEVALUES_DATA_LOSS = iz0;
  rz0.RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = nz0;
  rz0.RpcGrpcStatusCodeValues = {
    OK: jz0,
    CANCELLED: yz0,
    UNKNOWN: kz0,
    INVALID_ARGUMENT: xz0,
    DEADLINE_EXCEEDED: fz0,
    NOT_FOUND: vz0,
    ALREADY_EXISTS: bz0,
    PERMISSION_DENIED: gz0,
    RESOURCE_EXHAUSTED: hz0,
    FAILED_PRECONDITION: mz0,
    ABORTED: dz0,
    OUT_OF_RANGE: uz0,
    UNIMPLEMENTED: pz0,
    INTERNAL: cz0,
    UNAVAILABLE: lz0,
    DATA_LOSS: iz0,
    UNAUTHENTICATED: nz0
  };
  var az0 = "SENT",
    sz0 = "RECEIVED";
  rz0.MESSAGETYPEVALUES_SENT = az0;
  rz0.MESSAGETYPEVALUES_RECEIVED = sz0;
  rz0.MessageTypeValues = qX.createConstMap([az0, sz0])
})
// @from(Start 4133399, End 4134134)
Gw0 = z((S_) => {
  var Li4 = S_ && S_.__createBinding || (Object.create ? function(A, B, Q, I) {
      if (I === void 0) I = Q;
      var G = Object.getOwnPropertyDescriptor(B, Q);
      if (!G || ("get" in G ? !B.__esModule : G.writable || G.configurable)) G = {
        enumerable: !0,
        get: function() {
          return B[Q]
        }
      };
      Object.defineProperty(A, I, G)
    } : function(A, B, Q, I) {
      if (I === void 0) I = Q;
      A[I] = B[Q]
    }),
    Ri4 = S_ && S_.__exportStar || function(A, B) {
      for (var Q in A)
        if (Q !== "default" && !Object.prototype.hasOwnProperty.call(B, Q)) Li4(B, A, Q)
    };
  Object.defineProperty(S_, "__esModule", {
    value: !0
  });
  Ri4(Iw0(), S_)
})
// @from(Start 4134140, End 4149211)
kU0 = z((SU0) => {
  Object.defineProperty(SU0, "__esModule", {
    value: !0
  });
  SU0.SEMRESATTRS_K8S_STATEFULSET_NAME = SU0.SEMRESATTRS_K8S_STATEFULSET_UID = SU0.SEMRESATTRS_K8S_DEPLOYMENT_NAME = SU0.SEMRESATTRS_K8S_DEPLOYMENT_UID = SU0.SEMRESATTRS_K8S_REPLICASET_NAME = SU0.SEMRESATTRS_K8S_REPLICASET_UID = SU0.SEMRESATTRS_K8S_CONTAINER_NAME = SU0.SEMRESATTRS_K8S_POD_NAME = SU0.SEMRESATTRS_K8S_POD_UID = SU0.SEMRESATTRS_K8S_NAMESPACE_NAME = SU0.SEMRESATTRS_K8S_NODE_UID = SU0.SEMRESATTRS_K8S_NODE_NAME = SU0.SEMRESATTRS_K8S_CLUSTER_NAME = SU0.SEMRESATTRS_HOST_IMAGE_VERSION = SU0.SEMRESATTRS_HOST_IMAGE_ID = SU0.SEMRESATTRS_HOST_IMAGE_NAME = SU0.SEMRESATTRS_HOST_ARCH = SU0.SEMRESATTRS_HOST_TYPE = SU0.SEMRESATTRS_HOST_NAME = SU0.SEMRESATTRS_HOST_ID = SU0.SEMRESATTRS_FAAS_MAX_MEMORY = SU0.SEMRESATTRS_FAAS_INSTANCE = SU0.SEMRESATTRS_FAAS_VERSION = SU0.SEMRESATTRS_FAAS_ID = SU0.SEMRESATTRS_FAAS_NAME = SU0.SEMRESATTRS_DEVICE_MODEL_NAME = SU0.SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = SU0.SEMRESATTRS_DEVICE_ID = SU0.SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = SU0.SEMRESATTRS_CONTAINER_IMAGE_TAG = SU0.SEMRESATTRS_CONTAINER_IMAGE_NAME = SU0.SEMRESATTRS_CONTAINER_RUNTIME = SU0.SEMRESATTRS_CONTAINER_ID = SU0.SEMRESATTRS_CONTAINER_NAME = SU0.SEMRESATTRS_AWS_LOG_STREAM_ARNS = SU0.SEMRESATTRS_AWS_LOG_STREAM_NAMES = SU0.SEMRESATTRS_AWS_LOG_GROUP_ARNS = SU0.SEMRESATTRS_AWS_LOG_GROUP_NAMES = SU0.SEMRESATTRS_AWS_EKS_CLUSTER_ARN = SU0.SEMRESATTRS_AWS_ECS_TASK_REVISION = SU0.SEMRESATTRS_AWS_ECS_TASK_FAMILY = SU0.SEMRESATTRS_AWS_ECS_TASK_ARN = SU0.SEMRESATTRS_AWS_ECS_LAUNCHTYPE = SU0.SEMRESATTRS_AWS_ECS_CLUSTER_ARN = SU0.SEMRESATTRS_AWS_ECS_CONTAINER_ARN = SU0.SEMRESATTRS_CLOUD_PLATFORM = SU0.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = SU0.SEMRESATTRS_CLOUD_REGION = SU0.SEMRESATTRS_CLOUD_ACCOUNT_ID = SU0.SEMRESATTRS_CLOUD_PROVIDER = void 0;
  SU0.CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = SU0.CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = SU0.CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = SU0.CLOUDPLATFORMVALUES_AZURE_AKS = SU0.CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = SU0.CLOUDPLATFORMVALUES_AZURE_VM = SU0.CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = SU0.CLOUDPLATFORMVALUES_AWS_LAMBDA = SU0.CLOUDPLATFORMVALUES_AWS_EKS = SU0.CLOUDPLATFORMVALUES_AWS_ECS = SU0.CLOUDPLATFORMVALUES_AWS_EC2 = SU0.CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = SU0.CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = SU0.CloudProviderValues = SU0.CLOUDPROVIDERVALUES_GCP = SU0.CLOUDPROVIDERVALUES_AZURE = SU0.CLOUDPROVIDERVALUES_AWS = SU0.CLOUDPROVIDERVALUES_ALIBABA_CLOUD = SU0.SemanticResourceAttributes = SU0.SEMRESATTRS_WEBENGINE_DESCRIPTION = SU0.SEMRESATTRS_WEBENGINE_VERSION = SU0.SEMRESATTRS_WEBENGINE_NAME = SU0.SEMRESATTRS_TELEMETRY_AUTO_VERSION = SU0.SEMRESATTRS_TELEMETRY_SDK_VERSION = SU0.SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = SU0.SEMRESATTRS_TELEMETRY_SDK_NAME = SU0.SEMRESATTRS_SERVICE_VERSION = SU0.SEMRESATTRS_SERVICE_INSTANCE_ID = SU0.SEMRESATTRS_SERVICE_NAMESPACE = SU0.SEMRESATTRS_SERVICE_NAME = SU0.SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = SU0.SEMRESATTRS_PROCESS_RUNTIME_VERSION = SU0.SEMRESATTRS_PROCESS_RUNTIME_NAME = SU0.SEMRESATTRS_PROCESS_OWNER = SU0.SEMRESATTRS_PROCESS_COMMAND_ARGS = SU0.SEMRESATTRS_PROCESS_COMMAND_LINE = SU0.SEMRESATTRS_PROCESS_COMMAND = SU0.SEMRESATTRS_PROCESS_EXECUTABLE_PATH = SU0.SEMRESATTRS_PROCESS_EXECUTABLE_NAME = SU0.SEMRESATTRS_PROCESS_PID = SU0.SEMRESATTRS_OS_VERSION = SU0.SEMRESATTRS_OS_NAME = SU0.SEMRESATTRS_OS_DESCRIPTION = SU0.SEMRESATTRS_OS_TYPE = SU0.SEMRESATTRS_K8S_CRONJOB_NAME = SU0.SEMRESATTRS_K8S_CRONJOB_UID = SU0.SEMRESATTRS_K8S_JOB_NAME = SU0.SEMRESATTRS_K8S_JOB_UID = SU0.SEMRESATTRS_K8S_DAEMONSET_NAME = SU0.SEMRESATTRS_K8S_DAEMONSET_UID = void 0;
  SU0.TelemetrySdkLanguageValues = SU0.TELEMETRYSDKLANGUAGEVALUES_WEBJS = SU0.TELEMETRYSDKLANGUAGEVALUES_RUBY = SU0.TELEMETRYSDKLANGUAGEVALUES_PYTHON = SU0.TELEMETRYSDKLANGUAGEVALUES_PHP = SU0.TELEMETRYSDKLANGUAGEVALUES_NODEJS = SU0.TELEMETRYSDKLANGUAGEVALUES_JAVA = SU0.TELEMETRYSDKLANGUAGEVALUES_GO = SU0.TELEMETRYSDKLANGUAGEVALUES_ERLANG = SU0.TELEMETRYSDKLANGUAGEVALUES_DOTNET = SU0.TELEMETRYSDKLANGUAGEVALUES_CPP = SU0.OsTypeValues = SU0.OSTYPEVALUES_Z_OS = SU0.OSTYPEVALUES_SOLARIS = SU0.OSTYPEVALUES_AIX = SU0.OSTYPEVALUES_HPUX = SU0.OSTYPEVALUES_DRAGONFLYBSD = SU0.OSTYPEVALUES_OPENBSD = SU0.OSTYPEVALUES_NETBSD = SU0.OSTYPEVALUES_FREEBSD = SU0.OSTYPEVALUES_DARWIN = SU0.OSTYPEVALUES_LINUX = SU0.OSTYPEVALUES_WINDOWS = SU0.HostArchValues = SU0.HOSTARCHVALUES_X86 = SU0.HOSTARCHVALUES_PPC64 = SU0.HOSTARCHVALUES_PPC32 = SU0.HOSTARCHVALUES_IA64 = SU0.HOSTARCHVALUES_ARM64 = SU0.HOSTARCHVALUES_ARM32 = SU0.HOSTARCHVALUES_AMD64 = SU0.AwsEcsLaunchtypeValues = SU0.AWSECSLAUNCHTYPEVALUES_FARGATE = SU0.AWSECSLAUNCHTYPEVALUES_EC2 = SU0.CloudPlatformValues = SU0.CLOUDPLATFORMVALUES_GCP_APP_ENGINE = SU0.CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = SU0.CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = SU0.CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = void 0;
  var __ = _b1(),
    Zw0 = "cloud.provider",
    Dw0 = "cloud.account.id",
    Yw0 = "cloud.region",
    Ww0 = "cloud.availability_zone",
    Jw0 = "cloud.platform",
    Fw0 = "aws.ecs.container.arn",
    Xw0 = "aws.ecs.cluster.arn",
    Vw0 = "aws.ecs.launchtype",
    Cw0 = "aws.ecs.task.arn",
    Kw0 = "aws.ecs.task.family",
    Hw0 = "aws.ecs.task.revision",
    zw0 = "aws.eks.cluster.arn",
    ww0 = "aws.log.group.names",
    Ew0 = "aws.log.group.arns",
    Uw0 = "aws.log.stream.names",
    Nw0 = "aws.log.stream.arns",
    $w0 = "container.name",
    qw0 = "container.id",
    Mw0 = "container.runtime",
    Lw0 = "container.image.name",
    Rw0 = "container.image.tag",
    Ow0 = "deployment.environment",
    Tw0 = "device.id",
    Pw0 = "device.model.identifier",
    Sw0 = "device.model.name",
    _w0 = "faas.name",
    jw0 = "faas.id",
    yw0 = "faas.version",
    kw0 = "faas.instance",
    xw0 = "faas.max_memory",
    fw0 = "host.id",
    vw0 = "host.name",
    bw0 = "host.type",
    gw0 = "host.arch",
    hw0 = "host.image.name",
    mw0 = "host.image.id",
    dw0 = "host.image.version",
    uw0 = "k8s.cluster.name",
    pw0 = "k8s.node.name",
    cw0 = "k8s.node.uid",
    lw0 = "k8s.namespace.name",
    iw0 = "k8s.pod.uid",
    nw0 = "k8s.pod.name",
    aw0 = "k8s.container.name",
    sw0 = "k8s.replicaset.uid",
    rw0 = "k8s.replicaset.name",
    ow0 = "k8s.deployment.uid",
    tw0 = "k8s.deployment.name",
    ew0 = "k8s.statefulset.uid",
    AE0 = "k8s.statefulset.name",
    BE0 = "k8s.daemonset.uid",
    QE0 = "k8s.daemonset.name",
    IE0 = "k8s.job.uid",
    GE0 = "k8s.job.name",
    ZE0 = "k8s.cronjob.uid",
    DE0 = "k8s.cronjob.name",
    YE0 = "os.type",
    WE0 = "os.description",
    JE0 = "os.name",
    FE0 = "os.version",
    XE0 = "process.pid",
    VE0 = "process.executable.name",
    CE0 = "process.executable.path",
    KE0 = "process.command",
    HE0 = "process.command_line",
    zE0 = "process.command_args",
    wE0 = "process.owner",
    EE0 = "process.runtime.name",
    UE0 = "process.runtime.version",
    NE0 = "process.runtime.description",
    $E0 = "service.name",
    qE0 = "service.namespace",
    ME0 = "service.instance.id",
    LE0 = "service.version",
    RE0 = "telemetry.sdk.name",
    OE0 = "telemetry.sdk.language",
    TE0 = "telemetry.sdk.version",
    PE0 = "telemetry.auto.version",
    SE0 = "webengine.name",
    _E0 = "webengine.version",
    jE0 = "webengine.description";
  SU0.SEMRESATTRS_CLOUD_PROVIDER = Zw0;
  SU0.SEMRESATTRS_CLOUD_ACCOUNT_ID = Dw0;
  SU0.SEMRESATTRS_CLOUD_REGION = Yw0;
  SU0.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = Ww0;
  SU0.SEMRESATTRS_CLOUD_PLATFORM = Jw0;
  SU0.SEMRESATTRS_AWS_ECS_CONTAINER_ARN = Fw0;
  SU0.SEMRESATTRS_AWS_ECS_CLUSTER_ARN = Xw0;
  SU0.SEMRESATTRS_AWS_ECS_LAUNCHTYPE = Vw0;
  SU0.SEMRESATTRS_AWS_ECS_TASK_ARN = Cw0;
  SU0.SEMRESATTRS_AWS_ECS_TASK_FAMILY = Kw0;
  SU0.SEMRESATTRS_AWS_ECS_TASK_REVISION = Hw0;
  SU0.SEMRESATTRS_AWS_EKS_CLUSTER_ARN = zw0;
  SU0.SEMRESATTRS_AWS_LOG_GROUP_NAMES = ww0;
  SU0.SEMRESATTRS_AWS_LOG_GROUP_ARNS = Ew0;
  SU0.SEMRESATTRS_AWS_LOG_STREAM_NAMES = Uw0;
  SU0.SEMRESATTRS_AWS_LOG_STREAM_ARNS = Nw0;
  SU0.SEMRESATTRS_CONTAINER_NAME = $w0;
  SU0.SEMRESATTRS_CONTAINER_ID = qw0;
  SU0.SEMRESATTRS_CONTAINER_RUNTIME = Mw0;
  SU0.SEMRESATTRS_CONTAINER_IMAGE_NAME = Lw0;
  SU0.SEMRESATTRS_CONTAINER_IMAGE_TAG = Rw0;
  SU0.SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = Ow0;
  SU0.SEMRESATTRS_DEVICE_ID = Tw0;
  SU0.SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = Pw0;
  SU0.SEMRESATTRS_DEVICE_MODEL_NAME = Sw0;
  SU0.SEMRESATTRS_FAAS_NAME = _w0;
  SU0.SEMRESATTRS_FAAS_ID = jw0;
  SU0.SEMRESATTRS_FAAS_VERSION = yw0;
  SU0.SEMRESATTRS_FAAS_INSTANCE = kw0;
  SU0.SEMRESATTRS_FAAS_MAX_MEMORY = xw0;
  SU0.SEMRESATTRS_HOST_ID = fw0;
  SU0.SEMRESATTRS_HOST_NAME = vw0;
  SU0.SEMRESATTRS_HOST_TYPE = bw0;
  SU0.SEMRESATTRS_HOST_ARCH = gw0;
  SU0.SEMRESATTRS_HOST_IMAGE_NAME = hw0;
  SU0.SEMRESATTRS_HOST_IMAGE_ID = mw0;
  SU0.SEMRESATTRS_HOST_IMAGE_VERSION = dw0;
  SU0.SEMRESATTRS_K8S_CLUSTER_NAME = uw0;
  SU0.SEMRESATTRS_K8S_NODE_NAME = pw0;
  SU0.SEMRESATTRS_K8S_NODE_UID = cw0;
  SU0.SEMRESATTRS_K8S_NAMESPACE_NAME = lw0;
  SU0.SEMRESATTRS_K8S_POD_UID = iw0;
  SU0.SEMRESATTRS_K8S_POD_NAME = nw0;
  SU0.SEMRESATTRS_K8S_CONTAINER_NAME = aw0;
  SU0.SEMRESATTRS_K8S_REPLICASET_UID = sw0;
  SU0.SEMRESATTRS_K8S_REPLICASET_NAME = rw0;
  SU0.SEMRESATTRS_K8S_DEPLOYMENT_UID = ow0;
  SU0.SEMRESATTRS_K8S_DEPLOYMENT_NAME = tw0;
  SU0.SEMRESATTRS_K8S_STATEFULSET_UID = ew0;
  SU0.SEMRESATTRS_K8S_STATEFULSET_NAME = AE0;
  SU0.SEMRESATTRS_K8S_DAEMONSET_UID = BE0;
  SU0.SEMRESATTRS_K8S_DAEMONSET_NAME = QE0;
  SU0.SEMRESATTRS_K8S_JOB_UID = IE0;
  SU0.SEMRESATTRS_K8S_JOB_NAME = GE0;
  SU0.SEMRESATTRS_K8S_CRONJOB_UID = ZE0;
  SU0.SEMRESATTRS_K8S_CRONJOB_NAME = DE0;
  SU0.SEMRESATTRS_OS_TYPE = YE0;
  SU0.SEMRESATTRS_OS_DESCRIPTION = WE0;
  SU0.SEMRESATTRS_OS_NAME = JE0;
  SU0.SEMRESATTRS_OS_VERSION = FE0;
  SU0.SEMRESATTRS_PROCESS_PID = XE0;
  SU0.SEMRESATTRS_PROCESS_EXECUTABLE_NAME = VE0;
  SU0.SEMRESATTRS_PROCESS_EXECUTABLE_PATH = CE0;
  SU0.SEMRESATTRS_PROCESS_COMMAND = KE0;
  SU0.SEMRESATTRS_PROCESS_COMMAND_LINE = HE0;
  SU0.SEMRESATTRS_PROCESS_COMMAND_ARGS = zE0;
  SU0.SEMRESATTRS_PROCESS_OWNER = wE0;
  SU0.SEMRESATTRS_PROCESS_RUNTIME_NAME = EE0;
  SU0.SEMRESATTRS_PROCESS_RUNTIME_VERSION = UE0;
  SU0.SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = NE0;
  SU0.SEMRESATTRS_SERVICE_NAME = $E0;
  SU0.SEMRESATTRS_SERVICE_NAMESPACE = qE0;
  SU0.SEMRESATTRS_SERVICE_INSTANCE_ID = ME0;
  SU0.SEMRESATTRS_SERVICE_VERSION = LE0;
  SU0.SEMRESATTRS_TELEMETRY_SDK_NAME = RE0;
  SU0.SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = OE0;
  SU0.SEMRESATTRS_TELEMETRY_SDK_VERSION = TE0;
  SU0.SEMRESATTRS_TELEMETRY_AUTO_VERSION = PE0;
  SU0.SEMRESATTRS_WEBENGINE_NAME = SE0;
  SU0.SEMRESATTRS_WEBENGINE_VERSION = _E0;
  SU0.SEMRESATTRS_WEBENGINE_DESCRIPTION = jE0;
  SU0.SemanticResourceAttributes = __.createConstMap([Zw0, Dw0, Yw0, Ww0, Jw0, Fw0, Xw0, Vw0, Cw0, Kw0, Hw0, zw0, ww0, Ew0, Uw0, Nw0, $w0, qw0, Mw0, Lw0, Rw0, Ow0, Tw0, Pw0, Sw0, _w0, jw0, yw0, kw0, xw0, fw0, vw0, bw0, gw0, hw0, mw0, dw0, uw0, pw0, cw0, lw0, iw0, nw0, aw0, sw0, rw0, ow0, tw0, ew0, AE0, BE0, QE0, IE0, GE0, ZE0, DE0, YE0, WE0, JE0, FE0, XE0, VE0, CE0, KE0, HE0, zE0, wE0, EE0, UE0, NE0, $E0, qE0, ME0, LE0, RE0, OE0, TE0, PE0, SE0, _E0, jE0]);
  var yE0 = "alibaba_cloud",
    kE0 = "aws",
    xE0 = "azure",
    fE0 = "gcp";
  SU0.CLOUDPROVIDERVALUES_ALIBABA_CLOUD = yE0;
  SU0.CLOUDPROVIDERVALUES_AWS = kE0;
  SU0.CLOUDPROVIDERVALUES_AZURE = xE0;
  SU0.CLOUDPROVIDERVALUES_GCP = fE0;
  SU0.CloudProviderValues = __.createConstMap([yE0, kE0, xE0, fE0]);
  var vE0 = "alibaba_cloud_ecs",
    bE0 = "alibaba_cloud_fc",
    gE0 = "aws_ec2",
    hE0 = "aws_ecs",
    mE0 = "aws_eks",
    dE0 = "aws_lambda",
    uE0 = "aws_elastic_beanstalk",
    pE0 = "azure_vm",
    cE0 = "azure_container_instances",
    lE0 = "azure_aks",
    iE0 = "azure_functions",
    nE0 = "azure_app_service",
    aE0 = "gcp_compute_engine",
    sE0 = "gcp_cloud_run",
    rE0 = "gcp_kubernetes_engine",
    oE0 = "gcp_cloud_functions",
    tE0 = "gcp_app_engine";
  SU0.CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = vE0;
  SU0.CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = bE0;
  SU0.CLOUDPLATFORMVALUES_AWS_EC2 = gE0;
  SU0.CLOUDPLATFORMVALUES_AWS_ECS = hE0;
  SU0.CLOUDPLATFORMVALUES_AWS_EKS = mE0;
  SU0.CLOUDPLATFORMVALUES_AWS_LAMBDA = dE0;
  SU0.CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = uE0;
  SU0.CLOUDPLATFORMVALUES_AZURE_VM = pE0;
  SU0.CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = cE0;
  SU0.CLOUDPLATFORMVALUES_AZURE_AKS = lE0;
  SU0.CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = iE0;
  SU0.CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = nE0;
  SU0.CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = aE0;
  SU0.CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = sE0;
  SU0.CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = rE0;
  SU0.CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = oE0;
  SU0.CLOUDPLATFORMVALUES_GCP_APP_ENGINE = tE0;
  SU0.CloudPlatformValues = __.createConstMap([vE0, bE0, gE0, hE0, mE0, dE0, uE0, pE0, cE0, lE0, iE0, nE0, aE0, sE0, rE0, oE0, tE0]);
  var eE0 = "ec2",
    AU0 = "fargate";
  SU0.AWSECSLAUNCHTYPEVALUES_EC2 = eE0;
  SU0.AWSECSLAUNCHTYPEVALUES_FARGATE = AU0;
  SU0.AwsEcsLaunchtypeValues = __.createConstMap([eE0, AU0]);
  var BU0 = "amd64",
    QU0 = "arm32",
    IU0 = "arm64",
    GU0 = "ia64",
    ZU0 = "ppc32",
    DU0 = "ppc64",
    YU0 = "x86";
  SU0.HOSTARCHVALUES_AMD64 = BU0;
  SU0.HOSTARCHVALUES_ARM32 = QU0;
  SU0.HOSTARCHVALUES_ARM64 = IU0;
  SU0.HOSTARCHVALUES_IA64 = GU0;
  SU0.HOSTARCHVALUES_PPC32 = ZU0;
  SU0.HOSTARCHVALUES_PPC64 = DU0;
  SU0.HOSTARCHVALUES_X86 = YU0;
  SU0.HostArchValues = __.createConstMap([BU0, QU0, IU0, GU0, ZU0, DU0, YU0]);
  var WU0 = "windows",
    JU0 = "linux",
    FU0 = "darwin",
    XU0 = "freebsd",
    VU0 = "netbsd",
    CU0 = "openbsd",
    KU0 = "dragonflybsd",
    HU0 = "hpux",
    zU0 = "aix",
    wU0 = "solaris",
    EU0 = "z_os";
  SU0.OSTYPEVALUES_WINDOWS = WU0;
  SU0.OSTYPEVALUES_LINUX = JU0;
  SU0.OSTYPEVALUES_DARWIN = FU0;
  SU0.OSTYPEVALUES_FREEBSD = XU0;
  SU0.OSTYPEVALUES_NETBSD = VU0;
  SU0.OSTYPEVALUES_OPENBSD = CU0;
  SU0.OSTYPEVALUES_DRAGONFLYBSD = KU0;
  SU0.OSTYPEVALUES_HPUX = HU0;
  SU0.OSTYPEVALUES_AIX = zU0;
  SU0.OSTYPEVALUES_SOLARIS = wU0;
  SU0.OSTYPEVALUES_Z_OS = EU0;
  SU0.OsTypeValues = __.createConstMap([WU0, JU0, FU0, XU0, VU0, CU0, KU0, HU0, zU0, wU0, EU0]);
  var UU0 = "cpp",
    NU0 = "dotnet",
    $U0 = "erlang",
    qU0 = "go",
    MU0 = "java",
    LU0 = "nodejs",
    RU0 = "php",
    OU0 = "python",
    TU0 = "ruby",
    PU0 = "webjs";
  SU0.TELEMETRYSDKLANGUAGEVALUES_CPP = UU0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_DOTNET = NU0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_ERLANG = $U0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_GO = qU0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_JAVA = MU0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_NODEJS = LU0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_PHP = RU0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_PYTHON = OU0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_RUBY = TU0;
  SU0.TELEMETRYSDKLANGUAGEVALUES_WEBJS = PU0;
  SU0.TelemetrySdkLanguageValues = __.createConstMap([UU0, NU0, $U0, qU0, MU0, LU0, RU0, OU0, TU0, PU0])
})
// @from(Start 4149217, End 4149952)
xU0 = z((j_) => {
  var As4 = j_ && j_.__createBinding || (Object.create ? function(A, B, Q, I) {
      if (I === void 0) I = Q;
      var G = Object.getOwnPropertyDescriptor(B, Q);
      if (!G || ("get" in G ? !B.__esModule : G.writable || G.configurable)) G = {
        enumerable: !0,
        get: function() {
          return B[Q]
        }
      };
      Object.defineProperty(A, I, G)
    } : function(A, B, Q, I) {
      if (I === void 0) I = Q;
      A[I] = B[Q]
    }),
    Bs4 = j_ && j_.__exportStar || function(A, B) {
      for (var Q in A)
        if (Q !== "default" && !Object.prototype.hasOwnProperty.call(B, Q)) As4(B, A, Q)
    };
  Object.defineProperty(j_, "__esModule", {
    value: !0
  });
  Bs4(kU0(), j_)
})
// @from(Start 4149958, End 4160789)
hU0 = z((fU0) => {
  Object.defineProperty(fU0, "__esModule", {
    value: !0
  });
  fU0.ATTR_JVM_GC_NAME = fU0.ATTR_JVM_GC_ACTION = fU0.ATTR_HTTP_ROUTE = fU0.ATTR_HTTP_RESPONSE_STATUS_CODE = fU0.ATTR_HTTP_RESPONSE_HEADER = fU0.ATTR_HTTP_REQUEST_RESEND_COUNT = fU0.ATTR_HTTP_REQUEST_METHOD_ORIGINAL = fU0.HTTP_REQUEST_METHOD_VALUE_TRACE = fU0.HTTP_REQUEST_METHOD_VALUE_PUT = fU0.HTTP_REQUEST_METHOD_VALUE_POST = fU0.HTTP_REQUEST_METHOD_VALUE_PATCH = fU0.HTTP_REQUEST_METHOD_VALUE_OPTIONS = fU0.HTTP_REQUEST_METHOD_VALUE_HEAD = fU0.HTTP_REQUEST_METHOD_VALUE_GET = fU0.HTTP_REQUEST_METHOD_VALUE_DELETE = fU0.HTTP_REQUEST_METHOD_VALUE_CONNECT = fU0.HTTP_REQUEST_METHOD_VALUE_OTHER = fU0.ATTR_HTTP_REQUEST_METHOD = fU0.ATTR_HTTP_REQUEST_HEADER = fU0.ATTR_EXCEPTION_TYPE = fU0.ATTR_EXCEPTION_STACKTRACE = fU0.ATTR_EXCEPTION_MESSAGE = fU0.ATTR_EXCEPTION_ESCAPED = fU0.ERROR_TYPE_VALUE_OTHER = fU0.ATTR_ERROR_TYPE = fU0.DOTNET_GC_HEAP_GENERATION_VALUE_POH = fU0.DOTNET_GC_HEAP_GENERATION_VALUE_LOH = fU0.DOTNET_GC_HEAP_GENERATION_VALUE_GEN2 = fU0.DOTNET_GC_HEAP_GENERATION_VALUE_GEN1 = fU0.DOTNET_GC_HEAP_GENERATION_VALUE_GEN0 = fU0.ATTR_DOTNET_GC_HEAP_GENERATION = fU0.ATTR_CLIENT_PORT = fU0.ATTR_CLIENT_ADDRESS = fU0.ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = fU0.ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = fU0.ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = fU0.ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = fU0.ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = fU0.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = fU0.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = fU0.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = fU0.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = fU0.ATTR_ASPNETCORE_RATE_LIMITING_RESULT = fU0.ATTR_ASPNETCORE_RATE_LIMITING_POLICY = fU0.ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = fU0.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = fU0.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = fU0.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = fU0.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = fU0.ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = void 0;
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_GO = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_CPP = fU0.ATTR_TELEMETRY_SDK_LANGUAGE = fU0.SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = fU0.SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = fU0.SIGNALR_TRANSPORT_VALUE_LONG_POLLING = fU0.ATTR_SIGNALR_TRANSPORT = fU0.SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = fU0.SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = fU0.SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = fU0.ATTR_SIGNALR_CONNECTION_STATUS = fU0.ATTR_SERVICE_VERSION = fU0.ATTR_SERVICE_NAME = fU0.ATTR_SERVER_PORT = fU0.ATTR_SERVER_ADDRESS = fU0.ATTR_OTEL_STATUS_DESCRIPTION = fU0.OTEL_STATUS_CODE_VALUE_OK = fU0.OTEL_STATUS_CODE_VALUE_ERROR = fU0.ATTR_OTEL_STATUS_CODE = fU0.ATTR_OTEL_SCOPE_VERSION = fU0.ATTR_OTEL_SCOPE_NAME = fU0.NETWORK_TYPE_VALUE_IPV6 = fU0.NETWORK_TYPE_VALUE_IPV4 = fU0.ATTR_NETWORK_TYPE = fU0.NETWORK_TRANSPORT_VALUE_UNIX = fU0.NETWORK_TRANSPORT_VALUE_UDP = fU0.NETWORK_TRANSPORT_VALUE_TCP = fU0.NETWORK_TRANSPORT_VALUE_QUIC = fU0.NETWORK_TRANSPORT_VALUE_PIPE = fU0.ATTR_NETWORK_TRANSPORT = fU0.ATTR_NETWORK_PROTOCOL_VERSION = fU0.ATTR_NETWORK_PROTOCOL_NAME = fU0.ATTR_NETWORK_PEER_PORT = fU0.ATTR_NETWORK_PEER_ADDRESS = fU0.ATTR_NETWORK_LOCAL_PORT = fU0.ATTR_NETWORK_LOCAL_ADDRESS = fU0.JVM_THREAD_STATE_VALUE_WAITING = fU0.JVM_THREAD_STATE_VALUE_TIMED_WAITING = fU0.JVM_THREAD_STATE_VALUE_TERMINATED = fU0.JVM_THREAD_STATE_VALUE_RUNNABLE = fU0.JVM_THREAD_STATE_VALUE_NEW = fU0.JVM_THREAD_STATE_VALUE_BLOCKED = fU0.ATTR_JVM_THREAD_STATE = fU0.ATTR_JVM_THREAD_DAEMON = fU0.JVM_MEMORY_TYPE_VALUE_NON_HEAP = fU0.JVM_MEMORY_TYPE_VALUE_HEAP = fU0.ATTR_JVM_MEMORY_TYPE = fU0.ATTR_JVM_MEMORY_POOL_NAME = void 0;
  fU0.ATTR_USER_AGENT_ORIGINAL = fU0.ATTR_URL_SCHEME = fU0.ATTR_URL_QUERY = fU0.ATTR_URL_PATH = fU0.ATTR_URL_FULL = fU0.ATTR_URL_FRAGMENT = fU0.ATTR_TELEMETRY_SDK_VERSION = fU0.ATTR_TELEMETRY_SDK_NAME = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_RUST = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_PHP = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = fU0.TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = void 0;
  fU0.ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = "aspnetcore.diagnostics.exception.result";
  fU0.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = "aborted";
  fU0.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = "handled";
  fU0.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = "skipped";
  fU0.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = "unhandled";
  fU0.ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = "aspnetcore.diagnostics.handler.type";
  fU0.ATTR_ASPNETCORE_RATE_LIMITING_POLICY = "aspnetcore.rate_limiting.policy";
  fU0.ATTR_ASPNETCORE_RATE_LIMITING_RESULT = "aspnetcore.rate_limiting.result";
  fU0.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = "acquired";
  fU0.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = "endpoint_limiter";
  fU0.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = "global_limiter";
  fU0.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = "request_canceled";
  fU0.ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = "aspnetcore.request.is_unhandled";
  fU0.ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = "aspnetcore.routing.is_fallback";
  fU0.ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = "aspnetcore.routing.match_status";
  fU0.ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = "failure";
  fU0.ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = "success";
  fU0.ATTR_CLIENT_ADDRESS = "client.address";
  fU0.ATTR_CLIENT_PORT = "client.port";
  fU0.ATTR_DOTNET_GC_HEAP_GENERATION = "dotnet.gc.heap.generation";
  fU0.DOTNET_GC_HEAP_GENERATION_VALUE_GEN0 = "gen0";
  fU0.DOTNET_GC_HEAP_GENERATION_VALUE_GEN1 = "gen1";
  fU0.DOTNET_GC_HEAP_GENERATION_VALUE_GEN2 = "gen2";
  fU0.DOTNET_GC_HEAP_GENERATION_VALUE_LOH = "loh";
  fU0.DOTNET_GC_HEAP_GENERATION_VALUE_POH = "poh";
  fU0.ATTR_ERROR_TYPE = "error.type";
  fU0.ERROR_TYPE_VALUE_OTHER = "_OTHER";
  fU0.ATTR_EXCEPTION_ESCAPED = "exception.escaped";
  fU0.ATTR_EXCEPTION_MESSAGE = "exception.message";
  fU0.ATTR_EXCEPTION_STACKTRACE = "exception.stacktrace";
  fU0.ATTR_EXCEPTION_TYPE = "exception.type";
  var Qs4 = (A) => `http.request.header.${A}`;
  fU0.ATTR_HTTP_REQUEST_HEADER = Qs4;
  fU0.ATTR_HTTP_REQUEST_METHOD = "http.request.method";
  fU0.HTTP_REQUEST_METHOD_VALUE_OTHER = "_OTHER";
  fU0.HTTP_REQUEST_METHOD_VALUE_CONNECT = "CONNECT";
  fU0.HTTP_REQUEST_METHOD_VALUE_DELETE = "DELETE";
  fU0.HTTP_REQUEST_METHOD_VALUE_GET = "GET";
  fU0.HTTP_REQUEST_METHOD_VALUE_HEAD = "HEAD";
  fU0.HTTP_REQUEST_METHOD_VALUE_OPTIONS = "OPTIONS";
  fU0.HTTP_REQUEST_METHOD_VALUE_PATCH = "PATCH";
  fU0.HTTP_REQUEST_METHOD_VALUE_POST = "POST";
  fU0.HTTP_REQUEST_METHOD_VALUE_PUT = "PUT";
  fU0.HTTP_REQUEST_METHOD_VALUE_TRACE = "TRACE";
  fU0.ATTR_HTTP_REQUEST_METHOD_ORIGINAL = "http.request.method_original";
  fU0.ATTR_HTTP_REQUEST_RESEND_COUNT = "http.request.resend_count";
  var Is4 = (A) => `http.response.header.${A}`;
  fU0.ATTR_HTTP_RESPONSE_HEADER = Is4;
  fU0.ATTR_HTTP_RESPONSE_STATUS_CODE = "http.response.status_code";
  fU0.ATTR_HTTP_ROUTE = "http.route";
  fU0.ATTR_JVM_GC_ACTION = "jvm.gc.action";
  fU0.ATTR_JVM_GC_NAME = "jvm.gc.name";
  fU0.ATTR_JVM_MEMORY_POOL_NAME = "jvm.memory.pool.name";
  fU0.ATTR_JVM_MEMORY_TYPE = "jvm.memory.type";
  fU0.JVM_MEMORY_TYPE_VALUE_HEAP = "heap";
  fU0.JVM_MEMORY_TYPE_VALUE_NON_HEAP = "non_heap";
  fU0.ATTR_JVM_THREAD_DAEMON = "jvm.thread.daemon";
  fU0.ATTR_JVM_THREAD_STATE = "jvm.thread.state";
  fU0.JVM_THREAD_STATE_VALUE_BLOCKED = "blocked";
  fU0.JVM_THREAD_STATE_VALUE_NEW = "new";
  fU0.JVM_THREAD_STATE_VALUE_RUNNABLE = "runnable";
  fU0.JVM_THREAD_STATE_VALUE_TERMINATED = "terminated";
  fU0.JVM_THREAD_STATE_VALUE_TIMED_WAITING = "timed_waiting";
  fU0.JVM_THREAD_STATE_VALUE_WAITING = "waiting";
  fU0.ATTR_NETWORK_LOCAL_ADDRESS = "network.local.address";
  fU0.ATTR_NETWORK_LOCAL_PORT = "network.local.port";
  fU0.ATTR_NETWORK_PEER_ADDRESS = "network.peer.address";
  fU0.ATTR_NETWORK_PEER_PORT = "network.peer.port";
  fU0.ATTR_NETWORK_PROTOCOL_NAME = "network.protocol.name";
  fU0.ATTR_NETWORK_PROTOCOL_VERSION = "network.protocol.version";
  fU0.ATTR_NETWORK_TRANSPORT = "network.transport";
  fU0.NETWORK_TRANSPORT_VALUE_PIPE = "pipe";
  fU0.NETWORK_TRANSPORT_VALUE_QUIC = "quic";
  fU0.NETWORK_TRANSPORT_VALUE_TCP = "tcp";
  fU0.NETWORK_TRANSPORT_VALUE_UDP = "udp";
  fU0.NETWORK_TRANSPORT_VALUE_UNIX = "unix";
  fU0.ATTR_NETWORK_TYPE = "network.type";
  fU0.NETWORK_TYPE_VALUE_IPV4 = "ipv4";
  fU0.NETWORK_TYPE_VALUE_IPV6 = "ipv6";
  fU0.ATTR_OTEL_SCOPE_NAME = "otel.scope.name";
  fU0.ATTR_OTEL_SCOPE_VERSION = "otel.scope.version";
  fU0.ATTR_OTEL_STATUS_CODE = "otel.status_code";
  fU0.OTEL_STATUS_CODE_VALUE_ERROR = "ERROR";
  fU0.OTEL_STATUS_CODE_VALUE_OK = "OK";
  fU0.ATTR_OTEL_STATUS_DESCRIPTION = "otel.status_description";
  fU0.ATTR_SERVER_ADDRESS = "server.address";
  fU0.ATTR_SERVER_PORT = "server.port";
  fU0.ATTR_SERVICE_NAME = "service.name";
  fU0.ATTR_SERVICE_VERSION = "service.version";
  fU0.ATTR_SIGNALR_CONNECTION_STATUS = "signalr.connection.status";
  fU0.SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = "app_shutdown";
  fU0.SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = "normal_closure";
  fU0.SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = "timeout";
  fU0.ATTR_SIGNALR_TRANSPORT = "signalr.transport";
  fU0.SIGNALR_TRANSPORT_VALUE_LONG_POLLING = "long_polling";
  fU0.SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = "server_sent_events";
  fU0.SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = "web_sockets";
  fU0.ATTR_TELEMETRY_SDK_LANGUAGE = "telemetry.sdk.language";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_CPP = "cpp";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = "dotnet";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = "erlang";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_GO = "go";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = "java";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = "nodejs";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_PHP = "php";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = "python";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = "ruby";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_RUST = "rust";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = "swift";
  fU0.TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = "webjs";
  fU0.ATTR_TELEMETRY_SDK_NAME = "telemetry.sdk.name";
  fU0.ATTR_TELEMETRY_SDK_VERSION = "telemetry.sdk.version";
  fU0.ATTR_URL_FRAGMENT = "url.fragment";
  fU0.ATTR_URL_FULL = "url.full";
  fU0.ATTR_URL_PATH = "url.path";
  fU0.ATTR_URL_QUERY = "url.query";
  fU0.ATTR_URL_SCHEME = "url.scheme";
  fU0.ATTR_USER_AGENT_ORIGINAL = "user_agent.original"
})
// @from(Start 4160795, End 4166715)
uU0 = z((mU0) => {
  Object.defineProperty(mU0, "__esModule", {
    value: !0
  });
  mU0.METRIC_SIGNALR_SERVER_CONNECTION_DURATION = mU0.METRIC_SIGNALR_SERVER_ACTIVE_CONNECTIONS = mU0.METRIC_KESTREL_UPGRADED_CONNECTIONS = mU0.METRIC_KESTREL_TLS_HANDSHAKE_DURATION = mU0.METRIC_KESTREL_REJECTED_CONNECTIONS = mU0.METRIC_KESTREL_QUEUED_REQUESTS = mU0.METRIC_KESTREL_QUEUED_CONNECTIONS = mU0.METRIC_KESTREL_CONNECTION_DURATION = mU0.METRIC_KESTREL_ACTIVE_TLS_HANDSHAKES = mU0.METRIC_KESTREL_ACTIVE_CONNECTIONS = mU0.METRIC_JVM_THREAD_COUNT = mU0.METRIC_JVM_MEMORY_USED_AFTER_LAST_GC = mU0.METRIC_JVM_MEMORY_USED = mU0.METRIC_JVM_MEMORY_LIMIT = mU0.METRIC_JVM_MEMORY_COMMITTED = mU0.METRIC_JVM_GC_DURATION = mU0.METRIC_JVM_CPU_TIME = mU0.METRIC_JVM_CPU_RECENT_UTILIZATION = mU0.METRIC_JVM_CPU_COUNT = mU0.METRIC_JVM_CLASS_UNLOADED = mU0.METRIC_JVM_CLASS_LOADED = mU0.METRIC_JVM_CLASS_COUNT = mU0.METRIC_HTTP_SERVER_REQUEST_DURATION = mU0.METRIC_HTTP_CLIENT_REQUEST_DURATION = mU0.METRIC_DOTNET_TIMER_COUNT = mU0.METRIC_DOTNET_THREAD_POOL_WORK_ITEM_COUNT = mU0.METRIC_DOTNET_THREAD_POOL_THREAD_COUNT = mU0.METRIC_DOTNET_THREAD_POOL_QUEUE_LENGTH = mU0.METRIC_DOTNET_PROCESS_MEMORY_WORKING_SET = mU0.METRIC_DOTNET_PROCESS_CPU_TIME = mU0.METRIC_DOTNET_PROCESS_CPU_COUNT = mU0.METRIC_DOTNET_MONITOR_LOCK_CONTENTIONS = mU0.METRIC_DOTNET_JIT_COMPILED_METHODS = mU0.METRIC_DOTNET_JIT_COMPILED_IL_SIZE = mU0.METRIC_DOTNET_JIT_COMPILATION_TIME = mU0.METRIC_DOTNET_GC_PAUSE_TIME = mU0.METRIC_DOTNET_GC_LAST_COLLECTION_MEMORY_COMMITTED_SIZE = mU0.METRIC_DOTNET_GC_LAST_COLLECTION_HEAP_SIZE = mU0.METRIC_DOTNET_GC_LAST_COLLECTION_HEAP_FRAGMENTATION_SIZE = mU0.METRIC_DOTNET_GC_HEAP_TOTAL_ALLOCATED = mU0.METRIC_DOTNET_GC_COLLECTIONS = mU0.METRIC_DOTNET_EXCEPTIONS = mU0.METRIC_DOTNET_ASSEMBLY_COUNT = mU0.METRIC_ASPNETCORE_ROUTING_MATCH_ATTEMPTS = mU0.METRIC_ASPNETCORE_RATE_LIMITING_REQUESTS = mU0.METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_LEASE_DURATION = mU0.METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_TIME_IN_QUEUE = mU0.METRIC_ASPNETCORE_RATE_LIMITING_QUEUED_REQUESTS = mU0.METRIC_ASPNETCORE_RATE_LIMITING_ACTIVE_REQUEST_LEASES = mU0.METRIC_ASPNETCORE_DIAGNOSTICS_EXCEPTIONS = void 0;
  mU0.METRIC_ASPNETCORE_DIAGNOSTICS_EXCEPTIONS = "aspnetcore.diagnostics.exceptions";
  mU0.METRIC_ASPNETCORE_RATE_LIMITING_ACTIVE_REQUEST_LEASES = "aspnetcore.rate_limiting.active_request_leases";
  mU0.METRIC_ASPNETCORE_RATE_LIMITING_QUEUED_REQUESTS = "aspnetcore.rate_limiting.queued_requests";
  mU0.METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_TIME_IN_QUEUE = "aspnetcore.rate_limiting.request.time_in_queue";
  mU0.METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_LEASE_DURATION = "aspnetcore.rate_limiting.request_lease.duration";
  mU0.METRIC_ASPNETCORE_RATE_LIMITING_REQUESTS = "aspnetcore.rate_limiting.requests";
  mU0.METRIC_ASPNETCORE_ROUTING_MATCH_ATTEMPTS = "aspnetcore.routing.match_attempts";
  mU0.METRIC_DOTNET_ASSEMBLY_COUNT = "dotnet.assembly.count";
  mU0.METRIC_DOTNET_EXCEPTIONS = "dotnet.exceptions";
  mU0.METRIC_DOTNET_GC_COLLECTIONS = "dotnet.gc.collections";
  mU0.METRIC_DOTNET_GC_HEAP_TOTAL_ALLOCATED = "dotnet.gc.heap.total_allocated";
  mU0.METRIC_DOTNET_GC_LAST_COLLECTION_HEAP_FRAGMENTATION_SIZE = "dotnet.gc.last_collection.heap.fragmentation.size";
  mU0.METRIC_DOTNET_GC_LAST_COLLECTION_HEAP_SIZE = "dotnet.gc.last_collection.heap.size";
  mU0.METRIC_DOTNET_GC_LAST_COLLECTION_MEMORY_COMMITTED_SIZE = "dotnet.gc.last_collection.memory.committed_size";
  mU0.METRIC_DOTNET_GC_PAUSE_TIME = "dotnet.gc.pause.time";
  mU0.METRIC_DOTNET_JIT_COMPILATION_TIME = "dotnet.jit.compilation.time";
  mU0.METRIC_DOTNET_JIT_COMPILED_IL_SIZE = "dotnet.jit.compiled_il.size";
  mU0.METRIC_DOTNET_JIT_COMPILED_METHODS = "dotnet.jit.compiled_methods";
  mU0.METRIC_DOTNET_MONITOR_LOCK_CONTENTIONS = "dotnet.monitor.lock_contentions";
  mU0.METRIC_DOTNET_PROCESS_CPU_COUNT = "dotnet.process.cpu.count";
  mU0.METRIC_DOTNET_PROCESS_CPU_TIME = "dotnet.process.cpu.time";
  mU0.METRIC_DOTNET_PROCESS_MEMORY_WORKING_SET = "dotnet.process.memory.working_set";
  mU0.METRIC_DOTNET_THREAD_POOL_QUEUE_LENGTH = "dotnet.thread_pool.queue.length";
  mU0.METRIC_DOTNET_THREAD_POOL_THREAD_COUNT = "dotnet.thread_pool.thread.count";
  mU0.METRIC_DOTNET_THREAD_POOL_WORK_ITEM_COUNT = "dotnet.thread_pool.work_item.count";
  mU0.METRIC_DOTNET_TIMER_COUNT = "dotnet.timer.count";
  mU0.METRIC_HTTP_CLIENT_REQUEST_DURATION = "http.client.request.duration";
  mU0.METRIC_HTTP_SERVER_REQUEST_DURATION = "http.server.request.duration";
  mU0.METRIC_JVM_CLASS_COUNT = "jvm.class.count";
  mU0.METRIC_JVM_CLASS_LOADED = "jvm.class.loaded";
  mU0.METRIC_JVM_CLASS_UNLOADED = "jvm.class.unloaded";
  mU0.METRIC_JVM_CPU_COUNT = "jvm.cpu.count";
  mU0.METRIC_JVM_CPU_RECENT_UTILIZATION = "jvm.cpu.recent_utilization";
  mU0.METRIC_JVM_CPU_TIME = "jvm.cpu.time";
  mU0.METRIC_JVM_GC_DURATION = "jvm.gc.duration";
  mU0.METRIC_JVM_MEMORY_COMMITTED = "jvm.memory.committed";
  mU0.METRIC_JVM_MEMORY_LIMIT = "jvm.memory.limit";
  mU0.METRIC_JVM_MEMORY_USED = "jvm.memory.used";
  mU0.METRIC_JVM_MEMORY_USED_AFTER_LAST_GC = "jvm.memory.used_after_last_gc";
  mU0.METRIC_JVM_THREAD_COUNT = "jvm.thread.count";
  mU0.METRIC_KESTREL_ACTIVE_CONNECTIONS = "kestrel.active_connections";
  mU0.METRIC_KESTREL_ACTIVE_TLS_HANDSHAKES = "kestrel.active_tls_handshakes";
  mU0.METRIC_KESTREL_CONNECTION_DURATION = "kestrel.connection.duration";
  mU0.METRIC_KESTREL_QUEUED_CONNECTIONS = "kestrel.queued_connections";
  mU0.METRIC_KESTREL_QUEUED_REQUESTS = "kestrel.queued_requests";
  mU0.METRIC_KESTREL_REJECTED_CONNECTIONS = "kestrel.rejected_connections";
  mU0.METRIC_KESTREL_TLS_HANDSHAKE_DURATION = "kestrel.tls_handshake.duration";
  mU0.METRIC_KESTREL_UPGRADED_CONNECTIONS = "kestrel.upgraded_connections";
  mU0.METRIC_SIGNALR_SERVER_ACTIVE_CONNECTIONS = "signalr.server.active_connections";
  mU0.METRIC_SIGNALR_SERVER_CONNECTION_DURATION = "signalr.server.connection.duration"
})
// @from(Start 4166721, End 4167509)
LN = z((ez) => {
  var Gt4 = ez && ez.__createBinding || (Object.create ? function(A, B, Q, I) {
      if (I === void 0) I = Q;
      var G = Object.getOwnPropertyDescriptor(B, Q);
      if (!G || ("get" in G ? !B.__esModule : G.writable || G.configurable)) G = {
        enumerable: !0,
        get: function() {
          return B[Q]
        }
      };
      Object.defineProperty(A, I, G)
    } : function(A, B, Q, I) {
      if (I === void 0) I = Q;
      A[I] = B[Q]
    }),
    QZ1 = ez && ez.__exportStar || function(A, B) {
      for (var Q in A)
        if (Q !== "default" && !Object.prototype.hasOwnProperty.call(B, Q)) Gt4(B, A, Q)
    };
  Object.defineProperty(ez, "__esModule", {
    value: !0
  });
  QZ1(Gw0(), ez);
  QZ1(xU0(), ez);
  QZ1(hU0(), ez);
  QZ1(uU0(), ez)
})
// @from(Start 4167515, End 4167931)
lU0 = z((pU0) => {
  Object.defineProperty(pU0, "__esModule", {
    value: !0
  });
  pU0.SDK_INFO = void 0;
  var Zt4 = GV0(),
    Us = LN();
  pU0.SDK_INFO = {
    [Us.SEMRESATTRS_TELEMETRY_SDK_NAME]: "opentelemetry",
    [Us.SEMRESATTRS_PROCESS_RUNTIME_NAME]: "node",
    [Us.SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]: Us.TELEMETRYSDKLANGUAGEVALUES_NODEJS,
    [Us.SEMRESATTRS_TELEMETRY_SDK_VERSION]: Zt4.VERSION
  }
})
// @from(Start 4167937, End 4168112)
aU0 = z((iU0) => {
  Object.defineProperty(iU0, "__esModule", {
    value: !0
  });
  iU0.unrefTimer = void 0;

  function Dt4(A) {
    A.unref()
  }
  iU0.unrefTimer = Dt4
})
// @from(Start 4168118, End 4169535)
sU0 = z((Aw) => {
  Object.defineProperty(Aw, "__esModule", {
    value: !0
  });
  Aw.unrefTimer = Aw.SDK_INFO = Aw.otperformance = Aw._globalThis = Aw.getStringListFromEnv = Aw.getNumberFromEnv = Aw.getBooleanFromEnv = Aw.getStringFromEnv = void 0;
  var IZ1 = sX0();
  Object.defineProperty(Aw, "getStringFromEnv", {
    enumerable: !0,
    get: function() {
      return IZ1.getStringFromEnv
    }
  });
  Object.defineProperty(Aw, "getBooleanFromEnv", {
    enumerable: !0,
    get: function() {
      return IZ1.getBooleanFromEnv
    }
  });
  Object.defineProperty(Aw, "getNumberFromEnv", {
    enumerable: !0,
    get: function() {
      return IZ1.getNumberFromEnv
    }
  });
  Object.defineProperty(Aw, "getStringListFromEnv", {
    enumerable: !0,
    get: function() {
      return IZ1.getStringListFromEnv
    }
  });
  var Yt4 = tX0();
  Object.defineProperty(Aw, "_globalThis", {
    enumerable: !0,
    get: function() {
      return Yt4._globalThis
    }
  });
  var Wt4 = BV0();
  Object.defineProperty(Aw, "otperformance", {
    enumerable: !0,
    get: function() {
      return Wt4.otperformance
    }
  });
  var Jt4 = lU0();
  Object.defineProperty(Aw, "SDK_INFO", {
    enumerable: !0,
    get: function() {
      return Jt4.SDK_INFO
    }
  });
  var Ft4 = aU0();
  Object.defineProperty(Aw, "unrefTimer", {
    enumerable: !0,
    get: function() {
      return Ft4.unrefTimer
    }
  })
})
// @from(Start 4169541, End 4170873)
jb1 = z((Bw) => {
  Object.defineProperty(Bw, "__esModule", {
    value: !0
  });
  Bw.getStringListFromEnv = Bw.getNumberFromEnv = Bw.getStringFromEnv = Bw.getBooleanFromEnv = Bw.unrefTimer = Bw.otperformance = Bw._globalThis = Bw.SDK_INFO = void 0;
  var eL = sU0();
  Object.defineProperty(Bw, "SDK_INFO", {
    enumerable: !0,
    get: function() {
      return eL.SDK_INFO
    }
  });
  Object.defineProperty(Bw, "_globalThis", {
    enumerable: !0,
    get: function() {
      return eL._globalThis
    }
  });
  Object.defineProperty(Bw, "otperformance", {
    enumerable: !0,
    get: function() {
      return eL.otperformance
    }
  });
  Object.defineProperty(Bw, "unrefTimer", {
    enumerable: !0,
    get: function() {
      return eL.unrefTimer
    }
  });
  Object.defineProperty(Bw, "getBooleanFromEnv", {
    enumerable: !0,
    get: function() {
      return eL.getBooleanFromEnv
    }
  });
  Object.defineProperty(Bw, "getStringFromEnv", {
    enumerable: !0,
    get: function() {
      return eL.getStringFromEnv
    }
  });
  Object.defineProperty(Bw, "getNumberFromEnv", {
    enumerable: !0,
    get: function() {
      return eL.getNumberFromEnv
    }
  });
  Object.defineProperty(Bw, "getStringListFromEnv", {
    enumerable: !0,
    get: function() {
      return eL.getStringListFromEnv
    }
  })
})
// @from(Start 4170879, End 4173223)
BN0 = z((eU0) => {
  Object.defineProperty(eU0, "__esModule", {
    value: !0
  });
  eU0.addHrTimes = eU0.isTimeInput = eU0.isTimeInputHrTime = eU0.hrTimeToMicroseconds = eU0.hrTimeToMilliseconds = eU0.hrTimeToNanoseconds = eU0.hrTimeToTimeStamp = eU0.hrTimeDuration = eU0.timeInputToHrTime = eU0.hrTime = eU0.getTimeOrigin = eU0.millisToHrTime = void 0;
  var yb1 = jb1(),
    rU0 = 9,
    Ct4 = 6,
    Kt4 = Math.pow(10, Ct4),
    GZ1 = Math.pow(10, rU0);

  function Ns(A) {
    let B = A / 1000,
      Q = Math.trunc(B),
      I = Math.round(A % 1000 * Kt4);
    return [Q, I]
  }
  eU0.millisToHrTime = Ns;

  function kb1() {
    let A = yb1.otperformance.timeOrigin;
    if (typeof A !== "number") {
      let B = yb1.otperformance;
      A = B.timing && B.timing.fetchStart
    }
    return A
  }
  eU0.getTimeOrigin = kb1;

  function oU0(A) {
    let B = Ns(kb1()),
      Q = Ns(typeof A === "number" ? A : yb1.otperformance.now());
    return tU0(B, Q)
  }
  eU0.hrTime = oU0;

  function Ht4(A) {
    if (xb1(A)) return A;
    else if (typeof A === "number")
      if (A < kb1()) return oU0(A);
      else return Ns(A);
    else if (A instanceof Date) return Ns(A.getTime());
    else throw TypeError("Invalid input type")
  }
  eU0.timeInputToHrTime = Ht4;

  function zt4(A, B) {
    let Q = B[0] - A[0],
      I = B[1] - A[1];
    if (I < 0) Q -= 1, I += GZ1;
    return [Q, I]
  }
  eU0.hrTimeDuration = zt4;

  function wt4(A) {
    let B = rU0,
      Q = `${"0".repeat(B)}${A[1]}Z`,
      I = Q.substring(Q.length - B - 1);
    return new Date(A[0] * 1000).toISOString().replace("000Z", I)
  }
  eU0.hrTimeToTimeStamp = wt4;

  function Et4(A) {
    return A[0] * GZ1 + A[1]
  }
  eU0.hrTimeToNanoseconds = Et4;

  function Ut4(A) {
    return A[0] * 1000 + A[1] / 1e6
  }
  eU0.hrTimeToMilliseconds = Ut4;

  function Nt4(A) {
    return A[0] * 1e6 + A[1] / 1000
  }
  eU0.hrTimeToMicroseconds = Nt4;

  function xb1(A) {
    return Array.isArray(A) && A.length === 2 && typeof A[0] === "number" && typeof A[1] === "number"
  }
  eU0.isTimeInputHrTime = xb1;

  function $t4(A) {
    return xb1(A) || typeof A === "number" || A instanceof Date
  }
  eU0.isTimeInput = $t4;

  function tU0(A, B) {
    let Q = [A[0] + B[0], A[1] + B[1]];
    if (Q[1] >= GZ1) Q[1] -= GZ1, Q[0] += 1;
    return Q
  }
  eU0.addHrTimes = tU0
})
// @from(Start 4173229, End 4173501)
IN0 = z((QN0) => {
  Object.defineProperty(QN0, "__esModule", {
    value: !0
  });
  QN0.ExportResultCode = void 0;
  var kt4;
  (function(A) {
    A[A.SUCCESS = 0] = "SUCCESS", A[A.FAILED = 1] = "FAILED"
  })(kt4 = QN0.ExportResultCode || (QN0.ExportResultCode = {}))
})
// @from(Start 4173507, End 4174507)
WN0 = z((DN0) => {
  Object.defineProperty(DN0, "__esModule", {
    value: !0
  });
  DN0.CompositePropagator = void 0;
  var GN0 = s9();
  class ZN0 {
    _propagators;
    _fields;
    constructor(A = {}) {
      this._propagators = A.propagators ?? [], this._fields = Array.from(new Set(this._propagators.map((B) => typeof B.fields === "function" ? B.fields() : []).reduce((B, Q) => B.concat(Q), [])))
    }
    inject(A, B, Q) {
      for (let I of this._propagators) try {
        I.inject(A, B, Q)
      } catch (G) {
        GN0.diag.warn(`Failed to inject with ${I.constructor.name}. Err: ${G.message}`)
      }
    }
    extract(A, B, Q) {
      return this._propagators.reduce((I, G) => {
        try {
          return G.extract(I, B, Q)
        } catch (Z) {
          GN0.diag.warn(`Failed to extract with ${G.constructor.name}. Err: ${Z.message}`)
        }
        return I
      }, A)
    }
    fields() {
      return this._fields.slice()
    }
  }
  DN0.CompositePropagator = ZN0
})
// @from(Start 4174513, End 4175018)
XN0 = z((JN0) => {
  Object.defineProperty(JN0, "__esModule", {
    value: !0
  });
  JN0.validateValue = JN0.validateKey = void 0;
  var vb1 = "[_0-9a-z-*/]",
    xt4 = `[a-z]${vb1}{0,255}`,
    ft4 = `[a-z0-9]${vb1}{0,240}@[a-z]${vb1}{0,13}`,
    vt4 = new RegExp(`^(?:${xt4}|${ft4})$`),
    bt4 = /^[ -~]{0,255}[!-~]$/,
    gt4 = /,|=/;

  function ht4(A) {
    return vt4.test(A)
  }
  JN0.validateKey = ht4;

  function mt4(A) {
    return bt4.test(A) && !gt4.test(A)
  }
  JN0.validateValue = mt4
})
// @from(Start 4175024, End 4176528)
gb1 = z((zN0) => {
  Object.defineProperty(zN0, "__esModule", {
    value: !0
  });
  zN0.TraceState = void 0;
  var VN0 = XN0(),
    CN0 = 32,
    ut4 = 512,
    KN0 = ",",
    HN0 = "=";
  class bb1 {
    _internalState = new Map;
    constructor(A) {
      if (A) this._parse(A)
    }
    set(A, B) {
      let Q = this._clone();
      if (Q._internalState.has(A)) Q._internalState.delete(A);
      return Q._internalState.set(A, B), Q
    }
    unset(A) {
      let B = this._clone();
      return B._internalState.delete(A), B
    }
    get(A) {
      return this._internalState.get(A)
    }
    serialize() {
      return this._keys().reduce((A, B) => {
        return A.push(B + HN0 + this.get(B)), A
      }, []).join(KN0)
    }
    _parse(A) {
      if (A.length > ut4) return;
      if (this._internalState = A.split(KN0).reverse().reduce((B, Q) => {
          let I = Q.trim(),
            G = I.indexOf(HN0);
          if (G !== -1) {
            let Z = I.slice(0, G),
              D = I.slice(G + 1, Q.length);
            if (VN0.validateKey(Z) && VN0.validateValue(D)) B.set(Z, D)
          }
          return B
        }, new Map), this._internalState.size > CN0) this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, CN0))
    }
    _keys() {
      return Array.from(this._internalState.keys()).reverse()
    }
    _clone() {
      let A = new bb1;
      return A._internalState = new Map(this._internalState), A
    }
  }
  zN0.TraceState = bb1
})
// @from(Start 4176534, End 4178366)
qN0 = z((NN0) => {
  Object.defineProperty(NN0, "__esModule", {
    value: !0
  });
  NN0.W3CTraceContextPropagator = NN0.parseTraceParent = NN0.TRACE_STATE_HEADER = NN0.TRACE_PARENT_HEADER = void 0;
  var ZZ1 = s9(),
    pt4 = Es(),
    ct4 = gb1();
  NN0.TRACE_PARENT_HEADER = "traceparent";
  NN0.TRACE_STATE_HEADER = "tracestate";
  var lt4 = "00",
    it4 = "(?!ff)[\\da-f]{2}",
    nt4 = "(?![0]{32})[\\da-f]{32}",
    at4 = "(?![0]{16})[\\da-f]{16}",
    st4 = "[\\da-f]{2}",
    rt4 = new RegExp(`^\\s?(${it4})-(${nt4})-(${at4})-(${st4})(-.*)?\\s?$`);

  function EN0(A) {
    let B = rt4.exec(A);
    if (!B) return null;
    if (B[1] === "00" && B[5]) return null;
    return {
      traceId: B[2],
      spanId: B[3],
      traceFlags: parseInt(B[4], 16)
    }
  }
  NN0.parseTraceParent = EN0;
  class UN0 {
    inject(A, B, Q) {
      let I = ZZ1.trace.getSpanContext(A);
      if (!I || pt4.isTracingSuppressed(A) || !ZZ1.isSpanContextValid(I)) return;
      let G = `${lt4}-${I.traceId}-${I.spanId}-0${Number(I.traceFlags||ZZ1.TraceFlags.NONE).toString(16)}`;
      if (Q.set(B, NN0.TRACE_PARENT_HEADER, G), I.traceState) Q.set(B, NN0.TRACE_STATE_HEADER, I.traceState.serialize())
    }
    extract(A, B, Q) {
      let I = Q.get(B, NN0.TRACE_PARENT_HEADER);
      if (!I) return A;
      let G = Array.isArray(I) ? I[0] : I;
      if (typeof G !== "string") return A;
      let Z = EN0(G);
      if (!Z) return A;
      Z.isRemote = !0;
      let D = Q.get(B, NN0.TRACE_STATE_HEADER);
      if (D) {
        let Y = Array.isArray(D) ? D.join(",") : D;
        Z.traceState = new ct4.TraceState(typeof Y === "string" ? Y : void 0)
      }
      return ZZ1.trace.setSpanContext(A, Z)
    }
    fields() {
      return [NN0.TRACE_PARENT_HEADER, NN0.TRACE_STATE_HEADER]
    }
  }
  NN0.W3CTraceContextPropagator = UN0
})
// @from(Start 4178372, End 4178988)
ON0 = z((LN0) => {
  Object.defineProperty(LN0, "__esModule", {
    value: !0
  });
  LN0.getRPCMetadata = LN0.deleteRPCMetadata = LN0.setRPCMetadata = LN0.RPCType = void 0;
  var tt4 = s9(),
    hb1 = tt4.createContextKey("OpenTelemetry SDK Context Key RPC_METADATA"),
    et4;
  (function(A) {
    A.HTTP = "http"
  })(et4 = LN0.RPCType || (LN0.RPCType = {}));

  function Ae4(A, B) {
    return A.setValue(hb1, B)
  }
  LN0.setRPCMetadata = Ae4;

  function Be4(A) {
    return A.deleteValue(hb1)
  }
  LN0.deleteRPCMetadata = Be4;

  function Qe4(A) {
    return A.getValue(hb1)
  }
  LN0.getRPCMetadata = Qe4
})
// @from(Start 4178994, End 4180212)
kN0 = z((jN0) => {
  Object.defineProperty(jN0, "__esModule", {
    value: !0
  });
  jN0.isPlainObject = void 0;
  var Ze4 = "[object Object]",
    De4 = "[object Null]",
    Ye4 = "[object Undefined]",
    We4 = Function.prototype,
    TN0 = We4.toString,
    Je4 = TN0.call(Object),
    Fe4 = Object.getPrototypeOf,
    PN0 = Object.prototype,
    SN0 = PN0.hasOwnProperty,
    y_ = Symbol ? Symbol.toStringTag : void 0,
    _N0 = PN0.toString;

  function Xe4(A) {
    if (!Ve4(A) || Ce4(A) !== Ze4) return !1;
    let B = Fe4(A);
    if (B === null) return !0;
    let Q = SN0.call(B, "constructor") && B.constructor;
    return typeof Q == "function" && Q instanceof Q && TN0.call(Q) === Je4
  }
  jN0.isPlainObject = Xe4;

  function Ve4(A) {
    return A != null && typeof A == "object"
  }

  function Ce4(A) {
    if (A == null) return A === void 0 ? Ye4 : De4;
    return y_ && y_ in Object(A) ? Ke4(A) : He4(A)
  }

  function Ke4(A) {
    let B = SN0.call(A, y_),
      Q = A[y_],
      I = !1;
    try {
      A[y_] = void 0, I = !0
    } catch (Z) {}
    let G = _N0.call(A);
    if (I)
      if (B) A[y_] = Q;
      else delete A[y_];
    return G
  }

  function He4(A) {
    return _N0.call(A)
  }
})
// @from(Start 4180218, End 4182650)
mN0 = z((gN0) => {
  Object.defineProperty(gN0, "__esModule", {
    value: !0
  });
  gN0.merge = void 0;
  var xN0 = kN0(),
    ze4 = 20;

  function we4(...A) {
    let B = A.shift(),
      Q = new WeakMap;
    while (A.length > 0) B = vN0(B, A.shift(), 0, Q);
    return B
  }
  gN0.merge = we4;

  function mb1(A) {
    if (JZ1(A)) return A.slice();
    return A
  }

  function vN0(A, B, Q = 0, I) {
    let G;
    if (Q > ze4) return;
    if (Q++, WZ1(A) || WZ1(B) || bN0(B)) G = mb1(B);
    else if (JZ1(A)) {
      if (G = A.slice(), JZ1(B))
        for (let Z = 0, D = B.length; Z < D; Z++) G.push(mb1(B[Z]));
      else if ($s(B)) {
        let Z = Object.keys(B);
        for (let D = 0, Y = Z.length; D < Y; D++) {
          let W = Z[D];
          G[W] = mb1(B[W])
        }
      }
    } else if ($s(A))
      if ($s(B)) {
        if (!Ee4(A, B)) return B;
        G = Object.assign({}, A);
        let Z = Object.keys(B);
        for (let D = 0, Y = Z.length; D < Y; D++) {
          let W = Z[D],
            J = B[W];
          if (WZ1(J))
            if (typeof J === "undefined") delete G[W];
            else G[W] = J;
          else {
            let F = G[W],
              X = J;
            if (fN0(A, W, I) || fN0(B, W, I)) delete G[W];
            else {
              if ($s(F) && $s(X)) {
                let V = I.get(F) || [],
                  C = I.get(X) || [];
                V.push({
                  obj: A,
                  key: W
                }), C.push({
                  obj: B,
                  key: W
                }), I.set(F, V), I.set(X, C)
              }
              G[W] = vN0(G[W], J, Q, I)
            }
          }
        }
      } else G = B;
    return G
  }

  function fN0(A, B, Q) {
    let I = Q.get(A[B]) || [];
    for (let G = 0, Z = I.length; G < Z; G++) {
      let D = I[G];
      if (D.key === B && D.obj === A) return !0
    }
    return !1
  }

  function JZ1(A) {
    return Array.isArray(A)
  }

  function bN0(A) {
    return typeof A === "function"
  }

  function $s(A) {
    return !WZ1(A) && !JZ1(A) && !bN0(A) && typeof A === "object"
  }

  function WZ1(A) {
    return typeof A === "string" || typeof A === "number" || typeof A === "boolean" || typeof A === "undefined" || A instanceof Date || A instanceof RegExp || A === null
  }

  function Ee4(A, B) {
    if (!xN0.isPlainObject(A) || !xN0.isPlainObject(B)) return !1;
    return !0
  }
})
// @from(Start 4182656, End 4183276)
pN0 = z((dN0) => {
  Object.defineProperty(dN0, "__esModule", {
    value: !0
  });
  dN0.callWithTimeout = dN0.TimeoutError = void 0;
  class FZ1 extends Error {
    constructor(A) {
      super(A);
      Object.setPrototypeOf(this, FZ1.prototype)
    }
  }
  dN0.TimeoutError = FZ1;

  function Ue4(A, B) {
    let Q, I = new Promise(function G(Z, D) {
      Q = setTimeout(function Y() {
        D(new FZ1("Operation timed out."))
      }, B)
    });
    return Promise.race([A, I]).then((G) => {
      return clearTimeout(Q), G
    }, (G) => {
      throw clearTimeout(Q), G
    })
  }
  dN0.callWithTimeout = Ue4
})
// @from(Start 4183282, End 4183685)
nN0 = z((lN0) => {
  Object.defineProperty(lN0, "__esModule", {
    value: !0
  });
  lN0.isUrlIgnored = lN0.urlMatches = void 0;

  function cN0(A, B) {
    if (typeof B === "string") return A === B;
    else return !!A.match(B)
  }
  lN0.urlMatches = cN0;

  function $e4(A, B) {
    if (!B) return !1;
    for (let Q of B)
      if (cN0(A, Q)) return !0;
    return !1
  }
  lN0.isUrlIgnored = $e4
})
// @from(Start 4183691, End 4184150)
oN0 = z((sN0) => {
  Object.defineProperty(sN0, "__esModule", {
    value: !0
  });
  sN0.Deferred = void 0;
  class aN0 {
    _promise;
    _resolve;
    _reject;
    constructor() {
      this._promise = new Promise((A, B) => {
        this._resolve = A, this._reject = B
      })
    }
    get promise() {
      return this._promise
    }
    resolve(A) {
      this._resolve(A)
    }
    reject(A) {
      this._reject(A)
    }
  }
  sN0.Deferred = aN0
})
// @from(Start 4184156, End 4184948)
B$0 = z((eN0) => {
  Object.defineProperty(eN0, "__esModule", {
    value: !0
  });
  eN0.BindOnceFuture = void 0;
  var Me4 = oN0();
  class tN0 {
    _callback;
    _that;
    _isCalled = !1;
    _deferred = new Me4.Deferred;
    constructor(A, B) {
      this._callback = A, this._that = B
    }
    get isCalled() {
      return this._isCalled
    }
    get promise() {
      return this._deferred.promise
    }
    call(...A) {
      if (!this._isCalled) {
        this._isCalled = !0;
        try {
          Promise.resolve(this._callback.call(this._that, ...A)).then((B) => this._deferred.resolve(B), (B) => this._deferred.reject(B))
        } catch (B) {
          this._deferred.reject(B)
        }
      }
      return this._deferred.promise
    }
  }
  eN0.BindOnceFuture = tN0
})
// @from(Start 4184954, End 4185636)
Z$0 = z((I$0) => {
  Object.defineProperty(I$0, "__esModule", {
    value: !0
  });
  I$0.diagLogLevelFromString = void 0;
  var RN = s9(),
    Q$0 = {
      ALL: RN.DiagLogLevel.ALL,
      VERBOSE: RN.DiagLogLevel.VERBOSE,
      DEBUG: RN.DiagLogLevel.DEBUG,
      INFO: RN.DiagLogLevel.INFO,
      WARN: RN.DiagLogLevel.WARN,
      ERROR: RN.DiagLogLevel.ERROR,
      NONE: RN.DiagLogLevel.NONE
    };

  function Le4(A) {
    if (A == null) return;
    let B = Q$0[A.toUpperCase()];
    if (B == null) return RN.diag.warn(`Unknown log level "${A}", expected one of ${Object.keys(Q$0)}, using default`), RN.DiagLogLevel.INFO;
    return B
  }
  I$0.diagLogLevelFromString = Le4
})
// @from(Start 4185642, End 4186011)
J$0 = z((Y$0) => {
  Object.defineProperty(Y$0, "__esModule", {
    value: !0
  });
  Y$0._export = void 0;
  var D$0 = s9(),
    Re4 = Es();

  function Oe4(A, B) {
    return new Promise((Q) => {
      D$0.context.with(Re4.suppressTracing(D$0.context.active()), () => {
        A.export(B, (I) => {
          Q(I)
        })
      })
    })
  }
  Y$0._export = Oe4
})
// @from(Start 4186017, End 4194275)
p8 = z((p9) => {
  Object.defineProperty(p9, "__esModule", {
    value: !0
  });
  p9.internal = p9.diagLogLevelFromString = p9.BindOnceFuture = p9.urlMatches = p9.isUrlIgnored = p9.callWithTimeout = p9.TimeoutError = p9.merge = p9.TraceState = p9.unsuppressTracing = p9.suppressTracing = p9.isTracingSuppressed = p9.setRPCMetadata = p9.getRPCMetadata = p9.deleteRPCMetadata = p9.RPCType = p9.parseTraceParent = p9.W3CTraceContextPropagator = p9.TRACE_STATE_HEADER = p9.TRACE_PARENT_HEADER = p9.CompositePropagator = p9.unrefTimer = p9.otperformance = p9.getStringListFromEnv = p9.getNumberFromEnv = p9.getBooleanFromEnv = p9.getStringFromEnv = p9._globalThis = p9.SDK_INFO = p9.parseKeyPairsIntoRecord = p9.ExportResultCode = p9.timeInputToHrTime = p9.millisToHrTime = p9.isTimeInputHrTime = p9.isTimeInput = p9.hrTimeToTimeStamp = p9.hrTimeToNanoseconds = p9.hrTimeToMilliseconds = p9.hrTimeToMicroseconds = p9.hrTimeDuration = p9.hrTime = p9.getTimeOrigin = p9.addHrTimes = p9.loggingErrorHandler = p9.setGlobalErrorHandler = p9.globalErrorHandler = p9.sanitizeAttributes = p9.isAttributeValue = p9.AnchoredClock = p9.W3CBaggagePropagator = void 0;
  var Te4 = OX0();
  Object.defineProperty(p9, "W3CBaggagePropagator", {
    enumerable: !0,
    get: function() {
      return Te4.W3CBaggagePropagator
    }
  });
  var Pe4 = _X0();
  Object.defineProperty(p9, "AnchoredClock", {
    enumerable: !0,
    get: function() {
      return Pe4.AnchoredClock
    }
  });
  var F$0 = bX0();
  Object.defineProperty(p9, "isAttributeValue", {
    enumerable: !0,
    get: function() {
      return F$0.isAttributeValue
    }
  });
  Object.defineProperty(p9, "sanitizeAttributes", {
    enumerable: !0,
    get: function() {
      return F$0.sanitizeAttributes
    }
  });
  var X$0 = pX0();
  Object.defineProperty(p9, "globalErrorHandler", {
    enumerable: !0,
    get: function() {
      return X$0.globalErrorHandler
    }
  });
  Object.defineProperty(p9, "setGlobalErrorHandler", {
    enumerable: !0,
    get: function() {
      return X$0.setGlobalErrorHandler
    }
  });
  var Se4 = Sb1();
  Object.defineProperty(p9, "loggingErrorHandler", {
    enumerable: !0,
    get: function() {
      return Se4.loggingErrorHandler
    }
  });
  var MX = BN0();
  Object.defineProperty(p9, "addHrTimes", {
    enumerable: !0,
    get: function() {
      return MX.addHrTimes
    }
  });
  Object.defineProperty(p9, "getTimeOrigin", {
    enumerable: !0,
    get: function() {
      return MX.getTimeOrigin
    }
  });
  Object.defineProperty(p9, "hrTime", {
    enumerable: !0,
    get: function() {
      return MX.hrTime
    }
  });
  Object.defineProperty(p9, "hrTimeDuration", {
    enumerable: !0,
    get: function() {
      return MX.hrTimeDuration
    }
  });
  Object.defineProperty(p9, "hrTimeToMicroseconds", {
    enumerable: !0,
    get: function() {
      return MX.hrTimeToMicroseconds
    }
  });
  Object.defineProperty(p9, "hrTimeToMilliseconds", {
    enumerable: !0,
    get: function() {
      return MX.hrTimeToMilliseconds
    }
  });
  Object.defineProperty(p9, "hrTimeToNanoseconds", {
    enumerable: !0,
    get: function() {
      return MX.hrTimeToNanoseconds
    }
  });
  Object.defineProperty(p9, "hrTimeToTimeStamp", {
    enumerable: !0,
    get: function() {
      return MX.hrTimeToTimeStamp
    }
  });
  Object.defineProperty(p9, "isTimeInput", {
    enumerable: !0,
    get: function() {
      return MX.isTimeInput
    }
  });
  Object.defineProperty(p9, "isTimeInputHrTime", {
    enumerable: !0,
    get: function() {
      return MX.isTimeInputHrTime
    }
  });
  Object.defineProperty(p9, "millisToHrTime", {
    enumerable: !0,
    get: function() {
      return MX.millisToHrTime
    }
  });
  Object.defineProperty(p9, "timeInputToHrTime", {
    enumerable: !0,
    get: function() {
      return MX.timeInputToHrTime
    }
  });
  var _e4 = IN0();
  Object.defineProperty(p9, "ExportResultCode", {
    enumerable: !0,
    get: function() {
      return _e4.ExportResultCode
    }
  });
  var je4 = Ob1();
  Object.defineProperty(p9, "parseKeyPairsIntoRecord", {
    enumerable: !0,
    get: function() {
      return je4.parseKeyPairsIntoRecord
    }
  });
  var AR = jb1();
  Object.defineProperty(p9, "SDK_INFO", {
    enumerable: !0,
    get: function() {
      return AR.SDK_INFO
    }
  });
  Object.defineProperty(p9, "_globalThis", {
    enumerable: !0,
    get: function() {
      return AR._globalThis
    }
  });
  Object.defineProperty(p9, "getStringFromEnv", {
    enumerable: !0,
    get: function() {
      return AR.getStringFromEnv
    }
  });
  Object.defineProperty(p9, "getBooleanFromEnv", {
    enumerable: !0,
    get: function() {
      return AR.getBooleanFromEnv
    }
  });
  Object.defineProperty(p9, "getNumberFromEnv", {
    enumerable: !0,
    get: function() {
      return AR.getNumberFromEnv
    }
  });
  Object.defineProperty(p9, "getStringListFromEnv", {
    enumerable: !0,
    get: function() {
      return AR.getStringListFromEnv
    }
  });
  Object.defineProperty(p9, "otperformance", {
    enumerable: !0,
    get: function() {
      return AR.otperformance
    }
  });
  Object.defineProperty(p9, "unrefTimer", {
    enumerable: !0,
    get: function() {
      return AR.unrefTimer
    }
  });
  var ye4 = WN0();
  Object.defineProperty(p9, "CompositePropagator", {
    enumerable: !0,
    get: function() {
      return ye4.CompositePropagator
    }
  });
  var XZ1 = qN0();
  Object.defineProperty(p9, "TRACE_PARENT_HEADER", {
    enumerable: !0,
    get: function() {
      return XZ1.TRACE_PARENT_HEADER
    }
  });
  Object.defineProperty(p9, "TRACE_STATE_HEADER", {
    enumerable: !0,
    get: function() {
      return XZ1.TRACE_STATE_HEADER
    }
  });
  Object.defineProperty(p9, "W3CTraceContextPropagator", {
    enumerable: !0,
    get: function() {
      return XZ1.W3CTraceContextPropagator
    }
  });
  Object.defineProperty(p9, "parseTraceParent", {
    enumerable: !0,
    get: function() {
      return XZ1.parseTraceParent
    }
  });
  var VZ1 = ON0();
  Object.defineProperty(p9, "RPCType", {
    enumerable: !0,
    get: function() {
      return VZ1.RPCType
    }
  });
  Object.defineProperty(p9, "deleteRPCMetadata", {
    enumerable: !0,
    get: function() {
      return VZ1.deleteRPCMetadata
    }
  });
  Object.defineProperty(p9, "getRPCMetadata", {
    enumerable: !0,
    get: function() {
      return VZ1.getRPCMetadata
    }
  });
  Object.defineProperty(p9, "setRPCMetadata", {
    enumerable: !0,
    get: function() {
      return VZ1.setRPCMetadata
    }
  });
  var db1 = Es();
  Object.defineProperty(p9, "isTracingSuppressed", {
    enumerable: !0,
    get: function() {
      return db1.isTracingSuppressed
    }
  });
  Object.defineProperty(p9, "suppressTracing", {
    enumerable: !0,
    get: function() {
      return db1.suppressTracing
    }
  });
  Object.defineProperty(p9, "unsuppressTracing", {
    enumerable: !0,
    get: function() {
      return db1.unsuppressTracing
    }
  });
  var ke4 = gb1();
  Object.defineProperty(p9, "TraceState", {
    enumerable: !0,
    get: function() {
      return ke4.TraceState
    }
  });
  var xe4 = mN0();
  Object.defineProperty(p9, "merge", {
    enumerable: !0,
    get: function() {
      return xe4.merge
    }
  });
  var V$0 = pN0();
  Object.defineProperty(p9, "TimeoutError", {
    enumerable: !0,
    get: function() {
      return V$0.TimeoutError
    }
  });
  Object.defineProperty(p9, "callWithTimeout", {
    enumerable: !0,
    get: function() {
      return V$0.callWithTimeout
    }
  });
  var C$0 = nN0();
  Object.defineProperty(p9, "isUrlIgnored", {
    enumerable: !0,
    get: function() {
      return C$0.isUrlIgnored
    }
  });
  Object.defineProperty(p9, "urlMatches", {
    enumerable: !0,
    get: function() {
      return C$0.urlMatches
    }
  });
  var fe4 = B$0();
  Object.defineProperty(p9, "BindOnceFuture", {
    enumerable: !0,
    get: function() {
      return fe4.BindOnceFuture
    }
  });
  var ve4 = Z$0();
  Object.defineProperty(p9, "diagLogLevelFromString", {
    enumerable: !0,
    get: function() {
      return ve4.diagLogLevelFromString
    }
  });
  var be4 = J$0();
  p9.internal = {
    _export: be4._export
  }
})
// @from(Start 4194281, End 4195790)
E$0 = z((z$0) => {
  Object.defineProperty(z$0, "__esModule", {
    value: !0
  });
  z$0.LastValueAggregator = z$0.LastValueAccumulation = void 0;
  var ge4 = Sg(),
    qs = p8(),
    he4 = tL();
  class Ms {
    startTime;
    _current;
    sampleTime;
    constructor(A, B = 0, Q = [0, 0]) {
      this.startTime = A, this._current = B, this.sampleTime = Q
    }
    record(A) {
      this._current = A, this.sampleTime = qs.millisToHrTime(Date.now())
    }
    setStartTime(A) {
      this.startTime = A
    }
    toPointValue() {
      return this._current
    }
  }
  z$0.LastValueAccumulation = Ms;
  class H$0 {
    kind = ge4.AggregatorKind.LAST_VALUE;
    createAccumulation(A) {
      return new Ms(A)
    }
    merge(A, B) {
      let Q = qs.hrTimeToMicroseconds(B.sampleTime) >= qs.hrTimeToMicroseconds(A.sampleTime) ? B : A;
      return new Ms(A.startTime, Q.toPointValue(), Q.sampleTime)
    }
    diff(A, B) {
      let Q = qs.hrTimeToMicroseconds(B.sampleTime) >= qs.hrTimeToMicroseconds(A.sampleTime) ? B : A;
      return new Ms(B.startTime, Q.toPointValue(), Q.sampleTime)
    }
    toMetricData(A, B, Q, I) {
      return {
        descriptor: A,
        aggregationTemporality: B,
        dataPointType: he4.DataPointType.GAUGE,
        dataPoints: Q.map(([G, Z]) => {
          return {
            attributes: G,
            startTime: Z.startTime,
            endTime: I,
            value: Z.toPointValue()
          }
        })
      }
    }
  }
  z$0.LastValueAggregator = H$0
})
// @from(Start 4195796, End 4197459)
q$0 = z((N$0) => {
  Object.defineProperty(N$0, "__esModule", {
    value: !0
  });
  N$0.SumAggregator = N$0.SumAccumulation = void 0;
  var de4 = Sg(),
    ue4 = tL();
  class k_ {
    startTime;
    monotonic;
    _current;
    reset;
    constructor(A, B, Q = 0, I = !1) {
      this.startTime = A, this.monotonic = B, this._current = Q, this.reset = I
    }
    record(A) {
      if (this.monotonic && A < 0) return;
      this._current += A
    }
    setStartTime(A) {
      this.startTime = A
    }
    toPointValue() {
      return this._current
    }
  }
  N$0.SumAccumulation = k_;
  class U$0 {
    monotonic;
    kind = de4.AggregatorKind.SUM;
    constructor(A) {
      this.monotonic = A
    }
    createAccumulation(A) {
      return new k_(A, this.monotonic)
    }
    merge(A, B) {
      let Q = A.toPointValue(),
        I = B.toPointValue();
      if (B.reset) return new k_(B.startTime, this.monotonic, I, B.reset);
      return new k_(A.startTime, this.monotonic, Q + I)
    }
    diff(A, B) {
      let Q = A.toPointValue(),
        I = B.toPointValue();
      if (this.monotonic && Q > I) return new k_(B.startTime, this.monotonic, I, !0);
      return new k_(B.startTime, this.monotonic, I - Q)
    }
    toMetricData(A, B, Q, I) {
      return {
        descriptor: A,
        aggregationTemporality: B,
        dataPointType: ue4.DataPointType.SUM,
        dataPoints: Q.map(([G, Z]) => {
          return {
            attributes: G,
            startTime: Z.startTime,
            endTime: I,
            value: Z.toPointValue()
          }
        }),
        isMonotonic: this.monotonic
      }
    }
  }
  N$0.SumAggregator = U$0
})
// @from(Start 4197465, End 4199213)
T$0 = z((hC) => {
  Object.defineProperty(hC, "__esModule", {
    value: !0
  });
  hC.SumAggregator = hC.SumAccumulation = hC.LastValueAggregator = hC.LastValueAccumulation = hC.ExponentialHistogramAggregator = hC.ExponentialHistogramAccumulation = hC.HistogramAggregator = hC.HistogramAccumulation = hC.DropAggregator = void 0;
  var ce4 = kF0();
  Object.defineProperty(hC, "DropAggregator", {
    enumerable: !0,
    get: function() {
      return ce4.DropAggregator
    }
  });
  var M$0 = bF0();
  Object.defineProperty(hC, "HistogramAccumulation", {
    enumerable: !0,
    get: function() {
      return M$0.HistogramAccumulation
    }
  });
  Object.defineProperty(hC, "HistogramAggregator", {
    enumerable: !0,
    get: function() {
      return M$0.HistogramAggregator
    }
  });
  var L$0 = HX0();
  Object.defineProperty(hC, "ExponentialHistogramAccumulation", {
    enumerable: !0,
    get: function() {
      return L$0.ExponentialHistogramAccumulation
    }
  });
  Object.defineProperty(hC, "ExponentialHistogramAggregator", {
    enumerable: !0,
    get: function() {
      return L$0.ExponentialHistogramAggregator
    }
  });
  var R$0 = E$0();
  Object.defineProperty(hC, "LastValueAccumulation", {
    enumerable: !0,
    get: function() {
      return R$0.LastValueAccumulation
    }
  });
  Object.defineProperty(hC, "LastValueAggregator", {
    enumerable: !0,
    get: function() {
      return R$0.LastValueAggregator
    }
  });
  var O$0 = q$0();
  Object.defineProperty(hC, "SumAccumulation", {
    enumerable: !0,
    get: function() {
      return O$0.SumAccumulation
    }
  });
  Object.defineProperty(hC, "SumAggregator", {
    enumerable: !0,
    get: function() {
      return O$0.SumAggregator
    }
  })
})
// @from(Start 4199219, End 4202829)
x$0 = z((P$0) => {
  Object.defineProperty(P$0, "__esModule", {
    value: !0
  });
  P$0.DEFAULT_AGGREGATION = P$0.EXPONENTIAL_HISTOGRAM_AGGREGATION = P$0.HISTOGRAM_AGGREGATION = P$0.LAST_VALUE_AGGREGATION = P$0.SUM_AGGREGATION = P$0.DROP_AGGREGATION = P$0.DefaultAggregation = P$0.ExponentialHistogramAggregation = P$0.ExplicitBucketHistogramAggregation = P$0.HistogramAggregation = P$0.LastValueAggregation = P$0.SumAggregation = P$0.DropAggregation = void 0;
  var ie4 = s9(),
    x_ = T$0(),
    Qw = tL();
  class CZ1 {
    static DEFAULT_INSTANCE = new x_.DropAggregator;
    createAggregator(A) {
      return CZ1.DEFAULT_INSTANCE
    }
  }
  P$0.DropAggregation = CZ1;
  class Ls {
    static MONOTONIC_INSTANCE = new x_.SumAggregator(!0);
    static NON_MONOTONIC_INSTANCE = new x_.SumAggregator(!1);
    createAggregator(A) {
      switch (A.type) {
        case Qw.InstrumentType.COUNTER:
        case Qw.InstrumentType.OBSERVABLE_COUNTER:
        case Qw.InstrumentType.HISTOGRAM:
          return Ls.MONOTONIC_INSTANCE;
        default:
          return Ls.NON_MONOTONIC_INSTANCE
      }
    }
  }
  P$0.SumAggregation = Ls;
  class KZ1 {
    static DEFAULT_INSTANCE = new x_.LastValueAggregator;
    createAggregator(A) {
      return KZ1.DEFAULT_INSTANCE
    }
  }
  P$0.LastValueAggregation = KZ1;
  class HZ1 {
    static DEFAULT_INSTANCE = new x_.HistogramAggregator([0, 5, 10, 25, 50, 75, 100, 250, 500, 750, 1000, 2500, 5000, 7500, 1e4], !0);
    createAggregator(A) {
      return HZ1.DEFAULT_INSTANCE
    }
  }
  P$0.HistogramAggregation = HZ1;
  class ub1 {
    _recordMinMax;
    _boundaries;
    constructor(A, B = !0) {
      if (this._recordMinMax = B, A == null) throw new Error("ExplicitBucketHistogramAggregation should be created with explicit boundaries, if a single bucket histogram is required, please pass an empty array");
      A = A.concat(), A = A.sort((G, Z) => G - Z);
      let Q = A.lastIndexOf(-1 / 0),
        I = A.indexOf(1 / 0);
      if (I === -1) I = void 0;
      this._boundaries = A.slice(Q + 1, I)
    }
    createAggregator(A) {
      return new x_.HistogramAggregator(this._boundaries, this._recordMinMax)
    }
  }
  P$0.ExplicitBucketHistogramAggregation = ub1;
  class pb1 {
    _maxSize;
    _recordMinMax;
    constructor(A = 160, B = !0) {
      this._maxSize = A, this._recordMinMax = B
    }
    createAggregator(A) {
      return new x_.ExponentialHistogramAggregator(this._maxSize, this._recordMinMax)
    }
  }
  P$0.ExponentialHistogramAggregation = pb1;
  class cb1 {
    _resolve(A) {
      switch (A.type) {
        case Qw.InstrumentType.COUNTER:
        case Qw.InstrumentType.UP_DOWN_COUNTER:
        case Qw.InstrumentType.OBSERVABLE_COUNTER:
        case Qw.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER:
          return P$0.SUM_AGGREGATION;
        case Qw.InstrumentType.GAUGE:
        case Qw.InstrumentType.OBSERVABLE_GAUGE:
          return P$0.LAST_VALUE_AGGREGATION;
        case Qw.InstrumentType.HISTOGRAM: {
          if (A.advice.explicitBucketBoundaries) return new ub1(A.advice.explicitBucketBoundaries);
          return P$0.HISTOGRAM_AGGREGATION
        }
      }
      return ie4.diag.warn(`Unable to recognize instrument type: ${A.type}`), P$0.DROP_AGGREGATION
    }
    createAggregator(A) {
      return this._resolve(A).createAggregator(A)
    }
  }
  P$0.DefaultAggregation = cb1;
  P$0.DROP_AGGREGATION = new CZ1;
  P$0.SUM_AGGREGATION = new Ls;
  P$0.LAST_VALUE_AGGREGATION = new KZ1;
  P$0.HISTOGRAM_AGGREGATION = new HZ1;
  P$0.EXPONENTIAL_HISTOGRAM_AGGREGATION = new pb1;
  P$0.DEFAULT_AGGREGATION = new cb1
})
// @from(Start 4202835, End 4204110)
Rs = z((v$0) => {
  Object.defineProperty(v$0, "__esModule", {
    value: !0
  });
  v$0.toAggregation = v$0.AggregationType = void 0;
  var f_ = x$0(),
    v_;
  (function(A) {
    A[A.DEFAULT = 0] = "DEFAULT", A[A.DROP = 1] = "DROP", A[A.SUM = 2] = "SUM", A[A.LAST_VALUE = 3] = "LAST_VALUE", A[A.EXPLICIT_BUCKET_HISTOGRAM = 4] = "EXPLICIT_BUCKET_HISTOGRAM", A[A.EXPONENTIAL_HISTOGRAM = 5] = "EXPONENTIAL_HISTOGRAM"
  })(v_ = v$0.AggregationType || (v$0.AggregationType = {}));

  function B16(A) {
    switch (A.type) {
      case v_.DEFAULT:
        return f_.DEFAULT_AGGREGATION;
      case v_.DROP:
        return f_.DROP_AGGREGATION;
      case v_.SUM:
        return f_.SUM_AGGREGATION;
      case v_.LAST_VALUE:
        return f_.LAST_VALUE_AGGREGATION;
      case v_.EXPONENTIAL_HISTOGRAM: {
        let B = A;
        return new f_.ExponentialHistogramAggregation(B.options?.maxSize, B.options?.recordMinMax)
      }
      case v_.EXPLICIT_BUCKET_HISTOGRAM: {
        let B = A;
        if (B.options == null) return f_.HISTOGRAM_AGGREGATION;
        else return new f_.ExplicitBucketHistogramAggregation(B.options?.boundaries, B.options?.recordMinMax)
      }
      default:
        throw new Error("Unsupported Aggregation")
    }
  }
  v$0.toAggregation = B16
})
// @from(Start 4204116, End 4204573)
lb1 = z((g$0) => {
  Object.defineProperty(g$0, "__esModule", {
    value: !0
  });
  g$0.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR = g$0.DEFAULT_AGGREGATION_SELECTOR = void 0;
  var Q16 = oG1(),
    I16 = Rs(),
    G16 = (A) => {
      return {
        type: I16.AggregationType.DEFAULT
      }
    };
  g$0.DEFAULT_AGGREGATION_SELECTOR = G16;
  var Z16 = (A) => Q16.AggregationTemporality.CUMULATIVE;
  g$0.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR = Z16
})
// @from(Start 4204579, End 4207171)
ib1 = z((p$0) => {
  Object.defineProperty(p$0, "__esModule", {
    value: !0
  });
  p$0.MetricReader = void 0;
  var m$0 = s9(),
    zZ1 = gC(),
    d$0 = lb1();
  class u$0 {
    _shutdown = !1;
    _metricProducers;
    _sdkMetricProducer;
    _aggregationTemporalitySelector;
    _aggregationSelector;
    _cardinalitySelector;
    constructor(A) {
      this._aggregationSelector = A?.aggregationSelector ?? d$0.DEFAULT_AGGREGATION_SELECTOR, this._aggregationTemporalitySelector = A?.aggregationTemporalitySelector ?? d$0.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR, this._metricProducers = A?.metricProducers ?? [], this._cardinalitySelector = A?.cardinalitySelector
    }
    setMetricProducer(A) {
      if (this._sdkMetricProducer) throw new Error("MetricReader can not be bound to a MeterProvider again.");
      this._sdkMetricProducer = A, this.onInitialized()
    }
    selectAggregation(A) {
      return this._aggregationSelector(A)
    }
    selectAggregationTemporality(A) {
      return this._aggregationTemporalitySelector(A)
    }
    selectCardinalityLimit(A) {
      return this._cardinalitySelector ? this._cardinalitySelector(A) : 2000
    }
    onInitialized() {}
    async collect(A) {
      if (this._sdkMetricProducer === void 0) throw new Error("MetricReader is not bound to a MetricProducer");
      if (this._shutdown) throw new Error("MetricReader is shutdown");
      let [B, ...Q] = await Promise.all([this._sdkMetricProducer.collect({
        timeoutMillis: A?.timeoutMillis
      }), ...this._metricProducers.map((D) => D.collect({
        timeoutMillis: A?.timeoutMillis
      }))]), I = B.errors.concat(zZ1.FlatMap(Q, (D) => D.errors)), G = B.resourceMetrics.resource, Z = B.resourceMetrics.scopeMetrics.concat(zZ1.FlatMap(Q, (D) => D.resourceMetrics.scopeMetrics));
      return {
        resourceMetrics: {
          resource: G,
          scopeMetrics: Z
        },
        errors: I
      }
    }
    async shutdown(A) {
      if (this._shutdown) {
        m$0.diag.error("Cannot call shutdown twice.");
        return
      }
      if (A?.timeoutMillis == null) await this.onShutdown();
      else await zZ1.callWithTimeout(this.onShutdown(), A.timeoutMillis);
      this._shutdown = !0
    }
    async forceFlush(A) {
      if (this._shutdown) {
        m$0.diag.warn("Cannot forceFlush on already shutdown MetricReader.");
        return
      }
      if (A?.timeoutMillis == null) {
        await this.onForceFlush();
        return
      }
      await zZ1.callWithTimeout(this.onForceFlush(), A.timeoutMillis)
    }
  }
  p$0.MetricReader = u$0
})
// @from(Start 4207177, End 4209949)
s$0 = z((n$0) => {
  Object.defineProperty(n$0, "__esModule", {
    value: !0
  });
  n$0.PeriodicExportingMetricReader = void 0;
  var nb1 = s9(),
    Os = p8(),
    Y16 = ib1(),
    l$0 = gC();
  class i$0 extends Y16.MetricReader {
    _interval;
    _exporter;
    _exportInterval;
    _exportTimeout;
    constructor(A) {
      super({
        aggregationSelector: A.exporter.selectAggregation?.bind(A.exporter),
        aggregationTemporalitySelector: A.exporter.selectAggregationTemporality?.bind(A.exporter),
        metricProducers: A.metricProducers
      });
      if (A.exportIntervalMillis !== void 0 && A.exportIntervalMillis <= 0) throw Error("exportIntervalMillis must be greater than 0");
      if (A.exportTimeoutMillis !== void 0 && A.exportTimeoutMillis <= 0) throw Error("exportTimeoutMillis must be greater than 0");
      if (A.exportTimeoutMillis !== void 0 && A.exportIntervalMillis !== void 0 && A.exportIntervalMillis < A.exportTimeoutMillis) throw Error("exportIntervalMillis must be greater than or equal to exportTimeoutMillis");
      this._exportInterval = A.exportIntervalMillis ?? 60000, this._exportTimeout = A.exportTimeoutMillis ?? 30000, this._exporter = A.exporter
    }
    async _runOnce() {
      try {
        await l$0.callWithTimeout(this._doRun(), this._exportTimeout)
      } catch (A) {
        if (A instanceof l$0.TimeoutError) {
          nb1.diag.error("Export took longer than %s milliseconds and timed out.", this._exportTimeout);
          return
        }
        Os.globalErrorHandler(A)
      }
    }
    async _doRun() {
      let {
        resourceMetrics: A,
        errors: B
      } = await this.collect({
        timeoutMillis: this._exportTimeout
      });
      if (B.length > 0) nb1.diag.error("PeriodicExportingMetricReader: metrics collection errors", ...B);
      if (A.resource.asyncAttributesPending) try {
        await A.resource.waitForAsyncAttributes?.()
      } catch (I) {
        nb1.diag.debug("Error while resolving async portion of resource: ", I), Os.globalErrorHandler(I)
      }
      if (A.scopeMetrics.length === 0) return;
      let Q = await Os.internal._export(this._exporter, A);
      if (Q.code !== Os.ExportResultCode.SUCCESS) throw new Error(`PeriodicExportingMetricReader: metrics export failed (error ${Q.error})`)
    }
    onInitialized() {
      this._interval = setInterval(() => {
        this._runOnce()
      }, this._exportInterval), Os.unrefTimer(this._interval)
    }
    async onForceFlush() {
      await this._runOnce(), await this._exporter.forceFlush()
    }
    async onShutdown() {
      if (this._interval) clearInterval(this._interval);
      await this.onForceFlush(), await this._exporter.shutdown()
    }
  }
  n$0.PeriodicExportingMetricReader = i$0
})
// @from(Start 4209955, End 4210871)
Aq0 = z((t$0) => {
  Object.defineProperty(t$0, "__esModule", {
    value: !0
  });
  t$0.InMemoryMetricExporter = void 0;
  var r$0 = p8();
  class o$0 {
    _shutdown = !1;
    _aggregationTemporality;
    _metrics = [];
    constructor(A) {
      this._aggregationTemporality = A
    }
    export (A, B) {
      if (this._shutdown) {
        setTimeout(() => B({
          code: r$0.ExportResultCode.FAILED
        }), 0);
        return
      }
      this._metrics.push(A), setTimeout(() => B({
        code: r$0.ExportResultCode.SUCCESS
      }), 0)
    }
    getMetrics() {
      return this._metrics
    }
    forceFlush() {
      return Promise.resolve()
    }
    reset() {
      this._metrics = []
    }
    selectAggregationTemporality(A) {
      return this._aggregationTemporality
    }
    shutdown() {
      return this._shutdown = !0, Promise.resolve()
    }
  }
  t$0.InMemoryMetricExporter = o$0
})
// @from(Start 4210877, End 4212021)
Gq0 = z((Qq0) => {
  Object.defineProperty(Qq0, "__esModule", {
    value: !0
  });
  Qq0.ConsoleMetricExporter = void 0;
  var Bq0 = p8(),
    W16 = lb1();
  class ab1 {
    _shutdown = !1;
    _temporalitySelector;
    constructor(A) {
      this._temporalitySelector = A?.temporalitySelector ?? W16.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR
    }
    export (A, B) {
      if (this._shutdown) {
        setImmediate(B, {
          code: Bq0.ExportResultCode.FAILED
        });
        return
      }
      return ab1._sendMetrics(A, B)
    }
    forceFlush() {
      return Promise.resolve()
    }
    selectAggregationTemporality(A) {
      return this._temporalitySelector(A)
    }
    shutdown() {
      return this._shutdown = !0, Promise.resolve()
    }
    static _sendMetrics(A, B) {
      for (let Q of A.scopeMetrics)
        for (let I of Q.metrics) console.dir({
          descriptor: I.descriptor,
          dataPointType: I.dataPointType,
          dataPoints: I.dataPoints
        }, {
          depth: null
        });
      B({
        code: Bq0.ExportResultCode.SUCCESS
      })
    }
  }
  Qq0.ConsoleMetricExporter = ab1
})
// @from(Start 4212027, End 4212249)
Yq0 = z((Zq0) => {
  Object.defineProperty(Zq0, "__esModule", {
    value: !0
  });
  Zq0.defaultServiceName = void 0;

  function J16() {
    return `unknown_service:${process.argv0}`
  }
  Zq0.defaultServiceName = J16
})
// @from(Start 4212255, End 4212537)
Wq0 = z((sb1) => {
  Object.defineProperty(sb1, "__esModule", {
    value: !0
  });
  sb1.defaultServiceName = void 0;
  var F16 = Yq0();
  Object.defineProperty(sb1, "defaultServiceName", {
    enumerable: !0,
    get: function() {
      return F16.defaultServiceName
    }
  })
})
// @from(Start 4212543, End 4212825)
ob1 = z((rb1) => {
  Object.defineProperty(rb1, "__esModule", {
    value: !0
  });
  rb1.defaultServiceName = void 0;
  var V16 = Wq0();
  Object.defineProperty(rb1, "defaultServiceName", {
    enumerable: !0,
    get: function() {
      return V16.defaultServiceName
    }
  })
})
// @from(Start 4212831, End 4213153)
Xq0 = z((Jq0) => {
  Object.defineProperty(Jq0, "__esModule", {
    value: !0
  });
  Jq0.identity = Jq0.isPromiseLike = void 0;
  var K16 = (A) => {
    return A !== null && typeof A === "object" && typeof A.then === "function"
  };
  Jq0.isPromiseLike = K16;

  function H16(A) {
    return A
  }
  Jq0.identity = H16
})
// @from(Start 4213159, End 4215925)
Bg1 = z((Vq0) => {
  Object.defineProperty(Vq0, "__esModule", {
    value: !0
  });
  Vq0.defaultResource = Vq0.emptyResource = Vq0.resourceFromDetectedResource = Vq0.resourceFromAttributes = void 0;
  var tb1 = s9(),
    eb1 = p8(),
    b_ = LN(),
    w16 = ob1(),
    wZ1 = Xq0();
  class Ts {
    _rawAttributes;
    _asyncAttributesPending = !1;
    _memoizedAttributes;
    static FromAttributeList(A) {
      let B = new Ts({});
      return B._rawAttributes = A, B._asyncAttributesPending = A.filter(([Q, I]) => wZ1.isPromiseLike(I)).length > 0, B
    }
    constructor(A) {
      let B = A.attributes ?? {};
      this._rawAttributes = Object.entries(B).map(([Q, I]) => {
        if (wZ1.isPromiseLike(I)) this._asyncAttributesPending = !0;
        return [Q, I]
      })
    }
    get asyncAttributesPending() {
      return this._asyncAttributesPending
    }
    async waitForAsyncAttributes() {
      if (!this.asyncAttributesPending) return;
      for (let A = 0; A < this._rawAttributes.length; A++) {
        let [B, Q] = this._rawAttributes[A];
        try {
          this._rawAttributes[A] = [B, wZ1.isPromiseLike(Q) ? await Q : Q]
        } catch (I) {
          tb1.diag.debug("a resource's async attributes promise rejected: %s", I), this._rawAttributes[A] = [B, void 0]
        }
      }
      this._asyncAttributesPending = !1
    }
    get attributes() {
      if (this.asyncAttributesPending) tb1.diag.error("Accessing resource attributes before async attributes settled");
      if (this._memoizedAttributes) return this._memoizedAttributes;
      let A = {};
      for (let [B, Q] of this._rawAttributes) {
        if (wZ1.isPromiseLike(Q)) {
          tb1.diag.debug(`Unsettled resource attribute ${B} skipped`);
          continue
        }
        if (Q != null) A[B] ??= Q
      }
      if (!this._asyncAttributesPending) this._memoizedAttributes = A;
      return A
    }
    getRawAttributes() {
      return this._rawAttributes
    }
    merge(A) {
      if (A == null) return this;
      return Ts.FromAttributeList([...A.getRawAttributes(), ...this.getRawAttributes()])
    }
  }

  function Ag1(A) {
    return Ts.FromAttributeList(Object.entries(A))
  }
  Vq0.resourceFromAttributes = Ag1;

  function E16(A) {
    return new Ts(A)
  }
  Vq0.resourceFromDetectedResource = E16;

  function U16() {
    return Ag1({})
  }
  Vq0.emptyResource = U16;

  function N16() {
    return Ag1({
      [b_.ATTR_SERVICE_NAME]: w16.defaultServiceName(),
      [b_.ATTR_TELEMETRY_SDK_LANGUAGE]: eb1.SDK_INFO[b_.ATTR_TELEMETRY_SDK_LANGUAGE],
      [b_.ATTR_TELEMETRY_SDK_NAME]: eb1.SDK_INFO[b_.ATTR_TELEMETRY_SDK_NAME],
      [b_.ATTR_TELEMETRY_SDK_VERSION]: eb1.SDK_INFO[b_.ATTR_TELEMETRY_SDK_VERSION]
    })
  }
  Vq0.defaultResource = N16
})
// @from(Start 4215931, End 4216759)
zq0 = z((Kq0) => {
  Object.defineProperty(Kq0, "__esModule", {
    value: !0
  });
  Kq0.detectResources = void 0;
  var Ig1 = s9(),
    Qg1 = Bg1(),
    L16 = (A = {}) => {
      let B = (A.detectors || []).map((Q) => {
        try {
          let I = Qg1.resourceFromDetectedResource(Q.detect(A));
          return Ig1.diag.debug(`${Q.constructor.name} found resource.`, I), I
        } catch (I) {
          return Ig1.diag.debug(`${Q.constructor.name} failed: ${I.message}`), Qg1.emptyResource()
        }
      });
      return R16(B), B.reduce((Q, I) => Q.merge(I), Qg1.emptyResource())
    };
  Kq0.detectResources = L16;
  var R16 = (A) => {
    A.forEach((B) => {
      if (Object.keys(B.attributes).length > 0) {
        let Q = JSON.stringify(B.attributes, null, 4);
        Ig1.diag.verbose(Q)
      }
    })
  }
})
// @from(Start 4216765, End 4218770)
$q0 = z((Uq0) => {
  Object.defineProperty(Uq0, "__esModule", {
    value: !0
  });
  Uq0.envDetector = void 0;
  var O16 = s9(),
    T16 = LN(),
    wq0 = p8();
  class Eq0 {
    _MAX_LENGTH = 255;
    _COMMA_SEPARATOR = ",";
    _LABEL_KEY_VALUE_SPLITTER = "=";
    _ERROR_MESSAGE_INVALID_CHARS = "should be a ASCII string with a length greater than 0 and not exceed " + this._MAX_LENGTH + " characters.";
    _ERROR_MESSAGE_INVALID_VALUE = "should be a ASCII string with a length not exceed " + this._MAX_LENGTH + " characters.";
    detect(A) {
      let B = {},
        Q = wq0.getStringFromEnv("OTEL_RESOURCE_ATTRIBUTES"),
        I = wq0.getStringFromEnv("OTEL_SERVICE_NAME");
      if (Q) try {
        let G = this._parseResourceAttributes(Q);
        Object.assign(B, G)
      } catch (G) {
        O16.diag.debug(`EnvDetector failed: ${G.message}`)
      }
      if (I) B[T16.SEMRESATTRS_SERVICE_NAME] = I;
      return {
        attributes: B
      }
    }
    _parseResourceAttributes(A) {
      if (!A) return {};
      let B = {},
        Q = A.split(this._COMMA_SEPARATOR, -1);
      for (let I of Q) {
        let G = I.split(this._LABEL_KEY_VALUE_SPLITTER, -1);
        if (G.length !== 2) continue;
        let [Z, D] = G;
        if (Z = Z.trim(), D = D.trim().split(/^"|"$/).join(""), !this._isValidAndNotEmpty(Z)) throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`);
        if (!this._isValid(D)) throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`);
        B[Z] = decodeURIComponent(D)
      }
      return B
    }
    _isValid(A) {
      return A.length <= this._MAX_LENGTH && this._isBaggageOctetString(A)
    }
    _isBaggageOctetString(A) {
      for (let B = 0; B < A.length; B++) {
        let Q = A.charCodeAt(B);
        if (Q < 33 || Q === 44 || Q === 59 || Q === 92 || Q > 126) return !1
      }
      return !0
    }
    _isValidAndNotEmpty(A) {
      return A.length > 0 && this._isValid(A)
    }
  }
  Uq0.envDetector = new Eq0
})
// @from(Start 4218776, End 4218985)
EZ1 = z((qq0) => {
  Object.defineProperty(qq0, "__esModule", {
    value: !0
  });
  qq0.execAsync = void 0;
  var P16 = Z1("child_process"),
    S16 = Z1("util");
  qq0.execAsync = S16.promisify(P16.exec)
})
// @from(Start 4218991, End 4219539)
Oq0 = z((Lq0) => {
  Object.defineProperty(Lq0, "__esModule", {
    value: !0
  });
  Lq0.getMachineId = void 0;
  var _16 = EZ1(),
    j16 = s9();
  async function y16() {
    try {
      let B = (await _16.execAsync('ioreg -rd1 -c "IOPlatformExpertDevice"')).stdout.split(`
`).find((I) => I.includes("IOPlatformUUID"));
      if (!B) return;
      let Q = B.split('" = "');
      if (Q.length === 2) return Q[1].slice(0, -1)
    } catch (A) {
      j16.diag.debug(`error reading machine id: ${A}`)
    }
    return
  }
  Lq0.getMachineId = y16
})
// @from(Start 4219545, End 4220019)
Sq0 = z((Tq0) => {
  Object.defineProperty(Tq0, "__esModule", {
    value: !0
  });
  Tq0.getMachineId = void 0;
  var k16 = Z1("fs"),
    x16 = s9();
  async function f16() {
    let A = ["/etc/machine-id", "/var/lib/dbus/machine-id"];
    for (let B of A) try {
      return (await k16.promises.readFile(B, {
        encoding: "utf8"
      })).trim()
    } catch (Q) {
      x16.diag.debug(`error reading machine id: ${Q}`)
    }
    return
  }
  Tq0.getMachineId = f16
})
// @from(Start 4220025, End 4220618)
kq0 = z((jq0) => {
  Object.defineProperty(jq0, "__esModule", {
    value: !0
  });
  jq0.getMachineId = void 0;
  var v16 = Z1("fs"),
    b16 = EZ1(),
    _q0 = s9();
  async function g16() {
    try {
      return (await v16.promises.readFile("/etc/hostid", {
        encoding: "utf8"
      })).trim()
    } catch (A) {
      _q0.diag.debug(`error reading machine id: ${A}`)
    }
    try {
      return (await b16.execAsync("kenv -q smbios.system.uuid")).stdout.trim()
    } catch (A) {
      _q0.diag.debug(`error reading machine id: ${A}`)
    }
    return
  }
  jq0.getMachineId = g16
})
// @from(Start 4220624, End 4221296)
bq0 = z((fq0) => {
  Object.defineProperty(fq0, "__esModule", {
    value: !0
  });
  fq0.getMachineId = void 0;
  var xq0 = Z1("process"),
    h16 = EZ1(),
    m16 = s9();
  async function d16() {
    let B = "%windir%\\System32\\REG.exe";
    if (xq0.arch === "ia32" && "PROCESSOR_ARCHITEW6432" in xq0.env) B = "%windir%\\sysnative\\cmd.exe /c " + B;
    try {
      let I = (await h16.execAsync(`${B} QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography /v MachineGuid`)).stdout.split("REG_SZ");
      if (I.length === 2) return I[1].trim()
    } catch (Q) {
      m16.diag.debug(`error reading machine id: ${Q}`)
    }
    return
  }
  fq0.getMachineId = d16
})
// @from(Start 4221302, End 4221571)
mq0 = z((gq0) => {
  Object.defineProperty(gq0, "__esModule", {
    value: !0
  });
  gq0.getMachineId = void 0;
  var u16 = s9();
  async function p16() {
    u16.diag.debug("could not read machine-id: unsupported platform");
    return
  }
  gq0.getMachineId = p16
})
// @from(Start 4221577, End 4222171)
uq0 = z((dq0) => {
  Object.defineProperty(dq0, "__esModule", {
    value: !0
  });
  dq0.getMachineId = void 0;
  var c16 = Z1("process"),
    kg;
  dq0.getMachineId = kg;
  switch (c16.platform) {
    case "darwin":
      dq0.getMachineId = kg = Oq0().getMachineId;
      break;
    case "linux":
      dq0.getMachineId = kg = Sq0().getMachineId;
      break;
    case "freebsd":
      dq0.getMachineId = kg = kq0().getMachineId;
      break;
    case "win32":
      dq0.getMachineId = kg = bq0().getMachineId;
      break;
    default:
      dq0.getMachineId = kg = mq0().getMachineId
  }
})
// @from(Start 4222177, End 4222746)
Gg1 = z((pq0) => {
  Object.defineProperty(pq0, "__esModule", {
    value: !0
  });
  pq0.normalizeType = pq0.normalizeArch = void 0;
  var l16 = (A) => {
    switch (A) {
      case "arm":
        return "arm32";
      case "ppc":
        return "ppc32";
      case "x64":
        return "amd64";
      default:
        return A
    }
  };
  pq0.normalizeArch = l16;
  var i16 = (A) => {
    switch (A) {
      case "sunos":
        return "solaris";
      case "win32":
        return "windows";
      default:
        return A
    }
  };
  pq0.normalizeType = i16
})
// @from(Start 4222752, End 4223244)
sq0 = z((nq0) => {
  Object.defineProperty(nq0, "__esModule", {
    value: !0
  });
  nq0.hostDetector = void 0;
  var Zg1 = LN(),
    lq0 = Z1("os"),
    a16 = uq0(),
    s16 = Gg1();
  class iq0 {
    detect(A) {
      return {
        attributes: {
          [Zg1.SEMRESATTRS_HOST_NAME]: lq0.hostname(),
          [Zg1.SEMRESATTRS_HOST_ARCH]: s16.normalizeArch(lq0.arch()),
          [Zg1.SEMRESATTRS_HOST_ID]: a16.getMachineId()
        }
      }
    }
  }
  nq0.hostDetector = new iq0
})
// @from(Start 4223250, End 4223666)
BM0 = z((eq0) => {
  Object.defineProperty(eq0, "__esModule", {
    value: !0
  });
  eq0.osDetector = void 0;
  var rq0 = LN(),
    oq0 = Z1("os"),
    r16 = Gg1();
  class tq0 {
    detect(A) {
      return {
        attributes: {
          [rq0.SEMRESATTRS_OS_TYPE]: r16.normalizeType(oq0.platform()),
          [rq0.SEMRESATTRS_OS_VERSION]: oq0.release()
        }
      }
    }
  }
  eq0.osDetector = new tq0
})
// @from(Start 4223672, End 4224751)
ZM0 = z((IM0) => {
  Object.defineProperty(IM0, "__esModule", {
    value: !0
  });
  IM0.processDetector = void 0;
  var o16 = s9(),
    ON = LN(),
    t16 = Z1("os");
  class QM0 {
    detect(A) {
      let B = {
        [ON.SEMRESATTRS_PROCESS_PID]: process.pid,
        [ON.SEMRESATTRS_PROCESS_EXECUTABLE_NAME]: process.title,
        [ON.SEMRESATTRS_PROCESS_EXECUTABLE_PATH]: process.execPath,
        [ON.SEMRESATTRS_PROCESS_COMMAND_ARGS]: [process.argv[0], ...process.execArgv, ...process.argv.slice(1)],
        [ON.SEMRESATTRS_PROCESS_RUNTIME_VERSION]: process.versions.node,
        [ON.SEMRESATTRS_PROCESS_RUNTIME_NAME]: "nodejs",
        [ON.SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION]: "Node.js"
      };
      if (process.argv.length > 1) B[ON.SEMRESATTRS_PROCESS_COMMAND] = process.argv[1];
      try {
        let Q = t16.userInfo();
        B[ON.SEMRESATTRS_PROCESS_OWNER] = Q.username
      } catch (Q) {
        o16.diag.debug(`error obtaining process owner: ${Q}`)
      }
      return {
        attributes: B
      }
    }
  }
  IM0.processDetector = new QM0
})
// @from(Start 4224757, End 4225130)
JM0 = z((YM0) => {
  Object.defineProperty(YM0, "__esModule", {
    value: !0
  });
  YM0.serviceInstanceIdDetector = void 0;
  var e16 = LN(),
    AA6 = Z1("crypto");
  class DM0 {
    detect(A) {
      return {
        attributes: {
          [e16.SEMRESATTRS_SERVICE_INSTANCE_ID]: AA6.randomUUID()
        }
      }
    }
  }
  YM0.serviceInstanceIdDetector = new DM0
})
// @from(Start 4225136, End 4225939)
FM0 = z((xg) => {
  Object.defineProperty(xg, "__esModule", {
    value: !0
  });
  xg.serviceInstanceIdDetector = xg.processDetector = xg.osDetector = xg.hostDetector = void 0;
  var BA6 = sq0();
  Object.defineProperty(xg, "hostDetector", {
    enumerable: !0,
    get: function() {
      return BA6.hostDetector
    }
  });
  var QA6 = BM0();
  Object.defineProperty(xg, "osDetector", {
    enumerable: !0,
    get: function() {
      return QA6.osDetector
    }
  });
  var IA6 = ZM0();
  Object.defineProperty(xg, "processDetector", {
    enumerable: !0,
    get: function() {
      return IA6.processDetector
    }
  });
  var GA6 = JM0();
  Object.defineProperty(xg, "serviceInstanceIdDetector", {
    enumerable: !0,
    get: function() {
      return GA6.serviceInstanceIdDetector
    }
  })
})
// @from(Start 4225945, End 4226691)
XM0 = z((fg) => {
  Object.defineProperty(fg, "__esModule", {
    value: !0
  });
  fg.serviceInstanceIdDetector = fg.processDetector = fg.osDetector = fg.hostDetector = void 0;
  var UZ1 = FM0();
  Object.defineProperty(fg, "hostDetector", {
    enumerable: !0,
    get: function() {
      return UZ1.hostDetector
    }
  });
  Object.defineProperty(fg, "osDetector", {
    enumerable: !0,
    get: function() {
      return UZ1.osDetector
    }
  });
  Object.defineProperty(fg, "processDetector", {
    enumerable: !0,
    get: function() {
      return UZ1.processDetector
    }
  });
  Object.defineProperty(fg, "serviceInstanceIdDetector", {
    enumerable: !0,
    get: function() {
      return UZ1.serviceInstanceIdDetector
    }
  })
})
// @from(Start 4226697, End 4226971)
KM0 = z((VM0) => {
  Object.defineProperty(VM0, "__esModule", {
    value: !0
  });
  VM0.noopDetector = VM0.NoopDetector = void 0;
  class Dg1 {
    detect() {
      return {
        attributes: {}
      }
    }
  }
  VM0.NoopDetector = Dg1;
  VM0.noopDetector = new Dg1
})
// @from(Start 4226977, End 4228054)
HM0 = z((BR) => {
  Object.defineProperty(BR, "__esModule", {
    value: !0
  });
  BR.noopDetector = BR.serviceInstanceIdDetector = BR.processDetector = BR.osDetector = BR.hostDetector = BR.envDetector = void 0;
  var WA6 = $q0();
  Object.defineProperty(BR, "envDetector", {
    enumerable: !0,
    get: function() {
      return WA6.envDetector
    }
  });
  var NZ1 = XM0();
  Object.defineProperty(BR, "hostDetector", {
    enumerable: !0,
    get: function() {
      return NZ1.hostDetector
    }
  });
  Object.defineProperty(BR, "osDetector", {
    enumerable: !0,
    get: function() {
      return NZ1.osDetector
    }
  });
  Object.defineProperty(BR, "processDetector", {
    enumerable: !0,
    get: function() {
      return NZ1.processDetector
    }
  });
  Object.defineProperty(BR, "serviceInstanceIdDetector", {
    enumerable: !0,
    get: function() {
      return NZ1.serviceInstanceIdDetector
    }
  });
  var JA6 = KM0();
  Object.defineProperty(BR, "noopDetector", {
    enumerable: !0,
    get: function() {
      return JA6.noopDetector
    }
  })
})
// @from(Start 4228060, End 4229811)
$Z1 = z((LX) => {
  Object.defineProperty(LX, "__esModule", {
    value: !0
  });
  LX.defaultServiceName = LX.emptyResource = LX.defaultResource = LX.resourceFromAttributes = LX.serviceInstanceIdDetector = LX.processDetector = LX.osDetector = LX.hostDetector = LX.envDetector = LX.detectResources = void 0;
  var XA6 = zq0();
  Object.defineProperty(LX, "detectResources", {
    enumerable: !0,
    get: function() {
      return XA6.detectResources
    }
  });
  var Ps = HM0();
  Object.defineProperty(LX, "envDetector", {
    enumerable: !0,
    get: function() {
      return Ps.envDetector
    }
  });
  Object.defineProperty(LX, "hostDetector", {
    enumerable: !0,
    get: function() {
      return Ps.hostDetector
    }
  });
  Object.defineProperty(LX, "osDetector", {
    enumerable: !0,
    get: function() {
      return Ps.osDetector
    }
  });
  Object.defineProperty(LX, "processDetector", {
    enumerable: !0,
    get: function() {
      return Ps.processDetector
    }
  });
  Object.defineProperty(LX, "serviceInstanceIdDetector", {
    enumerable: !0,
    get: function() {
      return Ps.serviceInstanceIdDetector
    }
  });
  var Yg1 = Bg1();
  Object.defineProperty(LX, "resourceFromAttributes", {
    enumerable: !0,
    get: function() {
      return Yg1.resourceFromAttributes
    }
  });
  Object.defineProperty(LX, "defaultResource", {
    enumerable: !0,
    get: function() {
      return Yg1.defaultResource
    }
  });
  Object.defineProperty(LX, "emptyResource", {
    enumerable: !0,
    get: function() {
      return Yg1.emptyResource
    }
  });
  var VA6 = ob1();
  Object.defineProperty(LX, "defaultServiceName", {
    enumerable: !0,
    get: function() {
      return VA6.defaultServiceName
    }
  })
})
// @from(Start 4229817, End 4230635)
UM0 = z((wM0) => {
  Object.defineProperty(wM0, "__esModule", {
    value: !0
  });
  wM0.ViewRegistry = void 0;
  class zM0 {
    _registeredViews = [];
    addView(A) {
      this._registeredViews.push(A)
    }
    findViews(A, B) {
      return this._registeredViews.filter((I) => {
        return this._matchInstrument(I.instrumentSelector, A) && this._matchMeter(I.meterSelector, B)
      })
    }
    _matchInstrument(A, B) {
      return (A.getType() === void 0 || B.type === A.getType()) && A.getNameFilter().match(B.name) && A.getUnitFilter().match(B.unit)
    }
    _matchMeter(A, B) {
      return A.getNameFilter().match(B.name) && (B.version === void 0 || A.getVersionFilter().match(B.version)) && (B.schemaUrl === void 0 || A.getSchemaUrlFilter().match(B.schemaUrl))
    }
  }
  wM0.ViewRegistry = zM0
})
// @from(Start 4230641, End 4231907)
Ss = z((qM0) => {
  Object.defineProperty(qM0, "__esModule", {
    value: !0
  });
  qM0.isValidName = qM0.isDescriptorCompatibleWith = qM0.createInstrumentDescriptorWithView = qM0.createInstrumentDescriptor = void 0;
  var NM0 = s9(),
    KA6 = gC();

  function HA6(A, B, Q) {
    if (!$M0(A)) NM0.diag.warn(`Invalid metric name: "${A}". The metric name should be a ASCII string with a length no greater than 255 characters.`);
    return {
      name: A,
      type: B,
      description: Q?.description ?? "",
      unit: Q?.unit ?? "",
      valueType: Q?.valueType ?? NM0.ValueType.DOUBLE,
      advice: Q?.advice ?? {}
    }
  }
  qM0.createInstrumentDescriptor = HA6;

  function zA6(A, B) {
    return {
      name: A.name ?? B.name,
      description: A.description ?? B.description,
      type: B.type,
      unit: B.unit,
      valueType: B.valueType,
      advice: B.advice
    }
  }
  qM0.createInstrumentDescriptorWithView = zA6;

  function wA6(A, B) {
    return KA6.equalsCaseInsensitive(A.name, B.name) && A.unit === B.unit && A.type === B.type && A.valueType === B.valueType
  }
  qM0.isDescriptorCompatibleWith = wA6;
  var EA6 = /^[a-z][a-z0-9_.\-/]{0,254}$/i;

  function $M0(A) {
    return A.match(EA6) != null
  }
  qM0.isValidName = $M0
})
// @from(Start 4231913, End 4234495)
qZ1 = z((jM0) => {
  Object.defineProperty(jM0, "__esModule", {
    value: !0
  });
  jM0.isObservableInstrument = jM0.ObservableUpDownCounterInstrument = jM0.ObservableGaugeInstrument = jM0.ObservableCounterInstrument = jM0.ObservableInstrument = jM0.HistogramInstrument = jM0.GaugeInstrument = jM0.CounterInstrument = jM0.UpDownCounterInstrument = jM0.SyncInstrument = void 0;
  var vg = s9(),
    qA6 = p8();
  class bg {
    _writableMetricStorage;
    _descriptor;
    constructor(A, B) {
      this._writableMetricStorage = A, this._descriptor = B
    }
    _record(A, B = {}, Q = vg.context.active()) {
      if (typeof A !== "number") {
        vg.diag.warn(`non-number value provided to metric ${this._descriptor.name}: ${A}`);
        return
      }
      if (this._descriptor.valueType === vg.ValueType.INT && !Number.isInteger(A)) {
        if (vg.diag.warn(`INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`), A = Math.trunc(A), !Number.isInteger(A)) return
      }
      this._writableMetricStorage.record(A, B, Q, qA6.millisToHrTime(Date.now()))
    }
  }
  jM0.SyncInstrument = bg;
  class LM0 extends bg {
    add(A, B, Q) {
      this._record(A, B, Q)
    }
  }
  jM0.UpDownCounterInstrument = LM0;
  class RM0 extends bg {
    add(A, B, Q) {
      if (A < 0) {
        vg.diag.warn(`negative value provided to counter ${this._descriptor.name}: ${A}`);
        return
      }
      this._record(A, B, Q)
    }
  }
  jM0.CounterInstrument = RM0;
  class OM0 extends bg {
    record(A, B, Q) {
      this._record(A, B, Q)
    }
  }
  jM0.GaugeInstrument = OM0;
  class TM0 extends bg {
    record(A, B, Q) {
      if (A < 0) {
        vg.diag.warn(`negative value provided to histogram ${this._descriptor.name}: ${A}`);
        return
      }
      this._record(A, B, Q)
    }
  }
  jM0.HistogramInstrument = TM0;
  class gg {
    _observableRegistry;
    _metricStorages;
    _descriptor;
    constructor(A, B, Q) {
      this._observableRegistry = Q, this._descriptor = A, this._metricStorages = B
    }
    addCallback(A) {
      this._observableRegistry.addCallback(A, this)
    }
    removeCallback(A) {
      this._observableRegistry.removeCallback(A, this)
    }
  }
  jM0.ObservableInstrument = gg;
  class PM0 extends gg {}
  jM0.ObservableCounterInstrument = PM0;
  class SM0 extends gg {}
  jM0.ObservableGaugeInstrument = SM0;
  class _M0 extends gg {}
  jM0.ObservableUpDownCounterInstrument = _M0;

  function MA6(A) {
    return A instanceof gg
  }
  jM0.isObservableInstrument = MA6
})
// @from(Start 4234501, End 4236790)
vM0 = z((xM0) => {
  Object.defineProperty(xM0, "__esModule", {
    value: !0
  });
  xM0.Meter = void 0;
  var h_ = Ss(),
    m_ = qZ1(),
    d_ = tL();
  class kM0 {
    _meterSharedState;
    constructor(A) {
      this._meterSharedState = A
    }
    createGauge(A, B) {
      let Q = h_.createInstrumentDescriptor(A, d_.InstrumentType.GAUGE, B),
        I = this._meterSharedState.registerMetricStorage(Q);
      return new m_.GaugeInstrument(I, Q)
    }
    createHistogram(A, B) {
      let Q = h_.createInstrumentDescriptor(A, d_.InstrumentType.HISTOGRAM, B),
        I = this._meterSharedState.registerMetricStorage(Q);
      return new m_.HistogramInstrument(I, Q)
    }
    createCounter(A, B) {
      let Q = h_.createInstrumentDescriptor(A, d_.InstrumentType.COUNTER, B),
        I = this._meterSharedState.registerMetricStorage(Q);
      return new m_.CounterInstrument(I, Q)
    }
    createUpDownCounter(A, B) {
      let Q = h_.createInstrumentDescriptor(A, d_.InstrumentType.UP_DOWN_COUNTER, B),
        I = this._meterSharedState.registerMetricStorage(Q);
      return new m_.UpDownCounterInstrument(I, Q)
    }
    createObservableGauge(A, B) {
      let Q = h_.createInstrumentDescriptor(A, d_.InstrumentType.OBSERVABLE_GAUGE, B),
        I = this._meterSharedState.registerAsyncMetricStorage(Q);
      return new m_.ObservableGaugeInstrument(Q, I, this._meterSharedState.observableRegistry)
    }
    createObservableCounter(A, B) {
      let Q = h_.createInstrumentDescriptor(A, d_.InstrumentType.OBSERVABLE_COUNTER, B),
        I = this._meterSharedState.registerAsyncMetricStorage(Q);
      return new m_.ObservableCounterInstrument(Q, I, this._meterSharedState.observableRegistry)
    }
    createObservableUpDownCounter(A, B) {
      let Q = h_.createInstrumentDescriptor(A, d_.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER, B),
        I = this._meterSharedState.registerAsyncMetricStorage(Q);
      return new m_.ObservableUpDownCounterInstrument(Q, I, this._meterSharedState.observableRegistry)
    }
    addBatchObservableCallback(A, B) {
      this._meterSharedState.observableRegistry.addBatchCallback(A, B)
    }
    removeBatchObservableCallback(A, B) {
      this._meterSharedState.observableRegistry.removeBatchCallback(A, B)
    }
  }
  xM0.Meter = kM0
})
// @from(Start 4236796, End 4237497)
Wg1 = z((gM0) => {
  Object.defineProperty(gM0, "__esModule", {
    value: !0
  });
  gM0.MetricStorage = void 0;
  var kA6 = Ss();
  class bM0 {
    _instrumentDescriptor;
    constructor(A) {
      this._instrumentDescriptor = A
    }
    getInstrumentDescriptor() {
      return this._instrumentDescriptor
    }
    updateDescription(A) {
      this._instrumentDescriptor = kA6.createInstrumentDescriptor(this._instrumentDescriptor.name, this._instrumentDescriptor.type, {
        description: A,
        valueType: this._instrumentDescriptor.valueType,
        unit: this._instrumentDescriptor.unit,
        advice: this._instrumentDescriptor.advice
      })
    }
  }
  gM0.MetricStorage = bM0
})
// @from(Start 4237503, End 4238833)
_s = z((dM0) => {
  Object.defineProperty(dM0, "__esModule", {
    value: !0
  });
  dM0.AttributeHashMap = dM0.HashMap = void 0;
  var xA6 = gC();
  class Jg1 {
    _hash;
    _valueMap = new Map;
    _keyMap = new Map;
    constructor(A) {
      this._hash = A
    }
    get(A, B) {
      return B ??= this._hash(A), this._valueMap.get(B)
    }
    getOrDefault(A, B) {
      let Q = this._hash(A);
      if (this._valueMap.has(Q)) return this._valueMap.get(Q);
      let I = B();
      if (!this._keyMap.has(Q)) this._keyMap.set(Q, A);
      return this._valueMap.set(Q, I), I
    }
    set(A, B, Q) {
      if (Q ??= this._hash(A), !this._keyMap.has(Q)) this._keyMap.set(Q, A);
      this._valueMap.set(Q, B)
    }
    has(A, B) {
      return B ??= this._hash(A), this._valueMap.has(B)
    }* keys() {
      let A = this._keyMap.entries(),
        B = A.next();
      while (B.done !== !0) yield [B.value[1], B.value[0]], B = A.next()
    }* entries() {
      let A = this._valueMap.entries(),
        B = A.next();
      while (B.done !== !0) yield [this._keyMap.get(B.value[0]), B.value[1], B.value[0]], B = A.next()
    }
    get size() {
      return this._valueMap.size
    }
  }
  dM0.HashMap = Jg1;
  class mM0 extends Jg1 {
    constructor() {
      super(xA6.hashAttributes)
    }
  }
  dM0.AttributeHashMap = mM0
})
// @from(Start 4238839, End 4240982)
Xg1 = z((cM0) => {
  Object.defineProperty(cM0, "__esModule", {
    value: !0
  });
  cM0.DeltaMetricProcessor = void 0;
  var vA6 = gC(),
    Fg1 = _s();
  class pM0 {
    _aggregator;
    _activeCollectionStorage = new Fg1.AttributeHashMap;
    _cumulativeMemoStorage = new Fg1.AttributeHashMap;
    _cardinalityLimit;
    _overflowAttributes = {
      "otel.metric.overflow": !0
    };
    _overflowHashCode;
    constructor(A, B) {
      this._aggregator = A, this._cardinalityLimit = (B ?? 2000) - 1, this._overflowHashCode = vA6.hashAttributes(this._overflowAttributes)
    }
    record(A, B, Q, I) {
      let G = this._activeCollectionStorage.get(B);
      if (!G) {
        if (this._activeCollectionStorage.size >= this._cardinalityLimit) {
          this._activeCollectionStorage.getOrDefault(this._overflowAttributes, () => this._aggregator.createAccumulation(I))?.record(A);
          return
        }
        G = this._aggregator.createAccumulation(I), this._activeCollectionStorage.set(B, G)
      }
      G?.record(A)
    }
    batchCumulate(A, B) {
      Array.from(A.entries()).forEach(([Q, I, G]) => {
        let Z = this._aggregator.createAccumulation(B);
        Z?.record(I);
        let D = Z;
        if (this._cumulativeMemoStorage.has(Q, G)) {
          let Y = this._cumulativeMemoStorage.get(Q, G);
          D = this._aggregator.diff(Y, Z)
        } else if (this._cumulativeMemoStorage.size >= this._cardinalityLimit) {
          if (Q = this._overflowAttributes, G = this._overflowHashCode, this._cumulativeMemoStorage.has(Q, G)) {
            let Y = this._cumulativeMemoStorage.get(Q, G);
            D = this._aggregator.diff(Y, Z)
          }
        }
        if (this._activeCollectionStorage.has(Q, G)) {
          let Y = this._activeCollectionStorage.get(Q, G);
          D = this._aggregator.merge(Y, D)
        }
        this._cumulativeMemoStorage.set(Q, Z, G), this._activeCollectionStorage.set(Q, D, G)
      })
    }
    collect() {
      let A = this._activeCollectionStorage;
      return this._activeCollectionStorage = new Fg1.AttributeHashMap, A
    }
  }
  cM0.DeltaMetricProcessor = pM0
})
// @from(Start 4240988, End 4243291)
Vg1 = z((iM0) => {
  Object.defineProperty(iM0, "__esModule", {
    value: !0
  });
  iM0.TemporalMetricProcessor = void 0;
  var bA6 = oG1(),
    gA6 = _s();
  class js {
    _aggregator;
    _unreportedAccumulations = new Map;
    _reportHistory = new Map;
    constructor(A, B) {
      this._aggregator = A, B.forEach((Q) => {
        this._unreportedAccumulations.set(Q, [])
      })
    }
    buildMetrics(A, B, Q, I) {
      this._stashAccumulations(Q);
      let G = this._getMergedUnreportedAccumulations(A),
        Z = G,
        D;
      if (this._reportHistory.has(A)) {
        let W = this._reportHistory.get(A),
          J = W.collectionTime;
        if (D = W.aggregationTemporality, D === bA6.AggregationTemporality.CUMULATIVE) Z = js.merge(W.accumulations, G, this._aggregator);
        else Z = js.calibrateStartTime(W.accumulations, G, J)
      } else D = A.selectAggregationTemporality(B.type);
      this._reportHistory.set(A, {
        accumulations: Z,
        collectionTime: I,
        aggregationTemporality: D
      });
      let Y = hA6(Z);
      if (Y.length === 0) return;
      return this._aggregator.toMetricData(B, D, Y, I)
    }
    _stashAccumulations(A) {
      let B = this._unreportedAccumulations.keys();
      for (let Q of B) {
        let I = this._unreportedAccumulations.get(Q);
        if (I === void 0) I = [], this._unreportedAccumulations.set(Q, I);
        I.push(A)
      }
    }
    _getMergedUnreportedAccumulations(A) {
      let B = new gA6.AttributeHashMap,
        Q = this._unreportedAccumulations.get(A);
      if (this._unreportedAccumulations.set(A, []), Q === void 0) return B;
      for (let I of Q) B = js.merge(B, I, this._aggregator);
      return B
    }
    static merge(A, B, Q) {
      let I = A,
        G = B.entries(),
        Z = G.next();
      while (Z.done !== !0) {
        let [D, Y, W] = Z.value;
        if (A.has(D, W)) {
          let J = A.get(D, W),
            F = Q.merge(J, Y);
          I.set(D, F, W)
        } else I.set(D, Y, W);
        Z = G.next()
      }
      return I
    }
    static calibrateStartTime(A, B, Q) {
      for (let [I, G] of A.keys()) B.get(I, G)?.setStartTime(Q);
      return B
    }
  }
  iM0.TemporalMetricProcessor = js;

  function hA6(A) {
    return Array.from(A.entries())
  }
})
// @from(Start 4243297, End 4244363)
oM0 = z((sM0) => {
  Object.defineProperty(sM0, "__esModule", {
    value: !0
  });
  sM0.AsyncMetricStorage = void 0;
  var mA6 = Wg1(),
    dA6 = Xg1(),
    uA6 = Vg1(),
    pA6 = _s();
  class aM0 extends mA6.MetricStorage {
    _attributesProcessor;
    _aggregationCardinalityLimit;
    _deltaMetricStorage;
    _temporalMetricStorage;
    constructor(A, B, Q, I, G) {
      super(A);
      this._attributesProcessor = Q, this._aggregationCardinalityLimit = G, this._deltaMetricStorage = new dA6.DeltaMetricProcessor(B, this._aggregationCardinalityLimit), this._temporalMetricStorage = new uA6.TemporalMetricProcessor(B, I)
    }
    record(A, B) {
      let Q = new pA6.AttributeHashMap;
      Array.from(A.entries()).forEach(([I, G]) => {
        Q.set(this._attributesProcessor.process(I), G)
      }), this._deltaMetricStorage.batchCumulate(Q, B)
    }
    collect(A, B) {
      let Q = this._deltaMetricStorage.collect();
      return this._temporalMetricStorage.buildMetrics(A, this._instrumentDescriptor, Q, B)
    }
  }
  sM0.AsyncMetricStorage = aM0
})
// @from(Start 4244369, End 4246652)
GL0 = z((QL0) => {
  Object.defineProperty(QL0, "__esModule", {
    value: !0
  });
  QL0.getConflictResolutionRecipe = QL0.getDescriptionResolutionRecipe = QL0.getTypeConflictResolutionRecipe = QL0.getUnitConflictResolutionRecipe = QL0.getValueTypeConflictResolutionRecipe = QL0.getIncompatibilityDetails = void 0;

  function cA6(A, B) {
    let Q = "";
    if (A.unit !== B.unit) Q += `	- Unit '${A.unit}' does not match '${B.unit}'
`;
    if (A.type !== B.type) Q += `	- Type '${A.type}' does not match '${B.type}'
`;
    if (A.valueType !== B.valueType) Q += `	- Value Type '${A.valueType}' does not match '${B.valueType}'
`;
    if (A.description !== B.description) Q += `	- Description '${A.description}' does not match '${B.description}'
`;
    return Q
  }
  QL0.getIncompatibilityDetails = cA6;

  function tM0(A, B) {
    return `	- use valueType '${A.valueType}' on instrument creation or use an instrument name other than '${B.name}'`
  }
  QL0.getValueTypeConflictResolutionRecipe = tM0;

  function eM0(A, B) {
    return `	- use unit '${A.unit}' on instrument creation or use an instrument name other than '${B.name}'`
  }
  QL0.getUnitConflictResolutionRecipe = eM0;

  function AL0(A, B) {
    let Q = {
        name: B.name,
        type: B.type,
        unit: B.unit
      },
      I = JSON.stringify(Q);
    return `	- create a new view with a name other than '${A.name}' and InstrumentSelector '${I}'`
  }
  QL0.getTypeConflictResolutionRecipe = AL0;

  function BL0(A, B) {
    let Q = {
        name: B.name,
        type: B.type,
        unit: B.unit
      },
      I = JSON.stringify(Q);
    return `	- create a new view with a name other than '${A.name}' and InstrumentSelector '${I}'
    	- OR - create a new view with the name ${A.name} and description '${A.description}' and InstrumentSelector ${I}
    	- OR - create a new view with the name ${B.name} and description '${A.description}' and InstrumentSelector ${I}`
  }
  QL0.getDescriptionResolutionRecipe = BL0;

  function lA6(A, B) {
    if (A.valueType !== B.valueType) return tM0(A, B);
    if (A.unit !== B.unit) return eM0(A, B);
    if (A.type !== B.type) return AL0(A, B);
    if (A.description !== B.description) return BL0(A, B);
    return ""
  }
  QL0.getConflictResolutionRecipe = lA6
})
// @from(Start 4246658, End 4249177)
WL0 = z((DL0) => {
  Object.defineProperty(DL0, "__esModule", {
    value: !0
  });
  DL0.MetricStorageRegistry = void 0;
  var oA6 = Ss(),
    ZL0 = s9(),
    MZ1 = GL0();
  class Cg1 {
    _sharedRegistry = new Map;
    _perCollectorRegistry = new Map;
    static create() {
      return new Cg1
    }
    getStorages(A) {
      let B = [];
      for (let I of this._sharedRegistry.values()) B = B.concat(I);
      let Q = this._perCollectorRegistry.get(A);
      if (Q != null)
        for (let I of Q.values()) B = B.concat(I);
      return B
    }
    register(A) {
      this._registerStorage(A, this._sharedRegistry)
    }
    registerForCollector(A, B) {
      let Q = this._perCollectorRegistry.get(A);
      if (Q == null) Q = new Map, this._perCollectorRegistry.set(A, Q);
      this._registerStorage(B, Q)
    }
    findOrUpdateCompatibleStorage(A) {
      let B = this._sharedRegistry.get(A.name);
      if (B === void 0) return null;
      return this._findOrUpdateCompatibleStorage(A, B)
    }
    findOrUpdateCompatibleCollectorStorage(A, B) {
      let Q = this._perCollectorRegistry.get(A);
      if (Q === void 0) return null;
      let I = Q.get(B.name);
      if (I === void 0) return null;
      return this._findOrUpdateCompatibleStorage(B, I)
    }
    _registerStorage(A, B) {
      let Q = A.getInstrumentDescriptor(),
        I = B.get(Q.name);
      if (I === void 0) {
        B.set(Q.name, [A]);
        return
      }
      I.push(A)
    }
    _findOrUpdateCompatibleStorage(A, B) {
      let Q = null;
      for (let I of B) {
        let G = I.getInstrumentDescriptor();
        if (oA6.isDescriptorCompatibleWith(G, A)) {
          if (G.description !== A.description) {
            if (A.description.length > G.description.length) I.updateDescription(A.description);
            ZL0.diag.warn("A view or instrument with the name ", A.name, ` has already been registered, but has a different description and is incompatible with another registered view.
`, `Details:
`, MZ1.getIncompatibilityDetails(G, A), `The longer description will be used.
To resolve the conflict:`, MZ1.getConflictResolutionRecipe(G, A))
          }
          Q = I
        } else ZL0.diag.warn("A view or instrument with the name ", A.name, ` has already been registered and is incompatible with another registered view.
`, `Details:
`, MZ1.getIncompatibilityDetails(G, A), `To resolve the conflict:
`, MZ1.getConflictResolutionRecipe(G, A))
      }
      return Q
    }
  }
  DL0.MetricStorageRegistry = Cg1
})
// @from(Start 4249183, End 4249548)
VL0 = z((FL0) => {
  Object.defineProperty(FL0, "__esModule", {
    value: !0
  });
  FL0.MultiMetricStorage = void 0;
  class JL0 {
    _backingStorages;
    constructor(A) {
      this._backingStorages = A
    }
    record(A, B, Q, I) {
      this._backingStorages.forEach((G) => {
        G.record(A, B, Q, I)
      })
    }
  }
  FL0.MultiMetricStorage = JL0
})
// @from(Start 4249554, End 4251167)
EL0 = z((zL0) => {
  Object.defineProperty(zL0, "__esModule", {
    value: !0
  });
  zL0.BatchObservableResultImpl = zL0.ObservableResultImpl = void 0;
  var hg = s9(),
    CL0 = _s(),
    tA6 = qZ1();
  class KL0 {
    _instrumentName;
    _valueType;
    _buffer = new CL0.AttributeHashMap;
    constructor(A, B) {
      this._instrumentName = A, this._valueType = B
    }
    observe(A, B = {}) {
      if (typeof A !== "number") {
        hg.diag.warn(`non-number value provided to metric ${this._instrumentName}: ${A}`);
        return
      }
      if (this._valueType === hg.ValueType.INT && !Number.isInteger(A)) {
        if (hg.diag.warn(`INT value type cannot accept a floating-point value for ${this._instrumentName}, ignoring the fractional digits.`), A = Math.trunc(A), !Number.isInteger(A)) return
      }
      this._buffer.set(B, A)
    }
  }
  zL0.ObservableResultImpl = KL0;
  class HL0 {
    _buffer = new Map;
    observe(A, B, Q = {}) {
      if (!tA6.isObservableInstrument(A)) return;
      let I = this._buffer.get(A);
      if (I == null) I = new CL0.AttributeHashMap, this._buffer.set(A, I);
      if (typeof B !== "number") {
        hg.diag.warn(`non-number value provided to metric ${A._descriptor.name}: ${B}`);
        return
      }
      if (A._descriptor.valueType === hg.ValueType.INT && !Number.isInteger(B)) {
        if (hg.diag.warn(`INT value type cannot accept a floating-point value for ${A._descriptor.name}, ignoring the fractional digits.`), B = Math.trunc(B), !Number.isInteger(B)) return
      }
      I.set(Q, B)
    }
  }
  zL0.BatchObservableResultImpl = HL0
})
// @from(Start 4251173, End 4253810)
LL0 = z((qL0) => {
  Object.defineProperty(qL0, "__esModule", {
    value: !0
  });
  qL0.ObservableRegistry = void 0;
  var A06 = s9(),
    UL0 = qZ1(),
    NL0 = EL0(),
    ys = gC();
  class $L0 {
    _callbacks = [];
    _batchCallbacks = [];
    addCallback(A, B) {
      if (this._findCallback(A, B) >= 0) return;
      this._callbacks.push({
        callback: A,
        instrument: B
      })
    }
    removeCallback(A, B) {
      let Q = this._findCallback(A, B);
      if (Q < 0) return;
      this._callbacks.splice(Q, 1)
    }
    addBatchCallback(A, B) {
      let Q = new Set(B.filter(UL0.isObservableInstrument));
      if (Q.size === 0) {
        A06.diag.error("BatchObservableCallback is not associated with valid instruments", B);
        return
      }
      if (this._findBatchCallback(A, Q) >= 0) return;
      this._batchCallbacks.push({
        callback: A,
        instruments: Q
      })
    }
    removeBatchCallback(A, B) {
      let Q = new Set(B.filter(UL0.isObservableInstrument)),
        I = this._findBatchCallback(A, Q);
      if (I < 0) return;
      this._batchCallbacks.splice(I, 1)
    }
    async observe(A, B) {
      let Q = this._observeCallbacks(A, B),
        I = this._observeBatchCallbacks(A, B);
      return (await ys.PromiseAllSettled([...Q, ...I])).filter(ys.isPromiseAllSettledRejectionResult).map((D) => D.reason)
    }
    _observeCallbacks(A, B) {
      return this._callbacks.map(async ({
        callback: Q,
        instrument: I
      }) => {
        let G = new NL0.ObservableResultImpl(I._descriptor.name, I._descriptor.valueType),
          Z = Promise.resolve(Q(G));
        if (B != null) Z = ys.callWithTimeout(Z, B);
        await Z, I._metricStorages.forEach((D) => {
          D.record(G._buffer, A)
        })
      })
    }
    _observeBatchCallbacks(A, B) {
      return this._batchCallbacks.map(async ({
        callback: Q,
        instruments: I
      }) => {
        let G = new NL0.BatchObservableResultImpl,
          Z = Promise.resolve(Q(G));
        if (B != null) Z = ys.callWithTimeout(Z, B);
        await Z, I.forEach((D) => {
          let Y = G._buffer.get(D);
          if (Y == null) return;
          D._metricStorages.forEach((W) => {
            W.record(Y, A)
          })
        })
      })
    }
    _findCallback(A, B) {
      return this._callbacks.findIndex((Q) => {
        return Q.callback === A && Q.instrument === B
      })
    }
    _findBatchCallback(A, B) {
      return this._batchCallbacks.findIndex((Q) => {
        return Q.callback === A && ys.setEquals(Q.instruments, B)
      })
    }
  }
  qL0.ObservableRegistry = $L0
})
// @from(Start 4253816, End 4254763)
PL0 = z((OL0) => {
  Object.defineProperty(OL0, "__esModule", {
    value: !0
  });
  OL0.SyncMetricStorage = void 0;
  var B06 = Wg1(),
    Q06 = Xg1(),
    I06 = Vg1();
  class RL0 extends B06.MetricStorage {
    _attributesProcessor;
    _aggregationCardinalityLimit;
    _deltaMetricStorage;
    _temporalMetricStorage;
    constructor(A, B, Q, I, G) {
      super(A);
      this._attributesProcessor = Q, this._aggregationCardinalityLimit = G, this._deltaMetricStorage = new Q06.DeltaMetricProcessor(B, this._aggregationCardinalityLimit), this._temporalMetricStorage = new I06.TemporalMetricProcessor(B, I)
    }
    record(A, B, Q, I) {
      B = this._attributesProcessor.process(B, Q), this._deltaMetricStorage.record(A, B, Q, I)
    }
    collect(A, B) {
      let Q = this._deltaMetricStorage.collect();
      return this._temporalMetricStorage.buildMetrics(A, this._instrumentDescriptor, Q, B)
    }
  }
  OL0.SyncMetricStorage = RL0
})
// @from(Start 4254769, End 4256202)
LZ1 = z((kL0) => {
  Object.defineProperty(kL0, "__esModule", {
    value: !0
  });
  kL0.createDenyListAttributesProcessor = kL0.createAllowListAttributesProcessor = kL0.createMultiAttributesProcessor = kL0.createNoopAttributesProcessor = void 0;
  class SL0 {
    process(A, B) {
      return A
    }
  }
  class _L0 {
    _processors;
    constructor(A) {
      this._processors = A
    }
    process(A, B) {
      let Q = A;
      for (let I of this._processors) Q = I.process(Q, B);
      return Q
    }
  }
  class jL0 {
    _allowedAttributeNames;
    constructor(A) {
      this._allowedAttributeNames = A
    }
    process(A, B) {
      let Q = {};
      return Object.keys(A).filter((I) => this._allowedAttributeNames.includes(I)).forEach((I) => Q[I] = A[I]), Q
    }
  }
  class yL0 {
    _deniedAttributeNames;
    constructor(A) {
      this._deniedAttributeNames = A
    }
    process(A, B) {
      let Q = {};
      return Object.keys(A).filter((I) => !this._deniedAttributeNames.includes(I)).forEach((I) => Q[I] = A[I]), Q
    }
  }

  function G06() {
    return W06
  }
  kL0.createNoopAttributesProcessor = G06;

  function Z06(A) {
    return new _L0(A)
  }
  kL0.createMultiAttributesProcessor = Z06;

  function D06(A) {
    return new jL0(A)
  }
  kL0.createAllowListAttributesProcessor = D06;

  function Y06(A) {
    return new yL0(A)
  }
  kL0.createDenyListAttributesProcessor = Y06;
  var W06 = new SL0
})
// @from(Start 4256208, End 4258760)
gL0 = z((vL0) => {
  Object.defineProperty(vL0, "__esModule", {
    value: !0
  });
  vL0.MeterSharedState = void 0;
  var V06 = Ss(),
    C06 = vM0(),
    K06 = gC(),
    H06 = oM0(),
    z06 = WL0(),
    w06 = VL0(),
    E06 = LL0(),
    U06 = PL0(),
    N06 = LZ1();
  class fL0 {
    _meterProviderSharedState;
    _instrumentationScope;
    metricStorageRegistry = new z06.MetricStorageRegistry;
    observableRegistry = new E06.ObservableRegistry;
    meter;
    constructor(A, B) {
      this._meterProviderSharedState = A, this._instrumentationScope = B, this.meter = new C06.Meter(this)
    }
    registerMetricStorage(A) {
      let B = this._registerMetricStorage(A, U06.SyncMetricStorage);
      if (B.length === 1) return B[0];
      return new w06.MultiMetricStorage(B)
    }
    registerAsyncMetricStorage(A) {
      return this._registerMetricStorage(A, H06.AsyncMetricStorage)
    }
    async collect(A, B, Q) {
      let I = await this.observableRegistry.observe(B, Q?.timeoutMillis),
        G = this.metricStorageRegistry.getStorages(A);
      if (G.length === 0) return null;
      let Z = G.map((D) => {
        return D.collect(A, B)
      }).filter(K06.isNotNullish);
      if (Z.length === 0) return {
        errors: I
      };
      return {
        scopeMetrics: {
          scope: this._instrumentationScope,
          metrics: Z
        },
        errors: I
      }
    }
    _registerMetricStorage(A, B) {
      let I = this._meterProviderSharedState.viewRegistry.findViews(A, this._instrumentationScope).map((G) => {
        let Z = V06.createInstrumentDescriptorWithView(G, A),
          D = this.metricStorageRegistry.findOrUpdateCompatibleStorage(Z);
        if (D != null) return D;
        let Y = G.aggregation.createAggregator(Z),
          W = new B(Z, Y, G.attributesProcessor, this._meterProviderSharedState.metricCollectors, G.aggregationCardinalityLimit);
        return this.metricStorageRegistry.register(W), W
      });
      if (I.length === 0) {
        let Z = this._meterProviderSharedState.selectAggregations(A.type).map(([D, Y]) => {
          let W = this.metricStorageRegistry.findOrUpdateCompatibleCollectorStorage(D, A);
          if (W != null) return W;
          let J = Y.createAggregator(A),
            F = D.selectCardinalityLimit(A.type),
            X = new B(A, J, N06.createNoopAttributesProcessor(), [D], F);
          return this.metricStorageRegistry.registerForCollector(D, X), X
        });
        I = I.concat(Z)
      }
      return I
    }
  }
  vL0.MeterSharedState = fL0
})
// @from(Start 4258766, End 4259580)
uL0 = z((mL0) => {
  Object.defineProperty(mL0, "__esModule", {
    value: !0
  });
  mL0.MeterProviderSharedState = void 0;
  var $06 = gC(),
    q06 = UM0(),
    M06 = gL0(),
    L06 = Rs();
  class hL0 {
    resource;
    viewRegistry = new q06.ViewRegistry;
    metricCollectors = [];
    meterSharedStates = new Map;
    constructor(A) {
      this.resource = A
    }
    getMeterSharedState(A) {
      let B = $06.instrumentationScopeId(A),
        Q = this.meterSharedStates.get(B);
      if (Q == null) Q = new M06.MeterSharedState(this, A), this.meterSharedStates.set(B, Q);
      return Q
    }
    selectAggregations(A) {
      let B = [];
      for (let Q of this.metricCollectors) B.push([Q, L06.toAggregation(Q.selectAggregation(A))]);
      return B
    }
  }
  mL0.MeterProviderSharedState = hL0
})
// @from(Start 4259586, End 4260882)
iL0 = z((cL0) => {
  Object.defineProperty(cL0, "__esModule", {
    value: !0
  });
  cL0.MetricCollector = void 0;
  var R06 = p8();
  class pL0 {
    _sharedState;
    _metricReader;
    constructor(A, B) {
      this._sharedState = A, this._metricReader = B
    }
    async collect(A) {
      let B = R06.millisToHrTime(Date.now()),
        Q = [],
        I = [],
        G = Array.from(this._sharedState.meterSharedStates.values()).map(async (Z) => {
          let D = await Z.collect(this, B, A);
          if (D?.scopeMetrics != null) Q.push(D.scopeMetrics);
          if (D?.errors != null) I.push(...D.errors)
        });
      return await Promise.all(G), {
        resourceMetrics: {
          resource: this._sharedState.resource,
          scopeMetrics: Q
        },
        errors: I
      }
    }
    async forceFlush(A) {
      await this._metricReader.forceFlush(A)
    }
    async shutdown(A) {
      await this._metricReader.shutdown(A)
    }
    selectAggregationTemporality(A) {
      return this._metricReader.selectAggregationTemporality(A)
    }
    selectAggregation(A) {
      return this._metricReader.selectAggregation(A)
    }
    selectCardinalityLimit(A) {
      return this._metricReader.selectCardinalityLimit?.(A) ?? 2000
    }
  }
  cL0.MetricCollector = pL0
})
// @from(Start 4260888, End 4261832)
RZ1 = z((aL0) => {
  Object.defineProperty(aL0, "__esModule", {
    value: !0
  });
  aL0.ExactPredicate = aL0.PatternPredicate = void 0;
  var O06 = /[\^$\\.+?()[\]{}|]/g;
  class Kg1 {
    _matchAll;
    _regexp;
    constructor(A) {
      if (A === "*") this._matchAll = !0, this._regexp = /.*/;
      else this._matchAll = !1, this._regexp = new RegExp(Kg1.escapePattern(A))
    }
    match(A) {
      if (this._matchAll) return !0;
      return this._regexp.test(A)
    }
    static escapePattern(A) {
      return `^${A.replace(O06,"\\$&").replace("*",".*")}$`
    }
    static hasWildcard(A) {
      return A.includes("*")
    }
  }
  aL0.PatternPredicate = Kg1;
  class nL0 {
    _matchAll;
    _pattern;
    constructor(A) {
      this._matchAll = A === void 0, this._pattern = A
    }
    match(A) {
      if (this._matchAll) return !0;
      if (A === this._pattern) return !0;
      return !1
    }
  }
  aL0.ExactPredicate = nL0
})
// @from(Start 4261838, End 4262401)
AR0 = z((tL0) => {
  Object.defineProperty(tL0, "__esModule", {
    value: !0
  });
  tL0.InstrumentSelector = void 0;
  var rL0 = RZ1();
  class oL0 {
    _nameFilter;
    _type;
    _unitFilter;
    constructor(A) {
      this._nameFilter = new rL0.PatternPredicate(A?.name ?? "*"), this._type = A?.type, this._unitFilter = new rL0.ExactPredicate(A?.unit)
    }
    getType() {
      return this._type
    }
    getNameFilter() {
      return this._nameFilter
    }
    getUnitFilter() {
      return this._unitFilter
    }
  }
  tL0.InstrumentSelector = oL0
})
// @from(Start 4262407, End 4263039)
GR0 = z((QR0) => {
  Object.defineProperty(QR0, "__esModule", {
    value: !0
  });
  QR0.MeterSelector = void 0;
  var Hg1 = RZ1();
  class BR0 {
    _nameFilter;
    _versionFilter;
    _schemaUrlFilter;
    constructor(A) {
      this._nameFilter = new Hg1.ExactPredicate(A?.name), this._versionFilter = new Hg1.ExactPredicate(A?.version), this._schemaUrlFilter = new Hg1.ExactPredicate(A?.schemaUrl)
    }
    getNameFilter() {
      return this._nameFilter
    }
    getVersionFilter() {
      return this._versionFilter
    }
    getSchemaUrlFilter() {
      return this._schemaUrlFilter
    }
  }
  QR0.MeterSelector = BR0
})
// @from(Start 4263045, End 4264759)
FR0 = z((WR0) => {
  Object.defineProperty(WR0, "__esModule", {
    value: !0
  });
  WR0.View = void 0;
  var P06 = RZ1(),
    ZR0 = LZ1(),
    S06 = AR0(),
    _06 = GR0(),
    DR0 = Rs();

  function j06(A) {
    return A.instrumentName == null && A.instrumentType == null && A.instrumentUnit == null && A.meterName == null && A.meterVersion == null && A.meterSchemaUrl == null
  }

  function y06(A) {
    if (j06(A)) throw new Error("Cannot create view with no selector arguments supplied");
    if (A.name != null && (A?.instrumentName == null || P06.PatternPredicate.hasWildcard(A.instrumentName))) throw new Error("Views with a specified name must be declared with an instrument selector that selects at most one instrument per meter.")
  }
  class YR0 {
    name;
    description;
    aggregation;
    attributesProcessor;
    instrumentSelector;
    meterSelector;
    aggregationCardinalityLimit;
    constructor(A) {
      if (y06(A), A.attributesProcessors != null) this.attributesProcessor = ZR0.createMultiAttributesProcessor(A.attributesProcessors);
      else this.attributesProcessor = ZR0.createNoopAttributesProcessor();
      this.name = A.name, this.description = A.description, this.aggregation = DR0.toAggregation(A.aggregation ?? {
        type: DR0.AggregationType.DEFAULT
      }), this.instrumentSelector = new S06.InstrumentSelector({
        name: A.instrumentName,
        type: A.instrumentType,
        unit: A.instrumentUnit
      }), this.meterSelector = new _06.MeterSelector({
        name: A.meterName,
        version: A.meterVersion,
        schemaUrl: A.meterSchemaUrl
      }), this.aggregationCardinalityLimit = A.aggregationCardinalityLimit
    }
  }
  WR0.View = YR0
})
// @from(Start 4264765, End 4266417)
KR0 = z((VR0) => {
  Object.defineProperty(VR0, "__esModule", {
    value: !0
  });
  VR0.MeterProvider = void 0;
  var OZ1 = s9(),
    k06 = $Z1(),
    x06 = uL0(),
    f06 = iL0(),
    v06 = FR0();
  class XR0 {
    _sharedState;
    _shutdown = !1;
    constructor(A) {
      if (this._sharedState = new x06.MeterProviderSharedState(A?.resource ?? k06.defaultResource()), A?.views != null && A.views.length > 0)
        for (let B of A.views) this._sharedState.viewRegistry.addView(new v06.View(B));
      if (A?.readers != null && A.readers.length > 0)
        for (let B of A.readers) {
          let Q = new f06.MetricCollector(this._sharedState, B);
          B.setMetricProducer(Q), this._sharedState.metricCollectors.push(Q)
        }
    }
    getMeter(A, B = "", Q = {}) {
      if (this._shutdown) return OZ1.diag.warn("A shutdown MeterProvider cannot provide a Meter"), OZ1.createNoopMeter();
      return this._sharedState.getMeterSharedState({
        name: A,
        version: B,
        schemaUrl: Q.schemaUrl
      }).meter
    }
    async shutdown(A) {
      if (this._shutdown) {
        OZ1.diag.warn("shutdown may only be called once per MeterProvider");
        return
      }
      this._shutdown = !0, await Promise.all(this._sharedState.metricCollectors.map((B) => {
        return B.shutdown(A)
      }))
    }
    async forceFlush(A) {
      if (this._shutdown) {
        OZ1.diag.warn("invalid attempt to force flush after MeterProvider shutdown");
        return
      }
      await Promise.all(this._sharedState.metricCollectors.map((B) => {
        return B.forceFlush(A)
      }))
    }
  }
  VR0.MeterProvider = XR0
})
// @from(Start 4266423, End 4268766)
QR = z((mY) => {
  Object.defineProperty(mY, "__esModule", {
    value: !0
  });
  mY.TimeoutError = mY.createDenyListAttributesProcessor = mY.createAllowListAttributesProcessor = mY.AggregationType = mY.MeterProvider = mY.ConsoleMetricExporter = mY.InMemoryMetricExporter = mY.PeriodicExportingMetricReader = mY.MetricReader = mY.InstrumentType = mY.DataPointType = mY.AggregationTemporality = void 0;
  var b06 = oG1();
  Object.defineProperty(mY, "AggregationTemporality", {
    enumerable: !0,
    get: function() {
      return b06.AggregationTemporality
    }
  });
  var HR0 = tL();
  Object.defineProperty(mY, "DataPointType", {
    enumerable: !0,
    get: function() {
      return HR0.DataPointType
    }
  });
  Object.defineProperty(mY, "InstrumentType", {
    enumerable: !0,
    get: function() {
      return HR0.InstrumentType
    }
  });
  var g06 = ib1();
  Object.defineProperty(mY, "MetricReader", {
    enumerable: !0,
    get: function() {
      return g06.MetricReader
    }
  });
  var h06 = s$0();
  Object.defineProperty(mY, "PeriodicExportingMetricReader", {
    enumerable: !0,
    get: function() {
      return h06.PeriodicExportingMetricReader
    }
  });
  var m06 = Aq0();
  Object.defineProperty(mY, "InMemoryMetricExporter", {
    enumerable: !0,
    get: function() {
      return m06.InMemoryMetricExporter
    }
  });
  var d06 = Gq0();
  Object.defineProperty(mY, "ConsoleMetricExporter", {
    enumerable: !0,
    get: function() {
      return d06.ConsoleMetricExporter
    }
  });
  var u06 = KR0();
  Object.defineProperty(mY, "MeterProvider", {
    enumerable: !0,
    get: function() {
      return u06.MeterProvider
    }
  });
  var p06 = Rs();
  Object.defineProperty(mY, "AggregationType", {
    enumerable: !0,
    get: function() {
      return p06.AggregationType
    }
  });
  var zR0 = LZ1();
  Object.defineProperty(mY, "createAllowListAttributesProcessor", {
    enumerable: !0,
    get: function() {
      return zR0.createAllowListAttributesProcessor
    }
  });
  Object.defineProperty(mY, "createDenyListAttributesProcessor", {
    enumerable: !0,
    get: function() {
      return zR0.createDenyListAttributesProcessor
    }
  });
  var c06 = gC();
  Object.defineProperty(mY, "TimeoutError", {
    enumerable: !0,
    get: function() {
      return c06.TimeoutError
    }
  })
})
// @from(Start 4268772, End 4269130)
wg1 = z((wR0) => {
  Object.defineProperty(wR0, "__esModule", {
    value: !0
  });
  wR0.AggregationTemporalityPreference = void 0;
  var i06;
  (function(A) {
    A[A.DELTA = 0] = "DELTA", A[A.CUMULATIVE = 1] = "CUMULATIVE", A[A.LOWMEMORY = 2] = "LOWMEMORY"
  })(i06 = wR0.AggregationTemporalityPreference || (wR0.AggregationTemporalityPreference = {}))
})
// @from(Start 4269136, End 4269557)
$R0 = z((UR0) => {
  Object.defineProperty(UR0, "__esModule", {
    value: !0
  });
  UR0.OTLPExporterBase = void 0;
  class ER0 {
    _delegate;
    constructor(A) {
      this._delegate = A
    }
    export (A, B) {
      this._delegate.export(A, B)
    }
    forceFlush() {
      return this._delegate.forceFlush()
    }
    shutdown() {
      return this._delegate.shutdown()
    }
  }
  UR0.OTLPExporterBase = ER0
})
// @from(Start 4269563, End 4269881)
TZ1 = z((MR0) => {
  Object.defineProperty(MR0, "__esModule", {
    value: !0
  });
  MR0.OTLPExporterError = void 0;
  class qR0 extends Error {
    code;
    name = "OTLPExporterError";
    data;
    constructor(A, B, Q) {
      super(A);
      this.data = Q, this.code = B
    }
  }
  MR0.OTLPExporterError = qR0
})
// @from(Start 4269887, End 4270965)
ks = z((OR0) => {
  Object.defineProperty(OR0, "__esModule", {
    value: !0
  });
  OR0.getSharedConfigurationDefaults = OR0.mergeOtlpSharedConfigurationWithDefaults = OR0.wrapStaticHeadersInFunction = OR0.validateTimeoutMillis = void 0;

  function RR0(A) {
    if (Number.isFinite(A) && A > 0) return A;
    throw new Error(`Configuration: timeoutMillis is invalid, expected number greater than 0 (actual: '${A}')`)
  }
  OR0.validateTimeoutMillis = RR0;

  function n06(A) {
    if (A == null) return;
    return () => A
  }
  OR0.wrapStaticHeadersInFunction = n06;

  function a06(A, B, Q) {
    return {
      timeoutMillis: RR0(A.timeoutMillis ?? B.timeoutMillis ?? Q.timeoutMillis),
      concurrencyLimit: A.concurrencyLimit ?? B.concurrencyLimit ?? Q.concurrencyLimit,
      compression: A.compression ?? B.compression ?? Q.compression
    }
  }
  OR0.mergeOtlpSharedConfigurationWithDefaults = a06;

  function s06() {
    return {
      timeoutMillis: 1e4,
      concurrencyLimit: 30,
      compression: "none"
    }
  }
  OR0.getSharedConfigurationDefaults = s06
})
// @from(Start 4270971, End 4271231)
SR0 = z((PR0) => {
  Object.defineProperty(PR0, "__esModule", {
    value: !0
  });
  PR0.CompressionAlgorithm = void 0;
  var e06;
  (function(A) {
    A.NONE = "none", A.GZIP = "gzip"
  })(e06 = PR0.CompressionAlgorithm || (PR0.CompressionAlgorithm = {}))
})
// @from(Start 4271237, End 4272082)
Ug1 = z((jR0) => {
  Object.defineProperty(jR0, "__esModule", {
    value: !0
  });
  jR0.createBoundedQueueExportPromiseHandler = void 0;
  class _R0 {
    _concurrencyLimit;
    _sendingPromises = [];
    constructor(A) {
      this._concurrencyLimit = A
    }
    pushPromise(A) {
      if (this.hasReachedLimit()) throw new Error("Concurrency Limit reached");
      this._sendingPromises.push(A);
      let B = () => {
        let Q = this._sendingPromises.indexOf(A);
        this._sendingPromises.splice(Q, 1)
      };
      A.then(B, B)
    }
    hasReachedLimit() {
      return this._sendingPromises.length >= this._concurrencyLimit
    }
    async awaitAll() {
      await Promise.all(this._sendingPromises)
    }
  }

  function A26(A) {
    return new _R0(A.concurrencyLimit)
  }
  jR0.createBoundedQueueExportPromiseHandler = A26
})
// @from(Start 4272088, End 4272687)
fR0 = z((kR0) => {
  Object.defineProperty(kR0, "__esModule", {
    value: !0
  });
  kR0.createLoggingPartialSuccessResponseHandler = void 0;
  var B26 = s9();

  function Q26(A) {
    return Object.prototype.hasOwnProperty.call(A, "partialSuccess")
  }

  function I26() {
    return {
      handleResponse(A) {
        if (A == null || !Q26(A) || A.partialSuccess == null || Object.keys(A.partialSuccess).length === 0) return;
        B26.diag.warn("Received Partial Success response:", JSON.stringify(A.partialSuccess))
      }
    }
  }
  kR0.createLoggingPartialSuccessResponseHandler = I26
})
// @from(Start 4272693, End 4275277)
Ng1 = z((gR0) => {
  Object.defineProperty(gR0, "__esModule", {
    value: !0
  });
  gR0.createOtlpExportDelegate = void 0;
  var u_ = p8(),
    vR0 = TZ1(),
    G26 = fR0(),
    Z26 = s9();
  class bR0 {
    _transport;
    _serializer;
    _responseHandler;
    _promiseQueue;
    _timeout;
    _diagLogger;
    constructor(A, B, Q, I, G) {
      this._transport = A, this._serializer = B, this._responseHandler = Q, this._promiseQueue = I, this._timeout = G, this._diagLogger = Z26.diag.createComponentLogger({
        namespace: "OTLPExportDelegate"
      })
    }
    export (A, B) {
      if (this._diagLogger.debug("items to be sent", A), this._promiseQueue.hasReachedLimit()) {
        B({
          code: u_.ExportResultCode.FAILED,
          error: new Error("Concurrent export limit reached")
        });
        return
      }
      let Q = this._serializer.serializeRequest(A);
      if (Q == null) {
        B({
          code: u_.ExportResultCode.FAILED,
          error: new Error("Nothing to send")
        });
        return
      }
      this._promiseQueue.pushPromise(this._transport.send(Q, this._timeout).then((I) => {
        if (I.status === "success") {
          if (I.data != null) try {
            this._responseHandler.handleResponse(this._serializer.deserializeResponse(I.data))
          } catch (G) {
            this._diagLogger.warn("Export succeeded but could not deserialize response - is the response specification compliant?", G, I.data)
          }
          B({
            code: u_.ExportResultCode.SUCCESS
          });
          return
        } else if (I.status === "failure" && I.error) {
          B({
            code: u_.ExportResultCode.FAILED,
            error: I.error
          });
          return
        } else if (I.status === "retryable") B({
          code: u_.ExportResultCode.FAILED,
          error: new vR0.OTLPExporterError("Export failed with retryable status")
        });
        else B({
          code: u_.ExportResultCode.FAILED,
          error: new vR0.OTLPExporterError("Export failed with unknown error")
        })
      }, (I) => B({
        code: u_.ExportResultCode.FAILED,
        error: I
      })))
    }
    forceFlush() {
      return this._promiseQueue.awaitAll()
    }
    async shutdown() {
      this._diagLogger.debug("shutdown started"), await this.forceFlush(), this._transport.shutdown()
    }
  }

  function D26(A, B) {
    return new bR0(A.transport, A.serializer, G26.createLoggingPartialSuccessResponseHandler(), A.promiseHandler, B.timeout)
  }
  gR0.createOtlpExportDelegate = D26
})
// @from(Start 4275283, End 4275726)
uR0 = z((mR0) => {
  Object.defineProperty(mR0, "__esModule", {
    value: !0
  });
  mR0.createOtlpNetworkExportDelegate = void 0;
  var Y26 = Ug1(),
    W26 = Ng1();

  function J26(A, B, Q) {
    return W26.createOtlpExportDelegate({
      transport: Q,
      serializer: B,
      promiseHandler: Y26.createBoundedQueueExportPromiseHandler(A)
    }, {
      timeout: A.timeoutMillis
    })
  }
  mR0.createOtlpNetworkExportDelegate = J26
})
// @from(Start 4275732, End 4277052)
p_ = z((IR) => {
  Object.defineProperty(IR, "__esModule", {
    value: !0
  });
  IR.createOtlpNetworkExportDelegate = IR.CompressionAlgorithm = IR.getSharedConfigurationDefaults = IR.mergeOtlpSharedConfigurationWithDefaults = IR.OTLPExporterError = IR.OTLPExporterBase = void 0;
  var F26 = $R0();
  Object.defineProperty(IR, "OTLPExporterBase", {
    enumerable: !0,
    get: function() {
      return F26.OTLPExporterBase
    }
  });
  var X26 = TZ1();
  Object.defineProperty(IR, "OTLPExporterError", {
    enumerable: !0,
    get: function() {
      return X26.OTLPExporterError
    }
  });
  var pR0 = ks();
  Object.defineProperty(IR, "mergeOtlpSharedConfigurationWithDefaults", {
    enumerable: !0,
    get: function() {
      return pR0.mergeOtlpSharedConfigurationWithDefaults
    }
  });
  Object.defineProperty(IR, "getSharedConfigurationDefaults", {
    enumerable: !0,
    get: function() {
      return pR0.getSharedConfigurationDefaults
    }
  });
  var V26 = SR0();
  Object.defineProperty(IR, "CompressionAlgorithm", {
    enumerable: !0,
    get: function() {
      return V26.CompressionAlgorithm
    }
  });
  var C26 = uR0();
  Object.defineProperty(IR, "createOtlpNetworkExportDelegate", {
    enumerable: !0,
    get: function() {
      return C26.createOtlpNetworkExportDelegate
    }
  })
})
// @from(Start 4277058, End 4279969)
Mg1 = z((iR0) => {
  Object.defineProperty(iR0, "__esModule", {
    value: !0
  });
  iR0.OTLPMetricExporterBase = iR0.LowMemoryTemporalitySelector = iR0.DeltaTemporalitySelector = iR0.CumulativeTemporalitySelector = void 0;
  var H26 = p8(),
    F7 = QR(),
    cR0 = wg1(),
    z26 = p_(),
    w26 = s9(),
    E26 = () => F7.AggregationTemporality.CUMULATIVE;
  iR0.CumulativeTemporalitySelector = E26;
  var U26 = (A) => {
    switch (A) {
      case F7.InstrumentType.COUNTER:
      case F7.InstrumentType.OBSERVABLE_COUNTER:
      case F7.InstrumentType.GAUGE:
      case F7.InstrumentType.HISTOGRAM:
      case F7.InstrumentType.OBSERVABLE_GAUGE:
        return F7.AggregationTemporality.DELTA;
      case F7.InstrumentType.UP_DOWN_COUNTER:
      case F7.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER:
        return F7.AggregationTemporality.CUMULATIVE
    }
  };
  iR0.DeltaTemporalitySelector = U26;
  var N26 = (A) => {
    switch (A) {
      case F7.InstrumentType.COUNTER:
      case F7.InstrumentType.HISTOGRAM:
        return F7.AggregationTemporality.DELTA;
      case F7.InstrumentType.GAUGE:
      case F7.InstrumentType.UP_DOWN_COUNTER:
      case F7.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER:
      case F7.InstrumentType.OBSERVABLE_COUNTER:
      case F7.InstrumentType.OBSERVABLE_GAUGE:
        return F7.AggregationTemporality.CUMULATIVE
    }
  };
  iR0.LowMemoryTemporalitySelector = N26;

  function $26() {
    let A = (H26.getStringFromEnv("OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE") ?? "cumulative").toLowerCase();
    if (A === "cumulative") return iR0.CumulativeTemporalitySelector;
    if (A === "delta") return iR0.DeltaTemporalitySelector;
    if (A === "lowmemory") return iR0.LowMemoryTemporalitySelector;
    return w26.diag.warn(`OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE is set to '${A}', but only 'cumulative' and 'delta' are allowed. Using default ('cumulative') instead.`), iR0.CumulativeTemporalitySelector
  }

  function q26(A) {
    if (A != null) {
      if (A === cR0.AggregationTemporalityPreference.DELTA) return iR0.DeltaTemporalitySelector;
      else if (A === cR0.AggregationTemporalityPreference.LOWMEMORY) return iR0.LowMemoryTemporalitySelector;
      return iR0.CumulativeTemporalitySelector
    }
    return $26()
  }
  var M26 = Object.freeze({
    type: F7.AggregationType.DEFAULT
  });

  function L26(A) {
    return A?.aggregationPreference ?? (() => M26)
  }
  class lR0 extends z26.OTLPExporterBase {
    _aggregationTemporalitySelector;
    _aggregationSelector;
    constructor(A, B) {
      super(A);
      this._aggregationSelector = L26(B), this._aggregationTemporalitySelector = q26(B?.temporalityPreference)
    }
    selectAggregation(A) {
      return this._aggregationSelector(A)
    }
    selectAggregationTemporality(A) {
      return this._aggregationTemporalitySelector(A)
    }
  }
  iR0.OTLPMetricExporterBase = lR0
})
// @from(Start 4279975, End 4280612)
Lg1 = z((nU8, aR0) => {
  aR0.exports = R26;

  function R26(A, B) {
    var Q = new Array(arguments.length - 1),
      I = 0,
      G = 2,
      Z = !0;
    while (G < arguments.length) Q[I++] = arguments[G++];
    return new Promise(function D(Y, W) {
      Q[I] = function J(F) {
        if (Z)
          if (Z = !1, F) W(F);
          else {
            var X = new Array(arguments.length - 1),
              V = 0;
            while (V < X.length) X[V++] = arguments[V];
            Y.apply(null, X)
          }
      };
      try {
        A.apply(B || null, Q)
      } catch (J) {
        if (Z) Z = !1, W(J)
      }
    })
  }
})
// @from(Start 4280618, End 4282621)
tR0 = z((oR0) => {
  var SZ1 = oR0;
  SZ1.length = function A(B) {
    var Q = B.length;
    if (!Q) return 0;
    var I = 0;
    while (--Q % 4 > 1 && B.charAt(Q) === "=") ++I;
    return Math.ceil(B.length * 3) / 4 - I
  };
  var mg = new Array(64),
    rR0 = new Array(123);
  for (RX = 0; RX < 64;) rR0[mg[RX] = RX < 26 ? RX + 65 : RX < 52 ? RX + 71 : RX < 62 ? RX - 4 : RX - 59 | 43] = RX++;
  var RX;
  SZ1.encode = function A(B, Q, I) {
    var G = null,
      Z = [],
      D = 0,
      Y = 0,
      W;
    while (Q < I) {
      var J = B[Q++];
      switch (Y) {
        case 0:
          Z[D++] = mg[J >> 2], W = (J & 3) << 4, Y = 1;
          break;
        case 1:
          Z[D++] = mg[W | J >> 4], W = (J & 15) << 2, Y = 2;
          break;
        case 2:
          Z[D++] = mg[W | J >> 6], Z[D++] = mg[J & 63], Y = 0;
          break
      }
      if (D > 8191)(G || (G = [])).push(String.fromCharCode.apply(String, Z)), D = 0
    }
    if (Y) {
      if (Z[D++] = mg[W], Z[D++] = 61, Y === 1) Z[D++] = 61
    }
    if (G) {
      if (D) G.push(String.fromCharCode.apply(String, Z.slice(0, D)));
      return G.join("")
    }
    return String.fromCharCode.apply(String, Z.slice(0, D))
  };
  var sR0 = "invalid encoding";
  SZ1.decode = function A(B, Q, I) {
    var G = I,
      Z = 0,
      D;
    for (var Y = 0; Y < B.length;) {
      var W = B.charCodeAt(Y++);
      if (W === 61 && Z > 1) break;
      if ((W = rR0[W]) === void 0) throw Error(sR0);
      switch (Z) {
        case 0:
          D = W, Z = 1;
          break;
        case 1:
          Q[I++] = D << 2 | (W & 48) >> 4, D = W, Z = 2;
          break;
        case 2:
          Q[I++] = (D & 15) << 4 | (W & 60) >> 2, D = W, Z = 3;
          break;
        case 3:
          Q[I++] = (D & 3) << 6 | W, Z = 0;
          break
      }
    }
    if (Z === 1) throw Error(sR0);
    return I - G
  };
  SZ1.test = function A(B) {
    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(B)
  }
})
// @from(Start 4282627, End 4283457)
AO0 = z((sU8, eR0) => {
  eR0.exports = _Z1;

  function _Z1() {
    this._listeners = {}
  }
  _Z1.prototype.on = function A(B, Q, I) {
    return (this._listeners[B] || (this._listeners[B] = [])).push({
      fn: Q,
      ctx: I || this
    }), this
  };
  _Z1.prototype.off = function A(B, Q) {
    if (B === void 0) this._listeners = {};
    else if (Q === void 0) this._listeners[B] = [];
    else {
      var I = this._listeners[B];
      for (var G = 0; G < I.length;)
        if (I[G].fn === Q) I.splice(G, 1);
        else ++G
    }
    return this
  };
  _Z1.prototype.emit = function A(B) {
    var Q = this._listeners[B];
    if (Q) {
      var I = [],
        G = 1;
      for (; G < arguments.length;) I.push(arguments[G++]);
      for (G = 0; G < Q.length;) Q[G].fn.apply(Q[G++].ctx, I)
    }
    return this
  }
})
// @from(Start 4283463, End 4289580)
YO0 = z((rU8, DO0) => {
  DO0.exports = BO0(BO0);

  function BO0(A) {
    if (typeof Float32Array !== "undefined")(function() {
      var B = new Float32Array([-0]),
        Q = new Uint8Array(B.buffer),
        I = Q[3] === 128;

      function G(W, J, F) {
        B[0] = W, J[F] = Q[0], J[F + 1] = Q[1], J[F + 2] = Q[2], J[F + 3] = Q[3]
      }

      function Z(W, J, F) {
        B[0] = W, J[F] = Q[3], J[F + 1] = Q[2], J[F + 2] = Q[1], J[F + 3] = Q[0]
      }
      A.writeFloatLE = I ? G : Z, A.writeFloatBE = I ? Z : G;

      function D(W, J) {
        return Q[0] = W[J], Q[1] = W[J + 1], Q[2] = W[J + 2], Q[3] = W[J + 3], B[0]
      }

      function Y(W, J) {
        return Q[3] = W[J], Q[2] = W[J + 1], Q[1] = W[J + 2], Q[0] = W[J + 3], B[0]
      }
      A.readFloatLE = I ? D : Y, A.readFloatBE = I ? Y : D
    })();
    else(function() {
      function B(I, G, Z, D) {
        var Y = G < 0 ? 1 : 0;
        if (Y) G = -G;
        if (G === 0) I(1 / G > 0 ? 0 : 2147483648, Z, D);
        else if (isNaN(G)) I(2143289344, Z, D);
        else if (G > 340282346638528860000000000000000000000) I((Y << 31 | 2139095040) >>> 0, Z, D);
        else if (G < 0.000000000000000000000000000000000000011754943508222875) I((Y << 31 | Math.round(G / 0.000000000000000000000000000000000000000000001401298464324817)) >>> 0, Z, D);
        else {
          var W = Math.floor(Math.log(G) / Math.LN2),
            J = Math.round(G * Math.pow(2, -W) * 8388608) & 8388607;
          I((Y << 31 | W + 127 << 23 | J) >>> 0, Z, D)
        }
      }
      A.writeFloatLE = B.bind(null, QO0), A.writeFloatBE = B.bind(null, IO0);

      function Q(I, G, Z) {
        var D = I(G, Z),
          Y = (D >> 31) * 2 + 1,
          W = D >>> 23 & 255,
          J = D & 8388607;
        return W === 255 ? J ? NaN : Y * (1 / 0) : W === 0 ? Y * 0.000000000000000000000000000000000000000000001401298464324817 * J : Y * Math.pow(2, W - 150) * (J + 8388608)
      }
      A.readFloatLE = Q.bind(null, GO0), A.readFloatBE = Q.bind(null, ZO0)
    })();
    if (typeof Float64Array !== "undefined")(function() {
      var B = new Float64Array([-0]),
        Q = new Uint8Array(B.buffer),
        I = Q[7] === 128;

      function G(W, J, F) {
        B[0] = W, J[F] = Q[0], J[F + 1] = Q[1], J[F + 2] = Q[2], J[F + 3] = Q[3], J[F + 4] = Q[4], J[F + 5] = Q[5], J[F + 6] = Q[6], J[F + 7] = Q[7]
      }

      function Z(W, J, F) {
        B[0] = W, J[F] = Q[7], J[F + 1] = Q[6], J[F + 2] = Q[5], J[F + 3] = Q[4], J[F + 4] = Q[3], J[F + 5] = Q[2], J[F + 6] = Q[1], J[F + 7] = Q[0]
      }
      A.writeDoubleLE = I ? G : Z, A.writeDoubleBE = I ? Z : G;

      function D(W, J) {
        return Q[0] = W[J], Q[1] = W[J + 1], Q[2] = W[J + 2], Q[3] = W[J + 3], Q[4] = W[J + 4], Q[5] = W[J + 5], Q[6] = W[J + 6], Q[7] = W[J + 7], B[0]
      }

      function Y(W, J) {
        return Q[7] = W[J], Q[6] = W[J + 1], Q[5] = W[J + 2], Q[4] = W[J + 3], Q[3] = W[J + 4], Q[2] = W[J + 5], Q[1] = W[J + 6], Q[0] = W[J + 7], B[0]
      }
      A.readDoubleLE = I ? D : Y, A.readDoubleBE = I ? Y : D
    })();
    else(function() {
      function B(I, G, Z, D, Y, W) {
        var J = D < 0 ? 1 : 0;
        if (J) D = -D;
        if (D === 0) I(0, Y, W + G), I(1 / D > 0 ? 0 : 2147483648, Y, W + Z);
        else if (isNaN(D)) I(0, Y, W + G), I(2146959360, Y, W + Z);
        else if (D > 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) I(0, Y, W + G), I((J << 31 | 2146435072) >>> 0, Y, W + Z);
        else {
          var F;
          if| F / 4294967296) >>> 0, Y, W + Z);
          else {
            var X = Math.floor(Math.log(D) / Math.LN2);
            if (X === 1024) X = 1023;
            F = D * Math.pow(2, -X), I(F * 4503599627370496 >>> 0, Y, W + G), I((J << 31 | X + 1023 << 20 | F * 1048576 & 1048575) >>> 0, Y, W + Z)
          }
        }
      }
      A.writeDoubleLE = B.bind(null, QO0, 0, 4), A.writeDoubleBE = B.bind(null, IO0, 4, 0);

      function Q(I, G, Z, D, Y) {
        var W = I(D, Y + G),
          J = I(D, Y + Z),
          F = (J >> 31) * 2 + 1,
          X = J >>> 20 & 2047,
          V = 4294967296 * (J & 1048575) + W;
        return X === 2047 ? V ? NaN : F * (1 / 0) : X === 0 ? F * 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005 * V : F * Math.pow(2, X - 1075) * (V + 4503599627370496)
      }
      A.readDoubleLE = Q.bind(null, GO0, 0, 4), A.readDoubleBE = Q.bind(null, ZO0, 4, 0)
    })();
    return A
  }

  function QO0(A, B, Q) {
    B[Q] = A & 255, B[Q + 1] = A >>> 8 & 255, B[Q + 2] = A >>> 16 & 255, B[Q + 3] = A >>> 24
  }

  function IO0(A, B, Q) {
    B[Q] = A >>> 24, B[Q + 1] = A >>> 16 & 255, B[Q + 2] = A >>> 8 & 255, B[Q + 3] = A & 255
  }

  function GO0(A, B) {
    return (A[B] | A[B + 1] << 8 | A[B + 2] << 16 | A[B + 3] << 24) >>> 0
  }

  function ZO0(A, B) {
    return (A[B] << 24 | A[B + 1] << 16 | A[B + 2] << 8 | A[B + 3]) >>> 0
  }
})
// @from(Start 4289586, End 4289843)
Og1 = z((WO0, Rg1) => {
  Rg1.exports = O26;

  function O26(moduleName) {
    try {
      var mod = eval("quire".replace(/^/, "re"))(moduleName);
      if (mod && (mod.length || Object.keys(mod).length)) return mod
    } catch (A) {}
    return null
  }
})
// @from(Start 4289849, End 4291551)
FO0 = z((JO0) => {
  var Tg1 = JO0;
  Tg1.length = function A(B) {
    var Q = 0,
      I = 0;
    for (var G = 0; G < B.length; ++G)
      if (I = B.charCodeAt(G), I < 128) Q += 1;
      else if (I < 2048) Q += 2;
    else if ((I & 64512) === 55296 && (B.charCodeAt(G + 1) & 64512) === 56320) ++G, Q += 4;
    else Q += 3;
    return Q
  };
  Tg1.read = function A(B, Q, I) {
    var G = I - Q;
    if (G < 1) return "";
    var Z = null,
      D = [],
      Y = 0,
      W;
    while (Q < I) {
      if (W = B[Q++], W < 128) D[Y++] = W;
      else if (W > 191 && W < 224) D[Y++] = (W & 31) << 6 | B[Q++] & 63;
      else if (W > 239 && W < 365) W = ((W & 7) << 18 | (B[Q++] & 63) << 12 | (B[Q++] & 63) << 6 | B[Q++] & 63) - 65536, D[Y++] = 55296 + (W >> 10), D[Y++] = 56320 + (W & 1023);
      else D[Y++] = (W & 15) << 12 | (B[Q++] & 63) << 6 | B[Q++] & 63;
      if (Y > 8191)(Z || (Z = [])).push(String.fromCharCode.apply(String, D)), Y = 0
    }
    if (Z) {
      if (Y) Z.push(String.fromCharCode.apply(String, D.slice(0, Y)));
      return Z.join("")
    }
    return String.fromCharCode.apply(String, D.slice(0, Y))
  };
  Tg1.write = function A(B, Q, I) {
    var G = I,
      Z, D;
    for (var Y = 0; Y < B.length; ++Y)
      if (Z = B.charCodeAt(Y), Z < 128) Q[I++] = Z;
      else if (Z < 2048) Q[I++] = Z >> 6 | 192, Q[I++] = Z & 63 | 128;
    else if ((Z & 64512) === 55296 && ((D = B.charCodeAt(Y + 1)) & 64512) === 56320) Z = 65536 + ((Z & 1023) << 10) + (D & 1023), ++Y, Q[I++] = Z >> 18 | 240, Q[I++] = Z >> 12 & 63 | 128, Q[I++] = Z >> 6 & 63 | 128, Q[I++] = Z & 63 | 128;
    else Q[I++] = Z >> 12 | 224, Q[I++] = Z >> 6 & 63 | 128, Q[I++] = Z & 63 | 128;
    return I - G
  }
})
// @from(Start 4291557, End 4291901)
VO0 = z((tU8, XO0) => {
  XO0.exports = T26;

  function T26(A, B, Q) {
    var I = Q || 8192,
      G = I >>> 1,
      Z = null,
      D = I;
    return function Y(W) {
      if (W < 1 || W > G) return A(W);
      if (D + W > I) Z = A(I), D = 0;
      var J = B.call(Z, D, D += W);
      if (D & 7) D = (D | 7) + 1;
      return J
    }
  }
})
// @from(Start 4291907, End 4294518)
KO0 = z((eU8, CO0) => {
  CO0.exports = LI;
  var xs = Iw();

  function LI(A, B) {
    this.lo = A >>> 0, this.hi = B >>> 0
  }
  var c_ = LI.zero = new LI(0, 0);
  c_.toNumber = function() {
    return 0
  };
  c_.zzEncode = c_.zzDecode = function() {
    return this
  };
  c_.length = function() {
    return 1
  };
  var P26 = LI.zeroHash = "\x00\x00\x00\x00\x00\x00\x00\x00";
  LI.fromNumber = function A(B) {
    if (B === 0) return c_;
    var Q = B < 0;
    if (Q) B = -B;
    var I = B >>> 0,
      G = (B - I) / 4294967296 >>> 0;
    if (Q) {
      if (G = ~G >>> 0, I = ~I >>> 0, ++I > 4294967295) {
        if (I = 0, ++G > 4294967295) G = 0
      }
    }
    return new LI(I, G)
  };
  LI.from = function A(B) {
    if (typeof B === "number") return LI.fromNumber(B);
    if (xs.isString(B))
      if (xs.Long) B = xs.Long.fromString(B);
      else return LI.fromNumber(parseInt(B, 10));
    return B.low || B.high ? new LI(B.low >>> 0, B.high >>> 0) : c_
  };
  LI.prototype.toNumber = function A(B) {
    if (!B && this.hi >>> 31) {
      var Q = ~this.lo + 1 >>> 0,
        I = ~this.hi >>> 0;
      if (!Q) I = I + 1 >>> 0;
      return -(Q + I * 4294967296)
    }
    return this.lo + this.hi * 4294967296
  };
  LI.prototype.toLong = function A(B) {
    return xs.Long ? new xs.Long(this.lo | 0, this.hi | 0, Boolean(B)) : {
      low: this.lo | 0,
      high: this.hi | 0,
      unsigned: Boolean(B)
    }
  };
  var GR = String.prototype.charCodeAt;
  LI.fromHash = function A(B) {
    if (B === P26) return c_;
    return new LI((GR.call(B, 0) | GR.call(B, 1) << 8 | GR.call(B, 2) << 16 | GR.call(B, 3) << 24) >>> 0, (GR.call(B, 4) | GR.call(B, 5) << 8 | GR.call(B, 6) << 16 | GR.call(B, 7) << 24) >>> 0)
  };
  LI.prototype.toHash = function A() {
    return String.fromCharCode(this.lo & 255, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, this.hi & 255, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24)
  };
  LI.prototype.zzEncode = function A() {
    var B = this.hi >> 31;
    return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ B) >>> 0, this.lo = (this.lo << 1 ^ B) >>> 0, this
  };
  LI.prototype.zzDecode = function A() {
    var B = -(this.lo & 1);
    return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ B) >>> 0, this.hi = (this.hi >>> 1 ^ B) >>> 0, this
  };
  LI.prototype.length = function A() {
    var B = this.lo,
      Q = (this.lo >>> 28 | this.hi << 4) >>> 0,
      I = this.hi >>> 24;
    return I === 0 ? Q === 0 ? B < 16384 ? B < 128 ? 1 : 2 : B < 2097152 ? 3 : 4 : Q < 16384 ? Q < 128 ? 5 : 6 : Q < 2097152 ? 7 : 8 : I < 128 ? 9 : 10
  }
})
// @from(Start 4294524, End 4298822)
Iw = z((Pg1) => {
  var z9 = Pg1;
  z9.asPromise = Lg1();
  z9.base64 = tR0();
  z9.EventEmitter = AO0();
  z9.float = YO0();
  z9.inquire = Og1();
  z9.utf8 = FO0();
  z9.pool = VO0();
  z9.LongBits = KO0();
  z9.isNode = Boolean(typeof global !== "undefined" && global && global.process && global.process.versions && global.process.versions.node);
  z9.global = z9.isNode && global || typeof window !== "undefined" && window || typeof self !== "undefined" && self || Pg1;
  z9.emptyArray = Object.freeze ? Object.freeze([]) : [];
  z9.emptyObject = Object.freeze ? Object.freeze({}) : {};
  z9.isInteger = Number.isInteger || function A(B) {
    return typeof B === "number" && isFinite(B) && Math.floor(B) === B
  };
  z9.isString = function A(B) {
    return typeof B === "string" || B instanceof String
  };
  z9.isObject = function A(B) {
    return B && typeof B === "object"
  };
  z9.isset = z9.isSet = function A(B, Q) {
    var I = B[Q];
    if (I != null && B.hasOwnProperty(Q)) return typeof I !== "object" || (Array.isArray(I) ? I.length : Object.keys(I).length) > 0;
    return !1
  };
  z9.Buffer = function() {
    try {
      var A = z9.inquire("buffer").Buffer;
      return A.prototype.utf8Write ? A : null
    } catch (B) {
      return null
    }
  }();
  z9._Buffer_from = null;
  z9._Buffer_allocUnsafe = null;
  z9.newBuffer = function A(B) {
    return typeof B === "number" ? z9.Buffer ? z9._Buffer_allocUnsafe(B) : new z9.Array(B) : z9.Buffer ? z9._Buffer_from(B) : typeof Uint8Array === "undefined" ? B : new Uint8Array(B)
  };
  z9.Array = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
  z9.Long = z9.global.dcodeIO && z9.global.dcodeIO.Long || z9.global.Long || z9.inquire("long");
  z9.key2Re = /^true|false|0|1$/;
  z9.key32Re = /^-?(?:0|[1-9][0-9]*)$/;
  z9.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;
  z9.longToHash = function A(B) {
    return B ? z9.LongBits.from(B).toHash() : z9.LongBits.zeroHash
  };
  z9.longFromHash = function A(B, Q) {
    var I = z9.LongBits.fromHash(B);
    if (z9.Long) return z9.Long.fromBits(I.lo, I.hi, Q);
    return I.toNumber(Boolean(Q))
  };

  function HO0(A, B, Q) {
    for (var I = Object.keys(B), G = 0; G < I.length; ++G)
      if (A[I[G]] === void 0 || !Q) A[I[G]] = B[I[G]];
    return A
  }
  z9.merge = HO0;
  z9.lcFirst = function A(B) {
    return B.charAt(0).toLowerCase() + B.substring(1)
  };

  function zO0(A) {
    function B(Q, I) {
      if (!(this instanceof B)) return new B(Q, I);
      if (Object.defineProperty(this, "message", {
          get: function() {
            return Q
          }
        }), Error.captureStackTrace) Error.captureStackTrace(this, B);
      else Object.defineProperty(this, "stack", {
        value: new Error().stack || ""
      });
      if (I) HO0(this, I)
    }
    return B.prototype = Object.create(Error.prototype, {
      constructor: {
        value: B,
        writable: !0,
        enumerable: !1,
        configurable: !0
      },
      name: {
        get: function Q() {
          return A
        },
        set: void 0,
        enumerable: !1,
        configurable: !0
      },
      toString: {
        value: function Q() {
          return this.name + ": " + this.message
        },
        writable: !0,
        enumerable: !1,
        configurable: !0
      }
    }), B
  }
  z9.newError = zO0;
  z9.ProtocolError = zO0("ProtocolError");
  z9.oneOfGetter = function A(B) {
    var Q = {};
    for (var I = 0; I < B.length; ++I) Q[B[I]] = 1;
    return function() {
      for (var G = Object.keys(this), Z = G.length - 1; Z > -1; --Z)
        if (Q[G[Z]] === 1 && this[G[Z]] !== void 0 && this[G[Z]] !== null) return G[Z]
    }
  };
  z9.oneOfSetter = function A(B) {
    return function(Q) {
      for (var I = 0; I < B.length; ++I)
        if (B[I] !== Q) delete this[B[I]]
    }
  };
  z9.toJSONOptions = {
    longs: String,
    enums: String,
    bytes: String,
    json: !0
  };
  z9._configure = function() {
    var A = z9.Buffer;
    if (!A) {
      z9._Buffer_from = z9._Buffer_allocUnsafe = null;
      return
    }
    z9._Buffer_from = A.from !== Uint8Array.from && A.from || function B(Q, I) {
      return new A(Q, I)
    }, z9._Buffer_allocUnsafe = A.allocUnsafe || function B(Q) {
      return new A(Q)
    }
  }
})
// @from(Start 4298828, End 4303187)
yZ1 = z((BN8, NO0) => {
  NO0.exports = V5;
  var OX = Iw(),
    Sg1, jZ1 = OX.LongBits,
    wO0 = OX.base64,
    EO0 = OX.utf8;

  function fs(A, B, Q) {
    this.fn = A, this.len = B, this.next = void 0, this.val = Q
  }

  function jg1() {}

  function S26(A) {
    this.head = A.head, this.tail = A.tail, this.len = A.len, this.next = A.states
  }

  function V5() {
    this.len = 0, this.head = new fs(jg1, 0, 0), this.tail = this.head, this.states = null
  }
  var UO0 = function A() {
    return OX.Buffer ? function B() {
      return (V5.create = function Q() {
        return new Sg1
      })()
    } : function B() {
      return new V5
    }
  };
  V5.create = UO0();
  V5.alloc = function A(B) {
    return new OX.Array(B)
  };
  if (OX.Array !== Array) V5.alloc = OX.pool(V5.alloc, OX.Array.prototype.subarray);
  V5.prototype._push = function A(B, Q, I) {
    return this.tail = this.tail.next = new fs(B, Q, I), this.len += Q, this
  };

  function yg1(A, B, Q) {
    B[Q] = A & 255
  }

  function _26(A, B, Q) {
    while (A > 127) B[Q++] = A & 127 | 128, A >>>= 7;
    B[Q] = A
  }

  function kg1(A, B) {
    this.len = A, this.next = void 0, this.val = B
  }
  kg1.prototype = Object.create(fs.prototype);
  kg1.prototype.fn = _26;
  V5.prototype.uint32 = function A(B) {
    return this.len += (this.tail = this.tail.next = new kg1((B = B >>> 0) < 128 ? 1 : B < 16384 ? 2 : B < 2097152 ? 3 : B < 268435456 ? 4 : 5, B)).len, this
  };
  V5.prototype.int32 = function A(B) {
    return B < 0 ? this._push(xg1, 10, jZ1.fromNumber(B)) : this.uint32(B)
  };
  V5.prototype.sint32 = function A(B) {
    return this.uint32((B << 1 ^ B >> 31) >>> 0)
  };

  function xg1(A, B, Q) {
    while (A.hi) B[Q++] = A.lo & 127 | 128, A.lo = (A.lo >>> 7 | A.hi << 25) >>> 0, A.hi >>>= 7;
    while (A.lo > 127) B[Q++] = A.lo & 127 | 128, A.lo = A.lo >>> 7;
    B[Q++] = A.lo
  }
  V5.prototype.uint64 = function A(B) {
    var Q = jZ1.from(B);
    return this._push(xg1, Q.length(), Q)
  };
  V5.prototype.int64 = V5.prototype.uint64;
  V5.prototype.sint64 = function A(B) {
    var Q = jZ1.from(B).zzEncode();
    return this._push(xg1, Q.length(), Q)
  };
  V5.prototype.bool = function A(B) {
    return this._push(yg1, 1, B ? 1 : 0)
  };

  function _g1(A, B, Q) {
    B[Q] = A & 255, B[Q + 1] = A >>> 8 & 255, B[Q + 2] = A >>> 16 & 255, B[Q + 3] = A >>> 24
  }
  V5.prototype.fixed32 = function A(B) {
    return this._push(_g1, 4, B >>> 0)
  };
  V5.prototype.sfixed32 = V5.prototype.fixed32;
  V5.prototype.fixed64 = function A(B) {
    var Q = jZ1.from(B);
    return this._push(_g1, 4, Q.lo)._push(_g1, 4, Q.hi)
  };
  V5.prototype.sfixed64 = V5.prototype.fixed64;
  V5.prototype.float = function A(B) {
    return this._push(OX.float.writeFloatLE, 4, B)
  };
  V5.prototype.double = function A(B) {
    return this._push(OX.float.writeDoubleLE, 8, B)
  };
  var j26 = OX.Array.prototype.set ? function A(B, Q, I) {
    Q.set(B, I)
  } : function A(B, Q, I) {
    for (var G = 0; G < B.length; ++G) Q[I + G] = B[G]
  };
  V5.prototype.bytes = function A(B) {
    var Q = B.length >>> 0;
    if (!Q) return this._push(yg1, 1, 0);
    if (OX.isString(B)) {
      var I = V5.alloc(Q = wO0.length(B));
      wO0.decode(B, I, 0), B = I
    }
    return this.uint32(Q)._push(j26, Q, B)
  };
  V5.prototype.string = function A(B) {
    var Q = EO0.length(B);
    return Q ? this.uint32(Q)._push(EO0.write, Q, B) : this._push(yg1, 1, 0)
  };
  V5.prototype.fork = function A() {
    return this.states = new S26(this), this.head = this.tail = new fs(jg1, 0, 0), this.len = 0, this
  };
  V5.prototype.reset = function A() {
    if (this.states) this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next;
    else this.head = this.tail = new fs(jg1, 0, 0), this.len = 0;
    return this
  };
  V5.prototype.ldelim = function A() {
    var B = this.head,
      Q = this.tail,
      I = this.len;
    if (this.reset().uint32(I), I) this.tail.next = B.next, this.tail = Q, this.len += I;
    return this
  };
  V5.prototype.finish = function A() {
    var B = this.head.next,
      Q = this.constructor.alloc(this.len),
      I = 0;
    while (B) B.fn(B.val, Q, I), I += B.len, B = B.next;
    return Q
  };
  V5._configure = function(A) {
    Sg1 = A, V5.create = UO0(), Sg1._configure()
  }
})
// @from(Start 4303193, End 4304290)
MO0 = z((QN8, qO0) => {
  qO0.exports = Gw;
  var $O0 = yZ1();
  (Gw.prototype = Object.create($O0.prototype)).constructor = Gw;
  var ZR = Iw();

  function Gw() {
    $O0.call(this)
  }
  Gw._configure = function() {
    Gw.alloc = ZR._Buffer_allocUnsafe, Gw.writeBytesBuffer = ZR.Buffer && ZR.Buffer.prototype instanceof Uint8Array && ZR.Buffer.prototype.set.name === "set" ? function A(B, Q, I) {
      Q.set(B, I)
    } : function A(B, Q, I) {
      if (B.copy) B.copy(Q, I, 0, B.length);
      else
        for (var G = 0; G < B.length;) Q[I++] = B[G++]
    }
  };
  Gw.prototype.bytes = function A(B) {
    if (ZR.isString(B)) B = ZR._Buffer_from(B, "base64");
    var Q = B.length >>> 0;
    if (this.uint32(Q), Q) this._push(Gw.writeBytesBuffer, Q, B);
    return this
  };

  function y26(A, B, Q) {
    if (A.length < 40) ZR.utf8.write(A, B, Q);
    else if (B.utf8Write) B.utf8Write(A, Q);
    else B.write(A, Q)
  }
  Gw.prototype.string = function A(B) {
    var Q = ZR.Buffer.byteLength(B);
    if (this.uint32(Q), Q) this._push(y26, Q, B);
    return this
  };
  Gw._configure()
})
// @from(Start 4304296, End 4309921)
xZ1 = z((IN8, PO0) => {
  PO0.exports = PQ;
  var mC = Iw(),
    vg1, OO0 = mC.LongBits,
    k26 = mC.utf8;

  function dC(A, B) {
    return RangeError("index out of range: " + A.pos + " + " + (B || 1) + " > " + A.len)
  }

  function PQ(A) {
    this.buf = A, this.pos = 0, this.len = A.length
  }
  var LO0 = typeof Uint8Array !== "undefined" ? function A(B) {
      if (B instanceof Uint8Array || Array.isArray(B)) return new PQ(B);
      throw Error("illegal buffer")
    } : function A(B) {
      if (Array.isArray(B)) return new PQ(B);
      throw Error("illegal buffer")
    },
    TO0 = function A() {
      return mC.Buffer ? function B(Q) {
        return (PQ.create = function I(G) {
          return mC.Buffer.isBuffer(G) ? new vg1(G) : LO0(G)
        })(Q)
      } : LO0
    };
  PQ.create = TO0();
  PQ.prototype._slice = mC.Array.prototype.subarray || mC.Array.prototype.slice;
  PQ.prototype.uint32 = function A() {
    var B = 4294967295;
    return function Q() {
      if (B = (this.buf[this.pos] & 127) >>> 0, this.buf[this.pos++] < 128) return B;
      if (B = (B | (this.buf[this.pos] & 127) << 7) >>> 0, this.buf[this.pos++] < 128) return B;
      if (B = (B | (this.buf[this.pos] & 127) << 14) >>> 0, this.buf[this.pos++] < 128) return B;
      if (B = (B | (this.buf[this.pos] & 127) << 21) >>> 0, this.buf[this.pos++] < 128) return B;
      if (B = (B | (this.buf[this.pos] & 15) << 28) >>> 0, this.buf[this.pos++] < 128) return B;
      if ((this.pos += 5) > this.len) throw this.pos = this.len, dC(this, 10);
      return B
    }
  }();
  PQ.prototype.int32 = function A() {
    return this.uint32() | 0
  };
  PQ.prototype.sint32 = function A() {
    var B = this.uint32();
    return B >>> 1 ^ -(B & 1) | 0
  };

  function fg1() {
    var A = new OO0(0, 0),
      B = 0;
    if (this.len - this.pos > 4) {
      for (; B < 4; ++B)
        if (A.lo = (A.lo | (this.buf[this.pos] & 127) << B * 7) >>> 0, this.buf[this.pos++] < 128) return A;
      if (A.lo = (A.lo | (this.buf[this.pos] & 127) << 28) >>> 0, A.hi = (A.hi | (this.buf[this.pos] & 127) >> 4) >>> 0, this.buf[this.pos++] < 128) return A;
      B = 0
    } else {
      for (; B < 3; ++B) {
        if (this.pos >= this.len) throw dC(this);
        if (A.lo = (A.lo | (this.buf[this.pos] & 127) << B * 7) >>> 0, this.buf[this.pos++] < 128) return A
      }
      return A.lo = (A.lo | (this.buf[this.pos++] & 127) << B * 7) >>> 0, A
    }
    if (this.len - this.pos > 4) {
      for (; B < 5; ++B)
        if (A.hi = (A.hi | (this.buf[this.pos] & 127) << B * 7 + 3) >>> 0, this.buf[this.pos++] < 128) return A
    } else
      for (; B < 5; ++B) {
        if (this.pos >= this.len) throw dC(this);
        if (A.hi = (A.hi | (this.buf[this.pos] & 127) << B * 7 + 3) >>> 0, this.buf[this.pos++] < 128) return A
      }
    throw Error("invalid varint encoding")
  }
  PQ.prototype.bool = function A() {
    return this.uint32() !== 0
  };

  function kZ1(A, B) {
    return (A[B - 4] | A[B - 3] << 8 | A[B - 2] << 16 | A[B - 1] << 24) >>> 0
  }
  PQ.prototype.fixed32 = function A() {
    if (this.pos + 4 > this.len) throw dC(this, 4);
    return kZ1(this.buf, this.pos += 4)
  };
  PQ.prototype.sfixed32 = function A() {
    if (this.pos + 4 > this.len) throw dC(this, 4);
    return kZ1(this.buf, this.pos += 4) | 0
  };

  function RO0() {
    if (this.pos + 8 > this.len) throw dC(this, 8);
    return new OO0(kZ1(this.buf, this.pos += 4), kZ1(this.buf, this.pos += 4))
  }
  PQ.prototype.float = function A() {
    if (this.pos + 4 > this.len) throw dC(this, 4);
    var B = mC.float.readFloatLE(this.buf, this.pos);
    return this.pos += 4, B
  };
  PQ.prototype.double = function A() {
    if (this.pos + 8 > this.len) throw dC(this, 4);
    var B = mC.float.readDoubleLE(this.buf, this.pos);
    return this.pos += 8, B
  };
  PQ.prototype.bytes = function A() {
    var B = this.uint32(),
      Q = this.pos,
      I = this.pos + B;
    if (I > this.len) throw dC(this, B);
    if (this.pos += B, Array.isArray(this.buf)) return this.buf.slice(Q, I);
    if (Q === I) {
      var G = mC.Buffer;
      return G ? G.alloc(0) : new this.buf.constructor(0)
    }
    return this._slice.call(this.buf, Q, I)
  };
  PQ.prototype.string = function A() {
    var B = this.bytes();
    return k26.read(B, 0, B.length)
  };
  PQ.prototype.skip = function A(B) {
    if (typeof B === "number") {
      if (this.pos + B > this.len) throw dC(this, B);
      this.pos += B
    } else
      do
        if (this.pos >= this.len) throw dC(this); while (this.buf[this.pos++] & 128);
    return this
  };
  PQ.prototype.skipType = function(A) {
    switch (A) {
      case 0:
        this.skip();
        break;
      case 1:
        this.skip(8);
        break;
      case 2:
        this.skip(this.uint32());
        break;
      case 3:
        while ((A = this.uint32() & 7) !== 4) this.skipType(A);
        break;
      case 5:
        this.skip(4);
        break;
      default:
        throw Error("invalid wire type " + A + " at offset " + this.pos)
    }
    return this
  };
  PQ._configure = function(A) {
    vg1 = A, PQ.create = TO0(), vg1._configure();
    var B = mC.Long ? "toLong" : "toNumber";
    mC.merge(PQ.prototype, {
      int64: function Q() {
        return fg1.call(this)[B](!1)
      },
      uint64: function Q() {
        return fg1.call(this)[B](!0)
      },
      sint64: function Q() {
        return fg1.call(this).zzDecode()[B](!1)
      },
      fixed64: function Q() {
        return RO0.call(this)[B](!0)
      },
      sfixed64: function Q() {
        return RO0.call(this)[B](!1)
      }
    })
  }
})
// @from(Start 4309927, End 4310506)
yO0 = z((GN8, jO0) => {
  jO0.exports = l_;
  var _O0 = xZ1();
  (l_.prototype = Object.create(_O0.prototype)).constructor = l_;
  var SO0 = Iw();

  function l_(A) {
    _O0.call(this, A)
  }
  l_._configure = function() {
    if (SO0.Buffer) l_.prototype._slice = SO0.Buffer.prototype.slice
  };
  l_.prototype.string = function A() {
    var B = this.uint32();
    return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + B, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + B, this.len))
  };
  l_._configure()
})
// @from(Start 4310512, End 4311979)
xO0 = z((ZN8, kO0) => {
  kO0.exports = vs;
  var bg1 = Iw();
  (vs.prototype = Object.create(bg1.EventEmitter.prototype)).constructor = vs;

  function vs(A, B, Q) {
    if (typeof A !== "function") throw TypeError("rpcImpl must be a function");
    bg1.EventEmitter.call(this), this.rpcImpl = A, this.requestDelimited = Boolean(B), this.responseDelimited = Boolean(Q)
  }
  vs.prototype.rpcCall = function A(B, Q, I, G, Z) {
    if (!G) throw TypeError("request must be specified");
    var D = this;
    if (!Z) return bg1.asPromise(A, D, B, Q, I, G);
    if (!D.rpcImpl) {
      setTimeout(function() {
        Z(Error("already ended"))
      }, 0);
      return
    }
    try {
      return D.rpcImpl(B, Q[D.requestDelimited ? "encodeDelimited" : "encode"](G).finish(), function Y(W, J) {
        if (W) return D.emit("error", W, B), Z(W);
        if (J === null) {
          D.end(!0);
          return
        }
        if (!(J instanceof I)) try {
          J = I[D.responseDelimited ? "decodeDelimited" : "decode"](J)
        } catch (F) {
          return D.emit("error", F, B), Z(F)
        }
        return D.emit("data", J, B), Z(null, J)
      })
    } catch (Y) {
      D.emit("error", Y, B), setTimeout(function() {
        Z(Y)
      }, 0);
      return
    }
  };
  vs.prototype.end = function A(B) {
    if (this.rpcImpl) {
      if (!B) this.rpcImpl(null, null, null);
      this.rpcImpl = null, this.emit("end").off()
    }
    return this
  }
})
// @from(Start 4311985, End 4312045)
gg1 = z((fO0) => {
  var x26 = fO0;
  x26.Service = xO0()
})
// @from(Start 4312051, End 4312096)
hg1 = z((YN8, vO0) => {
  vO0.exports = {}
})
// @from(Start 4312102, End 4312472)
mg1 = z((gO0) => {
  var dY = gO0;
  dY.build = "minimal";
  dY.Writer = yZ1();
  dY.BufferWriter = MO0();
  dY.Reader = xZ1();
  dY.BufferReader = yO0();
  dY.util = Iw();
  dY.rpc = gg1();
  dY.roots = hg1();
  dY.configure = bO0;

  function bO0() {
    dY.util._configure(), dY.Writer._configure(dY.BufferWriter), dY.Reader._configure(dY.BufferReader)
  }
  bO0()
})
// @from(Start 4312478, End 4610173)
fZ1 = z((hO0, mO0) => {
  Object.defineProperty(hO0, "__esModule", {
    value: !0
  });
  var b9 = mg1(),
    LA = b9.Reader,
    p4 = b9.Writer,
    J1 = b9.util,
    G1 = b9.roots.default || (b9.roots.default = {});
  G1.opentelemetry = function() {
    var A = {};
    return A.proto = function() {
      var B = {};
      return B.common = function() {
        var Q = {};
        return Q.v1 = function() {
          var I = {};
          return I.AnyValue = function() {
            function G(D) {
              if (D) {
                for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                  if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
              }
            }
            G.prototype.stringValue = null, G.prototype.boolValue = null, G.prototype.intValue = null, G.prototype.doubleValue = null, G.prototype.arrayValue = null, G.prototype.kvlistValue = null, G.prototype.bytesValue = null;
            var Z;
            return Object.defineProperty(G.prototype, "value", {
              get: J1.oneOfGetter(Z = ["stringValue", "boolValue", "intValue", "doubleValue", "arrayValue", "kvlistValue", "bytesValue"]),
              set: J1.oneOfSetter(Z)
            }), G.create = function D(Y) {
              return new G(Y)
            }, G.encode = function D(Y, W) {
              if (!W) W = p4.create();
              if (Y.stringValue != null && Object.hasOwnProperty.call(Y, "stringValue")) W.uint32(10).string(Y.stringValue);
              if (Y.boolValue != null && Object.hasOwnProperty.call(Y, "boolValue")) W.uint32(16).bool(Y.boolValue);
              if (Y.intValue != null && Object.hasOwnProperty.call(Y, "intValue")) W.uint32(24).int64(Y.intValue);
              if (Y.doubleValue != null && Object.hasOwnProperty.call(Y, "doubleValue")) W.uint32(33).double(Y.doubleValue);
              if (Y.arrayValue != null && Object.hasOwnProperty.call(Y, "arrayValue")) G1.opentelemetry.proto.common.v1.ArrayValue.encode(Y.arrayValue, W.uint32(42).fork()).ldelim();
              if (Y.kvlistValue != null && Object.hasOwnProperty.call(Y, "kvlistValue")) G1.opentelemetry.proto.common.v1.KeyValueList.encode(Y.kvlistValue, W.uint32(50).fork()).ldelim();
              if (Y.bytesValue != null && Object.hasOwnProperty.call(Y, "bytesValue")) W.uint32(58).bytes(Y.bytesValue);
              return W
            }, G.encodeDelimited = function D(Y, W) {
              return this.encode(Y, W).ldelim()
            }, G.decode = function D(Y, W) {
              if (!(Y instanceof LA)) Y = LA.create(Y);
              var J = W === void 0 ? Y.len : Y.pos + W,
                F = new G1.opentelemetry.proto.common.v1.AnyValue;
              while (Y.pos < J) {
                var X = Y.uint32();
                switch (X >>> 3) {
                  case 1: {
                    F.stringValue = Y.string();
                    break
                  }
                  case 2: {
                    F.boolValue = Y.bool();
                    break
                  }
                  case 3: {
                    F.intValue = Y.int64();
                    break
                  }
                  case 4: {
                    F.doubleValue = Y.double();
                    break
                  }
                  case 5: {
                    F.arrayValue = G1.opentelemetry.proto.common.v1.ArrayValue.decode(Y, Y.uint32());
                    break
                  }
                  case 6: {
                    F.kvlistValue = G1.opentelemetry.proto.common.v1.KeyValueList.decode(Y, Y.uint32());
                    break
                  }
                  case 7: {
                    F.bytesValue = Y.bytes();
                    break
                  }
                  default:
                    Y.skipType(X & 7);
                    break
                }
              }
              return F
            }, G.decodeDelimited = function D(Y) {
              if (!(Y instanceof LA)) Y = new LA(Y);
              return this.decode(Y, Y.uint32())
            }, G.verify = function D(Y) {
              if (typeof Y !== "object" || Y === null) return "object expected";
              var W = {};
              if (Y.stringValue != null && Y.hasOwnProperty("stringValue")) {
                if (W.value = 1, !J1.isString(Y.stringValue)) return "stringValue: string expected"
              }
              if (Y.boolValue != null && Y.hasOwnProperty("boolValue")) {
                if (W.value === 1) return "value: multiple values";
                if (W.value = 1, typeof Y.boolValue !== "boolean") return "boolValue: boolean expected"
              }
              if (Y.intValue != null && Y.hasOwnProperty("intValue")) {
                if (W.value === 1) return "value: multiple values";
                if (W.value = 1, !J1.isInteger(Y.intValue) && !(Y.intValue && J1.isInteger(Y.intValue.low) && J1.isInteger(Y.intValue.high))) return "intValue: integer|Long expected"
              }
              if (Y.doubleValue != null && Y.hasOwnProperty("doubleValue")) {
                if (W.value === 1) return "value: multiple values";
                if (W.value = 1, typeof Y.doubleValue !== "number") return "doubleValue: number expected"
              }
              if (Y.arrayValue != null && Y.hasOwnProperty("arrayValue")) {
                if (W.value === 1) return "value: multiple values";
                W.value = 1;
                {
                  var J = G1.opentelemetry.proto.common.v1.ArrayValue.verify(Y.arrayValue);
                  if (J) return "arrayValue." + J
                }
              }
              if (Y.kvlistValue != null && Y.hasOwnProperty("kvlistValue")) {
                if (W.value === 1) return "value: multiple values";
                W.value = 1;
                {
                  var J = G1.opentelemetry.proto.common.v1.KeyValueList.verify(Y.kvlistValue);
                  if (J) return "kvlistValue." + J
                }
              }
              if (Y.bytesValue != null && Y.hasOwnProperty("bytesValue")) {
                if (W.value === 1) return "value: multiple values";
                if (W.value = 1, !(Y.bytesValue && typeof Y.bytesValue.length === "number" || J1.isString(Y.bytesValue))) return "bytesValue: buffer expected"
              }
              return null
            }, G.fromObject = function D(Y) {
              if (Y instanceof G1.opentelemetry.proto.common.v1.AnyValue) return Y;
              var W = new G1.opentelemetry.proto.common.v1.AnyValue;
              if (Y.stringValue != null) W.stringValue = String(Y.stringValue);
              if (Y.boolValue != null) W.boolValue = Boolean(Y.boolValue);
              if (Y.intValue != null) {
                if (J1.Long)(W.intValue = J1.Long.fromValue(Y.intValue)).unsigned = !1;
                else if (typeof Y.intValue === "string") W.intValue = parseInt(Y.intValue, 10);
                else if (typeof Y.intValue === "number") W.intValue = Y.intValue;
                else if (typeof Y.intValue === "object") W.intValue = new J1.LongBits(Y.intValue.low >>> 0, Y.intValue.high >>> 0).toNumber()
              }
              if (Y.doubleValue != null) W.doubleValue = Number(Y.doubleValue);
              if (Y.arrayValue != null) {
                if (typeof Y.arrayValue !== "object") throw TypeError(".opentelemetry.proto.common.v1.AnyValue.arrayValue: object expected");
                W.arrayValue = G1.opentelemetry.proto.common.v1.ArrayValue.fromObject(Y.arrayValue)
              }
              if (Y.kvlistValue != null) {
                if (typeof Y.kvlistValue !== "object") throw TypeError(".opentelemetry.proto.common.v1.AnyValue.kvlistValue: object expected");
                W.kvlistValue = G1.opentelemetry.proto.common.v1.KeyValueList.fromObject(Y.kvlistValue)
              }
              if (Y.bytesValue != null) {
                if (typeof Y.bytesValue === "string") J1.base64.decode(Y.bytesValue, W.bytesValue = J1.newBuffer(J1.base64.length(Y.bytesValue)), 0);
                else if (Y.bytesValue.length >= 0) W.bytesValue = Y.bytesValue
              }
              return W
            }, G.toObject = function D(Y, W) {
              if (!W) W = {};
              var J = {};
              if (Y.stringValue != null && Y.hasOwnProperty("stringValue")) {
                if (J.stringValue = Y.stringValue, W.oneofs) J.value = "stringValue"
              }
              if (Y.boolValue != null && Y.hasOwnProperty("boolValue")) {
                if (J.boolValue = Y.boolValue, W.oneofs) J.value = "boolValue"
              }
              if (Y.intValue != null && Y.hasOwnProperty("intValue")) {
                if (typeof Y.intValue === "number") J.intValue = W.longs === String ? String(Y.intValue) : Y.intValue;
                else J.intValue = W.longs === String ? J1.Long.prototype.toString.call(Y.intValue) : W.longs === Number ? new J1.LongBits(Y.intValue.low >>> 0, Y.intValue.high >>> 0).toNumber() : Y.intValue;
                if (W.oneofs) J.value = "intValue"
              }
              if (Y.doubleValue != null && Y.hasOwnProperty("doubleValue")) {
                if (J.doubleValue = W.json && !isFinite(Y.doubleValue) ? String(Y.doubleValue) : Y.doubleValue, W.oneofs) J.value = "doubleValue"
              }
              if (Y.arrayValue != null && Y.hasOwnProperty("arrayValue")) {
                if (J.arrayValue = G1.opentelemetry.proto.common.v1.ArrayValue.toObject(Y.arrayValue, W), W.oneofs) J.value = "arrayValue"
              }
              if (Y.kvlistValue != null && Y.hasOwnProperty("kvlistValue")) {
                if (J.kvlistValue = G1.opentelemetry.proto.common.v1.KeyValueList.toObject(Y.kvlistValue, W), W.oneofs) J.value = "kvlistValue"
              }
              if (Y.bytesValue != null && Y.hasOwnProperty("bytesValue")) {
                if (J.bytesValue = W.bytes === String ? J1.base64.encode(Y.bytesValue, 0, Y.bytesValue.length) : W.bytes === Array ? Array.prototype.slice.call(Y.bytesValue) : Y.bytesValue, W.oneofs) J.value = "bytesValue"
              }
              return J
            }, G.prototype.toJSON = function D() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function D(Y) {
              if (Y === void 0) Y = "type.googleapis.com";
              return Y + "/opentelemetry.proto.common.v1.AnyValue"
            }, G
          }(), I.ArrayValue = function() {
            function G(Z) {
              if (this.values = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.values = J1.emptyArray, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.values != null && D.values.length)
                for (var W = 0; W < D.values.length; ++W) G1.opentelemetry.proto.common.v1.AnyValue.encode(D.values[W], Y.uint32(10).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.common.v1.ArrayValue;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.values && J.values.length)) J.values = [];
                    J.values.push(G1.opentelemetry.proto.common.v1.AnyValue.decode(D, D.uint32()));
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.values != null && D.hasOwnProperty("values")) {
                if (!Array.isArray(D.values)) return "values: array expected";
                for (var Y = 0; Y < D.values.length; ++Y) {
                  var W = G1.opentelemetry.proto.common.v1.AnyValue.verify(D.values[Y]);
                  if (W) return "values." + W
                }
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.common.v1.ArrayValue) return D;
              var Y = new G1.opentelemetry.proto.common.v1.ArrayValue;
              if (D.values) {
                if (!Array.isArray(D.values)) throw TypeError(".opentelemetry.proto.common.v1.ArrayValue.values: array expected");
                Y.values = [];
                for (var W = 0; W < D.values.length; ++W) {
                  if (typeof D.values[W] !== "object") throw TypeError(".opentelemetry.proto.common.v1.ArrayValue.values: object expected");
                  Y.values[W] = G1.opentelemetry.proto.common.v1.AnyValue.fromObject(D.values[W])
                }
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.values = [];
              if (D.values && D.values.length) {
                W.values = [];
                for (var J = 0; J < D.values.length; ++J) W.values[J] = G1.opentelemetry.proto.common.v1.AnyValue.toObject(D.values[J], Y)
              }
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.common.v1.ArrayValue"
            }, G
          }(), I.KeyValueList = function() {
            function G(Z) {
              if (this.values = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.values = J1.emptyArray, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.values != null && D.values.length)
                for (var W = 0; W < D.values.length; ++W) G1.opentelemetry.proto.common.v1.KeyValue.encode(D.values[W], Y.uint32(10).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.common.v1.KeyValueList;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.values && J.values.length)) J.values = [];
                    J.values.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(D, D.uint32()));
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.values != null && D.hasOwnProperty("values")) {
                if (!Array.isArray(D.values)) return "values: array expected";
                for (var Y = 0; Y < D.values.length; ++Y) {
                  var W = G1.opentelemetry.proto.common.v1.KeyValue.verify(D.values[Y]);
                  if (W) return "values." + W
                }
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.common.v1.KeyValueList) return D;
              var Y = new G1.opentelemetry.proto.common.v1.KeyValueList;
              if (D.values) {
                if (!Array.isArray(D.values)) throw TypeError(".opentelemetry.proto.common.v1.KeyValueList.values: array expected");
                Y.values = [];
                for (var W = 0; W < D.values.length; ++W) {
                  if (typeof D.values[W] !== "object") throw TypeError(".opentelemetry.proto.common.v1.KeyValueList.values: object expected");
                  Y.values[W] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(D.values[W])
                }
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.values = [];
              if (D.values && D.values.length) {
                W.values = [];
                for (var J = 0; J < D.values.length; ++J) W.values[J] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(D.values[J], Y)
              }
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.common.v1.KeyValueList"
            }, G
          }(), I.KeyValue = function() {
            function G(Z) {
              if (Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.key = null, G.prototype.value = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.key != null && Object.hasOwnProperty.call(D, "key")) Y.uint32(10).string(D.key);
              if (D.value != null && Object.hasOwnProperty.call(D, "value")) G1.opentelemetry.proto.common.v1.AnyValue.encode(D.value, Y.uint32(18).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.common.v1.KeyValue;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.key = D.string();
                    break
                  }
                  case 2: {
                    J.value = G1.opentelemetry.proto.common.v1.AnyValue.decode(D, D.uint32());
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.key != null && D.hasOwnProperty("key")) {
                if (!J1.isString(D.key)) return "key: string expected"
              }
              if (D.value != null && D.hasOwnProperty("value")) {
                var Y = G1.opentelemetry.proto.common.v1.AnyValue.verify(D.value);
                if (Y) return "value." + Y
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.common.v1.KeyValue) return D;
              var Y = new G1.opentelemetry.proto.common.v1.KeyValue;
              if (D.key != null) Y.key = String(D.key);
              if (D.value != null) {
                if (typeof D.value !== "object") throw TypeError(".opentelemetry.proto.common.v1.KeyValue.value: object expected");
                Y.value = G1.opentelemetry.proto.common.v1.AnyValue.fromObject(D.value)
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.defaults) W.key = "", W.value = null;
              if (D.key != null && D.hasOwnProperty("key")) W.key = D.key;
              if (D.value != null && D.hasOwnProperty("value")) W.value = G1.opentelemetry.proto.common.v1.AnyValue.toObject(D.value, Y);
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.common.v1.KeyValue"
            }, G
          }(), I.InstrumentationScope = function() {
            function G(Z) {
              if (this.attributes = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.name = null, G.prototype.version = null, G.prototype.attributes = J1.emptyArray, G.prototype.droppedAttributesCount = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.name != null && Object.hasOwnProperty.call(D, "name")) Y.uint32(10).string(D.name);
              if (D.version != null && Object.hasOwnProperty.call(D, "version")) Y.uint32(18).string(D.version);
              if (D.attributes != null && D.attributes.length)
                for (var W = 0; W < D.attributes.length; ++W) G1.opentelemetry.proto.common.v1.KeyValue.encode(D.attributes[W], Y.uint32(26).fork()).ldelim();
              if (D.droppedAttributesCount != null && Object.hasOwnProperty.call(D, "droppedAttributesCount")) Y.uint32(32).uint32(D.droppedAttributesCount);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.common.v1.InstrumentationScope;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.name = D.string();
                    break
                  }
                  case 2: {
                    J.version = D.string();
                    break
                  }
                  case 3: {
                    if (!(J.attributes && J.attributes.length)) J.attributes = [];
                    J.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(D, D.uint32()));
                    break
                  }
                  case 4: {
                    J.droppedAttributesCount = D.uint32();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.name != null && D.hasOwnProperty("name")) {
                if (!J1.isString(D.name)) return "name: string expected"
              }
              if (D.version != null && D.hasOwnProperty("version")) {
                if (!J1.isString(D.version)) return "version: string expected"
              }
              if (D.attributes != null && D.hasOwnProperty("attributes")) {
                if (!Array.isArray(D.attributes)) return "attributes: array expected";
                for (var Y = 0; Y < D.attributes.length; ++Y) {
                  var W = G1.opentelemetry.proto.common.v1.KeyValue.verify(D.attributes[Y]);
                  if (W) return "attributes." + W
                }
              }
              if (D.droppedAttributesCount != null && D.hasOwnProperty("droppedAttributesCount")) {
                if (!J1.isInteger(D.droppedAttributesCount)) return "droppedAttributesCount: integer expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.common.v1.InstrumentationScope) return D;
              var Y = new G1.opentelemetry.proto.common.v1.InstrumentationScope;
              if (D.name != null) Y.name = String(D.name);
              if (D.version != null) Y.version = String(D.version);
              if (D.attributes) {
                if (!Array.isArray(D.attributes)) throw TypeError(".opentelemetry.proto.common.v1.InstrumentationScope.attributes: array expected");
                Y.attributes = [];
                for (var W = 0; W < D.attributes.length; ++W) {
                  if (typeof D.attributes[W] !== "object") throw TypeError(".opentelemetry.proto.common.v1.InstrumentationScope.attributes: object expected");
                  Y.attributes[W] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(D.attributes[W])
                }
              }
              if (D.droppedAttributesCount != null) Y.droppedAttributesCount = D.droppedAttributesCount >>> 0;
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.attributes = [];
              if (Y.defaults) W.name = "", W.version = "", W.droppedAttributesCount = 0;
              if (D.name != null && D.hasOwnProperty("name")) W.name = D.name;
              if (D.version != null && D.hasOwnProperty("version")) W.version = D.version;
              if (D.attributes && D.attributes.length) {
                W.attributes = [];
                for (var J = 0; J < D.attributes.length; ++J) W.attributes[J] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(D.attributes[J], Y)
              }
              if (D.droppedAttributesCount != null && D.hasOwnProperty("droppedAttributesCount")) W.droppedAttributesCount = D.droppedAttributesCount;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.common.v1.InstrumentationScope"
            }, G
          }(), I
        }(), Q
      }(), B.resource = function() {
        var Q = {};
        return Q.v1 = function() {
          var I = {};
          return I.Resource = function() {
            function G(Z) {
              if (this.attributes = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.attributes = J1.emptyArray, G.prototype.droppedAttributesCount = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.attributes != null && D.attributes.length)
                for (var W = 0; W < D.attributes.length; ++W) G1.opentelemetry.proto.common.v1.KeyValue.encode(D.attributes[W], Y.uint32(10).fork()).ldelim();
              if (D.droppedAttributesCount != null && Object.hasOwnProperty.call(D, "droppedAttributesCount")) Y.uint32(16).uint32(D.droppedAttributesCount);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.resource.v1.Resource;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.attributes && J.attributes.length)) J.attributes = [];
                    J.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(D, D.uint32()));
                    break
                  }
                  case 2: {
                    J.droppedAttributesCount = D.uint32();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.attributes != null && D.hasOwnProperty("attributes")) {
                if (!Array.isArray(D.attributes)) return "attributes: array expected";
                for (var Y = 0; Y < D.attributes.length; ++Y) {
                  var W = G1.opentelemetry.proto.common.v1.KeyValue.verify(D.attributes[Y]);
                  if (W) return "attributes." + W
                }
              }
              if (D.droppedAttributesCount != null && D.hasOwnProperty("droppedAttributesCount")) {
                if (!J1.isInteger(D.droppedAttributesCount)) return "droppedAttributesCount: integer expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.resource.v1.Resource) return D;
              var Y = new G1.opentelemetry.proto.resource.v1.Resource;
              if (D.attributes) {
                if (!Array.isArray(D.attributes)) throw TypeError(".opentelemetry.proto.resource.v1.Resource.attributes: array expected");
                Y.attributes = [];
                for (var W = 0; W < D.attributes.length; ++W) {
                  if (typeof D.attributes[W] !== "object") throw TypeError(".opentelemetry.proto.resource.v1.Resource.attributes: object expected");
                  Y.attributes[W] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(D.attributes[W])
                }
              }
              if (D.droppedAttributesCount != null) Y.droppedAttributesCount = D.droppedAttributesCount >>> 0;
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.attributes = [];
              if (Y.defaults) W.droppedAttributesCount = 0;
              if (D.attributes && D.attributes.length) {
                W.attributes = [];
                for (var J = 0; J < D.attributes.length; ++J) W.attributes[J] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(D.attributes[J], Y)
              }
              if (D.droppedAttributesCount != null && D.hasOwnProperty("droppedAttributesCount")) W.droppedAttributesCount = D.droppedAttributesCount;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.resource.v1.Resource"
            }, G
          }(), I
        }(), Q
      }(), B.trace = function() {
        var Q = {};
        return Q.v1 = function() {
          var I = {};
          return I.TracesData = function() {
            function G(Z) {
              if (this.resourceSpans = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.resourceSpans = J1.emptyArray, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.resourceSpans != null && D.resourceSpans.length)
                for (var W = 0; W < D.resourceSpans.length; ++W) G1.opentelemetry.proto.trace.v1.ResourceSpans.encode(D.resourceSpans[W], Y.uint32(10).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.trace.v1.TracesData;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.resourceSpans && J.resourceSpans.length)) J.resourceSpans = [];
                    J.resourceSpans.push(G1.opentelemetry.proto.trace.v1.ResourceSpans.decode(D, D.uint32()));
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.resourceSpans != null && D.hasOwnProperty("resourceSpans")) {
                if (!Array.isArray(D.resourceSpans)) return "resourceSpans: array expected";
                for (var Y = 0; Y < D.resourceSpans.length; ++Y) {
                  var W = G1.opentelemetry.proto.trace.v1.ResourceSpans.verify(D.resourceSpans[Y]);
                  if (W) return "resourceSpans." + W
                }
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.trace.v1.TracesData) return D;
              var Y = new G1.opentelemetry.proto.trace.v1.TracesData;
              if (D.resourceSpans) {
                if (!Array.isArray(D.resourceSpans)) throw TypeError(".opentelemetry.proto.trace.v1.TracesData.resourceSpans: array expected");
                Y.resourceSpans = [];
                for (var W = 0; W < D.resourceSpans.length; ++W) {
                  if (typeof D.resourceSpans[W] !== "object") throw TypeError(".opentelemetry.proto.trace.v1.TracesData.resourceSpans: object expected");
                  Y.resourceSpans[W] = G1.opentelemetry.proto.trace.v1.ResourceSpans.fromObject(D.resourceSpans[W])
                }
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.resourceSpans = [];
              if (D.resourceSpans && D.resourceSpans.length) {
                W.resourceSpans = [];
                for (var J = 0; J < D.resourceSpans.length; ++J) W.resourceSpans[J] = G1.opentelemetry.proto.trace.v1.ResourceSpans.toObject(D.resourceSpans[J], Y)
              }
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.trace.v1.TracesData"
            }, G
          }(), I.ResourceSpans = function() {
            function G(Z) {
              if (this.scopeSpans = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.resource = null, G.prototype.scopeSpans = J1.emptyArray, G.prototype.schemaUrl = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.resource != null && Object.hasOwnProperty.call(D, "resource")) G1.opentelemetry.proto.resource.v1.Resource.encode(D.resource, Y.uint32(10).fork()).ldelim();
              if (D.scopeSpans != null && D.scopeSpans.length)
                for (var W = 0; W < D.scopeSpans.length; ++W) G1.opentelemetry.proto.trace.v1.ScopeSpans.encode(D.scopeSpans[W], Y.uint32(18).fork()).ldelim();
              if (D.schemaUrl != null && Object.hasOwnProperty.call(D, "schemaUrl")) Y.uint32(26).string(D.schemaUrl);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.trace.v1.ResourceSpans;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.resource = G1.opentelemetry.proto.resource.v1.Resource.decode(D, D.uint32());
                    break
                  }
                  case 2: {
                    if (!(J.scopeSpans && J.scopeSpans.length)) J.scopeSpans = [];
                    J.scopeSpans.push(G1.opentelemetry.proto.trace.v1.ScopeSpans.decode(D, D.uint32()));
                    break
                  }
                  case 3: {
                    J.schemaUrl = D.string();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.resource != null && D.hasOwnProperty("resource")) {
                var Y = G1.opentelemetry.proto.resource.v1.Resource.verify(D.resource);
                if (Y) return "resource." + Y
              }
              if (D.scopeSpans != null && D.hasOwnProperty("scopeSpans")) {
                if (!Array.isArray(D.scopeSpans)) return "scopeSpans: array expected";
                for (var W = 0; W < D.scopeSpans.length; ++W) {
                  var Y = G1.opentelemetry.proto.trace.v1.ScopeSpans.verify(D.scopeSpans[W]);
                  if (Y) return "scopeSpans." + Y
                }
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) {
                if (!J1.isString(D.schemaUrl)) return "schemaUrl: string expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.trace.v1.ResourceSpans) return D;
              var Y = new G1.opentelemetry.proto.trace.v1.ResourceSpans;
              if (D.resource != null) {
                if (typeof D.resource !== "object") throw TypeError(".opentelemetry.proto.trace.v1.ResourceSpans.resource: object expected");
                Y.resource = G1.opentelemetry.proto.resource.v1.Resource.fromObject(D.resource)
              }
              if (D.scopeSpans) {
                if (!Array.isArray(D.scopeSpans)) throw TypeError(".opentelemetry.proto.trace.v1.ResourceSpans.scopeSpans: array expected");
                Y.scopeSpans = [];
                for (var W = 0; W < D.scopeSpans.length; ++W) {
                  if (typeof D.scopeSpans[W] !== "object") throw TypeError(".opentelemetry.proto.trace.v1.ResourceSpans.scopeSpans: object expected");
                  Y.scopeSpans[W] = G1.opentelemetry.proto.trace.v1.ScopeSpans.fromObject(D.scopeSpans[W])
                }
              }
              if (D.schemaUrl != null) Y.schemaUrl = String(D.schemaUrl);
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.scopeSpans = [];
              if (Y.defaults) W.resource = null, W.schemaUrl = "";
              if (D.resource != null && D.hasOwnProperty("resource")) W.resource = G1.opentelemetry.proto.resource.v1.Resource.toObject(D.resource, Y);
              if (D.scopeSpans && D.scopeSpans.length) {
                W.scopeSpans = [];
                for (var J = 0; J < D.scopeSpans.length; ++J) W.scopeSpans[J] = G1.opentelemetry.proto.trace.v1.ScopeSpans.toObject(D.scopeSpans[J], Y)
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) W.schemaUrl = D.schemaUrl;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.trace.v1.ResourceSpans"
            }, G
          }(), I.ScopeSpans = function() {
            function G(Z) {
              if (this.spans = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.scope = null, G.prototype.spans = J1.emptyArray, G.prototype.schemaUrl = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.scope != null && Object.hasOwnProperty.call(D, "scope")) G1.opentelemetry.proto.common.v1.InstrumentationScope.encode(D.scope, Y.uint32(10).fork()).ldelim();
              if (D.spans != null && D.spans.length)
                for (var W = 0; W < D.spans.length; ++W) G1.opentelemetry.proto.trace.v1.Span.encode(D.spans[W], Y.uint32(18).fork()).ldelim();
              if (D.schemaUrl != null && Object.hasOwnProperty.call(D, "schemaUrl")) Y.uint32(26).string(D.schemaUrl);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.trace.v1.ScopeSpans;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.decode(D, D.uint32());
                    break
                  }
                  case 2: {
                    if (!(J.spans && J.spans.length)) J.spans = [];
                    J.spans.push(G1.opentelemetry.proto.trace.v1.Span.decode(D, D.uint32()));
                    break
                  }
                  case 3: {
                    J.schemaUrl = D.string();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.scope != null && D.hasOwnProperty("scope")) {
                var Y = G1.opentelemetry.proto.common.v1.InstrumentationScope.verify(D.scope);
                if (Y) return "scope." + Y
              }
              if (D.spans != null && D.hasOwnProperty("spans")) {
                if (!Array.isArray(D.spans)) return "spans: array expected";
                for (var W = 0; W < D.spans.length; ++W) {
                  var Y = G1.opentelemetry.proto.trace.v1.Span.verify(D.spans[W]);
                  if (Y) return "spans." + Y
                }
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) {
                if (!J1.isString(D.schemaUrl)) return "schemaUrl: string expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.trace.v1.ScopeSpans) return D;
              var Y = new G1.opentelemetry.proto.trace.v1.ScopeSpans;
              if (D.scope != null) {
                if (typeof D.scope !== "object") throw TypeError(".opentelemetry.proto.trace.v1.ScopeSpans.scope: object expected");
                Y.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.fromObject(D.scope)
              }
              if (D.spans) {
                if (!Array.isArray(D.spans)) throw TypeError(".opentelemetry.proto.trace.v1.ScopeSpans.spans: array expected");
                Y.spans = [];
                for (var W = 0; W < D.spans.length; ++W) {
                  if (typeof D.spans[W] !== "object") throw TypeError(".opentelemetry.proto.trace.v1.ScopeSpans.spans: object expected");
                  Y.spans[W] = G1.opentelemetry.proto.trace.v1.Span.fromObject(D.spans[W])
                }
              }
              if (D.schemaUrl != null) Y.schemaUrl = String(D.schemaUrl);
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.spans = [];
              if (Y.defaults) W.scope = null, W.schemaUrl = "";
              if (D.scope != null && D.hasOwnProperty("scope")) W.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.toObject(D.scope, Y);
              if (D.spans && D.spans.length) {
                W.spans = [];
                for (var J = 0; J < D.spans.length; ++J) W.spans[J] = G1.opentelemetry.proto.trace.v1.Span.toObject(D.spans[J], Y)
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) W.schemaUrl = D.schemaUrl;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.trace.v1.ScopeSpans"
            }, G
          }(), I.Span = function() {
            function G(Z) {
              if (this.attributes = [], this.events = [], this.links = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.traceId = null, G.prototype.spanId = null, G.prototype.traceState = null, G.prototype.parentSpanId = null, G.prototype.name = null, G.prototype.kind = null, G.prototype.startTimeUnixNano = null, G.prototype.endTimeUnixNano = null, G.prototype.attributes = J1.emptyArray, G.prototype.droppedAttributesCount = null, G.prototype.events = J1.emptyArray, G.prototype.droppedEventsCount = null, G.prototype.links = J1.emptyArray, G.prototype.droppedLinksCount = null, G.prototype.status = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.traceId != null && Object.hasOwnProperty.call(D, "traceId")) Y.uint32(10).bytes(D.traceId);
              if (D.spanId != null && Object.hasOwnProperty.call(D, "spanId")) Y.uint32(18).bytes(D.spanId);
              if (D.traceState != null && Object.hasOwnProperty.call(D, "traceState")) Y.uint32(26).string(D.traceState);
              if (D.parentSpanId != null && Object.hasOwnProperty.call(D, "parentSpanId")) Y.uint32(34).bytes(D.parentSpanId);
              if (D.name != null && Object.hasOwnProperty.call(D, "name")) Y.uint32(42).string(D.name);
              if (D.kind != null && Object.hasOwnProperty.call(D, "kind")) Y.uint32(48).int32(D.kind);
              if (D.startTimeUnixNano != null && Object.hasOwnProperty.call(D, "startTimeUnixNano")) Y.uint32(57).fixed64(D.startTimeUnixNano);
              if (D.endTimeUnixNano != null && Object.hasOwnProperty.call(D, "endTimeUnixNano")) Y.uint32(65).fixed64(D.endTimeUnixNano);
              if (D.attributes != null && D.attributes.length)
                for (var W = 0; W < D.attributes.length; ++W) G1.opentelemetry.proto.common.v1.KeyValue.encode(D.attributes[W], Y.uint32(74).fork()).ldelim();
              if (D.droppedAttributesCount != null && Object.hasOwnProperty.call(D, "droppedAttributesCount")) Y.uint32(80).uint32(D.droppedAttributesCount);
              if (D.events != null && D.events.length)
                for (var W = 0; W < D.events.length; ++W) G1.opentelemetry.proto.trace.v1.Span.Event.encode(D.events[W], Y.uint32(90).fork()).ldelim();
              if (D.droppedEventsCount != null && Object.hasOwnProperty.call(D, "droppedEventsCount")) Y.uint32(96).uint32(D.droppedEventsCount);
              if (D.links != null && D.links.length)
                for (var W = 0; W < D.links.length; ++W) G1.opentelemetry.proto.trace.v1.Span.Link.encode(D.links[W], Y.uint32(106).fork()).ldelim();
              if (D.droppedLinksCount != null && Object.hasOwnProperty.call(D, "droppedLinksCount")) Y.uint32(112).uint32(D.droppedLinksCount);
              if (D.status != null && Object.hasOwnProperty.call(D, "status")) G1.opentelemetry.proto.trace.v1.Status.encode(D.status, Y.uint32(122).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.trace.v1.Span;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.traceId = D.bytes();
                    break
                  }
                  case 2: {
                    J.spanId = D.bytes();
                    break
                  }
                  case 3: {
                    J.traceState = D.string();
                    break
                  }
                  case 4: {
                    J.parentSpanId = D.bytes();
                    break
                  }
                  case 5: {
                    J.name = D.string();
                    break
                  }
                  case 6: {
                    J.kind = D.int32();
                    break
                  }
                  case 7: {
                    J.startTimeUnixNano = D.fixed64();
                    break
                  }
                  case 8: {
                    J.endTimeUnixNano = D.fixed64();
                    break
                  }
                  case 9: {
                    if (!(J.attributes && J.attributes.length)) J.attributes = [];
                    J.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(D, D.uint32()));
                    break
                  }
                  case 10: {
                    J.droppedAttributesCount = D.uint32();
                    break
                  }
                  case 11: {
                    if (!(J.events && J.events.length)) J.events = [];
                    J.events.push(G1.opentelemetry.proto.trace.v1.Span.Event.decode(D, D.uint32()));
                    break
                  }
                  case 12: {
                    J.droppedEventsCount = D.uint32();
                    break
                  }
                  case 13: {
                    if (!(J.links && J.links.length)) J.links = [];
                    J.links.push(G1.opentelemetry.proto.trace.v1.Span.Link.decode(D, D.uint32()));
                    break
                  }
                  case 14: {
                    J.droppedLinksCount = D.uint32();
                    break
                  }
                  case 15: {
                    J.status = G1.opentelemetry.proto.trace.v1.Status.decode(D, D.uint32());
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.traceId != null && D.hasOwnProperty("traceId")) {
                if (!(D.traceId && typeof D.traceId.length === "number" || J1.isString(D.traceId))) return "traceId: buffer expected"
              }
              if (D.spanId != null && D.hasOwnProperty("spanId")) {
                if (!(D.spanId && typeof D.spanId.length === "number" || J1.isString(D.spanId))) return "spanId: buffer expected"
              }
              if (D.traceState != null && D.hasOwnProperty("traceState")) {
                if (!J1.isString(D.traceState)) return "traceState: string expected"
              }
              if (D.parentSpanId != null && D.hasOwnProperty("parentSpanId")) {
                if (!(D.parentSpanId && typeof D.parentSpanId.length === "number" || J1.isString(D.parentSpanId))) return "parentSpanId: buffer expected"
              }
              if (D.name != null && D.hasOwnProperty("name")) {
                if (!J1.isString(D.name)) return "name: string expected"
              }
              if (D.kind != null && D.hasOwnProperty("kind")) switch (D.kind) {
                default:
                  return "kind: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                  break
              }
              if (D.startTimeUnixNano != null && D.hasOwnProperty("startTimeUnixNano")) {
                if (!J1.isInteger(D.startTimeUnixNano) && !(D.startTimeUnixNano && J1.isInteger(D.startTimeUnixNano.low) && J1.isInteger(D.startTimeUnixNano.high))) return "startTimeUnixNano: integer|Long expected"
              }
              if (D.endTimeUnixNano != null && D.hasOwnProperty("endTimeUnixNano")) {
                if (!J1.isInteger(D.endTimeUnixNano) && !(D.endTimeUnixNano && J1.isInteger(D.endTimeUnixNano.low) && J1.isInteger(D.endTimeUnixNano.high))) return "endTimeUnixNano: integer|Long expected"
              }
              if (D.attributes != null && D.hasOwnProperty("attributes")) {
                if (!Array.isArray(D.attributes)) return "attributes: array expected";
                for (var Y = 0; Y < D.attributes.length; ++Y) {
                  var W = G1.opentelemetry.proto.common.v1.KeyValue.verify(D.attributes[Y]);
                  if (W) return "attributes." + W
                }
              }
              if (D.droppedAttributesCount != null && D.hasOwnProperty("droppedAttributesCount")) {
                if (!J1.isInteger(D.droppedAttributesCount)) return "droppedAttributesCount: integer expected"
              }
              if (D.events != null && D.hasOwnProperty("events")) {
                if (!Array.isArray(D.events)) return "events: array expected";
                for (var Y = 0; Y < D.events.length; ++Y) {
                  var W = G1.opentelemetry.proto.trace.v1.Span.Event.verify(D.events[Y]);
                  if (W) return "events." + W
                }
              }
              if (D.droppedEventsCount != null && D.hasOwnProperty("droppedEventsCount")) {
                if (!J1.isInteger(D.droppedEventsCount)) return "droppedEventsCount: integer expected"
              }
              if (D.links != null && D.hasOwnProperty("links")) {
                if (!Array.isArray(D.links)) return "links: array expected";
                for (var Y = 0; Y < D.links.length; ++Y) {
                  var W = G1.opentelemetry.proto.trace.v1.Span.Link.verify(D.links[Y]);
                  if (W) return "links." + W
                }
              }
              if (D.droppedLinksCount != null && D.hasOwnProperty("droppedLinksCount")) {
                if (!J1.isInteger(D.droppedLinksCount)) return "droppedLinksCount: integer expected"
              }
              if (D.status != null && D.hasOwnProperty("status")) {
                var W = G1.opentelemetry.proto.trace.v1.Status.verify(D.status);
                if (W) return "status." + W
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.trace.v1.Span) return D;
              var Y = new G1.opentelemetry.proto.trace.v1.Span;
              if (D.traceId != null) {
                if (typeof D.traceId === "string") J1.base64.decode(D.traceId, Y.traceId = J1.newBuffer(J1.base64.length(D.traceId)), 0);
                else if (D.traceId.length >= 0) Y.traceId = D.traceId
              }
              if (D.spanId != null) {
                if (typeof D.spanId === "string") J1.base64.decode(D.spanId, Y.spanId = J1.newBuffer(J1.base64.length(D.spanId)), 0);
                else if (D.spanId.length >= 0) Y.spanId = D.spanId
              }
              if (D.traceState != null) Y.traceState = String(D.traceState);
              if (D.parentSpanId != null) {
                if (typeof D.parentSpanId === "string") J1.base64.decode(D.parentSpanId, Y.parentSpanId = J1.newBuffer(J1.base64.length(D.parentSpanId)), 0);
                else if (D.parentSpanId.length >= 0) Y.parentSpanId = D.parentSpanId
              }
              if (D.name != null) Y.name = String(D.name);
              switch (D.kind) {
                default:
                  if (typeof D.kind === "number") {
                    Y.kind = D.kind;
                    break
                  }
                  break;
                case "SPAN_KIND_UNSPECIFIED":
                case 0:
                  Y.kind = 0;
                  break;
                case "SPAN_KIND_INTERNAL":
                case 1:
                  Y.kind = 1;
                  break;
                case "SPAN_KIND_SERVER":
                case 2:
                  Y.kind = 2;
                  break;
                case "SPAN_KIND_CLIENT":
                case 3:
                  Y.kind = 3;
                  break;
                case "SPAN_KIND_PRODUCER":
                case 4:
                  Y.kind = 4;
                  break;
                case "SPAN_KIND_CONSUMER":
                case 5:
                  Y.kind = 5;
                  break
              }
              if (D.startTimeUnixNano != null) {
                if (J1.Long)(Y.startTimeUnixNano = J1.Long.fromValue(D.startTimeUnixNano)).unsigned = !1;
                else if (typeof D.startTimeUnixNano === "string") Y.startTimeUnixNano = parseInt(D.startTimeUnixNano, 10);
                else if (typeof D.startTimeUnixNano === "number") Y.startTimeUnixNano = D.startTimeUnixNano;
                else if (typeof D.startTimeUnixNano === "object") Y.startTimeUnixNano = new J1.LongBits(D.startTimeUnixNano.low >>> 0, D.startTimeUnixNano.high >>> 0).toNumber()
              }
              if (D.endTimeUnixNano != null) {
                if (J1.Long)(Y.endTimeUnixNano = J1.Long.fromValue(D.endTimeUnixNano)).unsigned = !1;
                else if (typeof D.endTimeUnixNano === "string") Y.endTimeUnixNano = parseInt(D.endTimeUnixNano, 10);
                else if (typeof D.endTimeUnixNano === "number") Y.endTimeUnixNano = D.endTimeUnixNano;
                else if (typeof D.endTimeUnixNano === "object") Y.endTimeUnixNano = new J1.LongBits(D.endTimeUnixNano.low >>> 0, D.endTimeUnixNano.high >>> 0).toNumber()
              }
              if (D.attributes) {
                if (!Array.isArray(D.attributes)) throw TypeError(".opentelemetry.proto.trace.v1.Span.attributes: array expected");
                Y.attributes = [];
                for (var W = 0; W < D.attributes.length; ++W) {
                  if (typeof D.attributes[W] !== "object") throw TypeError(".opentelemetry.proto.trace.v1.Span.attributes: object expected");
                  Y.attributes[W] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(D.attributes[W])
                }
              }
              if (D.droppedAttributesCount != null) Y.droppedAttributesCount = D.droppedAttributesCount >>> 0;
              if (D.events) {
                if (!Array.isArray(D.events)) throw TypeError(".opentelemetry.proto.trace.v1.Span.events: array expected");
                Y.events = [];
                for (var W = 0; W < D.events.length; ++W) {
                  if (typeof D.events[W] !== "object") throw TypeError(".opentelemetry.proto.trace.v1.Span.events: object expected");
                  Y.events[W] = G1.opentelemetry.proto.trace.v1.Span.Event.fromObject(D.events[W])
                }
              }
              if (D.droppedEventsCount != null) Y.droppedEventsCount = D.droppedEventsCount >>> 0;
              if (D.links) {
                if (!Array.isArray(D.links)) throw TypeError(".opentelemetry.proto.trace.v1.Span.links: array expected");
                Y.links = [];
                for (var W = 0; W < D.links.length; ++W) {
                  if (typeof D.links[W] !== "object") throw TypeError(".opentelemetry.proto.trace.v1.Span.links: object expected");
                  Y.links[W] = G1.opentelemetry.proto.trace.v1.Span.Link.fromObject(D.links[W])
                }
              }
              if (D.droppedLinksCount != null) Y.droppedLinksCount = D.droppedLinksCount >>> 0;
              if (D.status != null) {
                if (typeof D.status !== "object") throw TypeError(".opentelemetry.proto.trace.v1.Span.status: object expected");
                Y.status = G1.opentelemetry.proto.trace.v1.Status.fromObject(D.status)
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.attributes = [], W.events = [], W.links = [];
              if (Y.defaults) {
                if (Y.bytes === String) W.traceId = "";
                else if (W.traceId = [], Y.bytes !== Array) W.traceId = J1.newBuffer(W.traceId);
                if (Y.bytes === String) W.spanId = "";
                else if (W.spanId = [], Y.bytes !== Array) W.spanId = J1.newBuffer(W.spanId);
                if (W.traceState = "", Y.bytes === String) W.parentSpanId = "";
                else if (W.parentSpanId = [], Y.bytes !== Array) W.parentSpanId = J1.newBuffer(W.parentSpanId);
                if (W.name = "", W.kind = Y.enums === String ? "SPAN_KIND_UNSPECIFIED" : 0, J1.Long) {
                  var J = new J1.Long(0, 0, !1);
                  W.startTimeUnixNano = Y.longs === String ? J.toString() : Y.longs === Number ? J.toNumber() : J
                } else W.startTimeUnixNano = Y.longs === String ? "0" : 0;
                if (J1.Long) {
                  var J = new J1.Long(0, 0, !1);
                  W.endTimeUnixNano = Y.longs === String ? J.toString() : Y.longs === Number ? J.toNumber() : J
                } else W.endTimeUnixNano = Y.longs === String ? "0" : 0;
                W.droppedAttributesCount = 0, W.droppedEventsCount = 0, W.droppedLinksCount = 0, W.status = null
              }
              if (D.traceId != null && D.hasOwnProperty("traceId")) W.traceId = Y.bytes === String ? J1.base64.encode(D.traceId, 0, D.traceId.length) : Y.bytes === Array ? Array.prototype.slice.call(D.traceId) : D.traceId;
              if (D.spanId != null && D.hasOwnProperty("spanId")) W.spanId = Y.bytes === String ? J1.base64.encode(D.spanId, 0, D.spanId.length) : Y.bytes === Array ? Array.prototype.slice.call(D.spanId) : D.spanId;
              if (D.traceState != null && D.hasOwnProperty("traceState")) W.traceState = D.traceState;
              if (D.parentSpanId != null && D.hasOwnProperty("parentSpanId")) W.parentSpanId = Y.bytes === String ? J1.base64.encode(D.parentSpanId, 0, D.parentSpanId.length) : Y.bytes === Array ? Array.prototype.slice.call(D.parentSpanId) : D.parentSpanId;
              if (D.name != null && D.hasOwnProperty("name")) W.name = D.name;
              if (D.kind != null && D.hasOwnProperty("kind")) W.kind = Y.enums === String ? G1.opentelemetry.proto.trace.v1.Span.SpanKind[D.kind] === void 0 ? D.kind : G1.opentelemetry.proto.trace.v1.Span.SpanKind[D.kind] : D.kind;
              if (D.startTimeUnixNano != null && D.hasOwnProperty("startTimeUnixNano"))
                if (typeof D.startTimeUnixNano === "number") W.startTimeUnixNano = Y.longs === String ? String(D.startTimeUnixNano) : D.startTimeUnixNano;
                else W.startTimeUnixNano = Y.longs === String ? J1.Long.prototype.toString.call(D.startTimeUnixNano) : Y.longs === Number ? new J1.LongBits(D.startTimeUnixNano.low >>> 0, D.startTimeUnixNano.high >>> 0).toNumber() : D.startTimeUnixNano;
              if (D.endTimeUnixNano != null && D.hasOwnProperty("endTimeUnixNano"))
                if (typeof D.endTimeUnixNano === "number") W.endTimeUnixNano = Y.longs === String ? String(D.endTimeUnixNano) : D.endTimeUnixNano;
                else W.endTimeUnixNano = Y.longs === String ? J1.Long.prototype.toString.call(D.endTimeUnixNano) : Y.longs === Number ? new J1.LongBits(D.endTimeUnixNano.low >>> 0, D.endTimeUnixNano.high >>> 0).toNumber() : D.endTimeUnixNano;
              if (D.attributes && D.attributes.length) {
                W.attributes = [];
                for (var F = 0; F < D.attributes.length; ++F) W.attributes[F] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(D.attributes[F], Y)
              }
              if (D.droppedAttributesCount != null && D.hasOwnProperty("droppedAttributesCount")) W.droppedAttributesCount = D.droppedAttributesCount;
              if (D.events && D.events.length) {
                W.events = [];
                for (var F = 0; F < D.events.length; ++F) W.events[F] = G1.opentelemetry.proto.trace.v1.Span.Event.toObject(D.events[F], Y)
              }
              if (D.droppedEventsCount != null && D.hasOwnProperty("droppedEventsCount")) W.droppedEventsCount = D.droppedEventsCount;
              if (D.links && D.links.length) {
                W.links = [];
                for (var F = 0; F < D.links.length; ++F) W.links[F] = G1.opentelemetry.proto.trace.v1.Span.Link.toObject(D.links[F], Y)
              }
              if (D.droppedLinksCount != null && D.hasOwnProperty("droppedLinksCount")) W.droppedLinksCount = D.droppedLinksCount;
              if (D.status != null && D.hasOwnProperty("status")) W.status = G1.opentelemetry.proto.trace.v1.Status.toObject(D.status, Y);
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.trace.v1.Span"
            }, G.SpanKind = function() {
              var Z = {},
                D = Object.create(Z);
              return D[Z[0] = "SPAN_KIND_UNSPECIFIED"] = 0, D[Z[1] = "SPAN_KIND_INTERNAL"] = 1, D[Z[2] = "SPAN_KIND_SERVER"] = 2, D[Z[3] = "SPAN_KIND_CLIENT"] = 3, D[Z[4] = "SPAN_KIND_PRODUCER"] = 4, D[Z[5] = "SPAN_KIND_CONSUMER"] = 5, D
            }(), G.Event = function() {
              function Z(D) {
                if (this.attributes = [], D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.timeUnixNano = null, Z.prototype.name = null, Z.prototype.attributes = J1.emptyArray, Z.prototype.droppedAttributesCount = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.timeUnixNano != null && Object.hasOwnProperty.call(Y, "timeUnixNano")) W.uint32(9).fixed64(Y.timeUnixNano);
                if (Y.name != null && Object.hasOwnProperty.call(Y, "name")) W.uint32(18).string(Y.name);
                if (Y.attributes != null && Y.attributes.length)
                  for (var J = 0; J < Y.attributes.length; ++J) G1.opentelemetry.proto.common.v1.KeyValue.encode(Y.attributes[J], W.uint32(26).fork()).ldelim();
                if (Y.droppedAttributesCount != null && Object.hasOwnProperty.call(Y, "droppedAttributesCount")) W.uint32(32).uint32(Y.droppedAttributesCount);
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.trace.v1.Span.Event;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.timeUnixNano = Y.fixed64();
                      break
                    }
                    case 2: {
                      F.name = Y.string();
                      break
                    }
                    case 3: {
                      if (!(F.attributes && F.attributes.length)) F.attributes = [];
                      F.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(Y, Y.uint32()));
                      break
                    }
                    case 4: {
                      F.droppedAttributesCount = Y.uint32();
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano")) {
                  if (!J1.isInteger(Y.timeUnixNano) && !(Y.timeUnixNano && J1.isInteger(Y.timeUnixNano.low) && J1.isInteger(Y.timeUnixNano.high))) return "timeUnixNano: integer|Long expected"
                }
                if (Y.name != null && Y.hasOwnProperty("name")) {
                  if (!J1.isString(Y.name)) return "name: string expected"
                }
                if (Y.attributes != null && Y.hasOwnProperty("attributes")) {
                  if (!Array.isArray(Y.attributes)) return "attributes: array expected";
                  for (var W = 0; W < Y.attributes.length; ++W) {
                    var J = G1.opentelemetry.proto.common.v1.KeyValue.verify(Y.attributes[W]);
                    if (J) return "attributes." + J
                  }
                }
                if (Y.droppedAttributesCount != null && Y.hasOwnProperty("droppedAttributesCount")) {
                  if (!J1.isInteger(Y.droppedAttributesCount)) return "droppedAttributesCount: integer expected"
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.trace.v1.Span.Event) return Y;
                var W = new G1.opentelemetry.proto.trace.v1.Span.Event;
                if (Y.timeUnixNano != null) {
                  if (J1.Long)(W.timeUnixNano = J1.Long.fromValue(Y.timeUnixNano)).unsigned = !1;
                  else if (typeof Y.timeUnixNano === "string") W.timeUnixNano = parseInt(Y.timeUnixNano, 10);
                  else if (typeof Y.timeUnixNano === "number") W.timeUnixNano = Y.timeUnixNano;
                  else if (typeof Y.timeUnixNano === "object") W.timeUnixNano = new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber()
                }
                if (Y.name != null) W.name = String(Y.name);
                if (Y.attributes) {
                  if (!Array.isArray(Y.attributes)) throw TypeError(".opentelemetry.proto.trace.v1.Span.Event.attributes: array expected");
                  W.attributes = [];
                  for (var J = 0; J < Y.attributes.length; ++J) {
                    if (typeof Y.attributes[J] !== "object") throw TypeError(".opentelemetry.proto.trace.v1.Span.Event.attributes: object expected");
                    W.attributes[J] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(Y.attributes[J])
                  }
                }
                if (Y.droppedAttributesCount != null) W.droppedAttributesCount = Y.droppedAttributesCount >>> 0;
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.arrays || W.defaults) J.attributes = [];
                if (W.defaults) {
                  if (J1.Long) {
                    var F = new J1.Long(0, 0, !1);
                    J.timeUnixNano = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                  } else J.timeUnixNano = W.longs === String ? "0" : 0;
                  J.name = "", J.droppedAttributesCount = 0
                }
                if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano"))
                  if (typeof Y.timeUnixNano === "number") J.timeUnixNano = W.longs === String ? String(Y.timeUnixNano) : Y.timeUnixNano;
                  else J.timeUnixNano = W.longs === String ? J1.Long.prototype.toString.call(Y.timeUnixNano) : W.longs === Number ? new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber() : Y.timeUnixNano;
                if (Y.name != null && Y.hasOwnProperty("name")) J.name = Y.name;
                if (Y.attributes && Y.attributes.length) {
                  J.attributes = [];
                  for (var X = 0; X < Y.attributes.length; ++X) J.attributes[X] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(Y.attributes[X], W)
                }
                if (Y.droppedAttributesCount != null && Y.hasOwnProperty("droppedAttributesCount")) J.droppedAttributesCount = Y.droppedAttributesCount;
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.trace.v1.Span.Event"
              }, Z
            }(), G.Link = function() {
              function Z(D) {
                if (this.attributes = [], D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.traceId = null, Z.prototype.spanId = null, Z.prototype.traceState = null, Z.prototype.attributes = J1.emptyArray, Z.prototype.droppedAttributesCount = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.traceId != null && Object.hasOwnProperty.call(Y, "traceId")) W.uint32(10).bytes(Y.traceId);
                if (Y.spanId != null && Object.hasOwnProperty.call(Y, "spanId")) W.uint32(18).bytes(Y.spanId);
                if (Y.traceState != null && Object.hasOwnProperty.call(Y, "traceState")) W.uint32(26).string(Y.traceState);
                if (Y.attributes != null && Y.attributes.length)
                  for (var J = 0; J < Y.attributes.length; ++J) G1.opentelemetry.proto.common.v1.KeyValue.encode(Y.attributes[J], W.uint32(34).fork()).ldelim();
                if (Y.droppedAttributesCount != null && Object.hasOwnProperty.call(Y, "droppedAttributesCount")) W.uint32(40).uint32(Y.droppedAttributesCount);
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.trace.v1.Span.Link;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.traceId = Y.bytes();
                      break
                    }
                    case 2: {
                      F.spanId = Y.bytes();
                      break
                    }
                    case 3: {
                      F.traceState = Y.string();
                      break
                    }
                    case 4: {
                      if (!(F.attributes && F.attributes.length)) F.attributes = [];
                      F.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(Y, Y.uint32()));
                      break
                    }
                    case 5: {
                      F.droppedAttributesCount = Y.uint32();
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.traceId != null && Y.hasOwnProperty("traceId")) {
                  if (!(Y.traceId && typeof Y.traceId.length === "number" || J1.isString(Y.traceId))) return "traceId: buffer expected"
                }
                if (Y.spanId != null && Y.hasOwnProperty("spanId")) {
                  if (!(Y.spanId && typeof Y.spanId.length === "number" || J1.isString(Y.spanId))) return "spanId: buffer expected"
                }
                if (Y.traceState != null && Y.hasOwnProperty("traceState")) {
                  if (!J1.isString(Y.traceState)) return "traceState: string expected"
                }
                if (Y.attributes != null && Y.hasOwnProperty("attributes")) {
                  if (!Array.isArray(Y.attributes)) return "attributes: array expected";
                  for (var W = 0; W < Y.attributes.length; ++W) {
                    var J = G1.opentelemetry.proto.common.v1.KeyValue.verify(Y.attributes[W]);
                    if (J) return "attributes." + J
                  }
                }
                if (Y.droppedAttributesCount != null && Y.hasOwnProperty("droppedAttributesCount")) {
                  if (!J1.isInteger(Y.droppedAttributesCount)) return "droppedAttributesCount: integer expected"
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.trace.v1.Span.Link) return Y;
                var W = new G1.opentelemetry.proto.trace.v1.Span.Link;
                if (Y.traceId != null) {
                  if (typeof Y.traceId === "string") J1.base64.decode(Y.traceId, W.traceId = J1.newBuffer(J1.base64.length(Y.traceId)), 0);
                  else if (Y.traceId.length >= 0) W.traceId = Y.traceId
                }
                if (Y.spanId != null) {
                  if (typeof Y.spanId === "string") J1.base64.decode(Y.spanId, W.spanId = J1.newBuffer(J1.base64.length(Y.spanId)), 0);
                  else if (Y.spanId.length >= 0) W.spanId = Y.spanId
                }
                if (Y.traceState != null) W.traceState = String(Y.traceState);
                if (Y.attributes) {
                  if (!Array.isArray(Y.attributes)) throw TypeError(".opentelemetry.proto.trace.v1.Span.Link.attributes: array expected");
                  W.attributes = [];
                  for (var J = 0; J < Y.attributes.length; ++J) {
                    if (typeof Y.attributes[J] !== "object") throw TypeError(".opentelemetry.proto.trace.v1.Span.Link.attributes: object expected");
                    W.attributes[J] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(Y.attributes[J])
                  }
                }
                if (Y.droppedAttributesCount != null) W.droppedAttributesCount = Y.droppedAttributesCount >>> 0;
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.arrays || W.defaults) J.attributes = [];
                if (W.defaults) {
                  if (W.bytes === String) J.traceId = "";
                  else if (J.traceId = [], W.bytes !== Array) J.traceId = J1.newBuffer(J.traceId);
                  if (W.bytes === String) J.spanId = "";
                  else if (J.spanId = [], W.bytes !== Array) J.spanId = J1.newBuffer(J.spanId);
                  J.traceState = "", J.droppedAttributesCount = 0
                }
                if (Y.traceId != null && Y.hasOwnProperty("traceId")) J.traceId = W.bytes === String ? J1.base64.encode(Y.traceId, 0, Y.traceId.length) : W.bytes === Array ? Array.prototype.slice.call(Y.traceId) : Y.traceId;
                if (Y.spanId != null && Y.hasOwnProperty("spanId")) J.spanId = W.bytes === String ? J1.base64.encode(Y.spanId, 0, Y.spanId.length) : W.bytes === Array ? Array.prototype.slice.call(Y.spanId) : Y.spanId;
                if (Y.traceState != null && Y.hasOwnProperty("traceState")) J.traceState = Y.traceState;
                if (Y.attributes && Y.attributes.length) {
                  J.attributes = [];
                  for (var F = 0; F < Y.attributes.length; ++F) J.attributes[F] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(Y.attributes[F], W)
                }
                if (Y.droppedAttributesCount != null && Y.hasOwnProperty("droppedAttributesCount")) J.droppedAttributesCount = Y.droppedAttributesCount;
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.trace.v1.Span.Link"
              }, Z
            }(), G
          }(), I.Status = function() {
            function G(Z) {
              if (Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.message = null, G.prototype.code = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.message != null && Object.hasOwnProperty.call(D, "message")) Y.uint32(18).string(D.message);
              if (D.code != null && Object.hasOwnProperty.call(D, "code")) Y.uint32(24).int32(D.code);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.trace.v1.Status;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 2: {
                    J.message = D.string();
                    break
                  }
                  case 3: {
                    J.code = D.int32();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.message != null && D.hasOwnProperty("message")) {
                if (!J1.isString(D.message)) return "message: string expected"
              }
              if (D.code != null && D.hasOwnProperty("code")) switch (D.code) {
                default:
                  return "code: enum value expected";
                case 0:
                case 1:
                case 2:
                  break
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.trace.v1.Status) return D;
              var Y = new G1.opentelemetry.proto.trace.v1.Status;
              if (D.message != null) Y.message = String(D.message);
              switch (D.code) {
                default:
                  if (typeof D.code === "number") {
                    Y.code = D.code;
                    break
                  }
                  break;
                case "STATUS_CODE_UNSET":
                case 0:
                  Y.code = 0;
                  break;
                case "STATUS_CODE_OK":
                case 1:
                  Y.code = 1;
                  break;
                case "STATUS_CODE_ERROR":
                case 2:
                  Y.code = 2;
                  break
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.defaults) W.message = "", W.code = Y.enums === String ? "STATUS_CODE_UNSET" : 0;
              if (D.message != null && D.hasOwnProperty("message")) W.message = D.message;
              if (D.code != null && D.hasOwnProperty("code")) W.code = Y.enums === String ? G1.opentelemetry.proto.trace.v1.Status.StatusCode[D.code] === void 0 ? D.code : G1.opentelemetry.proto.trace.v1.Status.StatusCode[D.code] : D.code;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.trace.v1.Status"
            }, G.StatusCode = function() {
              var Z = {},
                D = Object.create(Z);
              return D[Z[0] = "STATUS_CODE_UNSET"] = 0, D[Z[1] = "STATUS_CODE_OK"] = 1, D[Z[2] = "STATUS_CODE_ERROR"] = 2, D
            }(), G
          }(), I
        }(), Q
      }(), B.collector = function() {
        var Q = {};
        return Q.trace = function() {
          var I = {};
          return I.v1 = function() {
            var G = {};
            return G.TraceService = function() {
              function Z(D, Y, W) {
                b9.rpc.Service.call(this, D, Y, W)
              }
              return (Z.prototype = Object.create(b9.rpc.Service.prototype)).constructor = Z, Z.create = function D(Y, W, J) {
                return new this(Y, W, J)
              }, Object.defineProperty(Z.prototype.export = function D(Y, W) {
                return this.rpcCall(D, G1.opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest, G1.opentelemetry.proto.collector.trace.v1.ExportTraceServiceResponse, Y, W)
              }, "name", {
                value: "Export"
              }), Z
            }(), G.ExportTraceServiceRequest = function() {
              function Z(D) {
                if (this.resourceSpans = [], D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.resourceSpans = J1.emptyArray, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.resourceSpans != null && Y.resourceSpans.length)
                  for (var J = 0; J < Y.resourceSpans.length; ++J) G1.opentelemetry.proto.trace.v1.ResourceSpans.encode(Y.resourceSpans[J], W.uint32(10).fork()).ldelim();
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      if (!(F.resourceSpans && F.resourceSpans.length)) F.resourceSpans = [];
                      F.resourceSpans.push(G1.opentelemetry.proto.trace.v1.ResourceSpans.decode(Y, Y.uint32()));
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.resourceSpans != null && Y.hasOwnProperty("resourceSpans")) {
                  if (!Array.isArray(Y.resourceSpans)) return "resourceSpans: array expected";
                  for (var W = 0; W < Y.resourceSpans.length; ++W) {
                    var J = G1.opentelemetry.proto.trace.v1.ResourceSpans.verify(Y.resourceSpans[W]);
                    if (J) return "resourceSpans." + J
                  }
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest) return Y;
                var W = new G1.opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest;
                if (Y.resourceSpans) {
                  if (!Array.isArray(Y.resourceSpans)) throw TypeError(".opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest.resourceSpans: array expected");
                  W.resourceSpans = [];
                  for (var J = 0; J < Y.resourceSpans.length; ++J) {
                    if (typeof Y.resourceSpans[J] !== "object") throw TypeError(".opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest.resourceSpans: object expected");
                    W.resourceSpans[J] = G1.opentelemetry.proto.trace.v1.ResourceSpans.fromObject(Y.resourceSpans[J])
                  }
                }
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.arrays || W.defaults) J.resourceSpans = [];
                if (Y.resourceSpans && Y.resourceSpans.length) {
                  J.resourceSpans = [];
                  for (var F = 0; F < Y.resourceSpans.length; ++F) J.resourceSpans[F] = G1.opentelemetry.proto.trace.v1.ResourceSpans.toObject(Y.resourceSpans[F], W)
                }
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest"
              }, Z
            }(), G.ExportTraceServiceResponse = function() {
              function Z(D) {
                if (D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.partialSuccess = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.partialSuccess != null && Object.hasOwnProperty.call(Y, "partialSuccess")) G1.opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess.encode(Y.partialSuccess, W.uint32(10).fork()).ldelim();
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.trace.v1.ExportTraceServiceResponse;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.partialSuccess = G1.opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess.decode(Y, Y.uint32());
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.partialSuccess != null && Y.hasOwnProperty("partialSuccess")) {
                  var W = G1.opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess.verify(Y.partialSuccess);
                  if (W) return "partialSuccess." + W
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.trace.v1.ExportTraceServiceResponse) return Y;
                var W = new G1.opentelemetry.proto.collector.trace.v1.ExportTraceServiceResponse;
                if (Y.partialSuccess != null) {
                  if (typeof Y.partialSuccess !== "object") throw TypeError(".opentelemetry.proto.collector.trace.v1.ExportTraceServiceResponse.partialSuccess: object expected");
                  W.partialSuccess = G1.opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess.fromObject(Y.partialSuccess)
                }
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.defaults) J.partialSuccess = null;
                if (Y.partialSuccess != null && Y.hasOwnProperty("partialSuccess")) J.partialSuccess = G1.opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess.toObject(Y.partialSuccess, W);
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.trace.v1.ExportTraceServiceResponse"
              }, Z
            }(), G.ExportTracePartialSuccess = function() {
              function Z(D) {
                if (D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.rejectedSpans = null, Z.prototype.errorMessage = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.rejectedSpans != null && Object.hasOwnProperty.call(Y, "rejectedSpans")) W.uint32(8).int64(Y.rejectedSpans);
                if (Y.errorMessage != null && Object.hasOwnProperty.call(Y, "errorMessage")) W.uint32(18).string(Y.errorMessage);
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.rejectedSpans = Y.int64();
                      break
                    }
                    case 2: {
                      F.errorMessage = Y.string();
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.rejectedSpans != null && Y.hasOwnProperty("rejectedSpans")) {
                  if (!J1.isInteger(Y.rejectedSpans) && !(Y.rejectedSpans && J1.isInteger(Y.rejectedSpans.low) && J1.isInteger(Y.rejectedSpans.high))) return "rejectedSpans: integer|Long expected"
                }
                if (Y.errorMessage != null && Y.hasOwnProperty("errorMessage")) {
                  if (!J1.isString(Y.errorMessage)) return "errorMessage: string expected"
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess) return Y;
                var W = new G1.opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess;
                if (Y.rejectedSpans != null) {
                  if (J1.Long)(W.rejectedSpans = J1.Long.fromValue(Y.rejectedSpans)).unsigned = !1;
                  else if (typeof Y.rejectedSpans === "string") W.rejectedSpans = parseInt(Y.rejectedSpans, 10);
                  else if (typeof Y.rejectedSpans === "number") W.rejectedSpans = Y.rejectedSpans;
                  else if (typeof Y.rejectedSpans === "object") W.rejectedSpans = new J1.LongBits(Y.rejectedSpans.low >>> 0, Y.rejectedSpans.high >>> 0).toNumber()
                }
                if (Y.errorMessage != null) W.errorMessage = String(Y.errorMessage);
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.defaults) {
                  if (J1.Long) {
                    var F = new J1.Long(0, 0, !1);
                    J.rejectedSpans = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                  } else J.rejectedSpans = W.longs === String ? "0" : 0;
                  J.errorMessage = ""
                }
                if (Y.rejectedSpans != null && Y.hasOwnProperty("rejectedSpans"))
                  if (typeof Y.rejectedSpans === "number") J.rejectedSpans = W.longs === String ? String(Y.rejectedSpans) : Y.rejectedSpans;
                  else J.rejectedSpans = W.longs === String ? J1.Long.prototype.toString.call(Y.rejectedSpans) : W.longs === Number ? new J1.LongBits(Y.rejectedSpans.low >>> 0, Y.rejectedSpans.high >>> 0).toNumber() : Y.rejectedSpans;
                if (Y.errorMessage != null && Y.hasOwnProperty("errorMessage")) J.errorMessage = Y.errorMessage;
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.trace.v1.ExportTracePartialSuccess"
              }, Z
            }(), G
          }(), I
        }(), Q.metrics = function() {
          var I = {};
          return I.v1 = function() {
            var G = {};
            return G.MetricsService = function() {
              function Z(D, Y, W) {
                b9.rpc.Service.call(this, D, Y, W)
              }
              return (Z.prototype = Object.create(b9.rpc.Service.prototype)).constructor = Z, Z.create = function D(Y, W, J) {
                return new this(Y, W, J)
              }, Object.defineProperty(Z.prototype.export = function D(Y, W) {
                return this.rpcCall(D, G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest, G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse, Y, W)
              }, "name", {
                value: "Export"
              }), Z
            }(), G.ExportMetricsServiceRequest = function() {
              function Z(D) {
                if (this.resourceMetrics = [], D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.resourceMetrics = J1.emptyArray, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.resourceMetrics != null && Y.resourceMetrics.length)
                  for (var J = 0; J < Y.resourceMetrics.length; ++J) G1.opentelemetry.proto.metrics.v1.ResourceMetrics.encode(Y.resourceMetrics[J], W.uint32(10).fork()).ldelim();
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      if (!(F.resourceMetrics && F.resourceMetrics.length)) F.resourceMetrics = [];
                      F.resourceMetrics.push(G1.opentelemetry.proto.metrics.v1.ResourceMetrics.decode(Y, Y.uint32()));
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.resourceMetrics != null && Y.hasOwnProperty("resourceMetrics")) {
                  if (!Array.isArray(Y.resourceMetrics)) return "resourceMetrics: array expected";
                  for (var W = 0; W < Y.resourceMetrics.length; ++W) {
                    var J = G1.opentelemetry.proto.metrics.v1.ResourceMetrics.verify(Y.resourceMetrics[W]);
                    if (J) return "resourceMetrics." + J
                  }
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest) return Y;
                var W = new G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest;
                if (Y.resourceMetrics) {
                  if (!Array.isArray(Y.resourceMetrics)) throw TypeError(".opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest.resourceMetrics: array expected");
                  W.resourceMetrics = [];
                  for (var J = 0; J < Y.resourceMetrics.length; ++J) {
                    if (typeof Y.resourceMetrics[J] !== "object") throw TypeError(".opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest.resourceMetrics: object expected");
                    W.resourceMetrics[J] = G1.opentelemetry.proto.metrics.v1.ResourceMetrics.fromObject(Y.resourceMetrics[J])
                  }
                }
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.arrays || W.defaults) J.resourceMetrics = [];
                if (Y.resourceMetrics && Y.resourceMetrics.length) {
                  J.resourceMetrics = [];
                  for (var F = 0; F < Y.resourceMetrics.length; ++F) J.resourceMetrics[F] = G1.opentelemetry.proto.metrics.v1.ResourceMetrics.toObject(Y.resourceMetrics[F], W)
                }
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest"
              }, Z
            }(), G.ExportMetricsServiceResponse = function() {
              function Z(D) {
                if (D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.partialSuccess = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.partialSuccess != null && Object.hasOwnProperty.call(Y, "partialSuccess")) G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.encode(Y.partialSuccess, W.uint32(10).fork()).ldelim();
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.partialSuccess = G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.decode(Y, Y.uint32());
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.partialSuccess != null && Y.hasOwnProperty("partialSuccess")) {
                  var W = G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.verify(Y.partialSuccess);
                  if (W) return "partialSuccess." + W
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse) return Y;
                var W = new G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse;
                if (Y.partialSuccess != null) {
                  if (typeof Y.partialSuccess !== "object") throw TypeError(".opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse.partialSuccess: object expected");
                  W.partialSuccess = G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.fromObject(Y.partialSuccess)
                }
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.defaults) J.partialSuccess = null;
                if (Y.partialSuccess != null && Y.hasOwnProperty("partialSuccess")) J.partialSuccess = G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.toObject(Y.partialSuccess, W);
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse"
              }, Z
            }(), G.ExportMetricsPartialSuccess = function() {
              function Z(D) {
                if (D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.rejectedDataPoints = null, Z.prototype.errorMessage = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.rejectedDataPoints != null && Object.hasOwnProperty.call(Y, "rejectedDataPoints")) W.uint32(8).int64(Y.rejectedDataPoints);
                if (Y.errorMessage != null && Object.hasOwnProperty.call(Y, "errorMessage")) W.uint32(18).string(Y.errorMessage);
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.rejectedDataPoints = Y.int64();
                      break
                    }
                    case 2: {
                      F.errorMessage = Y.string();
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.rejectedDataPoints != null && Y.hasOwnProperty("rejectedDataPoints")) {
                  if (!J1.isInteger(Y.rejectedDataPoints) && !(Y.rejectedDataPoints && J1.isInteger(Y.rejectedDataPoints.low) && J1.isInteger(Y.rejectedDataPoints.high))) return "rejectedDataPoints: integer|Long expected"
                }
                if (Y.errorMessage != null && Y.hasOwnProperty("errorMessage")) {
                  if (!J1.isString(Y.errorMessage)) return "errorMessage: string expected"
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess) return Y;
                var W = new G1.opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess;
                if (Y.rejectedDataPoints != null) {
                  if (J1.Long)(W.rejectedDataPoints = J1.Long.fromValue(Y.rejectedDataPoints)).unsigned = !1;
                  else if (typeof Y.rejectedDataPoints === "string") W.rejectedDataPoints = parseInt(Y.rejectedDataPoints, 10);
                  else if (typeof Y.rejectedDataPoints === "number") W.rejectedDataPoints = Y.rejectedDataPoints;
                  else if (typeof Y.rejectedDataPoints === "object") W.rejectedDataPoints = new J1.LongBits(Y.rejectedDataPoints.low >>> 0, Y.rejectedDataPoints.high >>> 0).toNumber()
                }
                if (Y.errorMessage != null) W.errorMessage = String(Y.errorMessage);
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.defaults) {
                  if (J1.Long) {
                    var F = new J1.Long(0, 0, !1);
                    J.rejectedDataPoints = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                  } else J.rejectedDataPoints = W.longs === String ? "0" : 0;
                  J.errorMessage = ""
                }
                if (Y.rejectedDataPoints != null && Y.hasOwnProperty("rejectedDataPoints"))
                  if (typeof Y.rejectedDataPoints === "number") J.rejectedDataPoints = W.longs === String ? String(Y.rejectedDataPoints) : Y.rejectedDataPoints;
                  else J.rejectedDataPoints = W.longs === String ? J1.Long.prototype.toString.call(Y.rejectedDataPoints) : W.longs === Number ? new J1.LongBits(Y.rejectedDataPoints.low >>> 0, Y.rejectedDataPoints.high >>> 0).toNumber() : Y.rejectedDataPoints;
                if (Y.errorMessage != null && Y.hasOwnProperty("errorMessage")) J.errorMessage = Y.errorMessage;
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess"
              }, Z
            }(), G
          }(), I
        }(), Q.logs = function() {
          var I = {};
          return I.v1 = function() {
            var G = {};
            return G.LogsService = function() {
              function Z(D, Y, W) {
                b9.rpc.Service.call(this, D, Y, W)
              }
              return (Z.prototype = Object.create(b9.rpc.Service.prototype)).constructor = Z, Z.create = function D(Y, W, J) {
                return new this(Y, W, J)
              }, Object.defineProperty(Z.prototype.export = function D(Y, W) {
                return this.rpcCall(D, G1.opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest, G1.opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse, Y, W)
              }, "name", {
                value: "Export"
              }), Z
            }(), G.ExportLogsServiceRequest = function() {
              function Z(D) {
                if (this.resourceLogs = [], D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.resourceLogs = J1.emptyArray, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.resourceLogs != null && Y.resourceLogs.length)
                  for (var J = 0; J < Y.resourceLogs.length; ++J) G1.opentelemetry.proto.logs.v1.ResourceLogs.encode(Y.resourceLogs[J], W.uint32(10).fork()).ldelim();
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      if (!(F.resourceLogs && F.resourceLogs.length)) F.resourceLogs = [];
                      F.resourceLogs.push(G1.opentelemetry.proto.logs.v1.ResourceLogs.decode(Y, Y.uint32()));
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.resourceLogs != null && Y.hasOwnProperty("resourceLogs")) {
                  if (!Array.isArray(Y.resourceLogs)) return "resourceLogs: array expected";
                  for (var W = 0; W < Y.resourceLogs.length; ++W) {
                    var J = G1.opentelemetry.proto.logs.v1.ResourceLogs.verify(Y.resourceLogs[W]);
                    if (J) return "resourceLogs." + J
                  }
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest) return Y;
                var W = new G1.opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest;
                if (Y.resourceLogs) {
                  if (!Array.isArray(Y.resourceLogs)) throw TypeError(".opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest.resourceLogs: array expected");
                  W.resourceLogs = [];
                  for (var J = 0; J < Y.resourceLogs.length; ++J) {
                    if (typeof Y.resourceLogs[J] !== "object") throw TypeError(".opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest.resourceLogs: object expected");
                    W.resourceLogs[J] = G1.opentelemetry.proto.logs.v1.ResourceLogs.fromObject(Y.resourceLogs[J])
                  }
                }
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.arrays || W.defaults) J.resourceLogs = [];
                if (Y.resourceLogs && Y.resourceLogs.length) {
                  J.resourceLogs = [];
                  for (var F = 0; F < Y.resourceLogs.length; ++F) J.resourceLogs[F] = G1.opentelemetry.proto.logs.v1.ResourceLogs.toObject(Y.resourceLogs[F], W)
                }
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest"
              }, Z
            }(), G.ExportLogsServiceResponse = function() {
              function Z(D) {
                if (D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.partialSuccess = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.partialSuccess != null && Object.hasOwnProperty.call(Y, "partialSuccess")) G1.opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess.encode(Y.partialSuccess, W.uint32(10).fork()).ldelim();
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.partialSuccess = G1.opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess.decode(Y, Y.uint32());
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.partialSuccess != null && Y.hasOwnProperty("partialSuccess")) {
                  var W = G1.opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess.verify(Y.partialSuccess);
                  if (W) return "partialSuccess." + W
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse) return Y;
                var W = new G1.opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse;
                if (Y.partialSuccess != null) {
                  if (typeof Y.partialSuccess !== "object") throw TypeError(".opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse.partialSuccess: object expected");
                  W.partialSuccess = G1.opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess.fromObject(Y.partialSuccess)
                }
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.defaults) J.partialSuccess = null;
                if (Y.partialSuccess != null && Y.hasOwnProperty("partialSuccess")) J.partialSuccess = G1.opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess.toObject(Y.partialSuccess, W);
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse"
              }, Z
            }(), G.ExportLogsPartialSuccess = function() {
              function Z(D) {
                if (D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.rejectedLogRecords = null, Z.prototype.errorMessage = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.rejectedLogRecords != null && Object.hasOwnProperty.call(Y, "rejectedLogRecords")) W.uint32(8).int64(Y.rejectedLogRecords);
                if (Y.errorMessage != null && Object.hasOwnProperty.call(Y, "errorMessage")) W.uint32(18).string(Y.errorMessage);
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.rejectedLogRecords = Y.int64();
                      break
                    }
                    case 2: {
                      F.errorMessage = Y.string();
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.rejectedLogRecords != null && Y.hasOwnProperty("rejectedLogRecords")) {
                  if (!J1.isInteger(Y.rejectedLogRecords) && !(Y.rejectedLogRecords && J1.isInteger(Y.rejectedLogRecords.low) && J1.isInteger(Y.rejectedLogRecords.high))) return "rejectedLogRecords: integer|Long expected"
                }
                if (Y.errorMessage != null && Y.hasOwnProperty("errorMessage")) {
                  if (!J1.isString(Y.errorMessage)) return "errorMessage: string expected"
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess) return Y;
                var W = new G1.opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess;
                if (Y.rejectedLogRecords != null) {
                  if (J1.Long)(W.rejectedLogRecords = J1.Long.fromValue(Y.rejectedLogRecords)).unsigned = !1;
                  else if (typeof Y.rejectedLogRecords === "string") W.rejectedLogRecords = parseInt(Y.rejectedLogRecords, 10);
                  else if (typeof Y.rejectedLogRecords === "number") W.rejectedLogRecords = Y.rejectedLogRecords;
                  else if (typeof Y.rejectedLogRecords === "object") W.rejectedLogRecords = new J1.LongBits(Y.rejectedLogRecords.low >>> 0, Y.rejectedLogRecords.high >>> 0).toNumber()
                }
                if (Y.errorMessage != null) W.errorMessage = String(Y.errorMessage);
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.defaults) {
                  if (J1.Long) {
                    var F = new J1.Long(0, 0, !1);
                    J.rejectedLogRecords = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                  } else J.rejectedLogRecords = W.longs === String ? "0" : 0;
                  J.errorMessage = ""
                }
                if (Y.rejectedLogRecords != null && Y.hasOwnProperty("rejectedLogRecords"))
                  if (typeof Y.rejectedLogRecords === "number") J.rejectedLogRecords = W.longs === String ? String(Y.rejectedLogRecords) : Y.rejectedLogRecords;
                  else J.rejectedLogRecords = W.longs === String ? J1.Long.prototype.toString.call(Y.rejectedLogRecords) : W.longs === Number ? new J1.LongBits(Y.rejectedLogRecords.low >>> 0, Y.rejectedLogRecords.high >>> 0).toNumber() : Y.rejectedLogRecords;
                if (Y.errorMessage != null && Y.hasOwnProperty("errorMessage")) J.errorMessage = Y.errorMessage;
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess"
              }, Z
            }(), G
          }(), I
        }(), Q
      }(), B.metrics = function() {
        var Q = {};
        return Q.v1 = function() {
          var I = {};
          return I.MetricsData = function() {
            function G(Z) {
              if (this.resourceMetrics = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.resourceMetrics = J1.emptyArray, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.resourceMetrics != null && D.resourceMetrics.length)
                for (var W = 0; W < D.resourceMetrics.length; ++W) G1.opentelemetry.proto.metrics.v1.ResourceMetrics.encode(D.resourceMetrics[W], Y.uint32(10).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.MetricsData;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.resourceMetrics && J.resourceMetrics.length)) J.resourceMetrics = [];
                    J.resourceMetrics.push(G1.opentelemetry.proto.metrics.v1.ResourceMetrics.decode(D, D.uint32()));
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.resourceMetrics != null && D.hasOwnProperty("resourceMetrics")) {
                if (!Array.isArray(D.resourceMetrics)) return "resourceMetrics: array expected";
                for (var Y = 0; Y < D.resourceMetrics.length; ++Y) {
                  var W = G1.opentelemetry.proto.metrics.v1.ResourceMetrics.verify(D.resourceMetrics[Y]);
                  if (W) return "resourceMetrics." + W
                }
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.MetricsData) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.MetricsData;
              if (D.resourceMetrics) {
                if (!Array.isArray(D.resourceMetrics)) throw TypeError(".opentelemetry.proto.metrics.v1.MetricsData.resourceMetrics: array expected");
                Y.resourceMetrics = [];
                for (var W = 0; W < D.resourceMetrics.length; ++W) {
                  if (typeof D.resourceMetrics[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.MetricsData.resourceMetrics: object expected");
                  Y.resourceMetrics[W] = G1.opentelemetry.proto.metrics.v1.ResourceMetrics.fromObject(D.resourceMetrics[W])
                }
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.resourceMetrics = [];
              if (D.resourceMetrics && D.resourceMetrics.length) {
                W.resourceMetrics = [];
                for (var J = 0; J < D.resourceMetrics.length; ++J) W.resourceMetrics[J] = G1.opentelemetry.proto.metrics.v1.ResourceMetrics.toObject(D.resourceMetrics[J], Y)
              }
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.MetricsData"
            }, G
          }(), I.ResourceMetrics = function() {
            function G(Z) {
              if (this.scopeMetrics = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.resource = null, G.prototype.scopeMetrics = J1.emptyArray, G.prototype.schemaUrl = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.resource != null && Object.hasOwnProperty.call(D, "resource")) G1.opentelemetry.proto.resource.v1.Resource.encode(D.resource, Y.uint32(10).fork()).ldelim();
              if (D.scopeMetrics != null && D.scopeMetrics.length)
                for (var W = 0; W < D.scopeMetrics.length; ++W) G1.opentelemetry.proto.metrics.v1.ScopeMetrics.encode(D.scopeMetrics[W], Y.uint32(18).fork()).ldelim();
              if (D.schemaUrl != null && Object.hasOwnProperty.call(D, "schemaUrl")) Y.uint32(26).string(D.schemaUrl);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.ResourceMetrics;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.resource = G1.opentelemetry.proto.resource.v1.Resource.decode(D, D.uint32());
                    break
                  }
                  case 2: {
                    if (!(J.scopeMetrics && J.scopeMetrics.length)) J.scopeMetrics = [];
                    J.scopeMetrics.push(G1.opentelemetry.proto.metrics.v1.ScopeMetrics.decode(D, D.uint32()));
                    break
                  }
                  case 3: {
                    J.schemaUrl = D.string();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.resource != null && D.hasOwnProperty("resource")) {
                var Y = G1.opentelemetry.proto.resource.v1.Resource.verify(D.resource);
                if (Y) return "resource." + Y
              }
              if (D.scopeMetrics != null && D.hasOwnProperty("scopeMetrics")) {
                if (!Array.isArray(D.scopeMetrics)) return "scopeMetrics: array expected";
                for (var W = 0; W < D.scopeMetrics.length; ++W) {
                  var Y = G1.opentelemetry.proto.metrics.v1.ScopeMetrics.verify(D.scopeMetrics[W]);
                  if (Y) return "scopeMetrics." + Y
                }
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) {
                if (!J1.isString(D.schemaUrl)) return "schemaUrl: string expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.ResourceMetrics) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.ResourceMetrics;
              if (D.resource != null) {
                if (typeof D.resource !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ResourceMetrics.resource: object expected");
                Y.resource = G1.opentelemetry.proto.resource.v1.Resource.fromObject(D.resource)
              }
              if (D.scopeMetrics) {
                if (!Array.isArray(D.scopeMetrics)) throw TypeError(".opentelemetry.proto.metrics.v1.ResourceMetrics.scopeMetrics: array expected");
                Y.scopeMetrics = [];
                for (var W = 0; W < D.scopeMetrics.length; ++W) {
                  if (typeof D.scopeMetrics[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ResourceMetrics.scopeMetrics: object expected");
                  Y.scopeMetrics[W] = G1.opentelemetry.proto.metrics.v1.ScopeMetrics.fromObject(D.scopeMetrics[W])
                }
              }
              if (D.schemaUrl != null) Y.schemaUrl = String(D.schemaUrl);
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.scopeMetrics = [];
              if (Y.defaults) W.resource = null, W.schemaUrl = "";
              if (D.resource != null && D.hasOwnProperty("resource")) W.resource = G1.opentelemetry.proto.resource.v1.Resource.toObject(D.resource, Y);
              if (D.scopeMetrics && D.scopeMetrics.length) {
                W.scopeMetrics = [];
                for (var J = 0; J < D.scopeMetrics.length; ++J) W.scopeMetrics[J] = G1.opentelemetry.proto.metrics.v1.ScopeMetrics.toObject(D.scopeMetrics[J], Y)
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) W.schemaUrl = D.schemaUrl;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.ResourceMetrics"
            }, G
          }(), I.ScopeMetrics = function() {
            function G(Z) {
              if (this.metrics = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.scope = null, G.prototype.metrics = J1.emptyArray, G.prototype.schemaUrl = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.scope != null && Object.hasOwnProperty.call(D, "scope")) G1.opentelemetry.proto.common.v1.InstrumentationScope.encode(D.scope, Y.uint32(10).fork()).ldelim();
              if (D.metrics != null && D.metrics.length)
                for (var W = 0; W < D.metrics.length; ++W) G1.opentelemetry.proto.metrics.v1.Metric.encode(D.metrics[W], Y.uint32(18).fork()).ldelim();
              if (D.schemaUrl != null && Object.hasOwnProperty.call(D, "schemaUrl")) Y.uint32(26).string(D.schemaUrl);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.ScopeMetrics;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.decode(D, D.uint32());
                    break
                  }
                  case 2: {
                    if (!(J.metrics && J.metrics.length)) J.metrics = [];
                    J.metrics.push(G1.opentelemetry.proto.metrics.v1.Metric.decode(D, D.uint32()));
                    break
                  }
                  case 3: {
                    J.schemaUrl = D.string();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.scope != null && D.hasOwnProperty("scope")) {
                var Y = G1.opentelemetry.proto.common.v1.InstrumentationScope.verify(D.scope);
                if (Y) return "scope." + Y
              }
              if (D.metrics != null && D.hasOwnProperty("metrics")) {
                if (!Array.isArray(D.metrics)) return "metrics: array expected";
                for (var W = 0; W < D.metrics.length; ++W) {
                  var Y = G1.opentelemetry.proto.metrics.v1.Metric.verify(D.metrics[W]);
                  if (Y) return "metrics." + Y
                }
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) {
                if (!J1.isString(D.schemaUrl)) return "schemaUrl: string expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.ScopeMetrics) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.ScopeMetrics;
              if (D.scope != null) {
                if (typeof D.scope !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ScopeMetrics.scope: object expected");
                Y.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.fromObject(D.scope)
              }
              if (D.metrics) {
                if (!Array.isArray(D.metrics)) throw TypeError(".opentelemetry.proto.metrics.v1.ScopeMetrics.metrics: array expected");
                Y.metrics = [];
                for (var W = 0; W < D.metrics.length; ++W) {
                  if (typeof D.metrics[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ScopeMetrics.metrics: object expected");
                  Y.metrics[W] = G1.opentelemetry.proto.metrics.v1.Metric.fromObject(D.metrics[W])
                }
              }
              if (D.schemaUrl != null) Y.schemaUrl = String(D.schemaUrl);
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.metrics = [];
              if (Y.defaults) W.scope = null, W.schemaUrl = "";
              if (D.scope != null && D.hasOwnProperty("scope")) W.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.toObject(D.scope, Y);
              if (D.metrics && D.metrics.length) {
                W.metrics = [];
                for (var J = 0; J < D.metrics.length; ++J) W.metrics[J] = G1.opentelemetry.proto.metrics.v1.Metric.toObject(D.metrics[J], Y)
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) W.schemaUrl = D.schemaUrl;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.ScopeMetrics"
            }, G
          }(), I.Metric = function() {
            function G(D) {
              if (D) {
                for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                  if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
              }
            }
            G.prototype.name = null, G.prototype.description = null, G.prototype.unit = null, G.prototype.gauge = null, G.prototype.sum = null, G.prototype.histogram = null, G.prototype.exponentialHistogram = null, G.prototype.summary = null;
            var Z;
            return Object.defineProperty(G.prototype, "data", {
              get: J1.oneOfGetter(Z = ["gauge", "sum", "histogram", "exponentialHistogram", "summary"]),
              set: J1.oneOfSetter(Z)
            }), G.create = function D(Y) {
              return new G(Y)
            }, G.encode = function D(Y, W) {
              if (!W) W = p4.create();
              if (Y.name != null && Object.hasOwnProperty.call(Y, "name")) W.uint32(10).string(Y.name);
              if (Y.description != null && Object.hasOwnProperty.call(Y, "description")) W.uint32(18).string(Y.description);
              if (Y.unit != null && Object.hasOwnProperty.call(Y, "unit")) W.uint32(26).string(Y.unit);
              if (Y.gauge != null && Object.hasOwnProperty.call(Y, "gauge")) G1.opentelemetry.proto.metrics.v1.Gauge.encode(Y.gauge, W.uint32(42).fork()).ldelim();
              if (Y.sum != null && Object.hasOwnProperty.call(Y, "sum")) G1.opentelemetry.proto.metrics.v1.Sum.encode(Y.sum, W.uint32(58).fork()).ldelim();
              if (Y.histogram != null && Object.hasOwnProperty.call(Y, "histogram")) G1.opentelemetry.proto.metrics.v1.Histogram.encode(Y.histogram, W.uint32(74).fork()).ldelim();
              if (Y.exponentialHistogram != null && Object.hasOwnProperty.call(Y, "exponentialHistogram")) G1.opentelemetry.proto.metrics.v1.ExponentialHistogram.encode(Y.exponentialHistogram, W.uint32(82).fork()).ldelim();
              if (Y.summary != null && Object.hasOwnProperty.call(Y, "summary")) G1.opentelemetry.proto.metrics.v1.Summary.encode(Y.summary, W.uint32(90).fork()).ldelim();
              return W
            }, G.encodeDelimited = function D(Y, W) {
              return this.encode(Y, W).ldelim()
            }, G.decode = function D(Y, W) {
              if (!(Y instanceof LA)) Y = LA.create(Y);
              var J = W === void 0 ? Y.len : Y.pos + W,
                F = new G1.opentelemetry.proto.metrics.v1.Metric;
              while (Y.pos < J) {
                var X = Y.uint32();
                switch (X >>> 3) {
                  case 1: {
                    F.name = Y.string();
                    break
                  }
                  case 2: {
                    F.description = Y.string();
                    break
                  }
                  case 3: {
                    F.unit = Y.string();
                    break
                  }
                  case 5: {
                    F.gauge = G1.opentelemetry.proto.metrics.v1.Gauge.decode(Y, Y.uint32());
                    break
                  }
                  case 7: {
                    F.sum = G1.opentelemetry.proto.metrics.v1.Sum.decode(Y, Y.uint32());
                    break
                  }
                  case 9: {
                    F.histogram = G1.opentelemetry.proto.metrics.v1.Histogram.decode(Y, Y.uint32());
                    break
                  }
                  case 10: {
                    F.exponentialHistogram = G1.opentelemetry.proto.metrics.v1.ExponentialHistogram.decode(Y, Y.uint32());
                    break
                  }
                  case 11: {
                    F.summary = G1.opentelemetry.proto.metrics.v1.Summary.decode(Y, Y.uint32());
                    break
                  }
                  default:
                    Y.skipType(X & 7);
                    break
                }
              }
              return F
            }, G.decodeDelimited = function D(Y) {
              if (!(Y instanceof LA)) Y = new LA(Y);
              return this.decode(Y, Y.uint32())
            }, G.verify = function D(Y) {
              if (typeof Y !== "object" || Y === null) return "object expected";
              var W = {};
              if (Y.name != null && Y.hasOwnProperty("name")) {
                if (!J1.isString(Y.name)) return "name: string expected"
              }
              if (Y.description != null && Y.hasOwnProperty("description")) {
                if (!J1.isString(Y.description)) return "description: string expected"
              }
              if (Y.unit != null && Y.hasOwnProperty("unit")) {
                if (!J1.isString(Y.unit)) return "unit: string expected"
              }
              if (Y.gauge != null && Y.hasOwnProperty("gauge")) {
                W.data = 1;
                {
                  var J = G1.opentelemetry.proto.metrics.v1.Gauge.verify(Y.gauge);
                  if (J) return "gauge." + J
                }
              }
              if (Y.sum != null && Y.hasOwnProperty("sum")) {
                if (W.data === 1) return "data: multiple values";
                W.data = 1;
                {
                  var J = G1.opentelemetry.proto.metrics.v1.Sum.verify(Y.sum);
                  if (J) return "sum." + J
                }
              }
              if (Y.histogram != null && Y.hasOwnProperty("histogram")) {
                if (W.data === 1) return "data: multiple values";
                W.data = 1;
                {
                  var J = G1.opentelemetry.proto.metrics.v1.Histogram.verify(Y.histogram);
                  if (J) return "histogram." + J
                }
              }
              if (Y.exponentialHistogram != null && Y.hasOwnProperty("exponentialHistogram")) {
                if (W.data === 1) return "data: multiple values";
                W.data = 1;
                {
                  var J = G1.opentelemetry.proto.metrics.v1.ExponentialHistogram.verify(Y.exponentialHistogram);
                  if (J) return "exponentialHistogram." + J
                }
              }
              if (Y.summary != null && Y.hasOwnProperty("summary")) {
                if (W.data === 1) return "data: multiple values";
                W.data = 1;
                {
                  var J = G1.opentelemetry.proto.metrics.v1.Summary.verify(Y.summary);
                  if (J) return "summary." + J
                }
              }
              return null
            }, G.fromObject = function D(Y) {
              if (Y instanceof G1.opentelemetry.proto.metrics.v1.Metric) return Y;
              var W = new G1.opentelemetry.proto.metrics.v1.Metric;
              if (Y.name != null) W.name = String(Y.name);
              if (Y.description != null) W.description = String(Y.description);
              if (Y.unit != null) W.unit = String(Y.unit);
              if (Y.gauge != null) {
                if (typeof Y.gauge !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Metric.gauge: object expected");
                W.gauge = G1.opentelemetry.proto.metrics.v1.Gauge.fromObject(Y.gauge)
              }
              if (Y.sum != null) {
                if (typeof Y.sum !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Metric.sum: object expected");
                W.sum = G1.opentelemetry.proto.metrics.v1.Sum.fromObject(Y.sum)
              }
              if (Y.histogram != null) {
                if (typeof Y.histogram !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Metric.histogram: object expected");
                W.histogram = G1.opentelemetry.proto.metrics.v1.Histogram.fromObject(Y.histogram)
              }
              if (Y.exponentialHistogram != null) {
                if (typeof Y.exponentialHistogram !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Metric.exponentialHistogram: object expected");
                W.exponentialHistogram = G1.opentelemetry.proto.metrics.v1.ExponentialHistogram.fromObject(Y.exponentialHistogram)
              }
              if (Y.summary != null) {
                if (typeof Y.summary !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Metric.summary: object expected");
                W.summary = G1.opentelemetry.proto.metrics.v1.Summary.fromObject(Y.summary)
              }
              return W
            }, G.toObject = function D(Y, W) {
              if (!W) W = {};
              var J = {};
              if (W.defaults) J.name = "", J.description = "", J.unit = "";
              if (Y.name != null && Y.hasOwnProperty("name")) J.name = Y.name;
              if (Y.description != null && Y.hasOwnProperty("description")) J.description = Y.description;
              if (Y.unit != null && Y.hasOwnProperty("unit")) J.unit = Y.unit;
              if (Y.gauge != null && Y.hasOwnProperty("gauge")) {
                if (J.gauge = G1.opentelemetry.proto.metrics.v1.Gauge.toObject(Y.gauge, W), W.oneofs) J.data = "gauge"
              }
              if (Y.sum != null && Y.hasOwnProperty("sum")) {
                if (J.sum = G1.opentelemetry.proto.metrics.v1.Sum.toObject(Y.sum, W), W.oneofs) J.data = "sum"
              }
              if (Y.histogram != null && Y.hasOwnProperty("histogram")) {
                if (J.histogram = G1.opentelemetry.proto.metrics.v1.Histogram.toObject(Y.histogram, W), W.oneofs) J.data = "histogram"
              }
              if (Y.exponentialHistogram != null && Y.hasOwnProperty("exponentialHistogram")) {
                if (J.exponentialHistogram = G1.opentelemetry.proto.metrics.v1.ExponentialHistogram.toObject(Y.exponentialHistogram, W), W.oneofs) J.data = "exponentialHistogram"
              }
              if (Y.summary != null && Y.hasOwnProperty("summary")) {
                if (J.summary = G1.opentelemetry.proto.metrics.v1.Summary.toObject(Y.summary, W), W.oneofs) J.data = "summary"
              }
              return J
            }, G.prototype.toJSON = function D() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function D(Y) {
              if (Y === void 0) Y = "type.googleapis.com";
              return Y + "/opentelemetry.proto.metrics.v1.Metric"
            }, G
          }(), I.Gauge = function() {
            function G(Z) {
              if (this.dataPoints = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.dataPoints = J1.emptyArray, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.dataPoints != null && D.dataPoints.length)
                for (var W = 0; W < D.dataPoints.length; ++W) G1.opentelemetry.proto.metrics.v1.NumberDataPoint.encode(D.dataPoints[W], Y.uint32(10).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.Gauge;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.dataPoints && J.dataPoints.length)) J.dataPoints = [];
                    J.dataPoints.push(G1.opentelemetry.proto.metrics.v1.NumberDataPoint.decode(D, D.uint32()));
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.dataPoints != null && D.hasOwnProperty("dataPoints")) {
                if (!Array.isArray(D.dataPoints)) return "dataPoints: array expected";
                for (var Y = 0; Y < D.dataPoints.length; ++Y) {
                  var W = G1.opentelemetry.proto.metrics.v1.NumberDataPoint.verify(D.dataPoints[Y]);
                  if (W) return "dataPoints." + W
                }
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.Gauge) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.Gauge;
              if (D.dataPoints) {
                if (!Array.isArray(D.dataPoints)) throw TypeError(".opentelemetry.proto.metrics.v1.Gauge.dataPoints: array expected");
                Y.dataPoints = [];
                for (var W = 0; W < D.dataPoints.length; ++W) {
                  if (typeof D.dataPoints[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Gauge.dataPoints: object expected");
                  Y.dataPoints[W] = G1.opentelemetry.proto.metrics.v1.NumberDataPoint.fromObject(D.dataPoints[W])
                }
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.dataPoints = [];
              if (D.dataPoints && D.dataPoints.length) {
                W.dataPoints = [];
                for (var J = 0; J < D.dataPoints.length; ++J) W.dataPoints[J] = G1.opentelemetry.proto.metrics.v1.NumberDataPoint.toObject(D.dataPoints[J], Y)
              }
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.Gauge"
            }, G
          }(), I.Sum = function() {
            function G(Z) {
              if (this.dataPoints = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.dataPoints = J1.emptyArray, G.prototype.aggregationTemporality = null, G.prototype.isMonotonic = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.dataPoints != null && D.dataPoints.length)
                for (var W = 0; W < D.dataPoints.length; ++W) G1.opentelemetry.proto.metrics.v1.NumberDataPoint.encode(D.dataPoints[W], Y.uint32(10).fork()).ldelim();
              if (D.aggregationTemporality != null && Object.hasOwnProperty.call(D, "aggregationTemporality")) Y.uint32(16).int32(D.aggregationTemporality);
              if (D.isMonotonic != null && Object.hasOwnProperty.call(D, "isMonotonic")) Y.uint32(24).bool(D.isMonotonic);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.Sum;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.dataPoints && J.dataPoints.length)) J.dataPoints = [];
                    J.dataPoints.push(G1.opentelemetry.proto.metrics.v1.NumberDataPoint.decode(D, D.uint32()));
                    break
                  }
                  case 2: {
                    J.aggregationTemporality = D.int32();
                    break
                  }
                  case 3: {
                    J.isMonotonic = D.bool();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.dataPoints != null && D.hasOwnProperty("dataPoints")) {
                if (!Array.isArray(D.dataPoints)) return "dataPoints: array expected";
                for (var Y = 0; Y < D.dataPoints.length; ++Y) {
                  var W = G1.opentelemetry.proto.metrics.v1.NumberDataPoint.verify(D.dataPoints[Y]);
                  if (W) return "dataPoints." + W
                }
              }
              if (D.aggregationTemporality != null && D.hasOwnProperty("aggregationTemporality")) switch (D.aggregationTemporality) {
                default:
                  return "aggregationTemporality: enum value expected";
                case 0:
                case 1:
                case 2:
                  break
              }
              if (D.isMonotonic != null && D.hasOwnProperty("isMonotonic")) {
                if (typeof D.isMonotonic !== "boolean") return "isMonotonic: boolean expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.Sum) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.Sum;
              if (D.dataPoints) {
                if (!Array.isArray(D.dataPoints)) throw TypeError(".opentelemetry.proto.metrics.v1.Sum.dataPoints: array expected");
                Y.dataPoints = [];
                for (var W = 0; W < D.dataPoints.length; ++W) {
                  if (typeof D.dataPoints[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Sum.dataPoints: object expected");
                  Y.dataPoints[W] = G1.opentelemetry.proto.metrics.v1.NumberDataPoint.fromObject(D.dataPoints[W])
                }
              }
              switch (D.aggregationTemporality) {
                default:
                  if (typeof D.aggregationTemporality === "number") {
                    Y.aggregationTemporality = D.aggregationTemporality;
                    break
                  }
                  break;
                case "AGGREGATION_TEMPORALITY_UNSPECIFIED":
                case 0:
                  Y.aggregationTemporality = 0;
                  break;
                case "AGGREGATION_TEMPORALITY_DELTA":
                case 1:
                  Y.aggregationTemporality = 1;
                  break;
                case "AGGREGATION_TEMPORALITY_CUMULATIVE":
                case 2:
                  Y.aggregationTemporality = 2;
                  break
              }
              if (D.isMonotonic != null) Y.isMonotonic = Boolean(D.isMonotonic);
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.dataPoints = [];
              if (Y.defaults) W.aggregationTemporality = Y.enums === String ? "AGGREGATION_TEMPORALITY_UNSPECIFIED" : 0, W.isMonotonic = !1;
              if (D.dataPoints && D.dataPoints.length) {
                W.dataPoints = [];
                for (var J = 0; J < D.dataPoints.length; ++J) W.dataPoints[J] = G1.opentelemetry.proto.metrics.v1.NumberDataPoint.toObject(D.dataPoints[J], Y)
              }
              if (D.aggregationTemporality != null && D.hasOwnProperty("aggregationTemporality")) W.aggregationTemporality = Y.enums === String ? G1.opentelemetry.proto.metrics.v1.AggregationTemporality[D.aggregationTemporality] === void 0 ? D.aggregationTemporality : G1.opentelemetry.proto.metrics.v1.AggregationTemporality[D.aggregationTemporality] : D.aggregationTemporality;
              if (D.isMonotonic != null && D.hasOwnProperty("isMonotonic")) W.isMonotonic = D.isMonotonic;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.Sum"
            }, G
          }(), I.Histogram = function() {
            function G(Z) {
              if (this.dataPoints = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.dataPoints = J1.emptyArray, G.prototype.aggregationTemporality = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.dataPoints != null && D.dataPoints.length)
                for (var W = 0; W < D.dataPoints.length; ++W) G1.opentelemetry.proto.metrics.v1.HistogramDataPoint.encode(D.dataPoints[W], Y.uint32(10).fork()).ldelim();
              if (D.aggregationTemporality != null && Object.hasOwnProperty.call(D, "aggregationTemporality")) Y.uint32(16).int32(D.aggregationTemporality);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.Histogram;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.dataPoints && J.dataPoints.length)) J.dataPoints = [];
                    J.dataPoints.push(G1.opentelemetry.proto.metrics.v1.HistogramDataPoint.decode(D, D.uint32()));
                    break
                  }
                  case 2: {
                    J.aggregationTemporality = D.int32();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.dataPoints != null && D.hasOwnProperty("dataPoints")) {
                if (!Array.isArray(D.dataPoints)) return "dataPoints: array expected";
                for (var Y = 0; Y < D.dataPoints.length; ++Y) {
                  var W = G1.opentelemetry.proto.metrics.v1.HistogramDataPoint.verify(D.dataPoints[Y]);
                  if (W) return "dataPoints." + W
                }
              }
              if (D.aggregationTemporality != null && D.hasOwnProperty("aggregationTemporality")) switch (D.aggregationTemporality) {
                default:
                  return "aggregationTemporality: enum value expected";
                case 0:
                case 1:
                case 2:
                  break
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.Histogram) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.Histogram;
              if (D.dataPoints) {
                if (!Array.isArray(D.dataPoints)) throw TypeError(".opentelemetry.proto.metrics.v1.Histogram.dataPoints: array expected");
                Y.dataPoints = [];
                for (var W = 0; W < D.dataPoints.length; ++W) {
                  if (typeof D.dataPoints[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Histogram.dataPoints: object expected");
                  Y.dataPoints[W] = G1.opentelemetry.proto.metrics.v1.HistogramDataPoint.fromObject(D.dataPoints[W])
                }
              }
              switch (D.aggregationTemporality) {
                default:
                  if (typeof D.aggregationTemporality === "number") {
                    Y.aggregationTemporality = D.aggregationTemporality;
                    break
                  }
                  break;
                case "AGGREGATION_TEMPORALITY_UNSPECIFIED":
                case 0:
                  Y.aggregationTemporality = 0;
                  break;
                case "AGGREGATION_TEMPORALITY_DELTA":
                case 1:
                  Y.aggregationTemporality = 1;
                  break;
                case "AGGREGATION_TEMPORALITY_CUMULATIVE":
                case 2:
                  Y.aggregationTemporality = 2;
                  break
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.dataPoints = [];
              if (Y.defaults) W.aggregationTemporality = Y.enums === String ? "AGGREGATION_TEMPORALITY_UNSPECIFIED" : 0;
              if (D.dataPoints && D.dataPoints.length) {
                W.dataPoints = [];
                for (var J = 0; J < D.dataPoints.length; ++J) W.dataPoints[J] = G1.opentelemetry.proto.metrics.v1.HistogramDataPoint.toObject(D.dataPoints[J], Y)
              }
              if (D.aggregationTemporality != null && D.hasOwnProperty("aggregationTemporality")) W.aggregationTemporality = Y.enums === String ? G1.opentelemetry.proto.metrics.v1.AggregationTemporality[D.aggregationTemporality] === void 0 ? D.aggregationTemporality : G1.opentelemetry.proto.metrics.v1.AggregationTemporality[D.aggregationTemporality] : D.aggregationTemporality;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.Histogram"
            }, G
          }(), I.ExponentialHistogram = function() {
            function G(Z) {
              if (this.dataPoints = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.dataPoints = J1.emptyArray, G.prototype.aggregationTemporality = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.dataPoints != null && D.dataPoints.length)
                for (var W = 0; W < D.dataPoints.length; ++W) G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.encode(D.dataPoints[W], Y.uint32(10).fork()).ldelim();
              if (D.aggregationTemporality != null && Object.hasOwnProperty.call(D, "aggregationTemporality")) Y.uint32(16).int32(D.aggregationTemporality);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.ExponentialHistogram;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.dataPoints && J.dataPoints.length)) J.dataPoints = [];
                    J.dataPoints.push(G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.decode(D, D.uint32()));
                    break
                  }
                  case 2: {
                    J.aggregationTemporality = D.int32();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.dataPoints != null && D.hasOwnProperty("dataPoints")) {
                if (!Array.isArray(D.dataPoints)) return "dataPoints: array expected";
                for (var Y = 0; Y < D.dataPoints.length; ++Y) {
                  var W = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.verify(D.dataPoints[Y]);
                  if (W) return "dataPoints." + W
                }
              }
              if (D.aggregationTemporality != null && D.hasOwnProperty("aggregationTemporality")) switch (D.aggregationTemporality) {
                default:
                  return "aggregationTemporality: enum value expected";
                case 0:
                case 1:
                case 2:
                  break
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.ExponentialHistogram) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.ExponentialHistogram;
              if (D.dataPoints) {
                if (!Array.isArray(D.dataPoints)) throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogram.dataPoints: array expected");
                Y.dataPoints = [];
                for (var W = 0; W < D.dataPoints.length; ++W) {
                  if (typeof D.dataPoints[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogram.dataPoints: object expected");
                  Y.dataPoints[W] = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.fromObject(D.dataPoints[W])
                }
              }
              switch (D.aggregationTemporality) {
                default:
                  if (typeof D.aggregationTemporality === "number") {
                    Y.aggregationTemporality = D.aggregationTemporality;
                    break
                  }
                  break;
                case "AGGREGATION_TEMPORALITY_UNSPECIFIED":
                case 0:
                  Y.aggregationTemporality = 0;
                  break;
                case "AGGREGATION_TEMPORALITY_DELTA":
                case 1:
                  Y.aggregationTemporality = 1;
                  break;
                case "AGGREGATION_TEMPORALITY_CUMULATIVE":
                case 2:
                  Y.aggregationTemporality = 2;
                  break
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.dataPoints = [];
              if (Y.defaults) W.aggregationTemporality = Y.enums === String ? "AGGREGATION_TEMPORALITY_UNSPECIFIED" : 0;
              if (D.dataPoints && D.dataPoints.length) {
                W.dataPoints = [];
                for (var J = 0; J < D.dataPoints.length; ++J) W.dataPoints[J] = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.toObject(D.dataPoints[J], Y)
              }
              if (D.aggregationTemporality != null && D.hasOwnProperty("aggregationTemporality")) W.aggregationTemporality = Y.enums === String ? G1.opentelemetry.proto.metrics.v1.AggregationTemporality[D.aggregationTemporality] === void 0 ? D.aggregationTemporality : G1.opentelemetry.proto.metrics.v1.AggregationTemporality[D.aggregationTemporality] : D.aggregationTemporality;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.ExponentialHistogram"
            }, G
          }(), I.Summary = function() {
            function G(Z) {
              if (this.dataPoints = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.dataPoints = J1.emptyArray, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.dataPoints != null && D.dataPoints.length)
                for (var W = 0; W < D.dataPoints.length; ++W) G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.encode(D.dataPoints[W], Y.uint32(10).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.Summary;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.dataPoints && J.dataPoints.length)) J.dataPoints = [];
                    J.dataPoints.push(G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.decode(D, D.uint32()));
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.dataPoints != null && D.hasOwnProperty("dataPoints")) {
                if (!Array.isArray(D.dataPoints)) return "dataPoints: array expected";
                for (var Y = 0; Y < D.dataPoints.length; ++Y) {
                  var W = G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.verify(D.dataPoints[Y]);
                  if (W) return "dataPoints." + W
                }
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.Summary) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.Summary;
              if (D.dataPoints) {
                if (!Array.isArray(D.dataPoints)) throw TypeError(".opentelemetry.proto.metrics.v1.Summary.dataPoints: array expected");
                Y.dataPoints = [];
                for (var W = 0; W < D.dataPoints.length; ++W) {
                  if (typeof D.dataPoints[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Summary.dataPoints: object expected");
                  Y.dataPoints[W] = G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.fromObject(D.dataPoints[W])
                }
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.dataPoints = [];
              if (D.dataPoints && D.dataPoints.length) {
                W.dataPoints = [];
                for (var J = 0; J < D.dataPoints.length; ++J) W.dataPoints[J] = G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.toObject(D.dataPoints[J], Y)
              }
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.Summary"
            }, G
          }(), I.AggregationTemporality = function() {
            var G = {},
              Z = Object.create(G);
            return Z[G[0] = "AGGREGATION_TEMPORALITY_UNSPECIFIED"] = 0, Z[G[1] = "AGGREGATION_TEMPORALITY_DELTA"] = 1, Z[G[2] = "AGGREGATION_TEMPORALITY_CUMULATIVE"] = 2, Z
          }(), I.DataPointFlags = function() {
            var G = {},
              Z = Object.create(G);
            return Z[G[0] = "DATA_POINT_FLAGS_DO_NOT_USE"] = 0, Z[G[1] = "DATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK"] = 1, Z
          }(), I.NumberDataPoint = function() {
            function G(D) {
              if (this.attributes = [], this.exemplars = [], D) {
                for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                  if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
              }
            }
            G.prototype.attributes = J1.emptyArray, G.prototype.startTimeUnixNano = null, G.prototype.timeUnixNano = null, G.prototype.asDouble = null, G.prototype.asInt = null, G.prototype.exemplars = J1.emptyArray, G.prototype.flags = null;
            var Z;
            return Object.defineProperty(G.prototype, "value", {
              get: J1.oneOfGetter(Z = ["asDouble", "asInt"]),
              set: J1.oneOfSetter(Z)
            }), G.create = function D(Y) {
              return new G(Y)
            }, G.encode = function D(Y, W) {
              if (!W) W = p4.create();
              if (Y.startTimeUnixNano != null && Object.hasOwnProperty.call(Y, "startTimeUnixNano")) W.uint32(17).fixed64(Y.startTimeUnixNano);
              if (Y.timeUnixNano != null && Object.hasOwnProperty.call(Y, "timeUnixNano")) W.uint32(25).fixed64(Y.timeUnixNano);
              if (Y.asDouble != null && Object.hasOwnProperty.call(Y, "asDouble")) W.uint32(33).double(Y.asDouble);
              if (Y.exemplars != null && Y.exemplars.length)
                for (var J = 0; J < Y.exemplars.length; ++J) G1.opentelemetry.proto.metrics.v1.Exemplar.encode(Y.exemplars[J], W.uint32(42).fork()).ldelim();
              if (Y.asInt != null && Object.hasOwnProperty.call(Y, "asInt")) W.uint32(49).sfixed64(Y.asInt);
              if (Y.attributes != null && Y.attributes.length)
                for (var J = 0; J < Y.attributes.length; ++J) G1.opentelemetry.proto.common.v1.KeyValue.encode(Y.attributes[J], W.uint32(58).fork()).ldelim();
              if (Y.flags != null && Object.hasOwnProperty.call(Y, "flags")) W.uint32(64).uint32(Y.flags);
              return W
            }, G.encodeDelimited = function D(Y, W) {
              return this.encode(Y, W).ldelim()
            }, G.decode = function D(Y, W) {
              if (!(Y instanceof LA)) Y = LA.create(Y);
              var J = W === void 0 ? Y.len : Y.pos + W,
                F = new G1.opentelemetry.proto.metrics.v1.NumberDataPoint;
              while (Y.pos < J) {
                var X = Y.uint32();
                switch (X >>> 3) {
                  case 7: {
                    if (!(F.attributes && F.attributes.length)) F.attributes = [];
                    F.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(Y, Y.uint32()));
                    break
                  }
                  case 2: {
                    F.startTimeUnixNano = Y.fixed64();
                    break
                  }
                  case 3: {
                    F.timeUnixNano = Y.fixed64();
                    break
                  }
                  case 4: {
                    F.asDouble = Y.double();
                    break
                  }
                  case 6: {
                    F.asInt = Y.sfixed64();
                    break
                  }
                  case 5: {
                    if (!(F.exemplars && F.exemplars.length)) F.exemplars = [];
                    F.exemplars.push(G1.opentelemetry.proto.metrics.v1.Exemplar.decode(Y, Y.uint32()));
                    break
                  }
                  case 8: {
                    F.flags = Y.uint32();
                    break
                  }
                  default:
                    Y.skipType(X & 7);
                    break
                }
              }
              return F
            }, G.decodeDelimited = function D(Y) {
              if (!(Y instanceof LA)) Y = new LA(Y);
              return this.decode(Y, Y.uint32())
            }, G.verify = function D(Y) {
              if (typeof Y !== "object" || Y === null) return "object expected";
              var W = {};
              if (Y.attributes != null && Y.hasOwnProperty("attributes")) {
                if (!Array.isArray(Y.attributes)) return "attributes: array expected";
                for (var J = 0; J < Y.attributes.length; ++J) {
                  var F = G1.opentelemetry.proto.common.v1.KeyValue.verify(Y.attributes[J]);
                  if (F) return "attributes." + F
                }
              }
              if (Y.startTimeUnixNano != null && Y.hasOwnProperty("startTimeUnixNano")) {
                if (!J1.isInteger(Y.startTimeUnixNano) && !(Y.startTimeUnixNano && J1.isInteger(Y.startTimeUnixNano.low) && J1.isInteger(Y.startTimeUnixNano.high))) return "startTimeUnixNano: integer|Long expected"
              }
              if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano")) {
                if (!J1.isInteger(Y.timeUnixNano) && !(Y.timeUnixNano && J1.isInteger(Y.timeUnixNano.low) && J1.isInteger(Y.timeUnixNano.high))) return "timeUnixNano: integer|Long expected"
              }
              if (Y.asDouble != null && Y.hasOwnProperty("asDouble")) {
                if (W.value = 1, typeof Y.asDouble !== "number") return "asDouble: number expected"
              }
              if (Y.asInt != null && Y.hasOwnProperty("asInt")) {
                if (W.value === 1) return "value: multiple values";
                if (W.value = 1, !J1.isInteger(Y.asInt) && !(Y.asInt && J1.isInteger(Y.asInt.low) && J1.isInteger(Y.asInt.high))) return "asInt: integer|Long expected"
              }
              if (Y.exemplars != null && Y.hasOwnProperty("exemplars")) {
                if (!Array.isArray(Y.exemplars)) return "exemplars: array expected";
                for (var J = 0; J < Y.exemplars.length; ++J) {
                  var F = G1.opentelemetry.proto.metrics.v1.Exemplar.verify(Y.exemplars[J]);
                  if (F) return "exemplars." + F
                }
              }
              if (Y.flags != null && Y.hasOwnProperty("flags")) {
                if (!J1.isInteger(Y.flags)) return "flags: integer expected"
              }
              return null
            }, G.fromObject = function D(Y) {
              if (Y instanceof G1.opentelemetry.proto.metrics.v1.NumberDataPoint) return Y;
              var W = new G1.opentelemetry.proto.metrics.v1.NumberDataPoint;
              if (Y.attributes) {
                if (!Array.isArray(Y.attributes)) throw TypeError(".opentelemetry.proto.metrics.v1.NumberDataPoint.attributes: array expected");
                W.attributes = [];
                for (var J = 0; J < Y.attributes.length; ++J) {
                  if (typeof Y.attributes[J] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.NumberDataPoint.attributes: object expected");
                  W.attributes[J] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(Y.attributes[J])
                }
              }
              if (Y.startTimeUnixNano != null) {
                if (J1.Long)(W.startTimeUnixNano = J1.Long.fromValue(Y.startTimeUnixNano)).unsigned = !1;
                else if (typeof Y.startTimeUnixNano === "string") W.startTimeUnixNano = parseInt(Y.startTimeUnixNano, 10);
                else if (typeof Y.startTimeUnixNano === "number") W.startTimeUnixNano = Y.startTimeUnixNano;
                else if (typeof Y.startTimeUnixNano === "object") W.startTimeUnixNano = new J1.LongBits(Y.startTimeUnixNano.low >>> 0, Y.startTimeUnixNano.high >>> 0).toNumber()
              }
              if (Y.timeUnixNano != null) {
                if (J1.Long)(W.timeUnixNano = J1.Long.fromValue(Y.timeUnixNano)).unsigned = !1;
                else if (typeof Y.timeUnixNano === "string") W.timeUnixNano = parseInt(Y.timeUnixNano, 10);
                else if (typeof Y.timeUnixNano === "number") W.timeUnixNano = Y.timeUnixNano;
                else if (typeof Y.timeUnixNano === "object") W.timeUnixNano = new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber()
              }
              if (Y.asDouble != null) W.asDouble = Number(Y.asDouble);
              if (Y.asInt != null) {
                if (J1.Long)(W.asInt = J1.Long.fromValue(Y.asInt)).unsigned = !1;
                else if (typeof Y.asInt === "string") W.asInt = parseInt(Y.asInt, 10);
                else if (typeof Y.asInt === "number") W.asInt = Y.asInt;
                else if (typeof Y.asInt === "object") W.asInt = new J1.LongBits(Y.asInt.low >>> 0, Y.asInt.high >>> 0).toNumber()
              }
              if (Y.exemplars) {
                if (!Array.isArray(Y.exemplars)) throw TypeError(".opentelemetry.proto.metrics.v1.NumberDataPoint.exemplars: array expected");
                W.exemplars = [];
                for (var J = 0; J < Y.exemplars.length; ++J) {
                  if (typeof Y.exemplars[J] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.NumberDataPoint.exemplars: object expected");
                  W.exemplars[J] = G1.opentelemetry.proto.metrics.v1.Exemplar.fromObject(Y.exemplars[J])
                }
              }
              if (Y.flags != null) W.flags = Y.flags >>> 0;
              return W
            }, G.toObject = function D(Y, W) {
              if (!W) W = {};
              var J = {};
              if (W.arrays || W.defaults) J.exemplars = [], J.attributes = [];
              if (W.defaults) {
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.startTimeUnixNano = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.startTimeUnixNano = W.longs === String ? "0" : 0;
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.timeUnixNano = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.timeUnixNano = W.longs === String ? "0" : 0;
                J.flags = 0
              }
              if (Y.startTimeUnixNano != null && Y.hasOwnProperty("startTimeUnixNano"))
                if (typeof Y.startTimeUnixNano === "number") J.startTimeUnixNano = W.longs === String ? String(Y.startTimeUnixNano) : Y.startTimeUnixNano;
                else J.startTimeUnixNano = W.longs === String ? J1.Long.prototype.toString.call(Y.startTimeUnixNano) : W.longs === Number ? new J1.LongBits(Y.startTimeUnixNano.low >>> 0, Y.startTimeUnixNano.high >>> 0).toNumber() : Y.startTimeUnixNano;
              if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano"))
                if (typeof Y.timeUnixNano === "number") J.timeUnixNano = W.longs === String ? String(Y.timeUnixNano) : Y.timeUnixNano;
                else J.timeUnixNano = W.longs === String ? J1.Long.prototype.toString.call(Y.timeUnixNano) : W.longs === Number ? new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber() : Y.timeUnixNano;
              if (Y.asDouble != null && Y.hasOwnProperty("asDouble")) {
                if (J.asDouble = W.json && !isFinite(Y.asDouble) ? String(Y.asDouble) : Y.asDouble, W.oneofs) J.value = "asDouble"
              }
              if (Y.exemplars && Y.exemplars.length) {
                J.exemplars = [];
                for (var X = 0; X < Y.exemplars.length; ++X) J.exemplars[X] = G1.opentelemetry.proto.metrics.v1.Exemplar.toObject(Y.exemplars[X], W)
              }
              if (Y.asInt != null && Y.hasOwnProperty("asInt")) {
                if (typeof Y.asInt === "number") J.asInt = W.longs === String ? String(Y.asInt) : Y.asInt;
                else J.asInt = W.longs === String ? J1.Long.prototype.toString.call(Y.asInt) : W.longs === Number ? new J1.LongBits(Y.asInt.low >>> 0, Y.asInt.high >>> 0).toNumber() : Y.asInt;
                if (W.oneofs) J.value = "asInt"
              }
              if (Y.attributes && Y.attributes.length) {
                J.attributes = [];
                for (var X = 0; X < Y.attributes.length; ++X) J.attributes[X] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(Y.attributes[X], W)
              }
              if (Y.flags != null && Y.hasOwnProperty("flags")) J.flags = Y.flags;
              return J
            }, G.prototype.toJSON = function D() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function D(Y) {
              if (Y === void 0) Y = "type.googleapis.com";
              return Y + "/opentelemetry.proto.metrics.v1.NumberDataPoint"
            }, G
          }(), I.HistogramDataPoint = function() {
            function G(D) {
              if (this.attributes = [], this.bucketCounts = [], this.explicitBounds = [], this.exemplars = [], D) {
                for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                  if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
              }
            }
            G.prototype.attributes = J1.emptyArray, G.prototype.startTimeUnixNano = null, G.prototype.timeUnixNano = null, G.prototype.count = null, G.prototype.sum = null, G.prototype.bucketCounts = J1.emptyArray, G.prototype.explicitBounds = J1.emptyArray, G.prototype.exemplars = J1.emptyArray, G.prototype.flags = null, G.prototype.min = null, G.prototype.max = null;
            var Z;
            return Object.defineProperty(G.prototype, "_sum", {
              get: J1.oneOfGetter(Z = ["sum"]),
              set: J1.oneOfSetter(Z)
            }), Object.defineProperty(G.prototype, "_min", {
              get: J1.oneOfGetter(Z = ["min"]),
              set: J1.oneOfSetter(Z)
            }), Object.defineProperty(G.prototype, "_max", {
              get: J1.oneOfGetter(Z = ["max"]),
              set: J1.oneOfSetter(Z)
            }), G.create = function D(Y) {
              return new G(Y)
            }, G.encode = function D(Y, W) {
              if (!W) W = p4.create();
              if (Y.startTimeUnixNano != null && Object.hasOwnProperty.call(Y, "startTimeUnixNano")) W.uint32(17).fixed64(Y.startTimeUnixNano);
              if (Y.timeUnixNano != null && Object.hasOwnProperty.call(Y, "timeUnixNano")) W.uint32(25).fixed64(Y.timeUnixNano);
              if (Y.count != null && Object.hasOwnProperty.call(Y, "count")) W.uint32(33).fixed64(Y.count);
              if (Y.sum != null && Object.hasOwnProperty.call(Y, "sum")) W.uint32(41).double(Y.sum);
              if (Y.bucketCounts != null && Y.bucketCounts.length) {
                W.uint32(50).fork();
                for (var J = 0; J < Y.bucketCounts.length; ++J) W.fixed64(Y.bucketCounts[J]);
                W.ldelim()
              }
              if (Y.explicitBounds != null && Y.explicitBounds.length) {
                W.uint32(58).fork();
                for (var J = 0; J < Y.explicitBounds.length; ++J) W.double(Y.explicitBounds[J]);
                W.ldelim()
              }
              if (Y.exemplars != null && Y.exemplars.length)
                for (var J = 0; J < Y.exemplars.length; ++J) G1.opentelemetry.proto.metrics.v1.Exemplar.encode(Y.exemplars[J], W.uint32(66).fork()).ldelim();
              if (Y.attributes != null && Y.attributes.length)
                for (var J = 0; J < Y.attributes.length; ++J) G1.opentelemetry.proto.common.v1.KeyValue.encode(Y.attributes[J], W.uint32(74).fork()).ldelim();
              if (Y.flags != null && Object.hasOwnProperty.call(Y, "flags")) W.uint32(80).uint32(Y.flags);
              if (Y.min != null && Object.hasOwnProperty.call(Y, "min")) W.uint32(89).double(Y.min);
              if (Y.max != null && Object.hasOwnProperty.call(Y, "max")) W.uint32(97).double(Y.max);
              return W
            }, G.encodeDelimited = function D(Y, W) {
              return this.encode(Y, W).ldelim()
            }, G.decode = function D(Y, W) {
              if (!(Y instanceof LA)) Y = LA.create(Y);
              var J = W === void 0 ? Y.len : Y.pos + W,
                F = new G1.opentelemetry.proto.metrics.v1.HistogramDataPoint;
              while (Y.pos < J) {
                var X = Y.uint32();
                switch (X >>> 3) {
                  case 9: {
                    if (!(F.attributes && F.attributes.length)) F.attributes = [];
                    F.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(Y, Y.uint32()));
                    break
                  }
                  case 2: {
                    F.startTimeUnixNano = Y.fixed64();
                    break
                  }
                  case 3: {
                    F.timeUnixNano = Y.fixed64();
                    break
                  }
                  case 4: {
                    F.count = Y.fixed64();
                    break
                  }
                  case 5: {
                    F.sum = Y.double();
                    break
                  }
                  case 6: {
                    if (!(F.bucketCounts && F.bucketCounts.length)) F.bucketCounts = [];
                    if ((X & 7) === 2) {
                      var V = Y.uint32() + Y.pos;
                      while (Y.pos < V) F.bucketCounts.push(Y.fixed64())
                    } else F.bucketCounts.push(Y.fixed64());
                    break
                  }
                  case 7: {
                    if (!(F.explicitBounds && F.explicitBounds.length)) F.explicitBounds = [];
                    if ((X & 7) === 2) {
                      var V = Y.uint32() + Y.pos;
                      while (Y.pos < V) F.explicitBounds.push(Y.double())
                    } else F.explicitBounds.push(Y.double());
                    break
                  }
                  case 8: {
                    if (!(F.exemplars && F.exemplars.length)) F.exemplars = [];
                    F.exemplars.push(G1.opentelemetry.proto.metrics.v1.Exemplar.decode(Y, Y.uint32()));
                    break
                  }
                  case 10: {
                    F.flags = Y.uint32();
                    break
                  }
                  case 11: {
                    F.min = Y.double();
                    break
                  }
                  case 12: {
                    F.max = Y.double();
                    break
                  }
                  default:
                    Y.skipType(X & 7);
                    break
                }
              }
              return F
            }, G.decodeDelimited = function D(Y) {
              if (!(Y instanceof LA)) Y = new LA(Y);
              return this.decode(Y, Y.uint32())
            }, G.verify = function D(Y) {
              if (typeof Y !== "object" || Y === null) return "object expected";
              var W = {};
              if (Y.attributes != null && Y.hasOwnProperty("attributes")) {
                if (!Array.isArray(Y.attributes)) return "attributes: array expected";
                for (var J = 0; J < Y.attributes.length; ++J) {
                  var F = G1.opentelemetry.proto.common.v1.KeyValue.verify(Y.attributes[J]);
                  if (F) return "attributes." + F
                }
              }
              if (Y.startTimeUnixNano != null && Y.hasOwnProperty("startTimeUnixNano")) {
                if (!J1.isInteger(Y.startTimeUnixNano) && !(Y.startTimeUnixNano && J1.isInteger(Y.startTimeUnixNano.low) && J1.isInteger(Y.startTimeUnixNano.high))) return "startTimeUnixNano: integer|Long expected"
              }
              if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano")) {
                if (!J1.isInteger(Y.timeUnixNano) && !(Y.timeUnixNano && J1.isInteger(Y.timeUnixNano.low) && J1.isInteger(Y.timeUnixNano.high))) return "timeUnixNano: integer|Long expected"
              }
              if (Y.count != null && Y.hasOwnProperty("count")) {
                if (!J1.isInteger(Y.count) && !(Y.count && J1.isInteger(Y.count.low) && J1.isInteger(Y.count.high))) return "count: integer|Long expected"
              }
              if (Y.sum != null && Y.hasOwnProperty("sum")) {
                if (W._sum = 1, typeof Y.sum !== "number") return "sum: number expected"
              }
              if (Y.bucketCounts != null && Y.hasOwnProperty("bucketCounts")) {
                if (!Array.isArray(Y.bucketCounts)) return "bucketCounts: array expected";
                for (var J = 0; J < Y.bucketCounts.length; ++J)
                  if (!J1.isInteger(Y.bucketCounts[J]) && !(Y.bucketCounts[J] && J1.isInteger(Y.bucketCounts[J].low) && J1.isInteger(Y.bucketCounts[J].high))) return "bucketCounts: integer|Long[] expected"
              }
              if (Y.explicitBounds != null && Y.hasOwnProperty("explicitBounds")) {
                if (!Array.isArray(Y.explicitBounds)) return "explicitBounds: array expected";
                for (var J = 0; J < Y.explicitBounds.length; ++J)
                  if (typeof Y.explicitBounds[J] !== "number") return "explicitBounds: number[] expected"
              }
              if (Y.exemplars != null && Y.hasOwnProperty("exemplars")) {
                if (!Array.isArray(Y.exemplars)) return "exemplars: array expected";
                for (var J = 0; J < Y.exemplars.length; ++J) {
                  var F = G1.opentelemetry.proto.metrics.v1.Exemplar.verify(Y.exemplars[J]);
                  if (F) return "exemplars." + F
                }
              }
              if (Y.flags != null && Y.hasOwnProperty("flags")) {
                if (!J1.isInteger(Y.flags)) return "flags: integer expected"
              }
              if (Y.min != null && Y.hasOwnProperty("min")) {
                if (W._min = 1, typeof Y.min !== "number") return "min: number expected"
              }
              if (Y.max != null && Y.hasOwnProperty("max")) {
                if (W._max = 1, typeof Y.max !== "number") return "max: number expected"
              }
              return null
            }, G.fromObject = function D(Y) {
              if (Y instanceof G1.opentelemetry.proto.metrics.v1.HistogramDataPoint) return Y;
              var W = new G1.opentelemetry.proto.metrics.v1.HistogramDataPoint;
              if (Y.attributes) {
                if (!Array.isArray(Y.attributes)) throw TypeError(".opentelemetry.proto.metrics.v1.HistogramDataPoint.attributes: array expected");
                W.attributes = [];
                for (var J = 0; J < Y.attributes.length; ++J) {
                  if (typeof Y.attributes[J] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.HistogramDataPoint.attributes: object expected");
                  W.attributes[J] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(Y.attributes[J])
                }
              }
              if (Y.startTimeUnixNano != null) {
                if (J1.Long)(W.startTimeUnixNano = J1.Long.fromValue(Y.startTimeUnixNano)).unsigned = !1;
                else if (typeof Y.startTimeUnixNano === "string") W.startTimeUnixNano = parseInt(Y.startTimeUnixNano, 10);
                else if (typeof Y.startTimeUnixNano === "number") W.startTimeUnixNano = Y.startTimeUnixNano;
                else if (typeof Y.startTimeUnixNano === "object") W.startTimeUnixNano = new J1.LongBits(Y.startTimeUnixNano.low >>> 0, Y.startTimeUnixNano.high >>> 0).toNumber()
              }
              if (Y.timeUnixNano != null) {
                if (J1.Long)(W.timeUnixNano = J1.Long.fromValue(Y.timeUnixNano)).unsigned = !1;
                else if (typeof Y.timeUnixNano === "string") W.timeUnixNano = parseInt(Y.timeUnixNano, 10);
                else if (typeof Y.timeUnixNano === "number") W.timeUnixNano = Y.timeUnixNano;
                else if (typeof Y.timeUnixNano === "object") W.timeUnixNano = new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber()
              }
              if (Y.count != null) {
                if (J1.Long)(W.count = J1.Long.fromValue(Y.count)).unsigned = !1;
                else if (typeof Y.count === "string") W.count = parseInt(Y.count, 10);
                else if (typeof Y.count === "number") W.count = Y.count;
                else if (typeof Y.count === "object") W.count = new J1.LongBits(Y.count.low >>> 0, Y.count.high >>> 0).toNumber()
              }
              if (Y.sum != null) W.sum = Number(Y.sum);
              if (Y.bucketCounts) {
                if (!Array.isArray(Y.bucketCounts)) throw TypeError(".opentelemetry.proto.metrics.v1.HistogramDataPoint.bucketCounts: array expected");
                W.bucketCounts = [];
                for (var J = 0; J < Y.bucketCounts.length; ++J)
                  if (J1.Long)(W.bucketCounts[J] = J1.Long.fromValue(Y.bucketCounts[J])).unsigned = !1;
                  else if (typeof Y.bucketCounts[J] === "string") W.bucketCounts[J] = parseInt(Y.bucketCounts[J], 10);
                else if (typeof Y.bucketCounts[J] === "number") W.bucketCounts[J] = Y.bucketCounts[J];
                else if (typeof Y.bucketCounts[J] === "object") W.bucketCounts[J] = new J1.LongBits(Y.bucketCounts[J].low >>> 0, Y.bucketCounts[J].high >>> 0).toNumber()
              }
              if (Y.explicitBounds) {
                if (!Array.isArray(Y.explicitBounds)) throw TypeError(".opentelemetry.proto.metrics.v1.HistogramDataPoint.explicitBounds: array expected");
                W.explicitBounds = [];
                for (var J = 0; J < Y.explicitBounds.length; ++J) W.explicitBounds[J] = Number(Y.explicitBounds[J])
              }
              if (Y.exemplars) {
                if (!Array.isArray(Y.exemplars)) throw TypeError(".opentelemetry.proto.metrics.v1.HistogramDataPoint.exemplars: array expected");
                W.exemplars = [];
                for (var J = 0; J < Y.exemplars.length; ++J) {
                  if (typeof Y.exemplars[J] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.HistogramDataPoint.exemplars: object expected");
                  W.exemplars[J] = G1.opentelemetry.proto.metrics.v1.Exemplar.fromObject(Y.exemplars[J])
                }
              }
              if (Y.flags != null) W.flags = Y.flags >>> 0;
              if (Y.min != null) W.min = Number(Y.min);
              if (Y.max != null) W.max = Number(Y.max);
              return W
            }, G.toObject = function D(Y, W) {
              if (!W) W = {};
              var J = {};
              if (W.arrays || W.defaults) J.bucketCounts = [], J.explicitBounds = [], J.exemplars = [], J.attributes = [];
              if (W.defaults) {
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.startTimeUnixNano = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.startTimeUnixNano = W.longs === String ? "0" : 0;
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.timeUnixNano = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.timeUnixNano = W.longs === String ? "0" : 0;
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.count = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.count = W.longs === String ? "0" : 0;
                J.flags = 0
              }
              if (Y.startTimeUnixNano != null && Y.hasOwnProperty("startTimeUnixNano"))
                if (typeof Y.startTimeUnixNano === "number") J.startTimeUnixNano = W.longs === String ? String(Y.startTimeUnixNano) : Y.startTimeUnixNano;
                else J.startTimeUnixNano = W.longs === String ? J1.Long.prototype.toString.call(Y.startTimeUnixNano) : W.longs === Number ? new J1.LongBits(Y.startTimeUnixNano.low >>> 0, Y.startTimeUnixNano.high >>> 0).toNumber() : Y.startTimeUnixNano;
              if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano"))
                if (typeof Y.timeUnixNano === "number") J.timeUnixNano = W.longs === String ? String(Y.timeUnixNano) : Y.timeUnixNano;
                else J.timeUnixNano = W.longs === String ? J1.Long.prototype.toString.call(Y.timeUnixNano) : W.longs === Number ? new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber() : Y.timeUnixNano;
              if (Y.count != null && Y.hasOwnProperty("count"))
                if (typeof Y.count === "number") J.count = W.longs === String ? String(Y.count) : Y.count;
                else J.count = W.longs === String ? J1.Long.prototype.toString.call(Y.count) : W.longs === Number ? new J1.LongBits(Y.count.low >>> 0, Y.count.high >>> 0).toNumber() : Y.count;
              if (Y.sum != null && Y.hasOwnProperty("sum")) {
                if (J.sum = W.json && !isFinite(Y.sum) ? String(Y.sum) : Y.sum, W.oneofs) J._sum = "sum"
              }
              if (Y.bucketCounts && Y.bucketCounts.length) {
                J.bucketCounts = [];
                for (var X = 0; X < Y.bucketCounts.length; ++X)
                  if (typeof Y.bucketCounts[X] === "number") J.bucketCounts[X] = W.longs === String ? String(Y.bucketCounts[X]) : Y.bucketCounts[X];
                  else J.bucketCounts[X] = W.longs === String ? J1.Long.prototype.toString.call(Y.bucketCounts[X]) : W.longs === Number ? new J1.LongBits(Y.bucketCounts[X].low >>> 0, Y.bucketCounts[X].high >>> 0).toNumber() : Y.bucketCounts[X]
              }
              if (Y.explicitBounds && Y.explicitBounds.length) {
                J.explicitBounds = [];
                for (var X = 0; X < Y.explicitBounds.length; ++X) J.explicitBounds[X] = W.json && !isFinite(Y.explicitBounds[X]) ? String(Y.explicitBounds[X]) : Y.explicitBounds[X]
              }
              if (Y.exemplars && Y.exemplars.length) {
                J.exemplars = [];
                for (var X = 0; X < Y.exemplars.length; ++X) J.exemplars[X] = G1.opentelemetry.proto.metrics.v1.Exemplar.toObject(Y.exemplars[X], W)
              }
              if (Y.attributes && Y.attributes.length) {
                J.attributes = [];
                for (var X = 0; X < Y.attributes.length; ++X) J.attributes[X] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(Y.attributes[X], W)
              }
              if (Y.flags != null && Y.hasOwnProperty("flags")) J.flags = Y.flags;
              if (Y.min != null && Y.hasOwnProperty("min")) {
                if (J.min = W.json && !isFinite(Y.min) ? String(Y.min) : Y.min, W.oneofs) J._min = "min"
              }
              if (Y.max != null && Y.hasOwnProperty("max")) {
                if (J.max = W.json && !isFinite(Y.max) ? String(Y.max) : Y.max, W.oneofs) J._max = "max"
              }
              return J
            }, G.prototype.toJSON = function D() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function D(Y) {
              if (Y === void 0) Y = "type.googleapis.com";
              return Y + "/opentelemetry.proto.metrics.v1.HistogramDataPoint"
            }, G
          }(), I.ExponentialHistogramDataPoint = function() {
            function G(D) {
              if (this.attributes = [], this.exemplars = [], D) {
                for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                  if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
              }
            }
            G.prototype.attributes = J1.emptyArray, G.prototype.startTimeUnixNano = null, G.prototype.timeUnixNano = null, G.prototype.count = null, G.prototype.sum = null, G.prototype.scale = null, G.prototype.zeroCount = null, G.prototype.positive = null, G.prototype.negative = null, G.prototype.flags = null, G.prototype.exemplars = J1.emptyArray, G.prototype.min = null, G.prototype.max = null, G.prototype.zeroThreshold = null;
            var Z;
            return Object.defineProperty(G.prototype, "_sum", {
              get: J1.oneOfGetter(Z = ["sum"]),
              set: J1.oneOfSetter(Z)
            }), Object.defineProperty(G.prototype, "_min", {
              get: J1.oneOfGetter(Z = ["min"]),
              set: J1.oneOfSetter(Z)
            }), Object.defineProperty(G.prototype, "_max", {
              get: J1.oneOfGetter(Z = ["max"]),
              set: J1.oneOfSetter(Z)
            }), G.create = function D(Y) {
              return new G(Y)
            }, G.encode = function D(Y, W) {
              if (!W) W = p4.create();
              if (Y.attributes != null && Y.attributes.length)
                for (var J = 0; J < Y.attributes.length; ++J) G1.opentelemetry.proto.common.v1.KeyValue.encode(Y.attributes[J], W.uint32(10).fork()).ldelim();
              if (Y.startTimeUnixNano != null && Object.hasOwnProperty.call(Y, "startTimeUnixNano")) W.uint32(17).fixed64(Y.startTimeUnixNano);
              if (Y.timeUnixNano != null && Object.hasOwnProperty.call(Y, "timeUnixNano")) W.uint32(25).fixed64(Y.timeUnixNano);
              if (Y.count != null && Object.hasOwnProperty.call(Y, "count")) W.uint32(33).fixed64(Y.count);
              if (Y.sum != null && Object.hasOwnProperty.call(Y, "sum")) W.uint32(41).double(Y.sum);
              if (Y.scale != null && Object.hasOwnProperty.call(Y, "scale")) W.uint32(48).sint32(Y.scale);
              if (Y.zeroCount != null && Object.hasOwnProperty.call(Y, "zeroCount")) W.uint32(57).fixed64(Y.zeroCount);
              if (Y.positive != null && Object.hasOwnProperty.call(Y, "positive")) G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.encode(Y.positive, W.uint32(66).fork()).ldelim();
              if (Y.negative != null && Object.hasOwnProperty.call(Y, "negative")) G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.encode(Y.negative, W.uint32(74).fork()).ldelim();
              if (Y.flags != null && Object.hasOwnProperty.call(Y, "flags")) W.uint32(80).uint32(Y.flags);
              if (Y.exemplars != null && Y.exemplars.length)
                for (var J = 0; J < Y.exemplars.length; ++J) G1.opentelemetry.proto.metrics.v1.Exemplar.encode(Y.exemplars[J], W.uint32(90).fork()).ldelim();
              if (Y.min != null && Object.hasOwnProperty.call(Y, "min")) W.uint32(97).double(Y.min);
              if (Y.max != null && Object.hasOwnProperty.call(Y, "max")) W.uint32(105).double(Y.max);
              if (Y.zeroThreshold != null && Object.hasOwnProperty.call(Y, "zeroThreshold")) W.uint32(113).double(Y.zeroThreshold);
              return W
            }, G.encodeDelimited = function D(Y, W) {
              return this.encode(Y, W).ldelim()
            }, G.decode = function D(Y, W) {
              if (!(Y instanceof LA)) Y = LA.create(Y);
              var J = W === void 0 ? Y.len : Y.pos + W,
                F = new G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint;
              while (Y.pos < J) {
                var X = Y.uint32();
                switch (X >>> 3) {
                  case 1: {
                    if (!(F.attributes && F.attributes.length)) F.attributes = [];
                    F.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(Y, Y.uint32()));
                    break
                  }
                  case 2: {
                    F.startTimeUnixNano = Y.fixed64();
                    break
                  }
                  case 3: {
                    F.timeUnixNano = Y.fixed64();
                    break
                  }
                  case 4: {
                    F.count = Y.fixed64();
                    break
                  }
                  case 5: {
                    F.sum = Y.double();
                    break
                  }
                  case 6: {
                    F.scale = Y.sint32();
                    break
                  }
                  case 7: {
                    F.zeroCount = Y.fixed64();
                    break
                  }
                  case 8: {
                    F.positive = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.decode(Y, Y.uint32());
                    break
                  }
                  case 9: {
                    F.negative = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.decode(Y, Y.uint32());
                    break
                  }
                  case 10: {
                    F.flags = Y.uint32();
                    break
                  }
                  case 11: {
                    if (!(F.exemplars && F.exemplars.length)) F.exemplars = [];
                    F.exemplars.push(G1.opentelemetry.proto.metrics.v1.Exemplar.decode(Y, Y.uint32()));
                    break
                  }
                  case 12: {
                    F.min = Y.double();
                    break
                  }
                  case 13: {
                    F.max = Y.double();
                    break
                  }
                  case 14: {
                    F.zeroThreshold = Y.double();
                    break
                  }
                  default:
                    Y.skipType(X & 7);
                    break
                }
              }
              return F
            }, G.decodeDelimited = function D(Y) {
              if (!(Y instanceof LA)) Y = new LA(Y);
              return this.decode(Y, Y.uint32())
            }, G.verify = function D(Y) {
              if (typeof Y !== "object" || Y === null) return "object expected";
              var W = {};
              if (Y.attributes != null && Y.hasOwnProperty("attributes")) {
                if (!Array.isArray(Y.attributes)) return "attributes: array expected";
                for (var J = 0; J < Y.attributes.length; ++J) {
                  var F = G1.opentelemetry.proto.common.v1.KeyValue.verify(Y.attributes[J]);
                  if (F) return "attributes." + F
                }
              }
              if (Y.startTimeUnixNano != null && Y.hasOwnProperty("startTimeUnixNano")) {
                if (!J1.isInteger(Y.startTimeUnixNano) && !(Y.startTimeUnixNano && J1.isInteger(Y.startTimeUnixNano.low) && J1.isInteger(Y.startTimeUnixNano.high))) return "startTimeUnixNano: integer|Long expected"
              }
              if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano")) {
                if (!J1.isInteger(Y.timeUnixNano) && !(Y.timeUnixNano && J1.isInteger(Y.timeUnixNano.low) && J1.isInteger(Y.timeUnixNano.high))) return "timeUnixNano: integer|Long expected"
              }
              if (Y.count != null && Y.hasOwnProperty("count")) {
                if (!J1.isInteger(Y.count) && !(Y.count && J1.isInteger(Y.count.low) && J1.isInteger(Y.count.high))) return "count: integer|Long expected"
              }
              if (Y.sum != null && Y.hasOwnProperty("sum")) {
                if (W._sum = 1, typeof Y.sum !== "number") return "sum: number expected"
              }
              if (Y.scale != null && Y.hasOwnProperty("scale")) {
                if (!J1.isInteger(Y.scale)) return "scale: integer expected"
              }
              if (Y.zeroCount != null && Y.hasOwnProperty("zeroCount")) {
                if (!J1.isInteger(Y.zeroCount) && !(Y.zeroCount && J1.isInteger(Y.zeroCount.low) && J1.isInteger(Y.zeroCount.high))) return "zeroCount: integer|Long expected"
              }
              if (Y.positive != null && Y.hasOwnProperty("positive")) {
                var F = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.verify(Y.positive);
                if (F) return "positive." + F
              }
              if (Y.negative != null && Y.hasOwnProperty("negative")) {
                var F = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.verify(Y.negative);
                if (F) return "negative." + F
              }
              if (Y.flags != null && Y.hasOwnProperty("flags")) {
                if (!J1.isInteger(Y.flags)) return "flags: integer expected"
              }
              if (Y.exemplars != null && Y.hasOwnProperty("exemplars")) {
                if (!Array.isArray(Y.exemplars)) return "exemplars: array expected";
                for (var J = 0; J < Y.exemplars.length; ++J) {
                  var F = G1.opentelemetry.proto.metrics.v1.Exemplar.verify(Y.exemplars[J]);
                  if (F) return "exemplars." + F
                }
              }
              if (Y.min != null && Y.hasOwnProperty("min")) {
                if (W._min = 1, typeof Y.min !== "number") return "min: number expected"
              }
              if (Y.max != null && Y.hasOwnProperty("max")) {
                if (W._max = 1, typeof Y.max !== "number") return "max: number expected"
              }
              if (Y.zeroThreshold != null && Y.hasOwnProperty("zeroThreshold")) {
                if (typeof Y.zeroThreshold !== "number") return "zeroThreshold: number expected"
              }
              return null
            }, G.fromObject = function D(Y) {
              if (Y instanceof G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint) return Y;
              var W = new G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint;
              if (Y.attributes) {
                if (!Array.isArray(Y.attributes)) throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.attributes: array expected");
                W.attributes = [];
                for (var J = 0; J < Y.attributes.length; ++J) {
                  if (typeof Y.attributes[J] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.attributes: object expected");
                  W.attributes[J] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(Y.attributes[J])
                }
              }
              if (Y.startTimeUnixNano != null) {
                if (J1.Long)(W.startTimeUnixNano = J1.Long.fromValue(Y.startTimeUnixNano)).unsigned = !1;
                else if (typeof Y.startTimeUnixNano === "string") W.startTimeUnixNano = parseInt(Y.startTimeUnixNano, 10);
                else if (typeof Y.startTimeUnixNano === "number") W.startTimeUnixNano = Y.startTimeUnixNano;
                else if (typeof Y.startTimeUnixNano === "object") W.startTimeUnixNano = new J1.LongBits(Y.startTimeUnixNano.low >>> 0, Y.startTimeUnixNano.high >>> 0).toNumber()
              }
              if (Y.timeUnixNano != null) {
                if (J1.Long)(W.timeUnixNano = J1.Long.fromValue(Y.timeUnixNano)).unsigned = !1;
                else if (typeof Y.timeUnixNano === "string") W.timeUnixNano = parseInt(Y.timeUnixNano, 10);
                else if (typeof Y.timeUnixNano === "number") W.timeUnixNano = Y.timeUnixNano;
                else if (typeof Y.timeUnixNano === "object") W.timeUnixNano = new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber()
              }
              if (Y.count != null) {
                if (J1.Long)(W.count = J1.Long.fromValue(Y.count)).unsigned = !1;
                else if (typeof Y.count === "string") W.count = parseInt(Y.count, 10);
                else if (typeof Y.count === "number") W.count = Y.count;
                else if (typeof Y.count === "object") W.count = new J1.LongBits(Y.count.low >>> 0, Y.count.high >>> 0).toNumber()
              }
              if (Y.sum != null) W.sum = Number(Y.sum);
              if (Y.scale != null) W.scale = Y.scale | 0;
              if (Y.zeroCount != null) {
                if (J1.Long)(W.zeroCount = J1.Long.fromValue(Y.zeroCount)).unsigned = !1;
                else if (typeof Y.zeroCount === "string") W.zeroCount = parseInt(Y.zeroCount, 10);
                else if (typeof Y.zeroCount === "number") W.zeroCount = Y.zeroCount;
                else if (typeof Y.zeroCount === "object") W.zeroCount = new J1.LongBits(Y.zeroCount.low >>> 0, Y.zeroCount.high >>> 0).toNumber()
              }
              if (Y.positive != null) {
                if (typeof Y.positive !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.positive: object expected");
                W.positive = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.fromObject(Y.positive)
              }
              if (Y.negative != null) {
                if (typeof Y.negative !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.negative: object expected");
                W.negative = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.fromObject(Y.negative)
              }
              if (Y.flags != null) W.flags = Y.flags >>> 0;
              if (Y.exemplars) {
                if (!Array.isArray(Y.exemplars)) throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.exemplars: array expected");
                W.exemplars = [];
                for (var J = 0; J < Y.exemplars.length; ++J) {
                  if (typeof Y.exemplars[J] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.exemplars: object expected");
                  W.exemplars[J] = G1.opentelemetry.proto.metrics.v1.Exemplar.fromObject(Y.exemplars[J])
                }
              }
              if (Y.min != null) W.min = Number(Y.min);
              if (Y.max != null) W.max = Number(Y.max);
              if (Y.zeroThreshold != null) W.zeroThreshold = Number(Y.zeroThreshold);
              return W
            }, G.toObject = function D(Y, W) {
              if (!W) W = {};
              var J = {};
              if (W.arrays || W.defaults) J.attributes = [], J.exemplars = [];
              if (W.defaults) {
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.startTimeUnixNano = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.startTimeUnixNano = W.longs === String ? "0" : 0;
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.timeUnixNano = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.timeUnixNano = W.longs === String ? "0" : 0;
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.count = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.count = W.longs === String ? "0" : 0;
                if (J.scale = 0, J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.zeroCount = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.zeroCount = W.longs === String ? "0" : 0;
                J.positive = null, J.negative = null, J.flags = 0, J.zeroThreshold = 0
              }
              if (Y.attributes && Y.attributes.length) {
                J.attributes = [];
                for (var X = 0; X < Y.attributes.length; ++X) J.attributes[X] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(Y.attributes[X], W)
              }
              if (Y.startTimeUnixNano != null && Y.hasOwnProperty("startTimeUnixNano"))
                if (typeof Y.startTimeUnixNano === "number") J.startTimeUnixNano = W.longs === String ? String(Y.startTimeUnixNano) : Y.startTimeUnixNano;
                else J.startTimeUnixNano = W.longs === String ? J1.Long.prototype.toString.call(Y.startTimeUnixNano) : W.longs === Number ? new J1.LongBits(Y.startTimeUnixNano.low >>> 0, Y.startTimeUnixNano.high >>> 0).toNumber() : Y.startTimeUnixNano;
              if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano"))
                if (typeof Y.timeUnixNano === "number") J.timeUnixNano = W.longs === String ? String(Y.timeUnixNano) : Y.timeUnixNano;
                else J.timeUnixNano = W.longs === String ? J1.Long.prototype.toString.call(Y.timeUnixNano) : W.longs === Number ? new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber() : Y.timeUnixNano;
              if (Y.count != null && Y.hasOwnProperty("count"))
                if (typeof Y.count === "number") J.count = W.longs === String ? String(Y.count) : Y.count;
                else J.count = W.longs === String ? J1.Long.prototype.toString.call(Y.count) : W.longs === Number ? new J1.LongBits(Y.count.low >>> 0, Y.count.high >>> 0).toNumber() : Y.count;
              if (Y.sum != null && Y.hasOwnProperty("sum")) {
                if (J.sum = W.json && !isFinite(Y.sum) ? String(Y.sum) : Y.sum, W.oneofs) J._sum = "sum"
              }
              if (Y.scale != null && Y.hasOwnProperty("scale")) J.scale = Y.scale;
              if (Y.zeroCount != null && Y.hasOwnProperty("zeroCount"))
                if (typeof Y.zeroCount === "number") J.zeroCount = W.longs === String ? String(Y.zeroCount) : Y.zeroCount;
                else J.zeroCount = W.longs === String ? J1.Long.prototype.toString.call(Y.zeroCount) : W.longs === Number ? new J1.LongBits(Y.zeroCount.low >>> 0, Y.zeroCount.high >>> 0).toNumber() : Y.zeroCount;
              if (Y.positive != null && Y.hasOwnProperty("positive")) J.positive = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.toObject(Y.positive, W);
              if (Y.negative != null && Y.hasOwnProperty("negative")) J.negative = G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.toObject(Y.negative, W);
              if (Y.flags != null && Y.hasOwnProperty("flags")) J.flags = Y.flags;
              if (Y.exemplars && Y.exemplars.length) {
                J.exemplars = [];
                for (var X = 0; X < Y.exemplars.length; ++X) J.exemplars[X] = G1.opentelemetry.proto.metrics.v1.Exemplar.toObject(Y.exemplars[X], W)
              }
              if (Y.min != null && Y.hasOwnProperty("min")) {
                if (J.min = W.json && !isFinite(Y.min) ? String(Y.min) : Y.min, W.oneofs) J._min = "min"
              }
              if (Y.max != null && Y.hasOwnProperty("max")) {
                if (J.max = W.json && !isFinite(Y.max) ? String(Y.max) : Y.max, W.oneofs) J._max = "max"
              }
              if (Y.zeroThreshold != null && Y.hasOwnProperty("zeroThreshold")) J.zeroThreshold = W.json && !isFinite(Y.zeroThreshold) ? String(Y.zeroThreshold) : Y.zeroThreshold;
              return J
            }, G.prototype.toJSON = function D() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function D(Y) {
              if (Y === void 0) Y = "type.googleapis.com";
              return Y + "/opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint"
            }, G.Buckets = function() {
              function D(Y) {
                if (this.bucketCounts = [], Y) {
                  for (var W = Object.keys(Y), J = 0; J < W.length; ++J)
                    if (Y[W[J]] != null) this[W[J]] = Y[W[J]]
                }
              }
              return D.prototype.offset = null, D.prototype.bucketCounts = J1.emptyArray, D.create = function Y(W) {
                return new D(W)
              }, D.encode = function Y(W, J) {
                if (!J) J = p4.create();
                if (W.offset != null && Object.hasOwnProperty.call(W, "offset")) J.uint32(8).sint32(W.offset);
                if (W.bucketCounts != null && W.bucketCounts.length) {
                  J.uint32(18).fork();
                  for (var F = 0; F < W.bucketCounts.length; ++F) J.uint64(W.bucketCounts[F]);
                  J.ldelim()
                }
                return J
              }, D.encodeDelimited = function Y(W, J) {
                return this.encode(W, J).ldelim()
              }, D.decode = function Y(W, J) {
                if (!(W instanceof LA)) W = LA.create(W);
                var F = J === void 0 ? W.len : W.pos + J,
                  X = new G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets;
                while (W.pos < F) {
                  var V = W.uint32();
                  switch (V >>> 3) {
                    case 1: {
                      X.offset = W.sint32();
                      break
                    }
                    case 2: {
                      if (!(X.bucketCounts && X.bucketCounts.length)) X.bucketCounts = [];
                      if ((V & 7) === 2) {
                        var C = W.uint32() + W.pos;
                        while (W.pos < C) X.bucketCounts.push(W.uint64())
                      } else X.bucketCounts.push(W.uint64());
                      break
                    }
                    default:
                      W.skipType(V & 7);
                      break
                  }
                }
                return X
              }, D.decodeDelimited = function Y(W) {
                if (!(W instanceof LA)) W = new LA(W);
                return this.decode(W, W.uint32())
              }, D.verify = function Y(W) {
                if (typeof W !== "object" || W === null) return "object expected";
                if (W.offset != null && W.hasOwnProperty("offset")) {
                  if (!J1.isInteger(W.offset)) return "offset: integer expected"
                }
                if (W.bucketCounts != null && W.hasOwnProperty("bucketCounts")) {
                  if (!Array.isArray(W.bucketCounts)) return "bucketCounts: array expected";
                  for (var J = 0; J < W.bucketCounts.length; ++J)
                    if (!J1.isInteger(W.bucketCounts[J]) && !(W.bucketCounts[J] && J1.isInteger(W.bucketCounts[J].low) && J1.isInteger(W.bucketCounts[J].high))) return "bucketCounts: integer|Long[] expected"
                }
                return null
              }, D.fromObject = function Y(W) {
                if (W instanceof G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets) return W;
                var J = new G1.opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets;
                if (W.offset != null) J.offset = W.offset | 0;
                if (W.bucketCounts) {
                  if (!Array.isArray(W.bucketCounts)) throw TypeError(".opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets.bucketCounts: array expected");
                  J.bucketCounts = [];
                  for (var F = 0; F < W.bucketCounts.length; ++F)
                    if (J1.Long)(J.bucketCounts[F] = J1.Long.fromValue(W.bucketCounts[F])).unsigned = !0;
                    else if (typeof W.bucketCounts[F] === "string") J.bucketCounts[F] = parseInt(W.bucketCounts[F], 10);
                  else if (typeof W.bucketCounts[F] === "number") J.bucketCounts[F] = W.bucketCounts[F];
                  else if (typeof W.bucketCounts[F] === "object") J.bucketCounts[F] = new J1.LongBits(W.bucketCounts[F].low >>> 0, W.bucketCounts[F].high >>> 0).toNumber(!0)
                }
                return J
              }, D.toObject = function Y(W, J) {
                if (!J) J = {};
                var F = {};
                if (J.arrays || J.defaults) F.bucketCounts = [];
                if (J.defaults) F.offset = 0;
                if (W.offset != null && W.hasOwnProperty("offset")) F.offset = W.offset;
                if (W.bucketCounts && W.bucketCounts.length) {
                  F.bucketCounts = [];
                  for (var X = 0; X < W.bucketCounts.length; ++X)
                    if (typeof W.bucketCounts[X] === "number") F.bucketCounts[X] = J.longs === String ? String(W.bucketCounts[X]) : W.bucketCounts[X];
                    else F.bucketCounts[X] = J.longs === String ? J1.Long.prototype.toString.call(W.bucketCounts[X]) : J.longs === Number ? new J1.LongBits(W.bucketCounts[X].low >>> 0, W.bucketCounts[X].high >>> 0).toNumber(!0) : W.bucketCounts[X]
                }
                return F
              }, D.prototype.toJSON = function Y() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, D.getTypeUrl = function Y(W) {
                if (W === void 0) W = "type.googleapis.com";
                return W + "/opentelemetry.proto.metrics.v1.ExponentialHistogramDataPoint.Buckets"
              }, D
            }(), G
          }(), I.SummaryDataPoint = function() {
            function G(Z) {
              if (this.attributes = [], this.quantileValues = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.attributes = J1.emptyArray, G.prototype.startTimeUnixNano = null, G.prototype.timeUnixNano = null, G.prototype.count = null, G.prototype.sum = null, G.prototype.quantileValues = J1.emptyArray, G.prototype.flags = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.startTimeUnixNano != null && Object.hasOwnProperty.call(D, "startTimeUnixNano")) Y.uint32(17).fixed64(D.startTimeUnixNano);
              if (D.timeUnixNano != null && Object.hasOwnProperty.call(D, "timeUnixNano")) Y.uint32(25).fixed64(D.timeUnixNano);
              if (D.count != null && Object.hasOwnProperty.call(D, "count")) Y.uint32(33).fixed64(D.count);
              if (D.sum != null && Object.hasOwnProperty.call(D, "sum")) Y.uint32(41).double(D.sum);
              if (D.quantileValues != null && D.quantileValues.length)
                for (var W = 0; W < D.quantileValues.length; ++W) G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile.encode(D.quantileValues[W], Y.uint32(50).fork()).ldelim();
              if (D.attributes != null && D.attributes.length)
                for (var W = 0; W < D.attributes.length; ++W) G1.opentelemetry.proto.common.v1.KeyValue.encode(D.attributes[W], Y.uint32(58).fork()).ldelim();
              if (D.flags != null && Object.hasOwnProperty.call(D, "flags")) Y.uint32(64).uint32(D.flags);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.metrics.v1.SummaryDataPoint;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 7: {
                    if (!(J.attributes && J.attributes.length)) J.attributes = [];
                    J.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(D, D.uint32()));
                    break
                  }
                  case 2: {
                    J.startTimeUnixNano = D.fixed64();
                    break
                  }
                  case 3: {
                    J.timeUnixNano = D.fixed64();
                    break
                  }
                  case 4: {
                    J.count = D.fixed64();
                    break
                  }
                  case 5: {
                    J.sum = D.double();
                    break
                  }
                  case 6: {
                    if (!(J.quantileValues && J.quantileValues.length)) J.quantileValues = [];
                    J.quantileValues.push(G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile.decode(D, D.uint32()));
                    break
                  }
                  case 8: {
                    J.flags = D.uint32();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.attributes != null && D.hasOwnProperty("attributes")) {
                if (!Array.isArray(D.attributes)) return "attributes: array expected";
                for (var Y = 0; Y < D.attributes.length; ++Y) {
                  var W = G1.opentelemetry.proto.common.v1.KeyValue.verify(D.attributes[Y]);
                  if (W) return "attributes." + W
                }
              }
              if (D.startTimeUnixNano != null && D.hasOwnProperty("startTimeUnixNano")) {
                if (!J1.isInteger(D.startTimeUnixNano) && !(D.startTimeUnixNano && J1.isInteger(D.startTimeUnixNano.low) && J1.isInteger(D.startTimeUnixNano.high))) return "startTimeUnixNano: integer|Long expected"
              }
              if (D.timeUnixNano != null && D.hasOwnProperty("timeUnixNano")) {
                if (!J1.isInteger(D.timeUnixNano) && !(D.timeUnixNano && J1.isInteger(D.timeUnixNano.low) && J1.isInteger(D.timeUnixNano.high))) return "timeUnixNano: integer|Long expected"
              }
              if (D.count != null && D.hasOwnProperty("count")) {
                if (!J1.isInteger(D.count) && !(D.count && J1.isInteger(D.count.low) && J1.isInteger(D.count.high))) return "count: integer|Long expected"
              }
              if (D.sum != null && D.hasOwnProperty("sum")) {
                if (typeof D.sum !== "number") return "sum: number expected"
              }
              if (D.quantileValues != null && D.hasOwnProperty("quantileValues")) {
                if (!Array.isArray(D.quantileValues)) return "quantileValues: array expected";
                for (var Y = 0; Y < D.quantileValues.length; ++Y) {
                  var W = G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile.verify(D.quantileValues[Y]);
                  if (W) return "quantileValues." + W
                }
              }
              if (D.flags != null && D.hasOwnProperty("flags")) {
                if (!J1.isInteger(D.flags)) return "flags: integer expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.metrics.v1.SummaryDataPoint) return D;
              var Y = new G1.opentelemetry.proto.metrics.v1.SummaryDataPoint;
              if (D.attributes) {
                if (!Array.isArray(D.attributes)) throw TypeError(".opentelemetry.proto.metrics.v1.SummaryDataPoint.attributes: array expected");
                Y.attributes = [];
                for (var W = 0; W < D.attributes.length; ++W) {
                  if (typeof D.attributes[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.SummaryDataPoint.attributes: object expected");
                  Y.attributes[W] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(D.attributes[W])
                }
              }
              if (D.startTimeUnixNano != null) {
                if (J1.Long)(Y.startTimeUnixNano = J1.Long.fromValue(D.startTimeUnixNano)).unsigned = !1;
                else if (typeof D.startTimeUnixNano === "string") Y.startTimeUnixNano = parseInt(D.startTimeUnixNano, 10);
                else if (typeof D.startTimeUnixNano === "number") Y.startTimeUnixNano = D.startTimeUnixNano;
                else if (typeof D.startTimeUnixNano === "object") Y.startTimeUnixNano = new J1.LongBits(D.startTimeUnixNano.low >>> 0, D.startTimeUnixNano.high >>> 0).toNumber()
              }
              if (D.timeUnixNano != null) {
                if (J1.Long)(Y.timeUnixNano = J1.Long.fromValue(D.timeUnixNano)).unsigned = !1;
                else if (typeof D.timeUnixNano === "string") Y.timeUnixNano = parseInt(D.timeUnixNano, 10);
                else if (typeof D.timeUnixNano === "number") Y.timeUnixNano = D.timeUnixNano;
                else if (typeof D.timeUnixNano === "object") Y.timeUnixNano = new J1.LongBits(D.timeUnixNano.low >>> 0, D.timeUnixNano.high >>> 0).toNumber()
              }
              if (D.count != null) {
                if (J1.Long)(Y.count = J1.Long.fromValue(D.count)).unsigned = !1;
                else if (typeof D.count === "string") Y.count = parseInt(D.count, 10);
                else if (typeof D.count === "number") Y.count = D.count;
                else if (typeof D.count === "object") Y.count = new J1.LongBits(D.count.low >>> 0, D.count.high >>> 0).toNumber()
              }
              if (D.sum != null) Y.sum = Number(D.sum);
              if (D.quantileValues) {
                if (!Array.isArray(D.quantileValues)) throw TypeError(".opentelemetry.proto.metrics.v1.SummaryDataPoint.quantileValues: array expected");
                Y.quantileValues = [];
                for (var W = 0; W < D.quantileValues.length; ++W) {
                  if (typeof D.quantileValues[W] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.SummaryDataPoint.quantileValues: object expected");
                  Y.quantileValues[W] = G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile.fromObject(D.quantileValues[W])
                }
              }
              if (D.flags != null) Y.flags = D.flags >>> 0;
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.quantileValues = [], W.attributes = [];
              if (Y.defaults) {
                if (J1.Long) {
                  var J = new J1.Long(0, 0, !1);
                  W.startTimeUnixNano = Y.longs === String ? J.toString() : Y.longs === Number ? J.toNumber() : J
                } else W.startTimeUnixNano = Y.longs === String ? "0" : 0;
                if (J1.Long) {
                  var J = new J1.Long(0, 0, !1);
                  W.timeUnixNano = Y.longs === String ? J.toString() : Y.longs === Number ? J.toNumber() : J
                } else W.timeUnixNano = Y.longs === String ? "0" : 0;
                if (J1.Long) {
                  var J = new J1.Long(0, 0, !1);
                  W.count = Y.longs === String ? J.toString() : Y.longs === Number ? J.toNumber() : J
                } else W.count = Y.longs === String ? "0" : 0;
                W.sum = 0, W.flags = 0
              }
              if (D.startTimeUnixNano != null && D.hasOwnProperty("startTimeUnixNano"))
                if (typeof D.startTimeUnixNano === "number") W.startTimeUnixNano = Y.longs === String ? String(D.startTimeUnixNano) : D.startTimeUnixNano;
                else W.startTimeUnixNano = Y.longs === String ? J1.Long.prototype.toString.call(D.startTimeUnixNano) : Y.longs === Number ? new J1.LongBits(D.startTimeUnixNano.low >>> 0, D.startTimeUnixNano.high >>> 0).toNumber() : D.startTimeUnixNano;
              if (D.timeUnixNano != null && D.hasOwnProperty("timeUnixNano"))
                if (typeof D.timeUnixNano === "number") W.timeUnixNano = Y.longs === String ? String(D.timeUnixNano) : D.timeUnixNano;
                else W.timeUnixNano = Y.longs === String ? J1.Long.prototype.toString.call(D.timeUnixNano) : Y.longs === Number ? new J1.LongBits(D.timeUnixNano.low >>> 0, D.timeUnixNano.high >>> 0).toNumber() : D.timeUnixNano;
              if (D.count != null && D.hasOwnProperty("count"))
                if (typeof D.count === "number") W.count = Y.longs === String ? String(D.count) : D.count;
                else W.count = Y.longs === String ? J1.Long.prototype.toString.call(D.count) : Y.longs === Number ? new J1.LongBits(D.count.low >>> 0, D.count.high >>> 0).toNumber() : D.count;
              if (D.sum != null && D.hasOwnProperty("sum")) W.sum = Y.json && !isFinite(D.sum) ? String(D.sum) : D.sum;
              if (D.quantileValues && D.quantileValues.length) {
                W.quantileValues = [];
                for (var F = 0; F < D.quantileValues.length; ++F) W.quantileValues[F] = G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile.toObject(D.quantileValues[F], Y)
              }
              if (D.attributes && D.attributes.length) {
                W.attributes = [];
                for (var F = 0; F < D.attributes.length; ++F) W.attributes[F] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(D.attributes[F], Y)
              }
              if (D.flags != null && D.hasOwnProperty("flags")) W.flags = D.flags;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.metrics.v1.SummaryDataPoint"
            }, G.ValueAtQuantile = function() {
              function Z(D) {
                if (D) {
                  for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                    if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
                }
              }
              return Z.prototype.quantile = null, Z.prototype.value = null, Z.create = function D(Y) {
                return new Z(Y)
              }, Z.encode = function D(Y, W) {
                if (!W) W = p4.create();
                if (Y.quantile != null && Object.hasOwnProperty.call(Y, "quantile")) W.uint32(9).double(Y.quantile);
                if (Y.value != null && Object.hasOwnProperty.call(Y, "value")) W.uint32(17).double(Y.value);
                return W
              }, Z.encodeDelimited = function D(Y, W) {
                return this.encode(Y, W).ldelim()
              }, Z.decode = function D(Y, W) {
                if (!(Y instanceof LA)) Y = LA.create(Y);
                var J = W === void 0 ? Y.len : Y.pos + W,
                  F = new G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile;
                while (Y.pos < J) {
                  var X = Y.uint32();
                  switch (X >>> 3) {
                    case 1: {
                      F.quantile = Y.double();
                      break
                    }
                    case 2: {
                      F.value = Y.double();
                      break
                    }
                    default:
                      Y.skipType(X & 7);
                      break
                  }
                }
                return F
              }, Z.decodeDelimited = function D(Y) {
                if (!(Y instanceof LA)) Y = new LA(Y);
                return this.decode(Y, Y.uint32())
              }, Z.verify = function D(Y) {
                if (typeof Y !== "object" || Y === null) return "object expected";
                if (Y.quantile != null && Y.hasOwnProperty("quantile")) {
                  if (typeof Y.quantile !== "number") return "quantile: number expected"
                }
                if (Y.value != null && Y.hasOwnProperty("value")) {
                  if (typeof Y.value !== "number") return "value: number expected"
                }
                return null
              }, Z.fromObject = function D(Y) {
                if (Y instanceof G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile) return Y;
                var W = new G1.opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile;
                if (Y.quantile != null) W.quantile = Number(Y.quantile);
                if (Y.value != null) W.value = Number(Y.value);
                return W
              }, Z.toObject = function D(Y, W) {
                if (!W) W = {};
                var J = {};
                if (W.defaults) J.quantile = 0, J.value = 0;
                if (Y.quantile != null && Y.hasOwnProperty("quantile")) J.quantile = W.json && !isFinite(Y.quantile) ? String(Y.quantile) : Y.quantile;
                if (Y.value != null && Y.hasOwnProperty("value")) J.value = W.json && !isFinite(Y.value) ? String(Y.value) : Y.value;
                return J
              }, Z.prototype.toJSON = function D() {
                return this.constructor.toObject(this, b9.util.toJSONOptions)
              }, Z.getTypeUrl = function D(Y) {
                if (Y === void 0) Y = "type.googleapis.com";
                return Y + "/opentelemetry.proto.metrics.v1.SummaryDataPoint.ValueAtQuantile"
              }, Z
            }(), G
          }(), I.Exemplar = function() {
            function G(D) {
              if (this.filteredAttributes = [], D) {
                for (var Y = Object.keys(D), W = 0; W < Y.length; ++W)
                  if (D[Y[W]] != null) this[Y[W]] = D[Y[W]]
              }
            }
            G.prototype.filteredAttributes = J1.emptyArray, G.prototype.timeUnixNano = null, G.prototype.asDouble = null, G.prototype.asInt = null, G.prototype.spanId = null, G.prototype.traceId = null;
            var Z;
            return Object.defineProperty(G.prototype, "value", {
              get: J1.oneOfGetter(Z = ["asDouble", "asInt"]),
              set: J1.oneOfSetter(Z)
            }), G.create = function D(Y) {
              return new G(Y)
            }, G.encode = function D(Y, W) {
              if (!W) W = p4.create();
              if (Y.timeUnixNano != null && Object.hasOwnProperty.call(Y, "timeUnixNano")) W.uint32(17).fixed64(Y.timeUnixNano);
              if (Y.asDouble != null && Object.hasOwnProperty.call(Y, "asDouble")) W.uint32(25).double(Y.asDouble);
              if (Y.spanId != null && Object.hasOwnProperty.call(Y, "spanId")) W.uint32(34).bytes(Y.spanId);
              if (Y.traceId != null && Object.hasOwnProperty.call(Y, "traceId")) W.uint32(42).bytes(Y.traceId);
              if (Y.asInt != null && Object.hasOwnProperty.call(Y, "asInt")) W.uint32(49).sfixed64(Y.asInt);
              if (Y.filteredAttributes != null && Y.filteredAttributes.length)
                for (var J = 0; J < Y.filteredAttributes.length; ++J) G1.opentelemetry.proto.common.v1.KeyValue.encode(Y.filteredAttributes[J], W.uint32(58).fork()).ldelim();
              return W
            }, G.encodeDelimited = function D(Y, W) {
              return this.encode(Y, W).ldelim()
            }, G.decode = function D(Y, W) {
              if (!(Y instanceof LA)) Y = LA.create(Y);
              var J = W === void 0 ? Y.len : Y.pos + W,
                F = new G1.opentelemetry.proto.metrics.v1.Exemplar;
              while (Y.pos < J) {
                var X = Y.uint32();
                switch (X >>> 3) {
                  case 7: {
                    if (!(F.filteredAttributes && F.filteredAttributes.length)) F.filteredAttributes = [];
                    F.filteredAttributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(Y, Y.uint32()));
                    break
                  }
                  case 2: {
                    F.timeUnixNano = Y.fixed64();
                    break
                  }
                  case 3: {
                    F.asDouble = Y.double();
                    break
                  }
                  case 6: {
                    F.asInt = Y.sfixed64();
                    break
                  }
                  case 4: {
                    F.spanId = Y.bytes();
                    break
                  }
                  case 5: {
                    F.traceId = Y.bytes();
                    break
                  }
                  default:
                    Y.skipType(X & 7);
                    break
                }
              }
              return F
            }, G.decodeDelimited = function D(Y) {
              if (!(Y instanceof LA)) Y = new LA(Y);
              return this.decode(Y, Y.uint32())
            }, G.verify = function D(Y) {
              if (typeof Y !== "object" || Y === null) return "object expected";
              var W = {};
              if (Y.filteredAttributes != null && Y.hasOwnProperty("filteredAttributes")) {
                if (!Array.isArray(Y.filteredAttributes)) return "filteredAttributes: array expected";
                for (var J = 0; J < Y.filteredAttributes.length; ++J) {
                  var F = G1.opentelemetry.proto.common.v1.KeyValue.verify(Y.filteredAttributes[J]);
                  if (F) return "filteredAttributes." + F
                }
              }
              if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano")) {
                if (!J1.isInteger(Y.timeUnixNano) && !(Y.timeUnixNano && J1.isInteger(Y.timeUnixNano.low) && J1.isInteger(Y.timeUnixNano.high))) return "timeUnixNano: integer|Long expected"
              }
              if (Y.asDouble != null && Y.hasOwnProperty("asDouble")) {
                if (W.value = 1, typeof Y.asDouble !== "number") return "asDouble: number expected"
              }
              if (Y.asInt != null && Y.hasOwnProperty("asInt")) {
                if (W.value === 1) return "value: multiple values";
                if (W.value = 1, !J1.isInteger(Y.asInt) && !(Y.asInt && J1.isInteger(Y.asInt.low) && J1.isInteger(Y.asInt.high))) return "asInt: integer|Long expected"
              }
              if (Y.spanId != null && Y.hasOwnProperty("spanId")) {
                if (!(Y.spanId && typeof Y.spanId.length === "number" || J1.isString(Y.spanId))) return "spanId: buffer expected"
              }
              if (Y.traceId != null && Y.hasOwnProperty("traceId")) {
                if (!(Y.traceId && typeof Y.traceId.length === "number" || J1.isString(Y.traceId))) return "traceId: buffer expected"
              }
              return null
            }, G.fromObject = function D(Y) {
              if (Y instanceof G1.opentelemetry.proto.metrics.v1.Exemplar) return Y;
              var W = new G1.opentelemetry.proto.metrics.v1.Exemplar;
              if (Y.filteredAttributes) {
                if (!Array.isArray(Y.filteredAttributes)) throw TypeError(".opentelemetry.proto.metrics.v1.Exemplar.filteredAttributes: array expected");
                W.filteredAttributes = [];
                for (var J = 0; J < Y.filteredAttributes.length; ++J) {
                  if (typeof Y.filteredAttributes[J] !== "object") throw TypeError(".opentelemetry.proto.metrics.v1.Exemplar.filteredAttributes: object expected");
                  W.filteredAttributes[J] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(Y.filteredAttributes[J])
                }
              }
              if (Y.timeUnixNano != null) {
                if (J1.Long)(W.timeUnixNano = J1.Long.fromValue(Y.timeUnixNano)).unsigned = !1;
                else if (typeof Y.timeUnixNano === "string") W.timeUnixNano = parseInt(Y.timeUnixNano, 10);
                else if (typeof Y.timeUnixNano === "number") W.timeUnixNano = Y.timeUnixNano;
                else if (typeof Y.timeUnixNano === "object") W.timeUnixNano = new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber()
              }
              if (Y.asDouble != null) W.asDouble = Number(Y.asDouble);
              if (Y.asInt != null) {
                if (J1.Long)(W.asInt = J1.Long.fromValue(Y.asInt)).unsigned = !1;
                else if (typeof Y.asInt === "string") W.asInt = parseInt(Y.asInt, 10);
                else if (typeof Y.asInt === "number") W.asInt = Y.asInt;
                else if (typeof Y.asInt === "object") W.asInt = new J1.LongBits(Y.asInt.low >>> 0, Y.asInt.high >>> 0).toNumber()
              }
              if (Y.spanId != null) {
                if (typeof Y.spanId === "string") J1.base64.decode(Y.spanId, W.spanId = J1.newBuffer(J1.base64.length(Y.spanId)), 0);
                else if (Y.spanId.length >= 0) W.spanId = Y.spanId
              }
              if (Y.traceId != null) {
                if (typeof Y.traceId === "string") J1.base64.decode(Y.traceId, W.traceId = J1.newBuffer(J1.base64.length(Y.traceId)), 0);
                else if (Y.traceId.length >= 0) W.traceId = Y.traceId
              }
              return W
            }, G.toObject = function D(Y, W) {
              if (!W) W = {};
              var J = {};
              if (W.arrays || W.defaults) J.filteredAttributes = [];
              if (W.defaults) {
                if (J1.Long) {
                  var F = new J1.Long(0, 0, !1);
                  J.timeUnixNano = W.longs === String ? F.toString() : W.longs === Number ? F.toNumber() : F
                } else J.timeUnixNano = W.longs === String ? "0" : 0;
                if (W.bytes === String) J.spanId = "";
                else if (J.spanId = [], W.bytes !== Array) J.spanId = J1.newBuffer(J.spanId);
                if (W.bytes === String) J.traceId = "";
                else if (J.traceId = [], W.bytes !== Array) J.traceId = J1.newBuffer(J.traceId)
              }
              if (Y.timeUnixNano != null && Y.hasOwnProperty("timeUnixNano"))
                if (typeof Y.timeUnixNano === "number") J.timeUnixNano = W.longs === String ? String(Y.timeUnixNano) : Y.timeUnixNano;
                else J.timeUnixNano = W.longs === String ? J1.Long.prototype.toString.call(Y.timeUnixNano) : W.longs === Number ? new J1.LongBits(Y.timeUnixNano.low >>> 0, Y.timeUnixNano.high >>> 0).toNumber() : Y.timeUnixNano;
              if (Y.asDouble != null && Y.hasOwnProperty("asDouble")) {
                if (J.asDouble = W.json && !isFinite(Y.asDouble) ? String(Y.asDouble) : Y.asDouble, W.oneofs) J.value = "asDouble"
              }
              if (Y.spanId != null && Y.hasOwnProperty("spanId")) J.spanId = W.bytes === String ? J1.base64.encode(Y.spanId, 0, Y.spanId.length) : W.bytes === Array ? Array.prototype.slice.call(Y.spanId) : Y.spanId;
              if (Y.traceId != null && Y.hasOwnProperty("traceId")) J.traceId = W.bytes === String ? J1.base64.encode(Y.traceId, 0, Y.traceId.length) : W.bytes === Array ? Array.prototype.slice.call(Y.traceId) : Y.traceId;
              if (Y.asInt != null && Y.hasOwnProperty("asInt")) {
                if (typeof Y.asInt === "number") J.asInt = W.longs === String ? String(Y.asInt) : Y.asInt;
                else J.asInt = W.longs === String ? J1.Long.prototype.toString.call(Y.asInt) : W.longs === Number ? new J1.LongBits(Y.asInt.low >>> 0, Y.asInt.high >>> 0).toNumber() : Y.asInt;
                if (W.oneofs) J.value = "asInt"
              }
              if (Y.filteredAttributes && Y.filteredAttributes.length) {
                J.filteredAttributes = [];
                for (var X = 0; X < Y.filteredAttributes.length; ++X) J.filteredAttributes[X] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(Y.filteredAttributes[X], W)
              }
              return J
            }, G.prototype.toJSON = function D() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function D(Y) {
              if (Y === void 0) Y = "type.googleapis.com";
              return Y + "/opentelemetry.proto.metrics.v1.Exemplar"
            }, G
          }(), I
        }(), Q
      }(), B.logs = function() {
        var Q = {};
        return Q.v1 = function() {
          var I = {};
          return I.LogsData = function() {
            function G(Z) {
              if (this.resourceLogs = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.resourceLogs = J1.emptyArray, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.resourceLogs != null && D.resourceLogs.length)
                for (var W = 0; W < D.resourceLogs.length; ++W) G1.opentelemetry.proto.logs.v1.ResourceLogs.encode(D.resourceLogs[W], Y.uint32(10).fork()).ldelim();
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.logs.v1.LogsData;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    if (!(J.resourceLogs && J.resourceLogs.length)) J.resourceLogs = [];
                    J.resourceLogs.push(G1.opentelemetry.proto.logs.v1.ResourceLogs.decode(D, D.uint32()));
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.resourceLogs != null && D.hasOwnProperty("resourceLogs")) {
                if (!Array.isArray(D.resourceLogs)) return "resourceLogs: array expected";
                for (var Y = 0; Y < D.resourceLogs.length; ++Y) {
                  var W = G1.opentelemetry.proto.logs.v1.ResourceLogs.verify(D.resourceLogs[Y]);
                  if (W) return "resourceLogs." + W
                }
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.logs.v1.LogsData) return D;
              var Y = new G1.opentelemetry.proto.logs.v1.LogsData;
              if (D.resourceLogs) {
                if (!Array.isArray(D.resourceLogs)) throw TypeError(".opentelemetry.proto.logs.v1.LogsData.resourceLogs: array expected");
                Y.resourceLogs = [];
                for (var W = 0; W < D.resourceLogs.length; ++W) {
                  if (typeof D.resourceLogs[W] !== "object") throw TypeError(".opentelemetry.proto.logs.v1.LogsData.resourceLogs: object expected");
                  Y.resourceLogs[W] = G1.opentelemetry.proto.logs.v1.ResourceLogs.fromObject(D.resourceLogs[W])
                }
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.resourceLogs = [];
              if (D.resourceLogs && D.resourceLogs.length) {
                W.resourceLogs = [];
                for (var J = 0; J < D.resourceLogs.length; ++J) W.resourceLogs[J] = G1.opentelemetry.proto.logs.v1.ResourceLogs.toObject(D.resourceLogs[J], Y)
              }
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.logs.v1.LogsData"
            }, G
          }(), I.ResourceLogs = function() {
            function G(Z) {
              if (this.scopeLogs = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.resource = null, G.prototype.scopeLogs = J1.emptyArray, G.prototype.schemaUrl = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.resource != null && Object.hasOwnProperty.call(D, "resource")) G1.opentelemetry.proto.resource.v1.Resource.encode(D.resource, Y.uint32(10).fork()).ldelim();
              if (D.scopeLogs != null && D.scopeLogs.length)
                for (var W = 0; W < D.scopeLogs.length; ++W) G1.opentelemetry.proto.logs.v1.ScopeLogs.encode(D.scopeLogs[W], Y.uint32(18).fork()).ldelim();
              if (D.schemaUrl != null && Object.hasOwnProperty.call(D, "schemaUrl")) Y.uint32(26).string(D.schemaUrl);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.logs.v1.ResourceLogs;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.resource = G1.opentelemetry.proto.resource.v1.Resource.decode(D, D.uint32());
                    break
                  }
                  case 2: {
                    if (!(J.scopeLogs && J.scopeLogs.length)) J.scopeLogs = [];
                    J.scopeLogs.push(G1.opentelemetry.proto.logs.v1.ScopeLogs.decode(D, D.uint32()));
                    break
                  }
                  case 3: {
                    J.schemaUrl = D.string();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.resource != null && D.hasOwnProperty("resource")) {
                var Y = G1.opentelemetry.proto.resource.v1.Resource.verify(D.resource);
                if (Y) return "resource." + Y
              }
              if (D.scopeLogs != null && D.hasOwnProperty("scopeLogs")) {
                if (!Array.isArray(D.scopeLogs)) return "scopeLogs: array expected";
                for (var W = 0; W < D.scopeLogs.length; ++W) {
                  var Y = G1.opentelemetry.proto.logs.v1.ScopeLogs.verify(D.scopeLogs[W]);
                  if (Y) return "scopeLogs." + Y
                }
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) {
                if (!J1.isString(D.schemaUrl)) return "schemaUrl: string expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.logs.v1.ResourceLogs) return D;
              var Y = new G1.opentelemetry.proto.logs.v1.ResourceLogs;
              if (D.resource != null) {
                if (typeof D.resource !== "object") throw TypeError(".opentelemetry.proto.logs.v1.ResourceLogs.resource: object expected");
                Y.resource = G1.opentelemetry.proto.resource.v1.Resource.fromObject(D.resource)
              }
              if (D.scopeLogs) {
                if (!Array.isArray(D.scopeLogs)) throw TypeError(".opentelemetry.proto.logs.v1.ResourceLogs.scopeLogs: array expected");
                Y.scopeLogs = [];
                for (var W = 0; W < D.scopeLogs.length; ++W) {
                  if (typeof D.scopeLogs[W] !== "object") throw TypeError(".opentelemetry.proto.logs.v1.ResourceLogs.scopeLogs: object expected");
                  Y.scopeLogs[W] = G1.opentelemetry.proto.logs.v1.ScopeLogs.fromObject(D.scopeLogs[W])
                }
              }
              if (D.schemaUrl != null) Y.schemaUrl = String(D.schemaUrl);
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.scopeLogs = [];
              if (Y.defaults) W.resource = null, W.schemaUrl = "";
              if (D.resource != null && D.hasOwnProperty("resource")) W.resource = G1.opentelemetry.proto.resource.v1.Resource.toObject(D.resource, Y);
              if (D.scopeLogs && D.scopeLogs.length) {
                W.scopeLogs = [];
                for (var J = 0; J < D.scopeLogs.length; ++J) W.scopeLogs[J] = G1.opentelemetry.proto.logs.v1.ScopeLogs.toObject(D.scopeLogs[J], Y)
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) W.schemaUrl = D.schemaUrl;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.logs.v1.ResourceLogs"
            }, G
          }(), I.ScopeLogs = function() {
            function G(Z) {
              if (this.logRecords = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.scope = null, G.prototype.logRecords = J1.emptyArray, G.prototype.schemaUrl = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.scope != null && Object.hasOwnProperty.call(D, "scope")) G1.opentelemetry.proto.common.v1.InstrumentationScope.encode(D.scope, Y.uint32(10).fork()).ldelim();
              if (D.logRecords != null && D.logRecords.length)
                for (var W = 0; W < D.logRecords.length; ++W) G1.opentelemetry.proto.logs.v1.LogRecord.encode(D.logRecords[W], Y.uint32(18).fork()).ldelim();
              if (D.schemaUrl != null && Object.hasOwnProperty.call(D, "schemaUrl")) Y.uint32(26).string(D.schemaUrl);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.logs.v1.ScopeLogs;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.decode(D, D.uint32());
                    break
                  }
                  case 2: {
                    if (!(J.logRecords && J.logRecords.length)) J.logRecords = [];
                    J.logRecords.push(G1.opentelemetry.proto.logs.v1.LogRecord.decode(D, D.uint32()));
                    break
                  }
                  case 3: {
                    J.schemaUrl = D.string();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.scope != null && D.hasOwnProperty("scope")) {
                var Y = G1.opentelemetry.proto.common.v1.InstrumentationScope.verify(D.scope);
                if (Y) return "scope." + Y
              }
              if (D.logRecords != null && D.hasOwnProperty("logRecords")) {
                if (!Array.isArray(D.logRecords)) return "logRecords: array expected";
                for (var W = 0; W < D.logRecords.length; ++W) {
                  var Y = G1.opentelemetry.proto.logs.v1.LogRecord.verify(D.logRecords[W]);
                  if (Y) return "logRecords." + Y
                }
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) {
                if (!J1.isString(D.schemaUrl)) return "schemaUrl: string expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.logs.v1.ScopeLogs) return D;
              var Y = new G1.opentelemetry.proto.logs.v1.ScopeLogs;
              if (D.scope != null) {
                if (typeof D.scope !== "object") throw TypeError(".opentelemetry.proto.logs.v1.ScopeLogs.scope: object expected");
                Y.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.fromObject(D.scope)
              }
              if (D.logRecords) {
                if (!Array.isArray(D.logRecords)) throw TypeError(".opentelemetry.proto.logs.v1.ScopeLogs.logRecords: array expected");
                Y.logRecords = [];
                for (var W = 0; W < D.logRecords.length; ++W) {
                  if (typeof D.logRecords[W] !== "object") throw TypeError(".opentelemetry.proto.logs.v1.ScopeLogs.logRecords: object expected");
                  Y.logRecords[W] = G1.opentelemetry.proto.logs.v1.LogRecord.fromObject(D.logRecords[W])
                }
              }
              if (D.schemaUrl != null) Y.schemaUrl = String(D.schemaUrl);
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.logRecords = [];
              if (Y.defaults) W.scope = null, W.schemaUrl = "";
              if (D.scope != null && D.hasOwnProperty("scope")) W.scope = G1.opentelemetry.proto.common.v1.InstrumentationScope.toObject(D.scope, Y);
              if (D.logRecords && D.logRecords.length) {
                W.logRecords = [];
                for (var J = 0; J < D.logRecords.length; ++J) W.logRecords[J] = G1.opentelemetry.proto.logs.v1.LogRecord.toObject(D.logRecords[J], Y)
              }
              if (D.schemaUrl != null && D.hasOwnProperty("schemaUrl")) W.schemaUrl = D.schemaUrl;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.logs.v1.ScopeLogs"
            }, G
          }(), I.SeverityNumber = function() {
            var G = {},
              Z = Object.create(G);
            return Z[G[0] = "SEVERITY_NUMBER_UNSPECIFIED"] = 0, Z[G[1] = "SEVERITY_NUMBER_TRACE"] = 1, Z[G[2] = "SEVERITY_NUMBER_TRACE2"] = 2, Z[G[3] = "SEVERITY_NUMBER_TRACE3"] = 3, Z[G[4] = "SEVERITY_NUMBER_TRACE4"] = 4, Z[G[5] = "SEVERITY_NUMBER_DEBUG"] = 5, Z[G[6] = "SEVERITY_NUMBER_DEBUG2"] = 6, Z[G[7] = "SEVERITY_NUMBER_DEBUG3"] = 7, Z[G[8] = "SEVERITY_NUMBER_DEBUG4"] = 8, Z[G[9] = "SEVERITY_NUMBER_INFO"] = 9, Z[G[10] = "SEVERITY_NUMBER_INFO2"] = 10, Z[G[11] = "SEVERITY_NUMBER_INFO3"] = 11, Z[G[12] = "SEVERITY_NUMBER_INFO4"] = 12, Z[G[13] = "SEVERITY_NUMBER_WARN"] = 13, Z[G[14] = "SEVERITY_NUMBER_WARN2"] = 14, Z[G[15] = "SEVERITY_NUMBER_WARN3"] = 15, Z[G[16] = "SEVERITY_NUMBER_WARN4"] = 16, Z[G[17] = "SEVERITY_NUMBER_ERROR"] = 17, Z[G[18] = "SEVERITY_NUMBER_ERROR2"] = 18, Z[G[19] = "SEVERITY_NUMBER_ERROR3"] = 19, Z[G[20] = "SEVERITY_NUMBER_ERROR4"] = 20, Z[G[21] = "SEVERITY_NUMBER_FATAL"] = 21, Z[G[22] = "SEVERITY_NUMBER_FATAL2"] = 22, Z[G[23] = "SEVERITY_NUMBER_FATAL3"] = 23, Z[G[24] = "SEVERITY_NUMBER_FATAL4"] = 24, Z
          }(), I.LogRecordFlags = function() {
            var G = {},
              Z = Object.create(G);
            return Z[G[0] = "LOG_RECORD_FLAGS_DO_NOT_USE"] = 0, Z[G[255] = "LOG_RECORD_FLAGS_TRACE_FLAGS_MASK"] = 255, Z
          }(), I.LogRecord = function() {
            function G(Z) {
              if (this.attributes = [], Z) {
                for (var D = Object.keys(Z), Y = 0; Y < D.length; ++Y)
                  if (Z[D[Y]] != null) this[D[Y]] = Z[D[Y]]
              }
            }
            return G.prototype.timeUnixNano = null, G.prototype.observedTimeUnixNano = null, G.prototype.severityNumber = null, G.prototype.severityText = null, G.prototype.body = null, G.prototype.attributes = J1.emptyArray, G.prototype.droppedAttributesCount = null, G.prototype.flags = null, G.prototype.traceId = null, G.prototype.spanId = null, G.create = function Z(D) {
              return new G(D)
            }, G.encode = function Z(D, Y) {
              if (!Y) Y = p4.create();
              if (D.timeUnixNano != null && Object.hasOwnProperty.call(D, "timeUnixNano")) Y.uint32(9).fixed64(D.timeUnixNano);
              if (D.severityNumber != null && Object.hasOwnProperty.call(D, "severityNumber")) Y.uint32(16).int32(D.severityNumber);
              if (D.severityText != null && Object.hasOwnProperty.call(D, "severityText")) Y.uint32(26).string(D.severityText);
              if (D.body != null && Object.hasOwnProperty.call(D, "body")) G1.opentelemetry.proto.common.v1.AnyValue.encode(D.body, Y.uint32(42).fork()).ldelim();
              if (D.attributes != null && D.attributes.length)
                for (var W = 0; W < D.attributes.length; ++W) G1.opentelemetry.proto.common.v1.KeyValue.encode(D.attributes[W], Y.uint32(50).fork()).ldelim();
              if (D.droppedAttributesCount != null && Object.hasOwnProperty.call(D, "droppedAttributesCount")) Y.uint32(56).uint32(D.droppedAttributesCount);
              if (D.flags != null && Object.hasOwnProperty.call(D, "flags")) Y.uint32(69).fixed32(D.flags);
              if (D.traceId != null && Object.hasOwnProperty.call(D, "traceId")) Y.uint32(74).bytes(D.traceId);
              if (D.spanId != null && Object.hasOwnProperty.call(D, "spanId")) Y.uint32(82).bytes(D.spanId);
              if (D.observedTimeUnixNano != null && Object.hasOwnProperty.call(D, "observedTimeUnixNano")) Y.uint32(89).fixed64(D.observedTimeUnixNano);
              return Y
            }, G.encodeDelimited = function Z(D, Y) {
              return this.encode(D, Y).ldelim()
            }, G.decode = function Z(D, Y) {
              if (!(D instanceof LA)) D = LA.create(D);
              var W = Y === void 0 ? D.len : D.pos + Y,
                J = new G1.opentelemetry.proto.logs.v1.LogRecord;
              while (D.pos < W) {
                var F = D.uint32();
                switch (F >>> 3) {
                  case 1: {
                    J.timeUnixNano = D.fixed64();
                    break
                  }
                  case 11: {
                    J.observedTimeUnixNano = D.fixed64();
                    break
                  }
                  case 2: {
                    J.severityNumber = D.int32();
                    break
                  }
                  case 3: {
                    J.severityText = D.string();
                    break
                  }
                  case 5: {
                    J.body = G1.opentelemetry.proto.common.v1.AnyValue.decode(D, D.uint32());
                    break
                  }
                  case 6: {
                    if (!(J.attributes && J.attributes.length)) J.attributes = [];
                    J.attributes.push(G1.opentelemetry.proto.common.v1.KeyValue.decode(D, D.uint32()));
                    break
                  }
                  case 7: {
                    J.droppedAttributesCount = D.uint32();
                    break
                  }
                  case 8: {
                    J.flags = D.fixed32();
                    break
                  }
                  case 9: {
                    J.traceId = D.bytes();
                    break
                  }
                  case 10: {
                    J.spanId = D.bytes();
                    break
                  }
                  default:
                    D.skipType(F & 7);
                    break
                }
              }
              return J
            }, G.decodeDelimited = function Z(D) {
              if (!(D instanceof LA)) D = new LA(D);
              return this.decode(D, D.uint32())
            }, G.verify = function Z(D) {
              if (typeof D !== "object" || D === null) return "object expected";
              if (D.timeUnixNano != null && D.hasOwnProperty("timeUnixNano")) {
                if (!J1.isInteger(D.timeUnixNano) && !(D.timeUnixNano && J1.isInteger(D.timeUnixNano.low) && J1.isInteger(D.timeUnixNano.high))) return "timeUnixNano: integer|Long expected"
              }
              if (D.observedTimeUnixNano != null && D.hasOwnProperty("observedTimeUnixNano")) {
                if (!J1.isInteger(D.observedTimeUnixNano) && !(D.observedTimeUnixNano && J1.isInteger(D.observedTimeUnixNano.low) && J1.isInteger(D.observedTimeUnixNano.high))) return "observedTimeUnixNano: integer|Long expected"
              }
              if (D.severityNumber != null && D.hasOwnProperty("severityNumber")) switch (D.severityNumber) {
                default:
                  return "severityNumber: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                  break
              }
              if (D.severityText != null && D.hasOwnProperty("severityText")) {
                if (!J1.isString(D.severityText)) return "severityText: string expected"
              }
              if (D.body != null && D.hasOwnProperty("body")) {
                var Y = G1.opentelemetry.proto.common.v1.AnyValue.verify(D.body);
                if (Y) return "body." + Y
              }
              if (D.attributes != null && D.hasOwnProperty("attributes")) {
                if (!Array.isArray(D.attributes)) return "attributes: array expected";
                for (var W = 0; W < D.attributes.length; ++W) {
                  var Y = G1.opentelemetry.proto.common.v1.KeyValue.verify(D.attributes[W]);
                  if (Y) return "attributes." + Y
                }
              }
              if (D.droppedAttributesCount != null && D.hasOwnProperty("droppedAttributesCount")) {
                if (!J1.isInteger(D.droppedAttributesCount)) return "droppedAttributesCount: integer expected"
              }
              if (D.flags != null && D.hasOwnProperty("flags")) {
                if (!J1.isInteger(D.flags)) return "flags: integer expected"
              }
              if (D.traceId != null && D.hasOwnProperty("traceId")) {
                if (!(D.traceId && typeof D.traceId.length === "number" || J1.isString(D.traceId))) return "traceId: buffer expected"
              }
              if (D.spanId != null && D.hasOwnProperty("spanId")) {
                if (!(D.spanId && typeof D.spanId.length === "number" || J1.isString(D.spanId))) return "spanId: buffer expected"
              }
              return null
            }, G.fromObject = function Z(D) {
              if (D instanceof G1.opentelemetry.proto.logs.v1.LogRecord) return D;
              var Y = new G1.opentelemetry.proto.logs.v1.LogRecord;
              if (D.timeUnixNano != null) {
                if (J1.Long)(Y.timeUnixNano = J1.Long.fromValue(D.timeUnixNano)).unsigned = !1;
                else if (typeof D.timeUnixNano === "string") Y.timeUnixNano = parseInt(D.timeUnixNano, 10);
                else if (typeof D.timeUnixNano === "number") Y.timeUnixNano = D.timeUnixNano;
                else if (typeof D.timeUnixNano === "object") Y.timeUnixNano = new J1.LongBits(D.timeUnixNano.low >>> 0, D.timeUnixNano.high >>> 0).toNumber()
              }
              if (D.observedTimeUnixNano != null) {
                if (J1.Long)(Y.observedTimeUnixNano = J1.Long.fromValue(D.observedTimeUnixNano)).unsigned = !1;
                else if (typeof D.observedTimeUnixNano === "string") Y.observedTimeUnixNano = parseInt(D.observedTimeUnixNano, 10);
                else if (typeof D.observedTimeUnixNano === "number") Y.observedTimeUnixNano = D.observedTimeUnixNano;
                else if (typeof D.observedTimeUnixNano === "object") Y.observedTimeUnixNano = new J1.LongBits(D.observedTimeUnixNano.low >>> 0, D.observedTimeUnixNano.high >>> 0).toNumber()
              }
              switch (D.severityNumber) {
                default:
                  if (typeof D.severityNumber === "number") {
                    Y.severityNumber = D.severityNumber;
                    break
                  }
                  break;
                case "SEVERITY_NUMBER_UNSPECIFIED":
                case 0:
                  Y.severityNumber = 0;
                  break;
                case "SEVERITY_NUMBER_TRACE":
                case 1:
                  Y.severityNumber = 1;
                  break;
                case "SEVERITY_NUMBER_TRACE2":
                case 2:
                  Y.severityNumber = 2;
                  break;
                case "SEVERITY_NUMBER_TRACE3":
                case 3:
                  Y.severityNumber = 3;
                  break;
                case "SEVERITY_NUMBER_TRACE4":
                case 4:
                  Y.severityNumber = 4;
                  break;
                case "SEVERITY_NUMBER_DEBUG":
                case 5:
                  Y.severityNumber = 5;
                  break;
                case "SEVERITY_NUMBER_DEBUG2":
                case 6:
                  Y.severityNumber = 6;
                  break;
                case "SEVERITY_NUMBER_DEBUG3":
                case 7:
                  Y.severityNumber = 7;
                  break;
                case "SEVERITY_NUMBER_DEBUG4":
                case 8:
                  Y.severityNumber = 8;
                  break;
                case "SEVERITY_NUMBER_INFO":
                case 9:
                  Y.severityNumber = 9;
                  break;
                case "SEVERITY_NUMBER_INFO2":
                case 10:
                  Y.severityNumber = 10;
                  break;
                case "SEVERITY_NUMBER_INFO3":
                case 11:
                  Y.severityNumber = 11;
                  break;
                case "SEVERITY_NUMBER_INFO4":
                case 12:
                  Y.severityNumber = 12;
                  break;
                case "SEVERITY_NUMBER_WARN":
                case 13:
                  Y.severityNumber = 13;
                  break;
                case "SEVERITY_NUMBER_WARN2":
                case 14:
                  Y.severityNumber = 14;
                  break;
                case "SEVERITY_NUMBER_WARN3":
                case 15:
                  Y.severityNumber = 15;
                  break;
                case "SEVERITY_NUMBER_WARN4":
                case 16:
                  Y.severityNumber = 16;
                  break;
                case "SEVERITY_NUMBER_ERROR":
                case 17:
                  Y.severityNumber = 17;
                  break;
                case "SEVERITY_NUMBER_ERROR2":
                case 18:
                  Y.severityNumber = 18;
                  break;
                case "SEVERITY_NUMBER_ERROR3":
                case 19:
                  Y.severityNumber = 19;
                  break;
                case "SEVERITY_NUMBER_ERROR4":
                case 20:
                  Y.severityNumber = 20;
                  break;
                case "SEVERITY_NUMBER_FATAL":
                case 21:
                  Y.severityNumber = 21;
                  break;
                case "SEVERITY_NUMBER_FATAL2":
                case 22:
                  Y.severityNumber = 22;
                  break;
                case "SEVERITY_NUMBER_FATAL3":
                case 23:
                  Y.severityNumber = 23;
                  break;
                case "SEVERITY_NUMBER_FATAL4":
                case 24:
                  Y.severityNumber = 24;
                  break
              }
              if (D.severityText != null) Y.severityText = String(D.severityText);
              if (D.body != null) {
                if (typeof D.body !== "object") throw TypeError(".opentelemetry.proto.logs.v1.LogRecord.body: object expected");
                Y.body = G1.opentelemetry.proto.common.v1.AnyValue.fromObject(D.body)
              }
              if (D.attributes) {
                if (!Array.isArray(D.attributes)) throw TypeError(".opentelemetry.proto.logs.v1.LogRecord.attributes: array expected");
                Y.attributes = [];
                for (var W = 0; W < D.attributes.length; ++W) {
                  if (typeof D.attributes[W] !== "object") throw TypeError(".opentelemetry.proto.logs.v1.LogRecord.attributes: object expected");
                  Y.attributes[W] = G1.opentelemetry.proto.common.v1.KeyValue.fromObject(D.attributes[W])
                }
              }
              if (D.droppedAttributesCount != null) Y.droppedAttributesCount = D.droppedAttributesCount >>> 0;
              if (D.flags != null) Y.flags = D.flags >>> 0;
              if (D.traceId != null) {
                if (typeof D.traceId === "string") J1.base64.decode(D.traceId, Y.traceId = J1.newBuffer(J1.base64.length(D.traceId)), 0);
                else if (D.traceId.length >= 0) Y.traceId = D.traceId
              }
              if (D.spanId != null) {
                if (typeof D.spanId === "string") J1.base64.decode(D.spanId, Y.spanId = J1.newBuffer(J1.base64.length(D.spanId)), 0);
                else if (D.spanId.length >= 0) Y.spanId = D.spanId
              }
              return Y
            }, G.toObject = function Z(D, Y) {
              if (!Y) Y = {};
              var W = {};
              if (Y.arrays || Y.defaults) W.attributes = [];
              if (Y.defaults) {
                if (J1.Long) {
                  var J = new J1.Long(0, 0, !1);
                  W.timeUnixNano = Y.longs === String ? J.toString() : Y.longs === Number ? J.toNumber() : J
                } else W.timeUnixNano = Y.longs === String ? "0" : 0;
                if (W.severityNumber = Y.enums === String ? "SEVERITY_NUMBER_UNSPECIFIED" : 0, W.severityText = "", W.body = null, W.droppedAttributesCount = 0, W.flags = 0, Y.bytes === String) W.traceId = "";
                else if (W.traceId = [], Y.bytes !== Array) W.traceId = J1.newBuffer(W.traceId);
                if (Y.bytes === String) W.spanId = "";
                else if (W.spanId = [], Y.bytes !== Array) W.spanId = J1.newBuffer(W.spanId);
                if (J1.Long) {
                  var J = new J1.Long(0, 0, !1);
                  W.observedTimeUnixNano = Y.longs === String ? J.toString() : Y.longs === Number ? J.toNumber() : J
                } else W.observedTimeUnixNano = Y.longs === String ? "0" : 0
              }
              if (D.timeUnixNano != null && D.hasOwnProperty("timeUnixNano"))
                if (typeof D.timeUnixNano === "number") W.timeUnixNano = Y.longs === String ? String(D.timeUnixNano) : D.timeUnixNano;
                else W.timeUnixNano = Y.longs === String ? J1.Long.prototype.toString.call(D.timeUnixNano) : Y.longs === Number ? new J1.LongBits(D.timeUnixNano.low >>> 0, D.timeUnixNano.high >>> 0).toNumber() : D.timeUnixNano;
              if (D.severityNumber != null && D.hasOwnProperty("severityNumber")) W.severityNumber = Y.enums === String ? G1.opentelemetry.proto.logs.v1.SeverityNumber[D.severityNumber] === void 0 ? D.severityNumber : G1.opentelemetry.proto.logs.v1.SeverityNumber[D.severityNumber] : D.severityNumber;
              if (D.severityText != null && D.hasOwnProperty("severityText")) W.severityText = D.severityText;
              if (D.body != null && D.hasOwnProperty("body")) W.body = G1.opentelemetry.proto.common.v1.AnyValue.toObject(D.body, Y);
              if (D.attributes && D.attributes.length) {
                W.attributes = [];
                for (var F = 0; F < D.attributes.length; ++F) W.attributes[F] = G1.opentelemetry.proto.common.v1.KeyValue.toObject(D.attributes[F], Y)
              }
              if (D.droppedAttributesCount != null && D.hasOwnProperty("droppedAttributesCount")) W.droppedAttributesCount = D.droppedAttributesCount;
              if (D.flags != null && D.hasOwnProperty("flags")) W.flags = D.flags;
              if (D.traceId != null && D.hasOwnProperty("traceId")) W.traceId = Y.bytes === String ? J1.base64.encode(D.traceId, 0, D.traceId.length) : Y.bytes === Array ? Array.prototype.slice.call(D.traceId) : D.traceId;
              if (D.spanId != null && D.hasOwnProperty("spanId")) W.spanId = Y.bytes === String ? J1.base64.encode(D.spanId, 0, D.spanId.length) : Y.bytes === Array ? Array.prototype.slice.call(D.spanId) : D.spanId;
              if (D.observedTimeUnixNano != null && D.hasOwnProperty("observedTimeUnixNano"))
                if (typeof D.observedTimeUnixNano === "number") W.observedTimeUnixNano = Y.longs === String ? String(D.observedTimeUnixNano) : D.observedTimeUnixNano;
                else W.observedTimeUnixNano = Y.longs === String ? J1.Long.prototype.toString.call(D.observedTimeUnixNano) : Y.longs === Number ? new J1.LongBits(D.observedTimeUnixNano.low >>> 0, D.observedTimeUnixNano.high >>> 0).toNumber() : D.observedTimeUnixNano;
              return W
            }, G.prototype.toJSON = function Z() {
              return this.constructor.toObject(this, b9.util.toJSONOptions)
            }, G.getTypeUrl = function Z(D) {
              if (D === void 0) D = "type.googleapis.com";
              return D + "/opentelemetry.proto.logs.v1.LogRecord"
            }, G
          }(), I
        }(), Q
      }(), B
    }(), A
  }();
  mO0.exports = G1
})
// @from(Start 4610179, End 4610690)
cO0 = z((uO0) => {
  Object.defineProperty(uO0, "__esModule", {
    value: !0
  });
  uO0.hexToBinary = void 0;

  function dO0(A) {
    if (A >= 48 && A <= 57) return A - 48;
    if (A >= 97 && A <= 102) return A - 87;
    return A - 55
  }

  function f26(A) {
    let B = new Uint8Array(A.length / 2),
      Q = 0;
    for (let I = 0; I < A.length; I += 2) {
      let G = dO0(A.charCodeAt(I)),
        Z = dO0(A.charCodeAt(I + 1));
      B[Q++] = G << 4 | Z
    }
    return B
  }
  uO0.hexToBinary = f26
})
// @from(Start 4610696, End 4612031)
vZ1 = z((sO0) => {
  Object.defineProperty(sO0, "__esModule", {
    value: !0
  });
  sO0.getOtlpEncoder = sO0.encodeAsString = sO0.encodeAsLongBits = sO0.toLongBits = sO0.hrTimeToNanos = void 0;
  var v26 = p8(),
    dg1 = cO0();

  function ug1(A) {
    let B = BigInt(1e9);
    return BigInt(A[0]) * B + BigInt(A[1])
  }
  sO0.hrTimeToNanos = ug1;

  function iO0(A) {
    let B = Number(BigInt.asUintN(32, A)),
      Q = Number(BigInt.asUintN(32, A >> BigInt(32)));
    return {
      low: B,
      high: Q
    }
  }
  sO0.toLongBits = iO0;

  function pg1(A) {
    let B = ug1(A);
    return iO0(B)
  }
  sO0.encodeAsLongBits = pg1;

  function nO0(A) {
    return ug1(A).toString()
  }
  sO0.encodeAsString = nO0;
  var b26 = typeof BigInt !== "undefined" ? nO0 : v26.hrTimeToNanoseconds;

  function lO0(A) {
    return A
  }

  function aO0(A) {
    if (A === void 0) return;
    return dg1.hexToBinary(A)
  }
  var g26 = {
    encodeHrTime: pg1,
    encodeSpanContext: dg1.hexToBinary,
    encodeOptionalSpanContext: aO0
  };

  function h26(A) {
    if (A === void 0) return g26;
    let B = A.useLongBits ?? !0,
      Q = A.useHex ?? !1;
    return {
      encodeHrTime: B ? pg1 : b26,
      encodeSpanContext: Q ? lO0 : dg1.hexToBinary,
      encodeOptionalSpanContext: Q ? lO0 : aO0
    }
  }
  sO0.getOtlpEncoder = h26
})
// @from(Start 4612037, End 4613379)
bZ1 = z((tO0) => {
  Object.defineProperty(tO0, "__esModule", {
    value: !0
  });
  tO0.toAnyValue = tO0.toKeyValue = tO0.toAttributes = tO0.createInstrumentationScope = tO0.createResource = void 0;

  function c26(A) {
    return {
      attributes: oO0(A.attributes),
      droppedAttributesCount: 0
    }
  }
  tO0.createResource = c26;

  function l26(A) {
    return {
      name: A.name,
      version: A.version
    }
  }
  tO0.createInstrumentationScope = l26;

  function oO0(A) {
    return Object.keys(A).map((B) => cg1(B, A[B]))
  }
  tO0.toAttributes = oO0;

  function cg1(A, B) {
    return {
      key: A,
      value: lg1(B)
    }
  }
  tO0.toKeyValue = cg1;

  function lg1(A) {
    let B = typeof A;
    if (B === "string") return {
      stringValue: A
    };
    if (B === "number") {
      if (!Number.isInteger(A)) return {
        doubleValue: A
      };
      return {
        intValue: A
      }
    }
    if (B === "boolean") return {
      boolValue: A
    };
    if (A instanceof Uint8Array) return {
      bytesValue: A
    };
    if (Array.isArray(A)) return {
      arrayValue: {
        values: A.map(lg1)
      }
    };
    if (B === "object" && A != null) return {
      kvlistValue: {
        values: Object.entries(A).map(([Q, I]) => cg1(Q, I))
      }
    };
    return {}
  }
  tO0.toAnyValue = lg1
})
// @from(Start 4613385, End 4615252)
ig1 = z((BT0) => {
  Object.defineProperty(BT0, "__esModule", {
    value: !0
  });
  BT0.toLogAttributes = BT0.createExportLogsServiceRequest = void 0;
  var r26 = vZ1(),
    gZ1 = bZ1();

  function o26(A, B) {
    let Q = r26.getOtlpEncoder(B);
    return {
      resourceLogs: e26(A, Q)
    }
  }
  BT0.createExportLogsServiceRequest = o26;

  function t26(A) {
    let B = new Map;
    for (let Q of A) {
      let {
        resource: I,
        instrumentationScope: {
          name: G,
          version: Z = "",
          schemaUrl: D = ""
        }
      } = Q, Y = B.get(I);
      if (!Y) Y = new Map, B.set(I, Y);
      let W = `${G}@${Z}:${D}`,
        J = Y.get(W);
      if (!J) J = [], Y.set(W, J);
      J.push(Q)
    }
    return B
  }

  function e26(A, B) {
    let Q = t26(A);
    return Array.from(Q, ([I, G]) => ({
      resource: gZ1.createResource(I),
      scopeLogs: Array.from(G, ([, Z]) => {
        return {
          scope: gZ1.createInstrumentationScope(Z[0].instrumentationScope),
          logRecords: Z.map((D) => A96(D, B)),
          schemaUrl: Z[0].instrumentationScope.schemaUrl
        }
      }),
      schemaUrl: void 0
    }))
  }

  function A96(A, B) {
    return {
      timeUnixNano: B.encodeHrTime(A.hrTime),
      observedTimeUnixNano: B.encodeHrTime(A.hrTimeObserved),
      severityNumber: B96(A.severityNumber),
      severityText: A.severityText,
      body: gZ1.toAnyValue(A.body),
      attributes: AT0(A.attributes),
      droppedAttributesCount: A.droppedAttributesCount,
      flags: A.spanContext?.traceFlags,
      traceId: B.encodeOptionalSpanContext(A.spanContext?.traceId),
      spanId: B.encodeOptionalSpanContext(A.spanContext?.spanId)
    }
  }

  function B96(A) {
    return A
  }

  function AT0(A) {
    return Object.keys(A).map((B) => gZ1.toKeyValue(B, A[B]))
  }
  BT0.toLogAttributes = AT0
})
// @from(Start 4615258, End 4615807)
DT0 = z((GT0) => {
  Object.defineProperty(GT0, "__esModule", {
    value: !0
  });
  GT0.ProtobufLogsSerializer = void 0;
  var IT0 = fZ1(),
    I96 = ig1(),
    G96 = IT0.opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse,
    Z96 = IT0.opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest;
  GT0.ProtobufLogsSerializer = {
    serializeRequest: (A) => {
      let B = I96.createExportLogsServiceRequest(A);
      return Z96.encode(B).finish()
    },
    deserializeResponse: (A) => {
      return G96.decode(A)
    }
  }
})
// @from(Start 4615813, End 4616107)
YT0 = z((ng1) => {
  Object.defineProperty(ng1, "__esModule", {
    value: !0
  });
  ng1.ProtobufLogsSerializer = void 0;
  var D96 = DT0();
  Object.defineProperty(ng1, "ProtobufLogsSerializer", {
    enumerable: !0,
    get: function() {
      return D96.ProtobufLogsSerializer
    }
  })
})
// @from(Start 4616113, End 4619662)
ag1 = z((CT0) => {
  Object.defineProperty(CT0, "__esModule", {
    value: !0
  });
  CT0.createExportMetricsServiceRequest = CT0.toMetric = CT0.toScopeMetrics = CT0.toResourceMetrics = void 0;
  var WT0 = s9(),
    dg = QR(),
    W96 = vZ1(),
    bs = bZ1();

  function FT0(A, B) {
    let Q = W96.getOtlpEncoder(B);
    return {
      resource: bs.createResource(A.resource),
      schemaUrl: void 0,
      scopeMetrics: XT0(A.scopeMetrics, Q)
    }
  }
  CT0.toResourceMetrics = FT0;

  function XT0(A, B) {
    return Array.from(A.map((Q) => ({
      scope: bs.createInstrumentationScope(Q.scope),
      metrics: Q.metrics.map((I) => VT0(I, B)),
      schemaUrl: Q.scope.schemaUrl
    })))
  }
  CT0.toScopeMetrics = XT0;

  function VT0(A, B) {
    let Q = {
        name: A.descriptor.name,
        description: A.descriptor.description,
        unit: A.descriptor.unit
      },
      I = V96(A.aggregationTemporality);
    switch (A.dataPointType) {
      case dg.DataPointType.SUM:
        Q.sum = {
          aggregationTemporality: I,
          isMonotonic: A.isMonotonic,
          dataPoints: JT0(A, B)
        };
        break;
      case dg.DataPointType.GAUGE:
        Q.gauge = {
          dataPoints: JT0(A, B)
        };
        break;
      case dg.DataPointType.HISTOGRAM:
        Q.histogram = {
          aggregationTemporality: I,
          dataPoints: F96(A, B)
        };
        break;
      case dg.DataPointType.EXPONENTIAL_HISTOGRAM:
        Q.exponentialHistogram = {
          aggregationTemporality: I,
          dataPoints: X96(A, B)
        };
        break
    }
    return Q
  }
  CT0.toMetric = VT0;

  function J96(A, B, Q) {
    let I = {
      attributes: bs.toAttributes(A.attributes),
      startTimeUnixNano: Q.encodeHrTime(A.startTime),
      timeUnixNano: Q.encodeHrTime(A.endTime)
    };
    switch (B) {
      case WT0.ValueType.INT:
        I.asInt = A.value;
        break;
      case WT0.ValueType.DOUBLE:
        I.asDouble = A.value;
        break
    }
    return I
  }

  function JT0(A, B) {
    return A.dataPoints.map((Q) => {
      return J96(Q, A.descriptor.valueType, B)
    })
  }

  function F96(A, B) {
    return A.dataPoints.map((Q) => {
      let I = Q.value;
      return {
        attributes: bs.toAttributes(Q.attributes),
        bucketCounts: I.buckets.counts,
        explicitBounds: I.buckets.boundaries,
        count: I.count,
        sum: I.sum,
        min: I.min,
        max: I.max,
        startTimeUnixNano: B.encodeHrTime(Q.startTime),
        timeUnixNano: B.encodeHrTime(Q.endTime)
      }
    })
  }

  function X96(A, B) {
    return A.dataPoints.map((Q) => {
      let I = Q.value;
      return {
        attributes: bs.toAttributes(Q.attributes),
        count: I.count,
        min: I.min,
        max: I.max,
        sum: I.sum,
        positive: {
          offset: I.positive.offset,
          bucketCounts: I.positive.bucketCounts
        },
        negative: {
          offset: I.negative.offset,
          bucketCounts: I.negative.bucketCounts
        },
        scale: I.scale,
        zeroCount: I.zeroCount,
        startTimeUnixNano: B.encodeHrTime(Q.startTime),
        timeUnixNano: B.encodeHrTime(Q.endTime)
      }
    })
  }

  function V96(A) {
    switch (A) {
      case dg.AggregationTemporality.DELTA:
        return 1;
      case dg.AggregationTemporality.CUMULATIVE:
        return 2
    }
  }

  function C96(A, B) {
    return {
      resourceMetrics: A.map((Q) => FT0(Q, B))
    }
  }
  CT0.createExportMetricsServiceRequest = C96
})
// @from(Start 4619668, End 4620240)
ET0 = z((zT0) => {
  Object.defineProperty(zT0, "__esModule", {
    value: !0
  });
  zT0.ProtobufMetricsSerializer = void 0;
  var HT0 = fZ1(),
    w96 = ag1(),
    E96 = HT0.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse,
    U96 = HT0.opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest;
  zT0.ProtobufMetricsSerializer = {
    serializeRequest: (A) => {
      let B = w96.createExportMetricsServiceRequest([A]);
      return U96.encode(B).finish()
    },
    deserializeResponse: (A) => {
      return E96.decode(A)
    }
  }
})
// @from(Start 4620246, End 4620549)
UT0 = z((sg1) => {
  Object.defineProperty(sg1, "__esModule", {
    value: !0
  });
  sg1.ProtobufMetricsSerializer = void 0;
  var N96 = ET0();
  Object.defineProperty(sg1, "ProtobufMetricsSerializer", {
    enumerable: !0,
    get: function() {
      return N96.ProtobufMetricsSerializer
    }
  })
})
// @from(Start 4620555, End 4623566)
rg1 = z((MT0) => {
  Object.defineProperty(MT0, "__esModule", {
    value: !0
  });
  MT0.createExportTraceServiceRequest = MT0.toOtlpSpanEvent = MT0.toOtlpLink = MT0.sdkSpanToOtlpSpan = void 0;
  var gs = bZ1(),
    q96 = vZ1();

  function NT0(A, B) {
    let Q = A.spanContext(),
      I = A.status,
      G = A.parentSpanContext?.spanId ? B.encodeSpanContext(A.parentSpanContext?.spanId) : void 0;
    return {
      traceId: B.encodeSpanContext(Q.traceId),
      spanId: B.encodeSpanContext(Q.spanId),
      parentSpanId: G,
      traceState: Q.traceState?.serialize(),
      name: A.name,
      kind: A.kind == null ? 0 : A.kind + 1,
      startTimeUnixNano: B.encodeHrTime(A.startTime),
      endTimeUnixNano: B.encodeHrTime(A.endTime),
      attributes: gs.toAttributes(A.attributes),
      droppedAttributesCount: A.droppedAttributesCount,
      events: A.events.map((Z) => qT0(Z, B)),
      droppedEventsCount: A.droppedEventsCount,
      status: {
        code: I.code,
        message: I.message
      },
      links: A.links.map((Z) => $T0(Z, B)),
      droppedLinksCount: A.droppedLinksCount
    }
  }
  MT0.sdkSpanToOtlpSpan = NT0;

  function $T0(A, B) {
    return {
      attributes: A.attributes ? gs.toAttributes(A.attributes) : [],
      spanId: B.encodeSpanContext(A.context.spanId),
      traceId: B.encodeSpanContext(A.context.traceId),
      traceState: A.context.traceState?.serialize(),
      droppedAttributesCount: A.droppedAttributesCount || 0
    }
  }
  MT0.toOtlpLink = $T0;

  function qT0(A, B) {
    return {
      attributes: A.attributes ? gs.toAttributes(A.attributes) : [],
      name: A.name,
      timeUnixNano: B.encodeHrTime(A.time),
      droppedAttributesCount: A.droppedAttributesCount || 0
    }
  }
  MT0.toOtlpSpanEvent = qT0;

  function M96(A, B) {
    let Q = q96.getOtlpEncoder(B);
    return {
      resourceSpans: R96(A, Q)
    }
  }
  MT0.createExportTraceServiceRequest = M96;

  function L96(A) {
    let B = new Map;
    for (let Q of A) {
      let I = B.get(Q.resource);
      if (!I) I = new Map, B.set(Q.resource, I);
      let G = `${Q.instrumentationScope.name}@${Q.instrumentationScope.version||""}:${Q.instrumentationScope.schemaUrl||""}`,
        Z = I.get(G);
      if (!Z) Z = [], I.set(G, Z);
      Z.push(Q)
    }
    return B
  }

  function R96(A, B) {
    let Q = L96(A),
      I = [],
      G = Q.entries(),
      Z = G.next();
    while (!Z.done) {
      let [D, Y] = Z.value, W = [], J = Y.values(), F = J.next();
      while (!F.done) {
        let V = F.value;
        if (V.length > 0) {
          let C = V.map((K) => NT0(K, B));
          W.push({
            scope: gs.createInstrumentationScope(V[0].instrumentationScope),
            spans: C,
            schemaUrl: V[0].instrumentationScope.schemaUrl
          })
        }
        F = J.next()
      }
      let X = {
        resource: gs.createResource(D),
        scopeSpans: W,
        schemaUrl: void 0
      };
      I.push(X), Z = G.next()
    }
    return I
  }
})
// @from(Start 4623572, End 4624128)
PT0 = z((OT0) => {
  Object.defineProperty(OT0, "__esModule", {
    value: !0
  });
  OT0.ProtobufTraceSerializer = void 0;
  var RT0 = fZ1(),
    S96 = rg1(),
    _96 = RT0.opentelemetry.proto.collector.trace.v1.ExportTraceServiceResponse,
    j96 = RT0.opentelemetry.proto.collector.trace.v1.ExportTraceServiceRequest;
  OT0.ProtobufTraceSerializer = {
    serializeRequest: (A) => {
      let B = S96.createExportTraceServiceRequest(A);
      return j96.encode(B).finish()
    },
    deserializeResponse: (A) => {
      return _96.decode(A)
    }
  }
})
// @from(Start 4624134, End 4624431)
ST0 = z((og1) => {
  Object.defineProperty(og1, "__esModule", {
    value: !0
  });
  og1.ProtobufTraceSerializer = void 0;
  var y96 = PT0();
  Object.defineProperty(og1, "ProtobufTraceSerializer", {
    enumerable: !0,
    get: function() {
      return y96.ProtobufTraceSerializer
    }
  })
})
// @from(Start 4624437, End 4624921)
yT0 = z((_T0) => {
  Object.defineProperty(_T0, "__esModule", {
    value: !0
  });
  _T0.JsonLogsSerializer = void 0;
  var x96 = ig1();
  _T0.JsonLogsSerializer = {
    serializeRequest: (A) => {
      let B = x96.createExportLogsServiceRequest(A, {
        useHex: !0,
        useLongBits: !1
      });
      return new TextEncoder().encode(JSON.stringify(B))
    },
    deserializeResponse: (A) => {
      let B = new TextDecoder;
      return JSON.parse(B.decode(A))
    }
  }
})
// @from(Start 4624927, End 4625209)
kT0 = z((tg1) => {
  Object.defineProperty(tg1, "__esModule", {
    value: !0
  });
  tg1.JsonLogsSerializer = void 0;
  var f96 = yT0();
  Object.defineProperty(tg1, "JsonLogsSerializer", {
    enumerable: !0,
    get: function() {
      return f96.JsonLogsSerializer
    }
  })
})
// @from(Start 4625215, End 4625690)
vT0 = z((xT0) => {
  Object.defineProperty(xT0, "__esModule", {
    value: !0
  });
  xT0.JsonMetricsSerializer = void 0;
  var b96 = ag1();
  xT0.JsonMetricsSerializer = {
    serializeRequest: (A) => {
      let B = b96.createExportMetricsServiceRequest([A], {
        useLongBits: !1
      });
      return new TextEncoder().encode(JSON.stringify(B))
    },
    deserializeResponse: (A) => {
      let B = new TextDecoder;
      return JSON.parse(B.decode(A))
    }
  }
})
// @from(Start 4625696, End 4625987)
bT0 = z((eg1) => {
  Object.defineProperty(eg1, "__esModule", {
    value: !0
  });
  eg1.JsonMetricsSerializer = void 0;
  var g96 = vT0();
  Object.defineProperty(eg1, "JsonMetricsSerializer", {
    enumerable: !0,
    get: function() {
      return g96.JsonMetricsSerializer
    }
  })
})
// @from(Start 4625993, End 4626480)
mT0 = z((gT0) => {
  Object.defineProperty(gT0, "__esModule", {
    value: !0
  });
  gT0.JsonTraceSerializer = void 0;
  var m96 = rg1();
  gT0.JsonTraceSerializer = {
    serializeRequest: (A) => {
      let B = m96.createExportTraceServiceRequest(A, {
        useHex: !0,
        useLongBits: !1
      });
      return new TextEncoder().encode(JSON.stringify(B))
    },
    deserializeResponse: (A) => {
      let B = new TextDecoder;
      return JSON.parse(B.decode(A))
    }
  }
})
// @from(Start 4626486, End 4626771)
dT0 = z((Ah1) => {
  Object.defineProperty(Ah1, "__esModule", {
    value: !0
  });
  Ah1.JsonTraceSerializer = void 0;
  var d96 = mT0();
  Object.defineProperty(Ah1, "JsonTraceSerializer", {
    enumerable: !0,
    get: function() {
      return d96.JsonTraceSerializer
    }
  })
})
// @from(Start 4626777, End 4628039)
i_ = z((DR) => {
  Object.defineProperty(DR, "__esModule", {
    value: !0
  });
  DR.JsonTraceSerializer = DR.JsonMetricsSerializer = DR.JsonLogsSerializer = DR.ProtobufTraceSerializer = DR.ProtobufMetricsSerializer = DR.ProtobufLogsSerializer = void 0;
  var p96 = YT0();
  Object.defineProperty(DR, "ProtobufLogsSerializer", {
    enumerable: !0,
    get: function() {
      return p96.ProtobufLogsSerializer
    }
  });
  var c96 = UT0();
  Object.defineProperty(DR, "ProtobufMetricsSerializer", {
    enumerable: !0,
    get: function() {
      return c96.ProtobufMetricsSerializer
    }
  });
  var l96 = ST0();
  Object.defineProperty(DR, "ProtobufTraceSerializer", {
    enumerable: !0,
    get: function() {
      return l96.ProtobufTraceSerializer
    }
  });
  var i96 = kT0();
  Object.defineProperty(DR, "JsonLogsSerializer", {
    enumerable: !0,
    get: function() {
      return i96.JsonLogsSerializer
    }
  });
  var n96 = bT0();
  Object.defineProperty(DR, "JsonMetricsSerializer", {
    enumerable: !0,
    get: function() {
      return n96.JsonMetricsSerializer
    }
  });
  var a96 = dT0();
  Object.defineProperty(DR, "JsonTraceSerializer", {
    enumerable: !0,
    get: function() {
      return a96.JsonTraceSerializer
    }
  })
})
// @from(Start 4628045, End 4628181)
cT0 = z((uT0) => {
  Object.defineProperty(uT0, "__esModule", {
    value: !0
  });
  uT0.VERSION = void 0;
  uT0.VERSION = "0.200.0"
})
// @from(Start 4628187, End 4628705)
nT0 = z((lT0) => {
  Object.defineProperty(lT0, "__esModule", {
    value: !0
  });
  lT0.parseRetryAfterToMills = lT0.isExportRetryable = void 0;

  function r96(A) {
    return [429, 502, 503, 504].includes(A)
  }
  lT0.isExportRetryable = r96;

  function o96(A) {
    if (A == null) return;
    let B = Number.parseInt(A, 10);
    if (Number.isInteger(B)) return B > 0 ? B * 1000 : -1;
    let Q = new Date(A).getTime() - Date.now();
    if (Q >= 0) return Q;
    return 0
  }
  lT0.parseRetryAfterToMills = o96
})
// @from(Start 4628711, End 4631031)
AP0 = z((tT0) => {
  Object.defineProperty(tT0, "__esModule", {
    value: !0
  });
  tT0.createHttpAgent = tT0.compressAndSend = tT0.sendWithHttp = void 0;
  var sT0 = Z1("http"),
    rT0 = Z1("https"),
    e96 = Z1("zlib"),
    A46 = Z1("stream"),
    aT0 = nT0(),
    B46 = TZ1();

  function Q46(A, B, Q, I, G) {
    let Z = new URL(A.url),
      D = Number(process.versions.node.split(".")[0]),
      Y = {
        hostname: Z.hostname,
        port: Z.port,
        path: Z.pathname,
        method: "POST",
        headers: {
          ...A.headers()
        },
        agent: B
      },
      J = (Z.protocol === "http:" ? sT0.request : rT0.request)(Y, (X) => {
        let V = [];
        X.on("data", (C) => V.push(C)), X.on("end", () => {
          if (X.statusCode && X.statusCode < 299) I({
            status: "success",
            data: Buffer.concat(V)
          });
          else if (X.statusCode && aT0.isExportRetryable(X.statusCode)) I({
            status: "retryable",
            retryInMillis: aT0.parseRetryAfterToMills(X.headers["retry-after"])
          });
          else {
            let C = new B46.OTLPExporterError(X.statusMessage, X.statusCode, Buffer.concat(V).toString());
            I({
              status: "failure",
              error: C
            })
          }
        })
      });
    J.setTimeout(G, () => {
      J.destroy(), I({
        status: "failure",
        error: new Error("Request Timeout")
      })
    }), J.on("error", (X) => {
      I({
        status: "failure",
        error: X
      })
    });
    let F = D >= 14 ? "close" : "abort";
    J.on(F, () => {
      I({
        status: "failure",
        error: new Error("Request timed out")
      })
    }), oT0(J, A.compression, Q, (X) => {
      I({
        status: "failure",
        error: X
      })
    })
  }
  tT0.sendWithHttp = Q46;

  function oT0(A, B, Q, I) {
    let G = I46(Q);
    if (B === "gzip") A.setHeader("Content-Encoding", "gzip"), G = G.on("error", I).pipe(e96.createGzip()).on("error", I);
    G.pipe(A).on("error", I)
  }
  tT0.compressAndSend = oT0;

  function I46(A) {
    let B = new A46.Readable;
    return B.push(A), B.push(null), B
  }

  function G46(A, B) {
    return new(new URL(A).protocol === "http:" ? sT0.Agent : rT0.Agent)(B)
  }
  tT0.createHttpAgent = G46
})
// @from(Start 4631037, End 4631916)
GP0 = z((QP0) => {
  Object.defineProperty(QP0, "__esModule", {
    value: !0
  });
  QP0.createHttpExporterTransport = void 0;
  class BP0 {
    _parameters;
    _utils = null;
    constructor(A) {
      this._parameters = A
    }
    async send(A, B) {
      let {
        agent: Q,
        send: I
      } = this._loadUtils();
      return new Promise((G) => {
        I(this._parameters, Q, A, (Z) => {
          G(Z)
        }, B)
      })
    }
    shutdown() {}
    _loadUtils() {
      let A = this._utils;
      if (A === null) {
        let {
          sendWithHttp: B,
          createHttpAgent: Q
        } = AP0();
        A = this._utils = {
          agent: Q(this._parameters.url, this._parameters.agentOptions),
          send: B
        }
      }
      return A
    }
  }

  function Y46(A) {
    return new BP0(A)
  }
  QP0.createHttpExporterTransport = Y46
})
// @from(Start 4631922, End 4633033)
JP0 = z((YP0) => {
  Object.defineProperty(YP0, "__esModule", {
    value: !0
  });
  YP0.createRetryingTransport = void 0;
  var W46 = 5,
    J46 = 1000,
    F46 = 5000,
    X46 = 1.5,
    ZP0 = 0.2;

  function V46() {
    return Math.random() * (2 * ZP0) - ZP0
  }
  class DP0 {
    _transport;
    constructor(A) {
      this._transport = A
    }
    retry(A, B, Q) {
      return new Promise((I, G) => {
        setTimeout(() => {
          this._transport.send(A, B).then(I, G)
        }, Q)
      })
    }
    async send(A, B) {
      let Q = Date.now() + B,
        I = await this._transport.send(A, B),
        G = W46,
        Z = J46;
      while (I.status === "retryable" && G > 0) {
        G--;
        let D = Math.max(Math.min(Z, F46) + V46(), 0);
        Z = Z * X46;
        let Y = I.retryInMillis ?? D,
          W = Q - Date.now();
        if (Y > W) return I;
        I = await this.retry(A, W, Y)
      }
      return I
    }
    shutdown() {
      return this._transport.shutdown()
    }
  }

  function C46(A) {
    return new DP0(A.transport)
  }
  YP0.createRetryingTransport = C46
})
// @from(Start 4633039, End 4633598)
VP0 = z((FP0) => {
  Object.defineProperty(FP0, "__esModule", {
    value: !0
  });
  FP0.createOtlpHttpExportDelegate = void 0;
  var K46 = Ng1(),
    H46 = GP0(),
    z46 = Ug1(),
    w46 = JP0();

  function E46(A, B) {
    return K46.createOtlpExportDelegate({
      transport: w46.createRetryingTransport({
        transport: H46.createHttpExporterTransport(A)
      }),
      serializer: B,
      promiseHandler: z46.createBoundedQueueExportPromiseHandler(A)
    }, {
      timeout: A.timeoutMillis
    })
  }
  FP0.createOtlpHttpExportDelegate = E46
})
// @from(Start 4633604, End 4634741)
Bh1 = z((zP0) => {
  Object.defineProperty(zP0, "__esModule", {
    value: !0
  });
  zP0.getSharedConfigurationFromEnvironment = void 0;
  var HP0 = s9();

  function CP0(A) {
    let B = process.env[A]?.trim();
    if (B != null && B !== "") {
      let Q = Number(B);
      if (Number.isFinite(Q) && Q > 0) return Q;
      HP0.diag.warn(`Configuration: ${A} is invalid, expected number greater than 0 (actual: ${B})`)
    }
    return
  }

  function U46(A) {
    let B = CP0(`OTEL_EXPORTER_OTLP_${A}_TIMEOUT`),
      Q = CP0("OTEL_EXPORTER_OTLP_TIMEOUT");
    return B ?? Q
  }

  function KP0(A) {
    let B = process.env[A]?.trim();
    if (B === "") return;
    if (B == null || B === "none" || B === "gzip") return B;
    HP0.diag.warn(`Configuration: ${A} is invalid, expected 'none' or 'gzip' (actual: '${B}')`);
    return
  }

  function N46(A) {
    let B = KP0(`OTEL_EXPORTER_OTLP_${A}_COMPRESSION`),
      Q = KP0("OTEL_EXPORTER_OTLP_COMPRESSION");
    return B ?? Q
  }

  function $46(A) {
    return {
      timeoutMillis: U46(A),
      compression: N46(A)
    }
  }
  zP0.getSharedConfigurationFromEnvironment = $46
})
// @from(Start 4634747, End 4635223)
NP0 = z((EP0) => {
  Object.defineProperty(EP0, "__esModule", {
    value: !0
  });
  EP0.validateAndNormalizeHeaders = void 0;
  var q46 = s9();

  function M46(A) {
    return () => {
      let B = {};
      return Object.entries(A?.() ?? {}).forEach(([Q, I]) => {
        if (typeof I !== "undefined") B[Q] = String(I);
        else q46.diag.warn(`Header "${Q}" has invalid value (${I}) and will be ignored`)
      }), B
    }
  }
  EP0.validateAndNormalizeHeaders = M46
})
// @from(Start 4635229, End 4636487)
LP0 = z((qP0) => {
  Object.defineProperty(qP0, "__esModule", {
    value: !0
  });
  qP0.getHttpConfigurationDefaults = qP0.mergeOtlpHttpConfigurationWithDefaults = void 0;
  var $P0 = ks(),
    L46 = NP0();

  function R46(A, B, Q) {
    let I = {
        ...Q()
      },
      G = {};
    return () => {
      if (B != null) Object.assign(G, B());
      if (A != null) Object.assign(G, A());
      return Object.assign(G, I)
    }
  }

  function O46(A) {
    if (A == null) return;
    try {
      return new URL(A), A
    } catch (B) {
      throw new Error(`Configuration: Could not parse user-provided export URL: '${A}'`)
    }
  }

  function T46(A, B, Q) {
    return {
      ...$P0.mergeOtlpSharedConfigurationWithDefaults(A, B, Q),
      headers: R46(L46.validateAndNormalizeHeaders(A.headers), B.headers, Q.headers),
      url: O46(A.url) ?? B.url ?? Q.url,
      agentOptions: A.agentOptions ?? B.agentOptions ?? Q.agentOptions
    }
  }
  qP0.mergeOtlpHttpConfigurationWithDefaults = T46;

  function P46(A, B) {
    return {
      ...$P0.getSharedConfigurationDefaults(),
      headers: () => A,
      url: "http://localhost:4318/" + B,
      agentOptions: {
        keepAlive: !0
      }
    }
  }
  qP0.getHttpConfigurationDefaults = P46
})
// @from(Start 4636493, End 4638321)
TP0 = z((RP0) => {
  Object.defineProperty(RP0, "__esModule", {
    value: !0
  });
  RP0.getHttpConfigurationFromEnvironment = void 0;
  var hZ1 = p8(),
    Qh1 = s9(),
    _46 = Bh1(),
    j46 = ks();

  function y46(A) {
    let B = process.env[`OTEL_EXPORTER_OTLP_${A}_HEADERS`]?.trim(),
      Q = process.env.OTEL_EXPORTER_OTLP_HEADERS?.trim(),
      I = hZ1.parseKeyPairsIntoRecord(B),
      G = hZ1.parseKeyPairsIntoRecord(Q);
    if (Object.keys(I).length === 0 && Object.keys(G).length === 0) return;
    return Object.assign({}, hZ1.parseKeyPairsIntoRecord(Q), hZ1.parseKeyPairsIntoRecord(B))
  }

  function k46(A) {
    try {
      return new URL(A).toString()
    } catch {
      Qh1.diag.warn(`Configuration: Could not parse environment-provided export URL: '${A}', falling back to undefined`);
      return
    }
  }

  function x46(A, B) {
    try {
      new URL(A)
    } catch {
      Qh1.diag.warn(`Configuration: Could not parse environment-provided export URL: '${A}', falling back to undefined`);
      return
    }
    if (!A.endsWith("/")) A = A + "/";
    A += B;
    try {
      new URL(A)
    } catch {
      Qh1.diag.warn(`Configuration: Provided URL appended with '${B}' is not a valid URL, using 'undefined' instead of '${A}'`);
      return
    }
    return A
  }

  function f46(A) {
    let B = process.env.OTEL_EXPORTER_OTLP_ENDPOINT?.trim();
    if (B == null || B === "") return;
    return x46(B, A)
  }

  function v46(A) {
    let B = process.env[`OTEL_EXPORTER_OTLP_${A}_ENDPOINT`]?.trim();
    if (B == null || B === "") return;
    return k46(B)
  }

  function b46(A, B) {
    return {
      ..._46.getSharedConfigurationFromEnvironment(A),
      url: v46(A) ?? f46(B),
      headers: j46.wrapStaticHeadersInFunction(y46(A))
    }
  }
  RP0.getHttpConfigurationFromEnvironment = b46
})
// @from(Start 4638327, End 4639334)
jP0 = z((SP0) => {
  Object.defineProperty(SP0, "__esModule", {
    value: !0
  });
  SP0.convertLegacyHttpOptions = void 0;
  var PP0 = LP0(),
    g46 = TP0(),
    h46 = s9(),
    m46 = ks();

  function d46(A) {
    if (A?.keepAlive != null)
      if (A.httpAgentOptions != null) {
        if (A.httpAgentOptions.keepAlive == null) A.httpAgentOptions.keepAlive = A.keepAlive
      } else A.httpAgentOptions = {
        keepAlive: A.keepAlive
      };
    return A.httpAgentOptions
  }

  function u46(A, B, Q, I) {
    if (A.metadata) h46.diag.warn("Metadata cannot be set when using http");
    return PP0.mergeOtlpHttpConfigurationWithDefaults({
      url: A.url,
      headers: m46.wrapStaticHeadersInFunction(A.headers),
      concurrencyLimit: A.concurrencyLimit,
      timeoutMillis: A.timeoutMillis,
      compression: A.compression,
      agentOptions: d46(A)
    }, g46.getHttpConfigurationFromEnvironment(B, Q), PP0.getHttpConfigurationDefaults(I, Q))
  }
  SP0.convertLegacyHttpOptions = u46
})
// @from(Start 4639340, End 4640092)
ug = z((hs) => {
  Object.defineProperty(hs, "__esModule", {
    value: !0
  });
  hs.convertLegacyHttpOptions = hs.getSharedConfigurationFromEnvironment = hs.createOtlpHttpExportDelegate = void 0;
  var p46 = VP0();
  Object.defineProperty(hs, "createOtlpHttpExportDelegate", {
    enumerable: !0,
    get: function() {
      return p46.createOtlpHttpExportDelegate
    }
  });
  var c46 = Bh1();
  Object.defineProperty(hs, "getSharedConfigurationFromEnvironment", {
    enumerable: !0,
    get: function() {
      return c46.getSharedConfigurationFromEnvironment
    }
  });
  var l46 = jP0();
  Object.defineProperty(hs, "convertLegacyHttpOptions", {
    enumerable: !0,
    get: function() {
      return l46.convertLegacyHttpOptions
    }
  })
})
// @from(Start 4640098, End 4640694)
vP0 = z((xP0) => {
  Object.defineProperty(xP0, "__esModule", {
    value: !0
  });
  xP0.OTLPMetricExporter = void 0;
  var n46 = Mg1(),
    a46 = i_(),
    s46 = cT0(),
    yP0 = ug(),
    r46 = {
      "User-Agent": `OTel-OTLP-Exporter-JavaScript/${s46.VERSION}`
    };
  class kP0 extends n46.OTLPMetricExporterBase {
    constructor(A) {
      super(yP0.createOtlpHttpExportDelegate(yP0.convertLegacyHttpOptions(A ?? {}, "METRICS", "v1/metrics", {
        ...r46,
        "Content-Type": "application/json"
      }), a46.JsonMetricsSerializer), A)
    }
  }
  xP0.OTLPMetricExporter = kP0
})
// @from(Start 4640700, End 4640982)
bP0 = z((Ih1) => {
  Object.defineProperty(Ih1, "__esModule", {
    value: !0
  });
  Ih1.OTLPMetricExporter = void 0;
  var o46 = vP0();
  Object.defineProperty(Ih1, "OTLPMetricExporter", {
    enumerable: !0,
    get: function() {
      return o46.OTLPMetricExporter
    }
  })
})
// @from(Start 4640988, End 4641270)
gP0 = z((Gh1) => {
  Object.defineProperty(Gh1, "__esModule", {
    value: !0
  });
  Gh1.OTLPMetricExporter = void 0;
  var e46 = bP0();
  Object.defineProperty(Gh1, "OTLPMetricExporter", {
    enumerable: !0,
    get: function() {
      return e46.OTLPMetricExporter
    }
  })
})
// @from(Start 4641276, End 4642557)
dZ1 = z((YR) => {
  Object.defineProperty(YR, "__esModule", {
    value: !0
  });
  YR.OTLPMetricExporterBase = YR.LowMemoryTemporalitySelector = YR.DeltaTemporalitySelector = YR.CumulativeTemporalitySelector = YR.AggregationTemporalityPreference = YR.OTLPMetricExporter = void 0;
  var B66 = gP0();
  Object.defineProperty(YR, "OTLPMetricExporter", {
    enumerable: !0,
    get: function() {
      return B66.OTLPMetricExporter
    }
  });
  var Q66 = wg1();
  Object.defineProperty(YR, "AggregationTemporalityPreference", {
    enumerable: !0,
    get: function() {
      return Q66.AggregationTemporalityPreference
    }
  });
  var mZ1 = Mg1();
  Object.defineProperty(YR, "CumulativeTemporalitySelector", {
    enumerable: !0,
    get: function() {
      return mZ1.CumulativeTemporalitySelector
    }
  });
  Object.defineProperty(YR, "DeltaTemporalitySelector", {
    enumerable: !0,
    get: function() {
      return mZ1.DeltaTemporalitySelector
    }
  });
  Object.defineProperty(YR, "LowMemoryTemporalitySelector", {
    enumerable: !0,
    get: function() {
      return mZ1.LowMemoryTemporalitySelector
    }
  });
  Object.defineProperty(YR, "OTLPMetricExporterBase", {
    enumerable: !0,
    get: function() {
      return mZ1.OTLPMetricExporterBase
    }
  })
})
// @from(Start 4642563, End 4642699)
dP0 = z((hP0) => {
  Object.defineProperty(hP0, "__esModule", {
    value: !0
  });
  hP0.VERSION = void 0;
  hP0.VERSION = "0.200.0"
})
// @from(Start 4642705, End 4643279)
iP0 = z((cP0) => {
  Object.defineProperty(cP0, "__esModule", {
    value: !0
  });
  cP0.OTLPMetricExporter = void 0;
  var G66 = dZ1(),
    Z66 = i_(),
    D66 = dP0(),
    uP0 = ug();
  class pP0 extends G66.OTLPMetricExporterBase {
    constructor(A) {
      super(uP0.createOtlpHttpExportDelegate(uP0.convertLegacyHttpOptions(A ?? {}, "METRICS", "v1/metrics", {
        "User-Agent": `OTel-OTLP-Exporter-JavaScript/${D66.VERSION}`,
        "Content-Type": "application/x-protobuf"
      }), Z66.ProtobufMetricsSerializer), A)
    }
  }
  cP0.OTLPMetricExporter = pP0
})
// @from(Start 4643285, End 4643567)
nP0 = z((Zh1) => {
  Object.defineProperty(Zh1, "__esModule", {
    value: !0
  });
  Zh1.OTLPMetricExporter = void 0;
  var Y66 = iP0();
  Object.defineProperty(Zh1, "OTLPMetricExporter", {
    enumerable: !0,
    get: function() {
      return Y66.OTLPMetricExporter
    }
  })
})
// @from(Start 4643573, End 4645115)
y6 = z((oP0) => {
  Object.defineProperty(oP0, "__esModule", {
    value: !0
  });
  oP0.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = oP0.DEFAULT_MAX_SEND_MESSAGE_LENGTH = oP0.Propagate = oP0.LogVerbosity = oP0.Status = void 0;
  var aP0;
  (function(A) {
    A[A.OK = 0] = "OK", A[A.CANCELLED = 1] = "CANCELLED", A[A.UNKNOWN = 2] = "UNKNOWN", A[A.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", A[A.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", A[A.NOT_FOUND = 5] = "NOT_FOUND", A[A.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", A[A.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", A[A.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", A[A.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", A[A.ABORTED = 10] = "ABORTED", A[A.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", A[A.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", A[A.INTERNAL = 13] = "INTERNAL", A[A.UNAVAILABLE = 14] = "UNAVAILABLE", A[A.DATA_LOSS = 15] = "DATA_LOSS", A[A.UNAUTHENTICATED = 16] = "UNAUTHENTICATED"
  })(aP0 || (oP0.Status = aP0 = {}));
  var sP0;
  (function(A) {
    A[A.DEBUG = 0] = "DEBUG", A[A.INFO = 1] = "INFO", A[A.ERROR = 2] = "ERROR", A[A.NONE = 3] = "NONE"
  })(sP0 || (oP0.LogVerbosity = sP0 = {}));
  var rP0;
  (function(A) {
    A[A.DEADLINE = 1] = "DEADLINE", A[A.CENSUS_STATS_CONTEXT = 2] = "CENSUS_STATS_CONTEXT", A[A.CENSUS_TRACING_CONTEXT = 4] = "CENSUS_TRACING_CONTEXT", A[A.CANCELLATION = 8] = "CANCELLATION", A[A.DEFAULTS = 65535] = "DEFAULTS"
  })(rP0 || (oP0.Propagate = rP0 = {}));
  oP0.DEFAULT_MAX_SEND_MESSAGE_LENGTH = -1;
  oP0.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = 4194304
})
// @from(Start 4645121, End 4648240)
Dh1 = z((D$8, C66) => {
  C66.exports = {
    name: "@grpc/grpc-js",
    version: "1.13.1",
    description: "gRPC Library for Node - pure JS implementation",
    homepage: "https://grpc.io/",
    repository: "https://github.com/grpc/grpc-node/tree/master/packages/grpc-js",
    main: "build/src/index.js",
    engines: {
      node: ">=12.10.0"
    },
    keywords: [],
    author: {
      name: "Google Inc."
    },
    types: "build/src/index.d.ts",
    license: "Apache-2.0",
    devDependencies: {
      "@grpc/proto-loader": "file:../proto-loader",
      "@types/gulp": "^4.0.17",
      "@types/gulp-mocha": "0.0.37",
      "@types/lodash": "^4.14.202",
      "@types/mocha": "^10.0.6",
      "@types/ncp": "^2.0.8",
      "@types/node": ">=20.11.20",
      "@types/pify": "^5.0.4",
      "@types/semver": "^7.5.8",
      "@typescript-eslint/eslint-plugin": "^7.1.0",
      "@typescript-eslint/parser": "^7.1.0",
      "@typescript-eslint/typescript-estree": "^7.1.0",
      "clang-format": "^1.8.0",
      eslint: "^8.42.0",
      "eslint-config-prettier": "^8.8.0",
      "eslint-plugin-node": "^11.1.0",
      "eslint-plugin-prettier": "^4.2.1",
      execa: "^2.0.3",
      gulp: "^4.0.2",
      "gulp-mocha": "^6.0.0",
      lodash: "^4.17.21",
      madge: "^5.0.1",
      "mocha-jenkins-reporter": "^0.4.1",
      ncp: "^2.0.0",
      pify: "^4.0.1",
      prettier: "^2.8.8",
      rimraf: "^3.0.2",
      semver: "^7.6.0",
      "ts-node": "^10.9.2",
      typescript: "^5.3.3"
    },
    contributors: [{
      name: "Google Inc."
    }],
    scripts: {
      build: "npm run compile",
      clean: "rimraf ./build",
      compile: "tsc -p .",
      format: 'clang-format -i -style="{Language: JavaScript, BasedOnStyle: Google, ColumnLimit: 80}" src/*.ts test/*.ts',
      lint: "eslint src/*.ts test/*.ts",
      prepare: "npm run generate-types && npm run compile",
      test: "gulp test",
      check: "npm run lint",
      fix: "eslint --fix src/*.ts test/*.ts",
      pretest: "npm run generate-types && npm run generate-test-types && npm run compile",
      posttest: "npm run check && madge -c ./build/src",
      "generate-types": "proto-loader-gen-types --keepCase --longs String --enums String --defaults --oneofs --includeComments --includeDirs proto/ --include-dirs test/fixtures/ -O src/generated/ --grpcLib ../index channelz.proto",
      "generate-test-types": "proto-loader-gen-types --keepCase --longs String --enums String --defaults --oneofs --includeComments --include-dirs test/fixtures/ -O test/generated/ --grpcLib ../../src/index test_service.proto"
    },
    dependencies: {
      "@grpc/proto-loader": "^0.7.13",
      "@js-sdsl/ordered-map": "^4.4.2"
    },
    files: ["src/**/*.ts", "build/src/**/*.{js,d.ts,js.map}", "proto/*.proto", "LICENSE", "deps/envoy-api/envoy/api/v2/**/*.proto", "deps/envoy-api/envoy/config/**/*.proto", "deps/envoy-api/envoy/service/**/*.proto", "deps/envoy-api/envoy/type/**/*.proto", "deps/udpa/udpa/**/*.proto", "deps/googleapis/google/api/*.proto", "deps/googleapis/google/rpc/*.proto", "deps/protoc-gen-validate/validate/**/*.proto"]
  }
})
// @from(Start 4648246, End 4650423)
GB = z((BS0) => {
  var Yh1, Wh1, Jh1, Fh1;
  Object.defineProperty(BS0, "__esModule", {
    value: !0
  });
  BS0.log = BS0.setLoggerVerbosity = BS0.setLogger = BS0.getLogger = void 0;
  BS0.trace = L66;
  BS0.isTracerEnabled = AS0;
  var WR = y6(),
    K66 = Z1("process"),
    H66 = Dh1().version,
    z66 = {
      error: (A, ...B) => {
        console.error("E " + A, ...B)
      },
      info: (A, ...B) => {
        console.error("I " + A, ...B)
      },
      debug: (A, ...B) => {
        console.error("D " + A, ...B)
      }
    },
    n_ = z66,
    pg = WR.LogVerbosity.ERROR,
    w66 = (Wh1 = (Yh1 = process.env.GRPC_NODE_VERBOSITY) !== null && Yh1 !== void 0 ? Yh1 : process.env.GRPC_VERBOSITY) !== null && Wh1 !== void 0 ? Wh1 : "";
  switch (w66.toUpperCase()) {
    case "DEBUG":
      pg = WR.LogVerbosity.DEBUG;
      break;
    case "INFO":
      pg = WR.LogVerbosity.INFO;
      break;
    case "ERROR":
      pg = WR.LogVerbosity.ERROR;
      break;
    case "NONE":
      pg = WR.LogVerbosity.NONE;
      break;
    default:
  }
  var E66 = () => {
    return n_
  };
  BS0.getLogger = E66;
  var U66 = (A) => {
    n_ = A
  };
  BS0.setLogger = U66;
  var N66 = (A) => {
    pg = A
  };
  BS0.setLoggerVerbosity = N66;
  var $66 = (A, ...B) => {
    let Q;
    if (A >= pg) {
      switch (A) {
        case WR.LogVerbosity.DEBUG:
          Q = n_.debug;
          break;
        case WR.LogVerbosity.INFO:
          Q = n_.info;
          break;
        case WR.LogVerbosity.ERROR:
          Q = n_.error;
          break
      }
      if (!Q) Q = n_.error;
      if (Q) Q.bind(n_)(...B)
    }
  };
  BS0.log = $66;
  var q66 = (Fh1 = (Jh1 = process.env.GRPC_NODE_TRACE) !== null && Jh1 !== void 0 ? Jh1 : process.env.GRPC_TRACE) !== null && Fh1 !== void 0 ? Fh1 : "",
    Xh1 = new Set,
    eP0 = new Set;
  for (let A of q66.split(","))
    if (A.startsWith("-")) eP0.add(A.substring(1));
    else Xh1.add(A);
  var M66 = Xh1.has("all");

  function L66(A, B, Q) {
    if (AS0(B)) BS0.log(A, new Date().toISOString() + " | v" + H66 + " " + K66.pid + " | " + B + " | " + Q)
  }

  function AS0(A) {
    return !eP0.has(A) && (M66 || Xh1.has(A))
  }
})
// @from(Start 4650429, End 4650818)
uZ1 = z((QS0) => {
  Object.defineProperty(QS0, "__esModule", {
    value: !0
  });
  QS0.getErrorMessage = _66;
  QS0.getErrorCode = j66;

  function _66(A) {
    if (A instanceof Error) return A.message;
    else return String(A)
  }

  function j66(A) {
    if (typeof A === "object" && A !== null && "code" in A && typeof A.code === "number") return A.code;
    else return null
  }
})
// @from(Start 4650824, End 4654356)
SZ = z((ZS0) => {
  Object.defineProperty(ZS0, "__esModule", {
    value: !0
  });
  ZS0.Metadata = void 0;
  var x66 = GB(),
    f66 = y6(),
    v66 = uZ1(),
    b66 = /^[0-9a-z_.-]+$/,
    g66 = /^[ -~]*$/;

  function h66(A) {
    return b66.test(A)
  }

  function m66(A) {
    return g66.test(A)
  }

  function GS0(A) {
    return A.endsWith("-bin")
  }

  function d66(A) {
    return !A.startsWith("grpc-")
  }

  function pZ1(A) {
    return A.toLowerCase()
  }

  function IS0(A, B) {
    if (!h66(A)) throw new Error('Metadata key "' + A + '" contains illegal characters');
    if (B !== null && B !== void 0)
      if (GS0(A)) {
        if (!Buffer.isBuffer(B)) throw new Error("keys that end with '-bin' must have Buffer values")
      } else {
        if (Buffer.isBuffer(B)) throw new Error("keys that don't end with '-bin' must have String values");
        if (!m66(B)) throw new Error('Metadata string value "' + B + '" contains illegal characters')
      }
  }
  class cZ1 {
    constructor(A = {}) {
      this.internalRepr = new Map, this.options = A
    }
    set(A, B) {
      A = pZ1(A), IS0(A, B), this.internalRepr.set(A, [B])
    }
    add(A, B) {
      A = pZ1(A), IS0(A, B);
      let Q = this.internalRepr.get(A);
      if (Q === void 0) this.internalRepr.set(A, [B]);
      else Q.push(B)
    }
    remove(A) {
      A = pZ1(A), this.internalRepr.delete(A)
    }
    get(A) {
      return A = pZ1(A), this.internalRepr.get(A) || []
    }
    getMap() {
      let A = {};
      for (let [B, Q] of this.internalRepr)
        if (Q.length > 0) {
          let I = Q[0];
          A[B] = Buffer.isBuffer(I) ? Buffer.from(I) : I
        } return A
    }
    clone() {
      let A = new cZ1(this.options),
        B = A.internalRepr;
      for (let [Q, I] of this.internalRepr) {
        let G = I.map((Z) => {
          if (Buffer.isBuffer(Z)) return Buffer.from(Z);
          else return Z
        });
        B.set(Q, G)
      }
      return A
    }
    merge(A) {
      for (let [B, Q] of A.internalRepr) {
        let I = (this.internalRepr.get(B) || []).concat(Q);
        this.internalRepr.set(B, I)
      }
    }
    setOptions(A) {
      this.options = A
    }
    getOptions() {
      return this.options
    }
    toHttp2Headers() {
      let A = {};
      for (let [B, Q] of this.internalRepr) A[B] = Q.map(u66);
      return A
    }
    toJSON() {
      let A = {};
      for (let [B, Q] of this.internalRepr) A[B] = Q;
      return A
    }
    static fromHttp2Headers(A) {
      let B = new cZ1;
      for (let Q of Object.keys(A)) {
        if (Q.charAt(0) === ":") continue;
        let I = A[Q];
        try {
          if (GS0(Q)) {
            if (Array.isArray(I)) I.forEach((G) => {
              B.add(Q, Buffer.from(G, "base64"))
            });
            else if (I !== void 0)
              if (d66(Q)) I.split(",").forEach((G) => {
                B.add(Q, Buffer.from(G.trim(), "base64"))
              });
              else B.add(Q, Buffer.from(I, "base64"))
          } else if (Array.isArray(I)) I.forEach((G) => {
            B.add(Q, G)
          });
          else if (I !== void 0) B.add(Q, I)
        } catch (G) {
          let Z = `Failed to add metadata entry ${Q}: ${I}. ${v66.getErrorMessage(G)}. For more information see https://github.com/grpc/grpc-node/issues/1173`;
          x66.log(f66.LogVerbosity.ERROR, Z)
        }
      }
      return B
    }
  }
  ZS0.Metadata = cZ1;
  var u66 = (A) => {
    return Buffer.isBuffer(A) ? A.toString("base64") : A
  }
})
// @from(Start 4654362, End 4656716)
iZ1 = z((YS0) => {
  Object.defineProperty(YS0, "__esModule", {
    value: !0
  });
  YS0.CallCredentials = void 0;
  var Ch1 = SZ();

  function p66(A) {
    return "getRequestHeaders" in A && typeof A.getRequestHeaders === "function"
  }
  class cg {
    static createFromMetadataGenerator(A) {
      return new Kh1(A)
    }
    static createFromGoogleCredential(A) {
      return cg.createFromMetadataGenerator((B, Q) => {
        let I;
        if (p66(A)) I = A.getRequestHeaders(B.service_url);
        else I = new Promise((G, Z) => {
          A.getRequestMetadata(B.service_url, (D, Y) => {
            if (D) {
              Z(D);
              return
            }
            if (!Y) {
              Z(new Error("Headers not set by metadata plugin"));
              return
            }
            G(Y)
          })
        });
        I.then((G) => {
          let Z = new Ch1.Metadata;
          for (let D of Object.keys(G)) Z.add(D, G[D]);
          Q(null, Z)
        }, (G) => {
          Q(G)
        })
      })
    }
    static createEmpty() {
      return new Hh1
    }
  }
  YS0.CallCredentials = cg;
  class lZ1 extends cg {
    constructor(A) {
      super();
      this.creds = A
    }
    async generateMetadata(A) {
      let B = new Ch1.Metadata,
        Q = await Promise.all(this.creds.map((I) => I.generateMetadata(A)));
      for (let I of Q) B.merge(I);
      return B
    }
    compose(A) {
      return new lZ1(this.creds.concat([A]))
    }
    _equals(A) {
      if (this === A) return !0;
      if (A instanceof lZ1) return this.creds.every((B, Q) => B._equals(A.creds[Q]));
      else return !1
    }
  }
  class Kh1 extends cg {
    constructor(A) {
      super();
      this.metadataGenerator = A
    }
    generateMetadata(A) {
      return new Promise((B, Q) => {
        this.metadataGenerator(A, (I, G) => {
          if (G !== void 0) B(G);
          else Q(I)
        })
      })
    }
    compose(A) {
      return new lZ1([this, A])
    }
    _equals(A) {
      if (this === A) return !0;
      if (A instanceof Kh1) return this.metadataGenerator === A.metadataGenerator;
      else return !1
    }
  }
  class Hh1 extends cg {
    generateMetadata(A) {
      return Promise.resolve(new Ch1.Metadata)
    }
    compose(A) {
      return A
    }
    _equals(A) {
      return A instanceof Hh1
    }
  }
})
// @from(Start 4656722, End 4657156)
wh1 = z((FS0) => {
  Object.defineProperty(FS0, "__esModule", {
    value: !0
  });
  FS0.CIPHER_SUITES = void 0;
  FS0.getDefaultRootsData = l66;
  var c66 = Z1("fs");
  FS0.CIPHER_SUITES = process.env.GRPC_SSL_CIPHER_SUITES;
  var JS0 = process.env.GRPC_DEFAULT_SSL_ROOTS_FILE_PATH,
    zh1 = null;

  function l66() {
    if (JS0) {
      if (zh1 === null) zh1 = c66.readFileSync(JS0);
      return zh1
    }
    return null
  }
})
// @from(Start 4657162, End 4658667)
uY = z((CS0) => {
  Object.defineProperty(CS0, "__esModule", {
    value: !0
  });
  CS0.parseUri = a66;
  CS0.splitHostPort = s66;
  CS0.combineHostPort = r66;
  CS0.uriToString = o66;
  var n66 = /^(?:([A-Za-z0-9+.-]+):)?(?:\/\/([^/]*)\/)?(.+)$/;

  function a66(A) {
    let B = n66.exec(A);
    if (B === null) return null;
    return {
      scheme: B[1],
      authority: B[2],
      path: B[3]
    }
  }
  var VS0 = /^\d+$/;

  function s66(A) {
    if (A.startsWith("[")) {
      let B = A.indexOf("]");
      if (B === -1) return null;
      let Q = A.substring(1, B);
      if (Q.indexOf(":") === -1) return null;
      if (A.length > B + 1)
        if (A[B + 1] === ":") {
          let I = A.substring(B + 2);
          if (VS0.test(I)) return {
            host: Q,
            port: +I
          };
          else return null
        } else return null;
      else return {
        host: Q
      }
    } else {
      let B = A.split(":");
      if (B.length === 2)
        if (VS0.test(B[1])) return {
          host: B[0],
          port: +B[1]
        };
        else return null;
      else return {
        host: A
      }
    }
  }

  function r66(A) {
    if (A.port === void 0) return A.host;
    else if (A.host.includes(":")) return `[${A.host}]:${A.port}`;
    else return `${A.host}:${A.port}`
  }

  function o66(A) {
    let B = "";
    if (A.scheme !== void 0) B += A.scheme + ":";
    if (A.authority !== void 0) B += "//" + A.authority + "/";
    return B += A.path, B
  }
})
// @from(Start 4658673, End 4659661)
Zw = z((KS0) => {
  Object.defineProperty(KS0, "__esModule", {
    value: !0
  });
  KS0.registerResolver = Q56;
  KS0.registerDefaultScheme = I56;
  KS0.createResolver = G56;
  KS0.getDefaultAuthority = Z56;
  KS0.mapUriDefaultScheme = D56;
  var Uh1 = uY(),
    lg = {},
    Eh1 = null;

  function Q56(A, B) {
    lg[A] = B
  }

  function I56(A) {
    Eh1 = A
  }

  function G56(A, B, Q) {
    if (A.scheme !== void 0 && A.scheme in lg) return new lg[A.scheme](A, B, Q);
    else throw new Error(`No resolver could be created for target ${Uh1.uriToString(A)}`)
  }

  function Z56(A) {
    if (A.scheme !== void 0 && A.scheme in lg) return lg[A.scheme].getDefaultAuthority(A);
    else throw new Error(`Invalid target ${Uh1.uriToString(A)}`)
  }

  function D56(A) {
    if (A.scheme === void 0 || !(A.scheme in lg))
      if (Eh1 !== null) return {
        scheme: Eh1,
        authority: void 0,
        path: Uh1.uriToString(A)
      };
      else return null;
    return A
  }
})
// @from(Start 4659667, End 4669997)
us = z((ES0) => {
  Object.defineProperty(ES0, "__esModule", {
    value: !0
  });
  ES0.ChannelCredentials = void 0;
  ES0.createCertificateProviderChannelCredentials = K56;
  var ds = Z1("tls"),
    rZ1 = iZ1(),
    $h1 = wh1(),
    nZ1 = uY(),
    HS0 = Zw(),
    V56 = GB(),
    C56 = y6();

  function Nh1(A, B) {
    if (A && !(A instanceof Buffer)) throw new TypeError(`${B}, if provided, must be a Buffer.`)
  }
  class ig {
    compose(A) {
      return new sZ1(this, A)
    }
    static createSsl(A, B, Q, I) {
      var G;
      if (Nh1(A, "Root certificate"), Nh1(B, "Private key"), Nh1(Q, "Certificate chain"), B && !Q) throw new Error("Private key must be given with accompanying certificate chain");
      if (!B && Q) throw new Error("Certificate chain must be given with accompanying private key");
      let Z = ds.createSecureContext({
        ca: (G = A !== null && A !== void 0 ? A : $h1.getDefaultRootsData()) !== null && G !== void 0 ? G : void 0,
        key: B !== null && B !== void 0 ? B : void 0,
        cert: Q !== null && Q !== void 0 ? Q : void 0,
        ciphers: $h1.CIPHER_SUITES
      });
      return new aZ1(Z, I !== null && I !== void 0 ? I : {})
    }
    static createFromSecureContext(A, B) {
      return new aZ1(A, B !== null && B !== void 0 ? B : {})
    }
    static createInsecure() {
      return new qh1
    }
  }
  ES0.ChannelCredentials = ig;
  class qh1 extends ig {
    constructor() {
      super()
    }
    compose(A) {
      throw new Error("Cannot compose insecure credentials")
    }
    _isSecure() {
      return !1
    }
    _equals(A) {
      return A instanceof qh1
    }
    _createSecureConnector(A, B, Q) {
      return {
        connect(I) {
          return Promise.resolve({
            socket: I,
            secure: !1
          })
        },
        waitForReady: () => {
          return Promise.resolve()
        },
        getCallCredentials: () => {
          return Q !== null && Q !== void 0 ? Q : rZ1.CallCredentials.createEmpty()
        },
        destroy() {}
      }
    }
  }

  function zS0(A, B, Q, I) {
    var G, Z, D, Y;
    let W = {
      secureContext: A
    };
    if (B.checkServerIdentity) W.checkServerIdentity = B.checkServerIdentity;
    if (B.rejectUnauthorized !== void 0) W.rejectUnauthorized = B.rejectUnauthorized;
    if (W.ALPNProtocols = ["h2"], I["grpc.ssl_target_name_override"]) {
      let C = I["grpc.ssl_target_name_override"],
        K = (G = W.checkServerIdentity) !== null && G !== void 0 ? G : ds.checkServerIdentity;
      W.checkServerIdentity = (E, N) => {
        return K(C, N)
      }, W.servername = C
    } else if ("grpc.http_connect_target" in I) {
      let C = HS0.getDefaultAuthority((Z = nZ1.parseUri(I["grpc.http_connect_target"])) !== null && Z !== void 0 ? Z : {
          path: "localhost"
        }),
        K = nZ1.splitHostPort(C);
      W.servername = (D = K === null || K === void 0 ? void 0 : K.host) !== null && D !== void 0 ? D : C
    }
    if (I["grpc-node.tls_enable_trace"]) W.enableTrace = !0;
    let J = Q;
    if ("grpc.http_connect_target" in I) {
      let C = nZ1.parseUri(I["grpc.http_connect_target"]);
      if (C) J = C
    }
    let F = HS0.getDefaultAuthority(J),
      X = nZ1.splitHostPort(F),
      V = (Y = X === null || X === void 0 ? void 0 : X.host) !== null && Y !== void 0 ? Y : F;
    return W.host = V, W.servername = V, W
  }
  class wS0 {
    constructor(A, B) {
      this.connectionOptions = A, this.callCredentials = B
    }
    connect(A) {
      let B = Object.assign({
        socket: A
      }, this.connectionOptions);
      return new Promise((Q, I) => {
        let G = ds.connect(B, () => {
          var Z;
          if (((Z = this.connectionOptions.rejectUnauthorized) !== null && Z !== void 0 ? Z : !0) && !G.authorized) {
            I(G.authorizationError);
            return
          }
          Q({
            socket: G,
            secure: !0
          })
        });
        G.on("error", (Z) => {
          I(Z)
        })
      })
    }
    waitForReady() {
      return Promise.resolve()
    }
    getCallCredentials() {
      return this.callCredentials
    }
    destroy() {}
  }
  class aZ1 extends ig {
    constructor(A, B) {
      super();
      this.secureContext = A, this.verifyOptions = B
    }
    _isSecure() {
      return !0
    }
    _equals(A) {
      if (this === A) return !0;
      if (A instanceof aZ1) return this.secureContext === A.secureContext && this.verifyOptions.checkServerIdentity === A.verifyOptions.checkServerIdentity;
      else return !1
    }
    _createSecureConnector(A, B, Q) {
      let I = zS0(this.secureContext, this.verifyOptions, A, B);
      return new wS0(I, Q !== null && Q !== void 0 ? Q : rZ1.CallCredentials.createEmpty())
    }
  }
  class ms extends ig {
    constructor(A, B, Q) {
      super();
      this.caCertificateProvider = A, this.identityCertificateProvider = B, this.verifyOptions = Q, this.refcount = 0, this.latestCaUpdate = void 0, this.latestIdentityUpdate = void 0, this.caCertificateUpdateListener = this.handleCaCertificateUpdate.bind(this), this.identityCertificateUpdateListener = this.handleIdentityCertitificateUpdate.bind(this), this.secureContextWatchers = []
    }
    _isSecure() {
      return !0
    }
    _equals(A) {
      var B, Q;
      if (this === A) return !0;
      if (A instanceof ms) return this.caCertificateProvider === A.caCertificateProvider && this.identityCertificateProvider === A.identityCertificateProvider && ((B = this.verifyOptions) === null || B === void 0 ? void 0 : B.checkServerIdentity) === ((Q = A.verifyOptions) === null || Q === void 0 ? void 0 : Q.checkServerIdentity);
      else return !1
    }
    ref() {
      var A;
      if (this.refcount === 0) this.caCertificateProvider.addCaCertificateListener(this.caCertificateUpdateListener), (A = this.identityCertificateProvider) === null || A === void 0 || A.addIdentityCertificateListener(this.identityCertificateUpdateListener);
      this.refcount += 1
    }
    unref() {
      var A;
      if (this.refcount -= 1, this.refcount === 0) this.caCertificateProvider.removeCaCertificateListener(this.caCertificateUpdateListener), (A = this.identityCertificateProvider) === null || A === void 0 || A.removeIdentityCertificateListener(this.identityCertificateUpdateListener)
    }
    _createSecureConnector(A, B, Q) {
      return this.ref(), new ms.SecureConnectorImpl(this, A, B, Q !== null && Q !== void 0 ? Q : rZ1.CallCredentials.createEmpty())
    }
    maybeUpdateWatchers() {
      if (this.hasReceivedUpdates()) {
        for (let A of this.secureContextWatchers) A(this.getLatestSecureContext());
        this.secureContextWatchers = []
      }
    }
    handleCaCertificateUpdate(A) {
      this.latestCaUpdate = A, this.maybeUpdateWatchers()
    }
    handleIdentityCertitificateUpdate(A) {
      this.latestIdentityUpdate = A, this.maybeUpdateWatchers()
    }
    hasReceivedUpdates() {
      if (this.latestCaUpdate === void 0) return !1;
      if (this.identityCertificateProvider && this.latestIdentityUpdate === void 0) return !1;
      return !0
    }
    getSecureContext() {
      if (this.hasReceivedUpdates()) return Promise.resolve(this.getLatestSecureContext());
      else return new Promise((A) => {
        this.secureContextWatchers.push(A)
      })
    }
    getLatestSecureContext() {
      var A, B;
      if (!this.latestCaUpdate) return null;
      if (this.identityCertificateProvider !== null && !this.latestIdentityUpdate) return null;
      try {
        return ds.createSecureContext({
          ca: this.latestCaUpdate.caCertificate,
          key: (A = this.latestIdentityUpdate) === null || A === void 0 ? void 0 : A.privateKey,
          cert: (B = this.latestIdentityUpdate) === null || B === void 0 ? void 0 : B.certificate,
          ciphers: $h1.CIPHER_SUITES
        })
      } catch (Q) {
        return V56.log(C56.LogVerbosity.ERROR, "Failed to createSecureContext with error " + Q.message), null
      }
    }
  }
  ms.SecureConnectorImpl = class {
    constructor(A, B, Q, I) {
      this.parent = A, this.channelTarget = B, this.options = Q, this.callCredentials = I
    }
    connect(A) {
      return new Promise((B, Q) => {
        let I = this.parent.getLatestSecureContext();
        if (!I) {
          Q(new Error("Failed to load credentials"));
          return
        }
        if (A.closed) Q(new Error("Socket closed while loading credentials"));
        let G = zS0(I, this.parent.verifyOptions, this.channelTarget, this.options),
          Z = Object.assign({
            socket: A
          }, G),
          D = () => {
            Q(new Error("Socket closed"))
          },
          Y = (J) => {
            Q(J)
          },
          W = ds.connect(Z, () => {
            var J;
            if (W.removeListener("close", D), W.removeListener("error", Y), ((J = this.parent.verifyOptions.rejectUnauthorized) !== null && J !== void 0 ? J : !0) && !W.authorized) {
              Q(W.authorizationError);
              return
            }
            B({
              socket: W,
              secure: !0
            })
          });
        W.once("close", D), W.once("error", Y)
      })
    }
    async waitForReady() {
      await this.parent.getSecureContext()
    }
    getCallCredentials() {
      return this.callCredentials
    }
    destroy() {
      this.parent.unref()
    }
  };

  function K56(A, B, Q) {
    return new ms(A, B, Q !== null && Q !== void 0 ? Q : {})
  }
  class sZ1 extends ig {
    constructor(A, B) {
      super();
      if (this.channelCredentials = A, this.callCredentials = B, !A._isSecure()) throw new Error("Cannot compose insecure credentials")
    }
    compose(A) {
      let B = this.callCredentials.compose(A);
      return new sZ1(this.channelCredentials, B)
    }
    _isSecure() {
      return !0
    }
    _equals(A) {
      if (this === A) return !0;
      if (A instanceof sZ1) return this.channelCredentials._equals(A.channelCredentials) && this.callCredentials._equals(A.callCredentials);
      else return !1
    }
    _createSecureConnector(A, B, Q) {
      let I = this.callCredentials.compose(Q !== null && Q !== void 0 ? Q : rZ1.CallCredentials.createEmpty());
      return this.channelCredentials._createSecureConnector(A, B, I)
    }
  }
})
// @from(Start 4670003, End 4672518)
a_ = z(($S0) => {
  Object.defineProperty($S0, "__esModule", {
    value: !0
  });
  $S0.createChildChannelControlHelper = E56;
  $S0.registerLoadBalancerType = U56;
  $S0.registerDefaultLoadBalancerType = N56;
  $S0.createLoadBalancer = $56;
  $S0.isLoadBalancerNameRegistered = q56;
  $S0.parseLoadBalancingConfig = NS0;
  $S0.getDefaultConfig = M56;
  $S0.selectLbConfigFromList = L56;
  var z56 = GB(),
    w56 = y6();

  function E56(A, B) {
    var Q, I, G, Z, D, Y, W, J, F, X;
    return {
      createSubchannel: (I = (Q = B.createSubchannel) === null || Q === void 0 ? void 0 : Q.bind(B)) !== null && I !== void 0 ? I : A.createSubchannel.bind(A),
      updateState: (Z = (G = B.updateState) === null || G === void 0 ? void 0 : G.bind(B)) !== null && Z !== void 0 ? Z : A.updateState.bind(A),
      requestReresolution: (Y = (D = B.requestReresolution) === null || D === void 0 ? void 0 : D.bind(B)) !== null && Y !== void 0 ? Y : A.requestReresolution.bind(A),
      addChannelzChild: (J = (W = B.addChannelzChild) === null || W === void 0 ? void 0 : W.bind(B)) !== null && J !== void 0 ? J : A.addChannelzChild.bind(A),
      removeChannelzChild: (X = (F = B.removeChannelzChild) === null || F === void 0 ? void 0 : F.bind(B)) !== null && X !== void 0 ? X : A.removeChannelzChild.bind(A)
    }
  }
  var JR = {},
    ps = null;

  function U56(A, B, Q) {
    JR[A] = {
      LoadBalancer: B,
      LoadBalancingConfig: Q
    }
  }

  function N56(A) {
    ps = A
  }

  function $56(A, B) {
    let Q = A.getLoadBalancerName();
    if (Q in JR) return new JR[Q].LoadBalancer(B);
    else return null
  }

  function q56(A) {
    return A in JR
  }

  function NS0(A) {
    let B = Object.keys(A);
    if (B.length !== 1) throw new Error("Provided load balancing config has multiple conflicting entries");
    let Q = B[0];
    if (Q in JR) try {
      return JR[Q].LoadBalancingConfig.createFromJson(A[Q])
    } catch (I) {
      throw new Error(`${Q}: ${I.message}`)
    } else throw new Error(`Unrecognized load balancing config name ${Q}`)
  }

  function M56() {
    if (!ps) throw new Error("No default load balancer type registered");
    return new JR[ps].LoadBalancingConfig
  }

  function L56(A, B = !1) {
    for (let Q of A) try {
      return NS0(Q)
    } catch (I) {
      z56.log(w56.LogVerbosity.DEBUG, "Config parsing failed with error", I.message);
      continue
    }
    if (B)
      if (ps) return new JR[ps].LoadBalancingConfig;
      else return null;
    else return null
  }
})
// @from(Start 4672524, End 4682992)
Mh1 = z((LS0) => {
  Object.defineProperty(LS0, "__esModule", {
    value: !0
  });
  LS0.validateRetryThrottling = qS0;
  LS0.validateServiceConfig = MS0;
  LS0.extractAndSelectServiceConfig = u56;
  var k56 = Z1("os"),
    oZ1 = y6(),
    tZ1 = /^\d+(\.\d{1,9})?s$/,
    x56 = "node";

  function f56(A) {
    if ("service" in A && A.service !== "") {
      if (typeof A.service !== "string") throw new Error(`Invalid method config name: invalid service: expected type string, got ${typeof A.service}`);
      if ("method" in A && A.method !== "") {
        if (typeof A.method !== "string") throw new Error(`Invalid method config name: invalid method: expected type string, got ${typeof A.service}`);
        return {
          service: A.service,
          method: A.method
        }
      } else return {
        service: A.service
      }
    } else {
      if ("method" in A && A.method !== void 0) throw new Error("Invalid method config name: method set with empty or unset service");
      return {}
    }
  }

  function v56(A) {
    if (!("maxAttempts" in A) || !Number.isInteger(A.maxAttempts) || A.maxAttempts < 2) throw new Error("Invalid method config retry policy: maxAttempts must be an integer at least 2");
    if (!("initialBackoff" in A) || typeof A.initialBackoff !== "string" || !tZ1.test(A.initialBackoff)) throw new Error("Invalid method config retry policy: initialBackoff must be a string consisting of a positive integer or decimal followed by s");
    if (!("maxBackoff" in A) || typeof A.maxBackoff !== "string" || !tZ1.test(A.maxBackoff)) throw new Error("Invalid method config retry policy: maxBackoff must be a string consisting of a positive integer or decimal followed by s");
    if (!("backoffMultiplier" in A) || typeof A.backoffMultiplier !== "number" || A.backoffMultiplier <= 0) throw new Error("Invalid method config retry policy: backoffMultiplier must be a number greater than 0");
    if (!(("retryableStatusCodes" in A) && Array.isArray(A.retryableStatusCodes))) throw new Error("Invalid method config retry policy: retryableStatusCodes is required");
    if (A.retryableStatusCodes.length === 0) throw new Error("Invalid method config retry policy: retryableStatusCodes must be non-empty");
    for (let B of A.retryableStatusCodes)
      if (typeof B === "number") {
        if (!Object.values(oZ1.Status).includes(B)) throw new Error("Invalid method config retry policy: retryableStatusCodes value not in status code range")
      } else if (typeof B === "string") {
      if (!Object.values(oZ1.Status).includes(B.toUpperCase())) throw new Error("Invalid method config retry policy: retryableStatusCodes value not a status code name")
    } else throw new Error("Invalid method config retry policy: retryableStatusCodes value must be a string or number");
    return {
      maxAttempts: A.maxAttempts,
      initialBackoff: A.initialBackoff,
      maxBackoff: A.maxBackoff,
      backoffMultiplier: A.backoffMultiplier,
      retryableStatusCodes: A.retryableStatusCodes
    }
  }

  function b56(A) {
    if (!("maxAttempts" in A) || !Number.isInteger(A.maxAttempts) || A.maxAttempts < 2) throw new Error("Invalid method config hedging policy: maxAttempts must be an integer at least 2");
    if ("hedgingDelay" in A && (typeof A.hedgingDelay !== "string" || !tZ1.test(A.hedgingDelay))) throw new Error("Invalid method config hedging policy: hedgingDelay must be a string consisting of a positive integer followed by s");
    if ("nonFatalStatusCodes" in A && Array.isArray(A.nonFatalStatusCodes))
      for (let Q of A.nonFatalStatusCodes)
        if (typeof Q === "number") {
          if (!Object.values(oZ1.Status).includes(Q)) throw new Error("Invalid method config hedging policy: nonFatalStatusCodes value not in status code range")
        } else if (typeof Q === "string") {
      if (!Object.values(oZ1.Status).includes(Q.toUpperCase())) throw new Error("Invalid method config hedging policy: nonFatalStatusCodes value not a status code name")
    } else throw new Error("Invalid method config hedging policy: nonFatalStatusCodes value must be a string or number");
    let B = {
      maxAttempts: A.maxAttempts
    };
    if (A.hedgingDelay) B.hedgingDelay = A.hedgingDelay;
    if (A.nonFatalStatusCodes) B.nonFatalStatusCodes = A.nonFatalStatusCodes;
    return B
  }

  function g56(A) {
    var B;
    let Q = {
      name: []
    };
    if (!("name" in A) || !Array.isArray(A.name)) throw new Error("Invalid method config: invalid name array");
    for (let I of A.name) Q.name.push(f56(I));
    if ("waitForReady" in A) {
      if (typeof A.waitForReady !== "boolean") throw new Error("Invalid method config: invalid waitForReady");
      Q.waitForReady = A.waitForReady
    }
    if ("timeout" in A)
      if (typeof A.timeout === "object") {
        if (!("seconds" in A.timeout) || typeof A.timeout.seconds !== "number") throw new Error("Invalid method config: invalid timeout.seconds");
        if (!("nanos" in A.timeout) || typeof A.timeout.nanos !== "number") throw new Error("Invalid method config: invalid timeout.nanos");
        Q.timeout = A.timeout
      } else if (typeof A.timeout === "string" && tZ1.test(A.timeout)) {
      let I = A.timeout.substring(0, A.timeout.length - 1).split(".");
      Q.timeout = {
        seconds: I[0] | 0,
        nanos: ((B = I[1]) !== null && B !== void 0 ? B : 0) | 0
      }
    } else throw new Error("Invalid method config: invalid timeout");
    if ("maxRequestBytes" in A) {
      if (typeof A.maxRequestBytes !== "number") throw new Error("Invalid method config: invalid maxRequestBytes");
      Q.maxRequestBytes = A.maxRequestBytes
    }
    if ("maxResponseBytes" in A) {
      if (typeof A.maxResponseBytes !== "number") throw new Error("Invalid method config: invalid maxRequestBytes");
      Q.maxResponseBytes = A.maxResponseBytes
    }
    if ("retryPolicy" in A)
      if ("hedgingPolicy" in A) throw new Error("Invalid method config: retryPolicy and hedgingPolicy cannot both be specified");
      else Q.retryPolicy = v56(A.retryPolicy);
    else if ("hedgingPolicy" in A) Q.hedgingPolicy = b56(A.hedgingPolicy);
    return Q
  }

  function qS0(A) {
    if (!("maxTokens" in A) || typeof A.maxTokens !== "number" || A.maxTokens <= 0 || A.maxTokens > 1000) throw new Error("Invalid retryThrottling: maxTokens must be a number in (0, 1000]");
    if (!("tokenRatio" in A) || typeof A.tokenRatio !== "number" || A.tokenRatio <= 0) throw new Error("Invalid retryThrottling: tokenRatio must be a number greater than 0");
    return {
      maxTokens: +A.maxTokens.toFixed(3),
      tokenRatio: +A.tokenRatio.toFixed(3)
    }
  }

  function h56(A) {
    if (!(typeof A === "object" && A !== null)) throw new Error(`Invalid loadBalancingConfig: unexpected type ${typeof A}`);
    let B = Object.keys(A);
    if (B.length > 1) throw new Error(`Invalid loadBalancingConfig: unexpected multiple keys ${B}`);
    if (B.length === 0) throw new Error("Invalid loadBalancingConfig: load balancing policy name required");
    return {
      [B[0]]: A[B[0]]
    }
  }

  function MS0(A) {
    let B = {
      loadBalancingConfig: [],
      methodConfig: []
    };
    if ("loadBalancingPolicy" in A)
      if (typeof A.loadBalancingPolicy === "string") B.loadBalancingPolicy = A.loadBalancingPolicy;
      else throw new Error("Invalid service config: invalid loadBalancingPolicy");
    if ("loadBalancingConfig" in A)
      if (Array.isArray(A.loadBalancingConfig))
        for (let I of A.loadBalancingConfig) B.loadBalancingConfig.push(h56(I));
      else throw new Error("Invalid service config: invalid loadBalancingConfig");
    if ("methodConfig" in A) {
      if (Array.isArray(A.methodConfig))
        for (let I of A.methodConfig) B.methodConfig.push(g56(I))
    }
    if ("retryThrottling" in A) B.retryThrottling = qS0(A.retryThrottling);
    let Q = [];
    for (let I of B.methodConfig)
      for (let G of I.name) {
        for (let Z of Q)
          if (G.service === Z.service && G.method === Z.method) throw new Error(`Invalid service config: duplicate name ${G.service}/${G.method}`);
        Q.push(G)
      }
    return B
  }

  function m56(A) {
    if (!("serviceConfig" in A)) throw new Error("Invalid service config choice: missing service config");
    let B = {
      serviceConfig: MS0(A.serviceConfig)
    };
    if ("clientLanguage" in A)
      if (Array.isArray(A.clientLanguage)) {
        B.clientLanguage = [];
        for (let I of A.clientLanguage)
          if (typeof I === "string") B.clientLanguage.push(I);
          else throw new Error("Invalid service config choice: invalid clientLanguage")
      } else throw new Error("Invalid service config choice: invalid clientLanguage");
    if ("clientHostname" in A)
      if (Array.isArray(A.clientHostname)) {
        B.clientHostname = [];
        for (let I of A.clientHostname)
          if (typeof I === "string") B.clientHostname.push(I);
          else throw new Error("Invalid service config choice: invalid clientHostname")
      } else throw new Error("Invalid service config choice: invalid clientHostname");
    if ("percentage" in A)
      if (typeof A.percentage === "number" && 0 <= A.percentage && A.percentage <= 100) B.percentage = A.percentage;
      else throw new Error("Invalid service config choice: invalid percentage");
    let Q = ["clientLanguage", "percentage", "clientHostname", "serviceConfig"];
    for (let I in A)
      if (!Q.includes(I)) throw new Error(`Invalid service config choice: unexpected field ${I}`);
    return B
  }

  function d56(A, B) {
    if (!Array.isArray(A)) throw new Error("Invalid service config list");
    for (let Q of A) {
      let I = m56(Q);
      if (typeof I.percentage === "number" && B > I.percentage) continue;
      if (Array.isArray(I.clientHostname)) {
        let G = !1;
        for (let Z of I.clientHostname)
          if (Z === k56.hostname()) G = !0;
        if (!G) continue
      }
      if (Array.isArray(I.clientLanguage)) {
        let G = !1;
        for (let Z of I.clientLanguage)
          if (Z === x56) G = !0;
        if (!G) continue
      }
      return I.serviceConfig
    }
    throw new Error("No matching service config found")
  }

  function u56(A, B) {
    for (let Q of A)
      if (Q.length > 0 && Q[0].startsWith("grpc_config=")) {
        let I = Q.join("").substring(12),
          G = JSON.parse(I);
        return d56(G, B)
      } return null
  }
})
// @from(Start 4682998, End 4683364)
TX = z((OS0) => {
  Object.defineProperty(OS0, "__esModule", {
    value: !0
  });
  OS0.ConnectivityState = void 0;
  var RS0;
  (function(A) {
    A[A.IDLE = 0] = "IDLE", A[A.CONNECTING = 1] = "CONNECTING", A[A.READY = 2] = "READY", A[A.TRANSIENT_FAILURE = 3] = "TRANSIENT_FAILURE", A[A.SHUTDOWN = 4] = "SHUTDOWN"
  })(RS0 || (OS0.ConnectivityState = RS0 = {}))
})
// @from(Start 4683370, End 4684737)
FR = z((_S0) => {
  Object.defineProperty(_S0, "__esModule", {
    value: !0
  });
  _S0.QueuePicker = _S0.UnavailablePicker = _S0.PickResultType = void 0;
  var i56 = SZ(),
    n56 = y6(),
    eZ1;
  (function(A) {
    A[A.COMPLETE = 0] = "COMPLETE", A[A.QUEUE = 1] = "QUEUE", A[A.TRANSIENT_FAILURE = 2] = "TRANSIENT_FAILURE", A[A.DROP = 3] = "DROP"
  })(eZ1 || (_S0.PickResultType = eZ1 = {}));
  class PS0 {
    constructor(A) {
      this.status = Object.assign({
        code: n56.Status.UNAVAILABLE,
        details: "No connection established",
        metadata: new i56.Metadata
      }, A)
    }
    pick(A) {
      return {
        pickResultType: eZ1.TRANSIENT_FAILURE,
        subchannel: null,
        status: this.status,
        onCallStarted: null,
        onCallEnded: null
      }
    }
  }
  _S0.UnavailablePicker = PS0;
  class SS0 {
    constructor(A, B) {
      this.loadBalancer = A, this.childPicker = B, this.calledExitIdle = !1
    }
    pick(A) {
      if (!this.calledExitIdle) process.nextTick(() => {
        this.loadBalancer.exitIdle()
      }), this.calledExitIdle = !0;
      if (this.childPicker) return this.childPicker.pick(A);
      else return {
        pickResultType: eZ1.QUEUE,
        subchannel: null,
        status: null,
        onCallStarted: null,
        onCallEnded: null
      }
    }
  }
  _S0.QueuePicker = SS0
})
// @from(Start 4684743, End 4687523)
cs = z((yS0) => {
  Object.defineProperty(yS0, "__esModule", {
    value: !0
  });
  yS0.BackoffTimeout = void 0;
  var r56 = y6(),
    o56 = GB(),
    t56 = "backoff",
    e56 = 1000,
    A86 = 1.6,
    B86 = 120000,
    Q86 = 0.2;

  function I86(A, B) {
    return Math.random() * (B - A) + A
  }
  class AD1 {
    constructor(A, B) {
      if (this.callback = A, this.initialDelay = e56, this.multiplier = A86, this.maxDelay = B86, this.jitter = Q86, this.running = !1, this.hasRef = !0, this.startTime = new Date, this.endTime = new Date, this.id = AD1.getNextId(), B) {
        if (B.initialDelay) this.initialDelay = B.initialDelay;
        if (B.multiplier) this.multiplier = B.multiplier;
        if (B.jitter) this.jitter = B.jitter;
        if (B.maxDelay) this.maxDelay = B.maxDelay
      }
      this.trace("constructed initialDelay=" + this.initialDelay + " multiplier=" + this.multiplier + " jitter=" + this.jitter + " maxDelay=" + this.maxDelay), this.nextDelay = this.initialDelay, this.timerId = setTimeout(() => {}, 0), clearTimeout(this.timerId)
    }
    static getNextId() {
      return this.nextId++
    }
    trace(A) {
      o56.trace(r56.LogVerbosity.DEBUG, t56, "{" + this.id + "} " + A)
    }
    runTimer(A) {
      var B, Q;
      if (this.trace("runTimer(delay=" + A + ")"), this.endTime = this.startTime, this.endTime.setMilliseconds(this.endTime.getMilliseconds() + A), clearTimeout(this.timerId), this.timerId = setTimeout(() => {
          this.trace("timer fired"), this.running = !1, this.callback()
        }, A), !this.hasRef)(Q = (B = this.timerId).unref) === null || Q === void 0 || Q.call(B)
    }
    runOnce() {
      this.trace("runOnce()"), this.running = !0, this.startTime = new Date, this.runTimer(this.nextDelay);
      let A = Math.min(this.nextDelay * this.multiplier, this.maxDelay),
        B = A * this.jitter;
      this.nextDelay = A + I86(-B, B)
    }
    stop() {
      this.trace("stop()"), clearTimeout(this.timerId), this.running = !1
    }
    reset() {
      if (this.trace("reset() running=" + this.running), this.nextDelay = this.initialDelay, this.running) {
        let A = new Date,
          B = this.startTime;
        if (B.setMilliseconds(B.getMilliseconds() + this.nextDelay), clearTimeout(this.timerId), A < B) this.runTimer(B.getTime() - A.getTime());
        else this.running = !1
      }
    }
    isRunning() {
      return this.running
    }
    ref() {
      var A, B;
      this.hasRef = !0, (B = (A = this.timerId).ref) === null || B === void 0 || B.call(A)
    }
    unref() {
      var A, B;
      this.hasRef = !1, (B = (A = this.timerId).unref) === null || B === void 0 || B.call(A)
    }
    getEndTime() {
      return this.endTime
    }
  }
  yS0.BackoffTimeout = AD1;
  AD1.nextId = 0
})
// @from(Start 4687529, End 4690700)
BD1 = z((fS0) => {
  Object.defineProperty(fS0, "__esModule", {
    value: !0
  });
  fS0.ChildLoadBalancerHandler = void 0;
  var G86 = a_(),
    Z86 = TX(),
    D86 = "child_load_balancer_helper";
  class xS0 {
    constructor(A) {
      this.channelControlHelper = A, this.currentChild = null, this.pendingChild = null, this.latestConfig = null, this.ChildPolicyHelper = class {
        constructor(B) {
          this.parent = B, this.child = null
        }
        createSubchannel(B, Q) {
          return this.parent.channelControlHelper.createSubchannel(B, Q)
        }
        updateState(B, Q, I) {
          var G;
          if (this.calledByPendingChild()) {
            if (B === Z86.ConnectivityState.CONNECTING) return;
            (G = this.parent.currentChild) === null || G === void 0 || G.destroy(), this.parent.currentChild = this.parent.pendingChild, this.parent.pendingChild = null
          } else if (!this.calledByCurrentChild()) return;
          this.parent.channelControlHelper.updateState(B, Q, I)
        }
        requestReresolution() {
          var B;
          let Q = (B = this.parent.pendingChild) !== null && B !== void 0 ? B : this.parent.currentChild;
          if (this.child === Q) this.parent.channelControlHelper.requestReresolution()
        }
        setChild(B) {
          this.child = B
        }
        addChannelzChild(B) {
          this.parent.channelControlHelper.addChannelzChild(B)
        }
        removeChannelzChild(B) {
          this.parent.channelControlHelper.removeChannelzChild(B)
        }
        calledByPendingChild() {
          return this.child === this.parent.pendingChild
        }
        calledByCurrentChild() {
          return this.child === this.parent.currentChild
        }
      }
    }
    configUpdateRequiresNewPolicyInstance(A, B) {
      return A.getLoadBalancerName() !== B.getLoadBalancerName()
    }
    updateAddressList(A, B, Q) {
      let I;
      if (this.currentChild === null || this.latestConfig === null || this.configUpdateRequiresNewPolicyInstance(this.latestConfig, B)) {
        let G = new this.ChildPolicyHelper(this),
          Z = G86.createLoadBalancer(B, G);
        if (G.setChild(Z), this.currentChild === null) this.currentChild = Z, I = this.currentChild;
        else {
          if (this.pendingChild) this.pendingChild.destroy();
          this.pendingChild = Z, I = this.pendingChild
        }
      } else if (this.pendingChild === null) I = this.currentChild;
      else I = this.pendingChild;
      this.latestConfig = B, I.updateAddressList(A, B, Q)
    }
    exitIdle() {
      if (this.currentChild) {
        if (this.currentChild.exitIdle(), this.pendingChild) this.pendingChild.exitIdle()
      }
    }
    resetBackoff() {
      if (this.currentChild) {
        if (this.currentChild.resetBackoff(), this.pendingChild) this.pendingChild.resetBackoff()
      }
    }
    destroy() {
      if (this.currentChild) this.currentChild.destroy(), this.currentChild = null;
      if (this.pendingChild) this.pendingChild.destroy(), this.pendingChild = null
    }
    getTypeName() {
      return D86
    }
  }
  fS0.ChildLoadBalancerHandler = xS0
})
// @from(Start 4690706, End 4697494)
dS0 = z((hS0) => {
  Object.defineProperty(hS0, "__esModule", {
    value: !0
  });
  hS0.ResolvingLoadBalancer = void 0;
  var Y86 = a_(),
    W86 = Mh1(),
    pY = TX(),
    J86 = Zw(),
    ls = FR(),
    F86 = cs(),
    Lh1 = y6(),
    X86 = SZ(),
    V86 = GB(),
    C86 = y6(),
    K86 = uY(),
    H86 = BD1(),
    z86 = "resolving_load_balancer";

  function bS0(A) {
    V86.trace(C86.LogVerbosity.DEBUG, z86, A)
  }
  var w86 = ["SERVICE_AND_METHOD", "SERVICE", "EMPTY"];

  function E86(A, B, Q, I) {
    for (let G of Q.name) switch (I) {
      case "EMPTY":
        if (!G.service && !G.method) return !0;
        break;
      case "SERVICE":
        if (G.service === A && !G.method) return !0;
        break;
      case "SERVICE_AND_METHOD":
        if (G.service === A && G.method === B) return !0
    }
    return !1
  }

  function U86(A, B, Q, I) {
    for (let G of Q)
      if (E86(A, B, G, I)) return G;
    return null
  }

  function N86(A) {
    return {
      invoke(B, Q) {
        var I, G;
        let Z = B.split("/").filter((W) => W.length > 0),
          D = (I = Z[0]) !== null && I !== void 0 ? I : "",
          Y = (G = Z[1]) !== null && G !== void 0 ? G : "";
        if (A && A.methodConfig)
          for (let W of w86) {
            let J = U86(D, Y, A.methodConfig, W);
            if (J) return {
              methodConfig: J,
              pickInformation: {},
              status: Lh1.Status.OK,
              dynamicFilterFactories: []
            }
          }
        return {
          methodConfig: {
            name: []
          },
          pickInformation: {},
          status: Lh1.Status.OK,
          dynamicFilterFactories: []
        }
      },
      unref() {}
    }
  }
  class gS0 {
    constructor(A, B, Q, I, G) {
      if (this.target = A, this.channelControlHelper = B, this.channelOptions = Q, this.onSuccessfulResolution = I, this.onFailedResolution = G, this.latestChildState = pY.ConnectivityState.IDLE, this.latestChildPicker = new ls.QueuePicker(this), this.latestChildErrorMessage = null, this.currentState = pY.ConnectivityState.IDLE, this.previousServiceConfig = null, this.continueResolving = !1, Q["grpc.service_config"]) this.defaultServiceConfig = W86.validateServiceConfig(JSON.parse(Q["grpc.service_config"]));
      else this.defaultServiceConfig = {
        loadBalancingConfig: [],
        methodConfig: []
      };
      this.updateState(pY.ConnectivityState.IDLE, new ls.QueuePicker(this), null), this.childLoadBalancer = new H86.ChildLoadBalancerHandler({
        createSubchannel: B.createSubchannel.bind(B),
        requestReresolution: () => {
          if (this.backoffTimeout.isRunning()) bS0("requestReresolution delayed by backoff timer until " + this.backoffTimeout.getEndTime().toISOString()), this.continueResolving = !0;
          else this.updateResolution()
        },
        updateState: (D, Y, W) => {
          this.latestChildState = D, this.latestChildPicker = Y, this.latestChildErrorMessage = W, this.updateState(D, Y, W)
        },
        addChannelzChild: B.addChannelzChild.bind(B),
        removeChannelzChild: B.removeChannelzChild.bind(B)
      }), this.innerResolver = J86.createResolver(A, {
        onSuccessfulResolution: (D, Y, W, J, F) => {
          var X;
          this.backoffTimeout.stop(), this.backoffTimeout.reset();
          let V = null;
          if (Y === null)
            if (W === null) this.previousServiceConfig = null, V = this.defaultServiceConfig;
            else if (this.previousServiceConfig === null) this.handleResolutionFailure(W);
          else V = this.previousServiceConfig;
          else V = Y, this.previousServiceConfig = Y;
          let C = (X = V === null || V === void 0 ? void 0 : V.loadBalancingConfig) !== null && X !== void 0 ? X : [],
            K = Y86.selectLbConfigFromList(C, !0);
          if (K === null) {
            this.handleResolutionFailure({
              code: Lh1.Status.UNAVAILABLE,
              details: "All load balancer options in service config are not compatible",
              metadata: new X86.Metadata
            }), J === null || J === void 0 || J.unref();
            return
          }
          this.childLoadBalancer.updateAddressList(D, K, Object.assign(Object.assign({}, this.channelOptions), F));
          let E = V !== null && V !== void 0 ? V : this.defaultServiceConfig;
          this.onSuccessfulResolution(E, J !== null && J !== void 0 ? J : N86(E))
        },
        onError: (D) => {
          this.handleResolutionFailure(D)
        }
      }, Q);
      let Z = {
        initialDelay: Q["grpc.initial_reconnect_backoff_ms"],
        maxDelay: Q["grpc.max_reconnect_backoff_ms"]
      };
      this.backoffTimeout = new F86.BackoffTimeout(() => {
        if (this.continueResolving) this.updateResolution(), this.continueResolving = !1;
        else this.updateState(this.latestChildState, this.latestChildPicker, this.latestChildErrorMessage)
      }, Z), this.backoffTimeout.unref()
    }
    updateResolution() {
      if (this.innerResolver.updateResolution(), this.currentState === pY.ConnectivityState.IDLE) this.updateState(pY.ConnectivityState.CONNECTING, this.latestChildPicker, this.latestChildErrorMessage);
      this.backoffTimeout.runOnce()
    }
    updateState(A, B, Q) {
      if (bS0(K86.uriToString(this.target) + " " + pY.ConnectivityState[this.currentState] + " -> " + pY.ConnectivityState[A]), A === pY.ConnectivityState.IDLE) B = new ls.QueuePicker(this, B);
      this.currentState = A, this.channelControlHelper.updateState(A, B, Q)
    }
    handleResolutionFailure(A) {
      if (this.latestChildState === pY.ConnectivityState.IDLE) this.updateState(pY.ConnectivityState.TRANSIENT_FAILURE, new ls.UnavailablePicker(A), A.details), this.onFailedResolution(A)
    }
    exitIdle() {
      if (this.currentState === pY.ConnectivityState.IDLE || this.currentState === pY.ConnectivityState.TRANSIENT_FAILURE)
        if (this.backoffTimeout.isRunning()) this.continueResolving = !0;
        else this.updateResolution();
      this.childLoadBalancer.exitIdle()
    }
    updateAddressList(A, B) {
      throw new Error("updateAddressList not supported on ResolvingLoadBalancer")
    }
    resetBackoff() {
      this.backoffTimeout.reset(), this.childLoadBalancer.resetBackoff()
    }
    destroy() {
      this.childLoadBalancer.destroy(), this.innerResolver.destroy(), this.backoffTimeout.reset(), this.backoffTimeout.stop(), this.latestChildState = pY.ConnectivityState.IDLE, this.latestChildPicker = new ls.QueuePicker(this), this.currentState = pY.ConnectivityState.IDLE, this.previousServiceConfig = null, this.continueResolving = !1
    }
    getTypeName() {
      return "resolving_load_balancer"
    }
  }
  hS0.ResolvingLoadBalancer = gS0
})
// @from(Start 4697500, End 4699114)
cS0 = z((uS0) => {
  Object.defineProperty(uS0, "__esModule", {
    value: !0
  });
  uS0.recognizedOptions = void 0;
  uS0.channelOptionsEqual = $86;
  uS0.recognizedOptions = {
    "grpc.ssl_target_name_override": !0,
    "grpc.primary_user_agent": !0,
    "grpc.secondary_user_agent": !0,
    "grpc.default_authority": !0,
    "grpc.keepalive_time_ms": !0,
    "grpc.keepalive_timeout_ms": !0,
    "grpc.keepalive_permit_without_calls": !0,
    "grpc.service_config": !0,
    "grpc.max_concurrent_streams": !0,
    "grpc.initial_reconnect_backoff_ms": !0,
    "grpc.max_reconnect_backoff_ms": !0,
    "grpc.use_local_subchannel_pool": !0,
    "grpc.max_send_message_length": !0,
    "grpc.max_receive_message_length": !0,
    "grpc.enable_http_proxy": !0,
    "grpc.enable_channelz": !0,
    "grpc.dns_min_time_between_resolutions_ms": !0,
    "grpc.enable_retries": !0,
    "grpc.per_rpc_retry_buffer_size": !0,
    "grpc.retry_buffer_size": !0,
    "grpc.max_connection_age_ms": !0,
    "grpc.max_connection_age_grace_ms": !0,
    "grpc-node.max_session_memory": !0,
    "grpc.service_config_disable_resolution": !0,
    "grpc.client_idle_timeout_ms": !0,
    "grpc-node.tls_enable_trace": !0,
    "grpc.lb.ring_hash.ring_size_cap": !0,
    "grpc-node.retry_max_attempts_limit": !0,
    "grpc-node.flow_control_window": !0
  };

  function $86(A, B) {
    let Q = Object.keys(A).sort(),
      I = Object.keys(B).sort();
    if (Q.length !== I.length) return !1;
    for (let G = 0; G < Q.length; G += 1) {
      if (Q[G] !== I[G]) return !1;
      if (A[Q[G]] !== B[I[G]]) return !1
    }
    return !0
  }
})
// @from(Start 4699120, End 4702042)
PX = z((sS0) => {
  Object.defineProperty(sS0, "__esModule", {
    value: !0
  });
  sS0.EndpointMap = void 0;
  sS0.isTcpSubchannelAddress = ns;
  sS0.subchannelAddressEqual = QD1;
  sS0.subchannelAddressToString = iS0;
  sS0.stringToSubchannelAddress = L86;
  sS0.endpointEqual = R86;
  sS0.endpointToString = O86;
  sS0.endpointHasAddress = nS0;
  var lS0 = Z1("net");

  function ns(A) {
    return "port" in A
  }

  function QD1(A, B) {
    if (!A && !B) return !0;
    if (!A || !B) return !1;
    if (ns(A)) return ns(B) && A.host === B.host && A.port === B.port;
    else return !ns(B) && A.path === B.path
  }

  function iS0(A) {
    if (ns(A))
      if (lS0.isIPv6(A.host)) return "[" + A.host + "]:" + A.port;
      else return A.host + ":" + A.port;
    else return A.path
  }
  var M86 = 443;

  function L86(A, B) {
    if (lS0.isIP(A)) return {
      host: A,
      port: B !== null && B !== void 0 ? B : M86
    };
    else return {
      path: A
    }
  }

  function R86(A, B) {
    if (A.addresses.length !== B.addresses.length) return !1;
    for (let Q = 0; Q < A.addresses.length; Q++)
      if (!QD1(A.addresses[Q], B.addresses[Q])) return !1;
    return !0
  }

  function O86(A) {
    return "[" + A.addresses.map(iS0).join(", ") + "]"
  }

  function nS0(A, B) {
    for (let Q of A.addresses)
      if (QD1(Q, B)) return !0;
    return !1
  }

  function is(A, B) {
    if (A.addresses.length !== B.addresses.length) return !1;
    for (let Q of A.addresses) {
      let I = !1;
      for (let G of B.addresses)
        if (QD1(Q, G)) {
          I = !0;
          break
        } if (!I) return !1
    }
    return !0
  }
  class aS0 {
    constructor() {
      this.map = new Set
    }
    get size() {
      return this.map.size
    }
    getForSubchannelAddress(A) {
      for (let B of this.map)
        if (nS0(B.key, A)) return B.value;
      return
    }
    deleteMissing(A) {
      let B = [];
      for (let Q of this.map) {
        let I = !1;
        for (let G of A)
          if (is(G, Q.key)) I = !0;
        if (!I) B.push(Q.value), this.map.delete(Q)
      }
      return B
    }
    get(A) {
      for (let B of this.map)
        if (is(A, B.key)) return B.value;
      return
    }
    set(A, B) {
      for (let Q of this.map)
        if (is(A, Q.key)) {
          Q.value = B;
          return
        } this.map.add({
        key: A,
        value: B
      })
    }
    delete(A) {
      for (let B of this.map)
        if (is(A, B.key)) {
          this.map.delete(B);
          return
        }
    }
    has(A) {
      for (let B of this.map)
        if (is(A, B.key)) return !0;
      return !1
    }
    clear() {
      this.map.clear()
    }* keys() {
      for (let A of this.map) yield A.key
    }* values() {
      for (let A of this.map) yield A.value
    }* entries() {
      for (let A of this.map) yield [A.key, A.value]
    }
  }
  sS0.EndpointMap = aS0
})
// @from(Start 4702048, End 4715500)
Z_0 = z((G_0) => {
  Object.defineProperty(G_0, "t", {
    value: !0
  });
  class Rh1 {
    constructor(A, B, Q = 1) {
      this.i = void 0, this.h = void 0, this.o = void 0, this.u = A, this.l = B, this.p = Q
    }
    I() {
      let A = this,
        B = A.o.o === A;
      if (B && A.p === 1) A = A.h;
      else if (A.i) {
        A = A.i;
        while (A.h) A = A.h
      } else {
        if (B) return A.o;
        let Q = A.o;
        while (Q.i === A) A = Q, Q = A.o;
        A = Q
      }
      return A
    }
    B() {
      let A = this;
      if (A.h) {
        A = A.h;
        while (A.i) A = A.i;
        return A
      } else {
        let B = A.o;
        while (B.h === A) A = B, B = A.o;
        if (A.h !== B) return B;
        else return A
      }
    }
    _() {
      let A = this.o,
        B = this.h,
        Q = B.i;
      if (A.o === this) A.o = B;
      else if (A.i === this) A.i = B;
      else A.h = B;
      if (B.o = A, B.i = this, this.o = B, this.h = Q, Q) Q.o = this;
      return B
    }
    g() {
      let A = this.o,
        B = this.i,
        Q = B.h;
      if (A.o === this) A.o = B;
      else if (A.i === this) A.i = B;
      else A.h = B;
      if (B.o = A, B.h = this, this.o = B, this.i = Q, Q) Q.o = this;
      return B
    }
  }
  class oS0 extends Rh1 {
    constructor() {
      super(...arguments);
      this.M = 1
    }
    _() {
      let A = super._();
      return this.O(), A.O(), A
    }
    g() {
      let A = super.g();
      return this.O(), A.O(), A
    }
    O() {
      if (this.M = 1, this.i) this.M += this.i.M;
      if (this.h) this.M += this.h.M
    }
  }
  class tS0 {
    constructor(A = 0) {
      this.iteratorType = A
    }
    equals(A) {
      return this.T === A.T
    }
  }
  class eS0 {
    constructor() {
      this.m = 0
    }
    get length() {
      return this.m
    }
    size() {
      return this.m
    }
    empty() {
      return this.m === 0
    }
  }
  class A_0 extends eS0 {}

  function s_() {
    throw new RangeError("Iterator access denied!")
  }
  class B_0 extends A_0 {
    constructor(A = function(Q, I) {
      if (Q < I) return -1;
      if (Q > I) return 1;
      return 0
    }, B = !1) {
      super();
      this.v = void 0, this.A = A, this.enableIndex = B, this.N = B ? oS0 : Rh1, this.C = new this.N
    }
    R(A, B) {
      let Q = this.C;
      while (A) {
        let I = this.A(A.u, B);
        if (I < 0) A = A.h;
        else if (I > 0) Q = A, A = A.i;
        else return A
      }
      return Q
    }
    K(A, B) {
      let Q = this.C;
      while (A)
        if (this.A(A.u, B) <= 0) A = A.h;
        else Q = A, A = A.i;
      return Q
    }
    L(A, B) {
      let Q = this.C;
      while (A) {
        let I = this.A(A.u, B);
        if (I < 0) Q = A, A = A.h;
        else if (I > 0) A = A.i;
        else return A
      }
      return Q
    }
    k(A, B) {
      let Q = this.C;
      while (A)
        if (this.A(A.u, B) < 0) Q = A, A = A.h;
        else A = A.i;
      return Q
    }
    P(A) {
      while (!0) {
        let B = A.o;
        if (B === this.C) return;
        if (A.p === 1) {
          A.p = 0;
          return
        }
        if (A === B.i) {
          let Q = B.h;
          if (Q.p === 1)
            if (Q.p = 0, B.p = 1, B === this.v) this.v = B._();
            else B._();
          else if (Q.h && Q.h.p === 1) {
            if (Q.p = B.p, B.p = 0, Q.h.p = 0, B === this.v) this.v = B._();
            else B._();
            return
          } else if (Q.i && Q.i.p === 1) Q.p = 1, Q.i.p = 0, Q.g();
          else Q.p = 1, A = B
        } else {
          let Q = B.i;
          if (Q.p === 1)
            if (Q.p = 0, B.p = 1, B === this.v) this.v = B.g();
            else B.g();
          else if (Q.i && Q.i.p === 1) {
            if (Q.p = B.p, B.p = 0, Q.i.p = 0, B === this.v) this.v = B.g();
            else B.g();
            return
          } else if (Q.h && Q.h.p === 1) Q.p = 1, Q.h.p = 0, Q._();
          else Q.p = 1, A = B
        }
      }
    }
    S(A) {
      if (this.m === 1) {
        this.clear();
        return
      }
      let B = A;
      while (B.i || B.h) {
        if (B.h) {
          B = B.h;
          while (B.i) B = B.i
        } else B = B.i;
        let I = A.u;
        A.u = B.u, B.u = I;
        let G = A.l;
        A.l = B.l, B.l = G, A = B
      }
      if (this.C.i === B) this.C.i = B.o;
      else if (this.C.h === B) this.C.h = B.o;
      this.P(B);
      let Q = B.o;
      if (B === Q.i) Q.i = void 0;
      else Q.h = void 0;
      if (this.m -= 1, this.v.p = 0, this.enableIndex)
        while (Q !== this.C) Q.M -= 1, Q = Q.o
    }
    U(A) {
      let B = typeof A === "number" ? A : void 0,
        Q = typeof A === "function" ? A : void 0,
        I = typeof A === "undefined" ? [] : void 0,
        G = 0,
        Z = this.v,
        D = [];
      while (D.length || Z)
        if (Z) D.push(Z), Z = Z.i;
        else {
          if (Z = D.pop(), G === B) return Z;
          I && I.push(Z), Q && Q(Z, G, this), G += 1, Z = Z.h
        } return I
    }
    j(A) {
      while (!0) {
        let B = A.o;
        if (B.p === 0) return;
        let Q = B.o;
        if (B === Q.i) {
          let I = Q.h;
          if (I && I.p === 1) {
            if (I.p = B.p = 0, Q === this.v) return;
            Q.p = 1, A = Q;
            continue
          } else if (A === B.h) {
            if (A.p = 0, A.i) A.i.o = B;
            if (A.h) A.h.o = Q;
            if (B.h = A.i, Q.i = A.h, A.i = B, A.h = Q, Q === this.v) this.v = A, this.C.o = A;
            else {
              let G = Q.o;
              if (G.i === Q) G.i = A;
              else G.h = A
            }
            A.o = Q.o, B.o = A, Q.o = A, Q.p = 1
          } else {
            if (B.p = 0, Q === this.v) this.v = Q.g();
            else Q.g();
            Q.p = 1;
            return
          }
        } else {
          let I = Q.i;
          if (I && I.p === 1) {
            if (I.p = B.p = 0, Q === this.v) return;
            Q.p = 1, A = Q;
            continue
          } else if (A === B.i) {
            if (A.p = 0, A.i) A.i.o = Q;
            if (A.h) A.h.o = B;
            if (Q.h = A.i, B.i = A.h, A.i = Q, A.h = B, Q === this.v) this.v = A, this.C.o = A;
            else {
              let G = Q.o;
              if (G.i === Q) G.i = A;
              else G.h = A
            }
            A.o = Q.o, B.o = A, Q.o = A, Q.p = 1
          } else {
            if (B.p = 0, Q === this.v) this.v = Q._();
            else Q._();
            Q.p = 1;
            return
          }
        }
        if (this.enableIndex) B.O(), Q.O(), A.O();
        return
      }
    }
    q(A, B, Q) {
      if (this.v === void 0) return this.m += 1, this.v = new this.N(A, B, 0), this.v.o = this.C, this.C.o = this.C.i = this.C.h = this.v, this.m;
      let I, G = this.C.i,
        Z = this.A(G.u, A);
      if (Z === 0) return G.l = B, this.m;
      else if (Z > 0) G.i = new this.N(A, B), G.i.o = G, I = G.i, this.C.i = I;
      else {
        let D = this.C.h,
          Y = this.A(D.u, A);
        if (Y === 0) return D.l = B, this.m;
        else if (Y < 0) D.h = new this.N(A, B), D.h.o = D, I = D.h, this.C.h = I;
        else {
          if (Q !== void 0) {
            let W = Q.T;
            if (W !== this.C) {
              let J = this.A(W.u, A);
              if (J === 0) return W.l = B, this.m;
              else if (J > 0) {
                let F = W.I(),
                  X = this.A(F.u, A);
                if (X === 0) return F.l = B, this.m;
                else if (X < 0)
                  if (I = new this.N(A, B), F.h === void 0) F.h = I, I.o = F;
                  else W.i = I, I.o = W
              }
            }
          }
          if (I === void 0) {
            I = this.v;
            while (!0) {
              let W = this.A(I.u, A);
              if (W > 0) {
                if (I.i === void 0) {
                  I.i = new this.N(A, B), I.i.o = I, I = I.i;
                  break
                }
                I = I.i
              } else if (W < 0) {
                if (I.h === void 0) {
                  I.h = new this.N(A, B), I.h.o = I, I = I.h;
                  break
                }
                I = I.h
              } else return I.l = B, this.m
            }
          }
        }
      }
      if (this.enableIndex) {
        let D = I.o;
        while (D !== this.C) D.M += 1, D = D.o
      }
      return this.j(I), this.m += 1, this.m
    }
    H(A, B) {
      while (A) {
        let Q = this.A(A.u, B);
        if (Q < 0) A = A.h;
        else if (Q > 0) A = A.i;
        else return A
      }
      return A || this.C
    }
    clear() {
      this.m = 0, this.v = void 0, this.C.o = void 0, this.C.i = this.C.h = void 0
    }
    updateKeyByIterator(A, B) {
      let Q = A.T;
      if (Q === this.C) s_();
      if (this.m === 1) return Q.u = B, !0;
      let I = Q.B().u;
      if (Q === this.C.i) {
        if (this.A(I, B) > 0) return Q.u = B, !0;
        return !1
      }
      let G = Q.I().u;
      if (Q === this.C.h) {
        if (this.A(G, B) < 0) return Q.u = B, !0;
        return !1
      }
      if (this.A(G, B) >= 0 || this.A(I, B) <= 0) return !1;
      return Q.u = B, !0
    }
    eraseElementByPos(A) {
      if (A < 0 || A > this.m - 1) throw new RangeError;
      let B = this.U(A);
      return this.S(B), this.m
    }
    eraseElementByKey(A) {
      if (this.m === 0) return !1;
      let B = this.H(this.v, A);
      if (B === this.C) return !1;
      return this.S(B), !0
    }
    eraseElementByIterator(A) {
      let B = A.T;
      if (B === this.C) s_();
      let Q = B.h === void 0;
      if (A.iteratorType === 0) {
        if (Q) A.next()
      } else if (!Q || B.i === void 0) A.next();
      return this.S(B), A
    }
    getHeight() {
      if (this.m === 0) return 0;

      function A(B) {
        if (!B) return 0;
        return Math.max(A(B.i), A(B.h)) + 1
      }
      return A(this.v)
    }
  }
  class Q_0 extends tS0 {
    constructor(A, B, Q) {
      super(Q);
      if (this.T = A, this.C = B, this.iteratorType === 0) this.pre = function() {
        if (this.T === this.C.i) s_();
        return this.T = this.T.I(), this
      }, this.next = function() {
        if (this.T === this.C) s_();
        return this.T = this.T.B(), this
      };
      else this.pre = function() {
        if (this.T === this.C.h) s_();
        return this.T = this.T.B(), this
      }, this.next = function() {
        if (this.T === this.C) s_();
        return this.T = this.T.I(), this
      }
    }
    get index() {
      let A = this.T,
        B = this.C.o;
      if (A === this.C) {
        if (B) return B.M - 1;
        return 0
      }
      let Q = 0;
      if (A.i) Q += A.i.M;
      while (A !== B) {
        let I = A.o;
        if (A === I.h) {
          if (Q += 1, I.i) Q += I.i.M
        }
        A = I
      }
      return Q
    }
    isAccessible() {
      return this.T !== this.C
    }
  }
  class uC extends Q_0 {
    constructor(A, B, Q, I) {
      super(A, B, I);
      this.container = Q
    }
    get pointer() {
      if (this.T === this.C) s_();
      let A = this;
      return new Proxy([], {
        get(B, Q) {
          if (Q === "0") return A.T.u;
          else if (Q === "1") return A.T.l;
          return B[0] = A.T.u, B[1] = A.T.l, B[Q]
        },
        set(B, Q, I) {
          if (Q !== "1") throw new TypeError("prop must be 1");
          return A.T.l = I, !0
        }
      })
    }
    copy() {
      return new uC(this.T, this.C, this.container, this.iteratorType)
    }
  }
  class I_0 extends B_0 {
    constructor(A = [], B, Q) {
      super(B, Q);
      let I = this;
      A.forEach(function(G) {
        I.setElement(G[0], G[1])
      })
    }
    begin() {
      return new uC(this.C.i || this.C, this.C, this)
    }
    end() {
      return new uC(this.C, this.C, this)
    }
    rBegin() {
      return new uC(this.C.h || this.C, this.C, this, 1)
    }
    rEnd() {
      return new uC(this.C, this.C, this, 1)
    }
    front() {
      if (this.m === 0) return;
      let A = this.C.i;
      return [A.u, A.l]
    }
    back() {
      if (this.m === 0) return;
      let A = this.C.h;
      return [A.u, A.l]
    }
    lowerBound(A) {
      let B = this.R(this.v, A);
      return new uC(B, this.C, this)
    }
    upperBound(A) {
      let B = this.K(this.v, A);
      return new uC(B, this.C, this)
    }
    reverseLowerBound(A) {
      let B = this.L(this.v, A);
      return new uC(B, this.C, this)
    }
    reverseUpperBound(A) {
      let B = this.k(this.v, A);
      return new uC(B, this.C, this)
    }
    forEach(A) {
      this.U(function(B, Q, I) {
        A([B.u, B.l], Q, I)
      })
    }
    setElement(A, B, Q) {
      return this.q(A, B, Q)
    }
    getElementByPos(A) {
      if (A < 0 || A > this.m - 1) throw new RangeError;
      let B = this.U(A);
      return [B.u, B.l]
    }
    find(A) {
      let B = this.H(this.v, A);
      return new uC(B, this.C, this)
    }
    getElementByKey(A) {
      return this.H(this.v, A).l
    }
    union(A) {
      let B = this;
      return A.forEach(function(Q) {
        B.setElement(Q[0], Q[1])
      }), this.m
    }*[Symbol.iterator]() {
      let A = this.m,
        B = this.U();
      for (let Q = 0; Q < A; ++Q) {
        let I = B[Q];
        yield [I.u, I.l]
      }
    }
  }
  G_0.OrderedMap = I_0
})
// @from(Start 4715506, End 4715923)
ID1 = z((Y_0) => {
  Object.defineProperty(Y_0, "__esModule", {
    value: !0
  });
  Y_0.registerAdminService = f86;
  Y_0.addAdminServicesToServer = v86;
  var D_0 = [];

  function f86(A, B) {
    D_0.push({
      getServiceDefinition: A,
      getHandlers: B
    })
  }

  function v86(A) {
    for (let {
        getServiceDefinition: B,
        getHandlers: Q
      }
      of D_0) A.addService(B(), Q())
  }
})
// @from(Start 4715929, End 4719222)
K_0 = z((V_0) => {
  Object.defineProperty(V_0, "__esModule", {
    value: !0
  });
  V_0.ClientDuplexStreamImpl = V_0.ClientWritableStreamImpl = V_0.ClientReadableStreamImpl = V_0.ClientUnaryCallImpl = void 0;
  V_0.callErrorFromStatus = m86;
  var h86 = Z1("events"),
    Oh1 = Z1("stream"),
    as = y6();

  function m86(A, B) {
    let Q = `${A.code} ${as.Status[A.code]}: ${A.details}`,
      G = `${new Error(Q).stack}
for call at
${B}`;
    return Object.assign(new Error(Q), A, {
      stack: G
    })
  }
  class W_0 extends h86.EventEmitter {
    constructor() {
      super()
    }
    cancel() {
      var A;
      (A = this.call) === null || A === void 0 || A.cancelWithStatus(as.Status.CANCELLED, "Cancelled on client")
    }
    getPeer() {
      var A, B;
      return (B = (A = this.call) === null || A === void 0 ? void 0 : A.getPeer()) !== null && B !== void 0 ? B : "unknown"
    }
  }
  V_0.ClientUnaryCallImpl = W_0;
  class J_0 extends Oh1.Readable {
    constructor(A) {
      super({
        objectMode: !0
      });
      this.deserialize = A
    }
    cancel() {
      var A;
      (A = this.call) === null || A === void 0 || A.cancelWithStatus(as.Status.CANCELLED, "Cancelled on client")
    }
    getPeer() {
      var A, B;
      return (B = (A = this.call) === null || A === void 0 ? void 0 : A.getPeer()) !== null && B !== void 0 ? B : "unknown"
    }
    _read(A) {
      var B;
      (B = this.call) === null || B === void 0 || B.startRead()
    }
  }
  V_0.ClientReadableStreamImpl = J_0;
  class F_0 extends Oh1.Writable {
    constructor(A) {
      super({
        objectMode: !0
      });
      this.serialize = A
    }
    cancel() {
      var A;
      (A = this.call) === null || A === void 0 || A.cancelWithStatus(as.Status.CANCELLED, "Cancelled on client")
    }
    getPeer() {
      var A, B;
      return (B = (A = this.call) === null || A === void 0 ? void 0 : A.getPeer()) !== null && B !== void 0 ? B : "unknown"
    }
    _write(A, B, Q) {
      var I;
      let G = {
          callback: Q
        },
        Z = Number(B);
      if (!Number.isNaN(Z)) G.flags = Z;
      (I = this.call) === null || I === void 0 || I.sendMessageWithContext(G, A)
    }
    _final(A) {
      var B;
      (B = this.call) === null || B === void 0 || B.halfClose(), A()
    }
  }
  V_0.ClientWritableStreamImpl = F_0;
  class X_0 extends Oh1.Duplex {
    constructor(A, B) {
      super({
        objectMode: !0
      });
      this.serialize = A, this.deserialize = B
    }
    cancel() {
      var A;
      (A = this.call) === null || A === void 0 || A.cancelWithStatus(as.Status.CANCELLED, "Cancelled on client")
    }
    getPeer() {
      var A, B;
      return (B = (A = this.call) === null || A === void 0 ? void 0 : A.getPeer()) !== null && B !== void 0 ? B : "unknown"
    }
    _read(A) {
      var B;
      (B = this.call) === null || B === void 0 || B.startRead()
    }
    _write(A, B, Q) {
      var I;
      let G = {
          callback: Q
        },
        Z = Number(B);
      if (!Number.isNaN(Z)) G.flags = Z;
      (I = this.call) === null || I === void 0 || I.sendMessageWithContext(G, A)
    }
    _final(A) {
      var B;
      (B = this.call) === null || B === void 0 || B.halfClose(), A()
    }
  }
  V_0.ClientDuplexStreamImpl = X_0
})
// @from(Start 4719228, End 4720845)
E_0 = z((z_0) => {
  Object.defineProperty(z_0, "__esModule", {
    value: !0
  });
  z_0.InterceptingListenerImpl = void 0;
  z_0.isInterceptingListener = l86;

  function l86(A) {
    return A.onReceiveMetadata !== void 0 && A.onReceiveMetadata.length === 1
  }
  class H_0 {
    constructor(A, B) {
      this.listener = A, this.nextListener = B, this.processingMetadata = !1, this.hasPendingMessage = !1, this.processingMessage = !1, this.pendingStatus = null
    }
    processPendingMessage() {
      if (this.hasPendingMessage) this.nextListener.onReceiveMessage(this.pendingMessage), this.pendingMessage = null, this.hasPendingMessage = !1
    }
    processPendingStatus() {
      if (this.pendingStatus) this.nextListener.onReceiveStatus(this.pendingStatus)
    }
    onReceiveMetadata(A) {
      this.processingMetadata = !0, this.listener.onReceiveMetadata(A, (B) => {
        this.processingMetadata = !1, this.nextListener.onReceiveMetadata(B), this.processPendingMessage(), this.processPendingStatus()
      })
    }
    onReceiveMessage(A) {
      this.processingMessage = !0, this.listener.onReceiveMessage(A, (B) => {
        if (this.processingMessage = !1, this.processingMetadata) this.pendingMessage = B, this.hasPendingMessage = !0;
        else this.nextListener.onReceiveMessage(B), this.processPendingStatus()
      })
    }
    onReceiveStatus(A) {
      this.listener.onReceiveStatus(A, (B) => {
        if (this.processingMetadata || this.processingMessage) this.pendingStatus = B;
        else this.nextListener.onReceiveStatus(B)
      })
    }
  }
  z_0.InterceptingListenerImpl = H_0
})
// @from(Start 4720851, End 4730206)
Sh1 = z((T_0) => {
  Object.defineProperty(T_0, "__esModule", {
    value: !0
  });
  T_0.InterceptingCall = T_0.RequesterBuilder = T_0.ListenerBuilder = T_0.InterceptorConfigurationError = void 0;
  T_0.getInterceptingCall = r86;
  var n86 = SZ(),
    U_0 = E_0(),
    N_0 = y6(),
    $_0 = uZ1();
  class rs extends Error {
    constructor(A) {
      super(A);
      this.name = "InterceptorConfigurationError", Error.captureStackTrace(this, rs)
    }
  }
  T_0.InterceptorConfigurationError = rs;
  class q_0 {
    constructor() {
      this.metadata = void 0, this.message = void 0, this.status = void 0
    }
    withOnReceiveMetadata(A) {
      return this.metadata = A, this
    }
    withOnReceiveMessage(A) {
      return this.message = A, this
    }
    withOnReceiveStatus(A) {
      return this.status = A, this
    }
    build() {
      return {
        onReceiveMetadata: this.metadata,
        onReceiveMessage: this.message,
        onReceiveStatus: this.status
      }
    }
  }
  T_0.ListenerBuilder = q_0;
  class M_0 {
    constructor() {
      this.start = void 0, this.message = void 0, this.halfClose = void 0, this.cancel = void 0
    }
    withStart(A) {
      return this.start = A, this
    }
    withSendMessage(A) {
      return this.message = A, this
    }
    withHalfClose(A) {
      return this.halfClose = A, this
    }
    withCancel(A) {
      return this.cancel = A, this
    }
    build() {
      return {
        start: this.start,
        sendMessage: this.message,
        halfClose: this.halfClose,
        cancel: this.cancel
      }
    }
  }
  T_0.RequesterBuilder = M_0;
  var Th1 = {
      onReceiveMetadata: (A, B) => {
        B(A)
      },
      onReceiveMessage: (A, B) => {
        B(A)
      },
      onReceiveStatus: (A, B) => {
        B(A)
      }
    },
    ss = {
      start: (A, B, Q) => {
        Q(A, B)
      },
      sendMessage: (A, B) => {
        B(A)
      },
      halfClose: (A) => {
        A()
      },
      cancel: (A) => {
        A()
      }
    };
  class L_0 {
    constructor(A, B) {
      var Q, I, G, Z;
      if (this.nextCall = A, this.processingMetadata = !1, this.pendingMessageContext = null, this.processingMessage = !1, this.pendingHalfClose = !1, B) this.requester = {
        start: (Q = B.start) !== null && Q !== void 0 ? Q : ss.start,
        sendMessage: (I = B.sendMessage) !== null && I !== void 0 ? I : ss.sendMessage,
        halfClose: (G = B.halfClose) !== null && G !== void 0 ? G : ss.halfClose,
        cancel: (Z = B.cancel) !== null && Z !== void 0 ? Z : ss.cancel
      };
      else this.requester = ss
    }
    cancelWithStatus(A, B) {
      this.requester.cancel(() => {
        this.nextCall.cancelWithStatus(A, B)
      })
    }
    getPeer() {
      return this.nextCall.getPeer()
    }
    processPendingMessage() {
      if (this.pendingMessageContext) this.nextCall.sendMessageWithContext(this.pendingMessageContext, this.pendingMessage), this.pendingMessageContext = null, this.pendingMessage = null
    }
    processPendingHalfClose() {
      if (this.pendingHalfClose) this.nextCall.halfClose()
    }
    start(A, B) {
      var Q, I, G, Z, D, Y;
      let W = {
        onReceiveMetadata: (I = (Q = B === null || B === void 0 ? void 0 : B.onReceiveMetadata) === null || Q === void 0 ? void 0 : Q.bind(B)) !== null && I !== void 0 ? I : (J) => {},
        onReceiveMessage: (Z = (G = B === null || B === void 0 ? void 0 : B.onReceiveMessage) === null || G === void 0 ? void 0 : G.bind(B)) !== null && Z !== void 0 ? Z : (J) => {},
        onReceiveStatus: (Y = (D = B === null || B === void 0 ? void 0 : B.onReceiveStatus) === null || D === void 0 ? void 0 : D.bind(B)) !== null && Y !== void 0 ? Y : (J) => {}
      };
      this.processingMetadata = !0, this.requester.start(A, W, (J, F) => {
        var X, V, C;
        this.processingMetadata = !1;
        let K;
        if (U_0.isInterceptingListener(F)) K = F;
        else {
          let E = {
            onReceiveMetadata: (X = F.onReceiveMetadata) !== null && X !== void 0 ? X : Th1.onReceiveMetadata,
            onReceiveMessage: (V = F.onReceiveMessage) !== null && V !== void 0 ? V : Th1.onReceiveMessage,
            onReceiveStatus: (C = F.onReceiveStatus) !== null && C !== void 0 ? C : Th1.onReceiveStatus
          };
          K = new U_0.InterceptingListenerImpl(E, W)
        }
        this.nextCall.start(J, K), this.processPendingMessage(), this.processPendingHalfClose()
      })
    }
    sendMessageWithContext(A, B) {
      this.processingMessage = !0, this.requester.sendMessage(B, (Q) => {
        if (this.processingMessage = !1, this.processingMetadata) this.pendingMessageContext = A, this.pendingMessage = B;
        else this.nextCall.sendMessageWithContext(A, Q), this.processPendingHalfClose()
      })
    }
    sendMessage(A) {
      this.sendMessageWithContext({}, A)
    }
    startRead() {
      this.nextCall.startRead()
    }
    halfClose() {
      this.requester.halfClose(() => {
        if (this.processingMetadata || this.processingMessage) this.pendingHalfClose = !0;
        else this.nextCall.halfClose()
      })
    }
  }
  T_0.InterceptingCall = L_0;

  function a86(A, B, Q) {
    var I, G;
    let Z = (I = Q.deadline) !== null && I !== void 0 ? I : 1 / 0,
      D = Q.host,
      Y = (G = Q.parent) !== null && G !== void 0 ? G : null,
      W = Q.propagate_flags,
      J = Q.credentials,
      F = A.createCall(B, Z, D, Y, W);
    if (J) F.setCredentials(J);
    return F
  }
  class Ph1 {
    constructor(A, B) {
      this.call = A, this.methodDefinition = B
    }
    cancelWithStatus(A, B) {
      this.call.cancelWithStatus(A, B)
    }
    getPeer() {
      return this.call.getPeer()
    }
    sendMessageWithContext(A, B) {
      let Q;
      try {
        Q = this.methodDefinition.requestSerialize(B)
      } catch (I) {
        this.call.cancelWithStatus(N_0.Status.INTERNAL, `Request message serialization failure: ${$_0.getErrorMessage(I)}`);
        return
      }
      this.call.sendMessageWithContext(A, Q)
    }
    sendMessage(A) {
      this.sendMessageWithContext({}, A)
    }
    start(A, B) {
      let Q = null;
      this.call.start(A, {
        onReceiveMetadata: (I) => {
          var G;
          (G = B === null || B === void 0 ? void 0 : B.onReceiveMetadata) === null || G === void 0 || G.call(B, I)
        },
        onReceiveMessage: (I) => {
          var G;
          let Z;
          try {
            Z = this.methodDefinition.responseDeserialize(I)
          } catch (D) {
            Q = {
              code: N_0.Status.INTERNAL,
              details: `Response message parsing error: ${$_0.getErrorMessage(D)}`,
              metadata: new n86.Metadata
            }, this.call.cancelWithStatus(Q.code, Q.details);
            return
          }(G = B === null || B === void 0 ? void 0 : B.onReceiveMessage) === null || G === void 0 || G.call(B, Z)
        },
        onReceiveStatus: (I) => {
          var G, Z;
          if (Q)(G = B === null || B === void 0 ? void 0 : B.onReceiveStatus) === null || G === void 0 || G.call(B, Q);
          else(Z = B === null || B === void 0 ? void 0 : B.onReceiveStatus) === null || Z === void 0 || Z.call(B, I)
        }
      })
    }
    startRead() {
      this.call.startRead()
    }
    halfClose() {
      this.call.halfClose()
    }
  }
  class R_0 extends Ph1 {
    constructor(A, B) {
      super(A, B)
    }
    start(A, B) {
      var Q, I;
      let G = !1,
        Z = {
          onReceiveMetadata: (I = (Q = B === null || B === void 0 ? void 0 : B.onReceiveMetadata) === null || Q === void 0 ? void 0 : Q.bind(B)) !== null && I !== void 0 ? I : (D) => {},
          onReceiveMessage: (D) => {
            var Y;
            G = !0, (Y = B === null || B === void 0 ? void 0 : B.onReceiveMessage) === null || Y === void 0 || Y.call(B, D)
          },
          onReceiveStatus: (D) => {
            var Y, W;
            if (!G)(Y = B === null || B === void 0 ? void 0 : B.onReceiveMessage) === null || Y === void 0 || Y.call(B, null);
            (W = B === null || B === void 0 ? void 0 : B.onReceiveStatus) === null || W === void 0 || W.call(B, D)
          }
        };
      super.start(A, Z), this.call.startRead()
    }
  }
  class O_0 extends Ph1 {}

  function s86(A, B, Q) {
    let I = a86(A, Q.path, B);
    if (Q.responseStream) return new O_0(I, Q);
    else return new R_0(I, Q)
  }

  function r86(A, B, Q, I) {
    if (A.clientInterceptors.length > 0 && A.clientInterceptorProviders.length > 0) throw new rs("Both interceptors and interceptor_providers were passed as options to the client constructor. Only one of these is allowed.");
    if (A.callInterceptors.length > 0 && A.callInterceptorProviders.length > 0) throw new rs("Both interceptors and interceptor_providers were passed as call options. Only one of these is allowed.");
    let G = [];
    if (A.callInterceptors.length > 0 || A.callInterceptorProviders.length > 0) G = [].concat(A.callInterceptors, A.callInterceptorProviders.map((Y) => Y(B))).filter((Y) => Y);
    else G = [].concat(A.clientInterceptors, A.clientInterceptorProviders.map((Y) => Y(B))).filter((Y) => Y);
    let Z = Object.assign({}, Q, {
      method_definition: B
    });
    return G.reduceRight((Y, W) => {
      return (J) => W(J, Y)
    }, (Y) => s86(I, Y, B))(Z)
  }
})
// @from(Start 4730212, End 4740097)
jh1 = z((__0) => {
  Object.defineProperty(__0, "__esModule", {
    value: !0
  });
  __0.Client = void 0;
  var Dw = K_0(),
    BB6 = yh1(),
    QB6 = TX(),
    XR = y6(),
    ng = SZ(),
    GD1 = Sh1(),
    pC = Symbol(),
    ag = Symbol(),
    sg = Symbol(),
    TN = Symbol();

  function _h1(A) {
    return typeof A === "function"
  }

  function rg(A) {
    var B;
    return ((B = A.stack) === null || B === void 0 ? void 0 : B.split(`
`).slice(1).join(`
`)) || "no stack trace available"
  }
  class S_0 {
    constructor(A, B, Q = {}) {
      var I, G;
      if (Q = Object.assign({}, Q), this[ag] = (I = Q.interceptors) !== null && I !== void 0 ? I : [], delete Q.interceptors, this[sg] = (G = Q.interceptor_providers) !== null && G !== void 0 ? G : [], delete Q.interceptor_providers, this[ag].length > 0 && this[sg].length > 0) throw new Error("Both interceptors and interceptor_providers were passed as options to the client constructor. Only one of these is allowed.");
      if (this[TN] = Q.callInvocationTransformer, delete Q.callInvocationTransformer, Q.channelOverride) this[pC] = Q.channelOverride;
      else if (Q.channelFactoryOverride) {
        let Z = Q.channelFactoryOverride;
        delete Q.channelFactoryOverride, this[pC] = Z(A, B, Q)
      } else this[pC] = new BB6.ChannelImplementation(A, B, Q)
    }
    close() {
      this[pC].close()
    }
    getChannel() {
      return this[pC]
    }
    waitForReady(A, B) {
      let Q = (I) => {
        if (I) {
          B(new Error("Failed to connect before the deadline"));
          return
        }
        let G;
        try {
          G = this[pC].getConnectivityState(!0)
        } catch (Z) {
          B(new Error("The channel has been closed"));
          return
        }
        if (G === QB6.ConnectivityState.READY) B();
        else try {
          this[pC].watchConnectivityState(G, A, Q)
        } catch (Z) {
          B(new Error("The channel has been closed"))
        }
      };
      setImmediate(Q)
    }
    checkOptionalUnaryResponseArguments(A, B, Q) {
      if (_h1(A)) return {
        metadata: new ng.Metadata,
        options: {},
        callback: A
      };
      else if (_h1(B))
        if (A instanceof ng.Metadata) return {
          metadata: A,
          options: {},
          callback: B
        };
        else return {
          metadata: new ng.Metadata,
          options: A,
          callback: B
        };
      else {
        if (!(A instanceof ng.Metadata && B instanceof Object && _h1(Q))) throw new Error("Incorrect arguments passed");
        return {
          metadata: A,
          options: B,
          callback: Q
        }
      }
    }
    makeUnaryRequest(A, B, Q, I, G, Z, D) {
      var Y, W;
      let J = this.checkOptionalUnaryResponseArguments(G, Z, D),
        F = {
          path: A,
          requestStream: !1,
          responseStream: !1,
          requestSerialize: B,
          responseDeserialize: Q
        },
        X = {
          argument: I,
          metadata: J.metadata,
          call: new Dw.ClientUnaryCallImpl,
          channel: this[pC],
          methodDefinition: F,
          callOptions: J.options,
          callback: J.callback
        };
      if (this[TN]) X = this[TN](X);
      let V = X.call,
        C = {
          clientInterceptors: this[ag],
          clientInterceptorProviders: this[sg],
          callInterceptors: (Y = X.callOptions.interceptors) !== null && Y !== void 0 ? Y : [],
          callInterceptorProviders: (W = X.callOptions.interceptor_providers) !== null && W !== void 0 ? W : []
        },
        K = GD1.getInterceptingCall(C, X.methodDefinition, X.callOptions, X.channel);
      V.call = K;
      let E = null,
        N = !1,
        q = new Error;
      return K.start(X.metadata, {
        onReceiveMetadata: (O) => {
          V.emit("metadata", O)
        },
        onReceiveMessage(O) {
          if (E !== null) K.cancelWithStatus(XR.Status.UNIMPLEMENTED, "Too many responses received");
          E = O
        },
        onReceiveStatus(O) {
          if (N) return;
          if (N = !0, O.code === XR.Status.OK)
            if (E === null) {
              let R = rg(q);
              X.callback(Dw.callErrorFromStatus({
                code: XR.Status.UNIMPLEMENTED,
                details: "No message received",
                metadata: O.metadata
              }, R))
            } else X.callback(null, E);
          else {
            let R = rg(q);
            X.callback(Dw.callErrorFromStatus(O, R))
          }
          q = null, V.emit("status", O)
        }
      }), K.sendMessage(I), K.halfClose(), V
    }
    makeClientStreamRequest(A, B, Q, I, G, Z) {
      var D, Y;
      let W = this.checkOptionalUnaryResponseArguments(I, G, Z),
        J = {
          path: A,
          requestStream: !0,
          responseStream: !1,
          requestSerialize: B,
          responseDeserialize: Q
        },
        F = {
          metadata: W.metadata,
          call: new Dw.ClientWritableStreamImpl(B),
          channel: this[pC],
          methodDefinition: J,
          callOptions: W.options,
          callback: W.callback
        };
      if (this[TN]) F = this[TN](F);
      let X = F.call,
        V = {
          clientInterceptors: this[ag],
          clientInterceptorProviders: this[sg],
          callInterceptors: (D = F.callOptions.interceptors) !== null && D !== void 0 ? D : [],
          callInterceptorProviders: (Y = F.callOptions.interceptor_providers) !== null && Y !== void 0 ? Y : []
        },
        C = GD1.getInterceptingCall(V, F.methodDefinition, F.callOptions, F.channel);
      X.call = C;
      let K = null,
        E = !1,
        N = new Error;
      return C.start(F.metadata, {
        onReceiveMetadata: (q) => {
          X.emit("metadata", q)
        },
        onReceiveMessage(q) {
          if (K !== null) C.cancelWithStatus(XR.Status.UNIMPLEMENTED, "Too many responses received");
          K = q, C.startRead()
        },
        onReceiveStatus(q) {
          if (E) return;
          if (E = !0, q.code === XR.Status.OK)
            if (K === null) {
              let O = rg(N);
              F.callback(Dw.callErrorFromStatus({
                code: XR.Status.UNIMPLEMENTED,
                details: "No message received",
                metadata: q.metadata
              }, O))
            } else F.callback(null, K);
          else {
            let O = rg(N);
            F.callback(Dw.callErrorFromStatus(q, O))
          }
          N = null, X.emit("status", q)
        }
      }), X
    }
    checkMetadataAndOptions(A, B) {
      let Q, I;
      if (A instanceof ng.Metadata)
        if (Q = A, B) I = B;
        else I = {};
      else {
        if (A) I = A;
        else I = {};
        Q = new ng.Metadata
      }
      return {
        metadata: Q,
        options: I
      }
    }
    makeServerStreamRequest(A, B, Q, I, G, Z) {
      var D, Y;
      let W = this.checkMetadataAndOptions(G, Z),
        J = {
          path: A,
          requestStream: !1,
          responseStream: !0,
          requestSerialize: B,
          responseDeserialize: Q
        },
        F = {
          argument: I,
          metadata: W.metadata,
          call: new Dw.ClientReadableStreamImpl(Q),
          channel: this[pC],
          methodDefinition: J,
          callOptions: W.options
        };
      if (this[TN]) F = this[TN](F);
      let X = F.call,
        V = {
          clientInterceptors: this[ag],
          clientInterceptorProviders: this[sg],
          callInterceptors: (D = F.callOptions.interceptors) !== null && D !== void 0 ? D : [],
          callInterceptorProviders: (Y = F.callOptions.interceptor_providers) !== null && Y !== void 0 ? Y : []
        },
        C = GD1.getInterceptingCall(V, F.methodDefinition, F.callOptions, F.channel);
      X.call = C;
      let K = !1,
        E = new Error;
      return C.start(F.metadata, {
        onReceiveMetadata(N) {
          X.emit("metadata", N)
        },
        onReceiveMessage(N) {
          X.push(N)
        },
        onReceiveStatus(N) {
          if (K) return;
          if (K = !0, X.push(null), N.code !== XR.Status.OK) {
            let q = rg(E);
            X.emit("error", Dw.callErrorFromStatus(N, q))
          }
          E = null, X.emit("status", N)
        }
      }), C.sendMessage(I), C.halfClose(), X
    }
    makeBidiStreamRequest(A, B, Q, I, G) {
      var Z, D;
      let Y = this.checkMetadataAndOptions(I, G),
        W = {
          path: A,
          requestStream: !0,
          responseStream: !0,
          requestSerialize: B,
          responseDeserialize: Q
        },
        J = {
          metadata: Y.metadata,
          call: new Dw.ClientDuplexStreamImpl(B, Q),
          channel: this[pC],
          methodDefinition: W,
          callOptions: Y.options
        };
      if (this[TN]) J = this[TN](J);
      let F = J.call,
        X = {
          clientInterceptors: this[ag],
          clientInterceptorProviders: this[sg],
          callInterceptors: (Z = J.callOptions.interceptors) !== null && Z !== void 0 ? Z : [],
          callInterceptorProviders: (D = J.callOptions.interceptor_providers) !== null && D !== void 0 ? D : []
        },
        V = GD1.getInterceptingCall(X, J.methodDefinition, J.callOptions, J.channel);
      F.call = V;
      let C = !1,
        K = new Error;
      return V.start(J.metadata, {
        onReceiveMetadata(E) {
          F.emit("metadata", E)
        },
        onReceiveMessage(E) {
          F.push(E)
        },
        onReceiveStatus(E) {
          if (C) return;
          if (C = !0, F.push(null), E.code !== XR.Status.OK) {
            let N = rg(K);
            F.emit("error", Dw.callErrorFromStatus(E, N))
          }
          K = null, F.emit("status", E)
        }
      }), F
    }
  }
  __0.Client = S_0
})
// @from(Start 4740103, End 4742010)
xh1 = z((k_0) => {
  Object.defineProperty(k_0, "__esModule", {
    value: !0
  });
  k_0.makeClientConstructor = y_0;
  k_0.loadPackageDefinition = DB6;
  var os = jh1(),
    IB6 = {
      unary: os.Client.prototype.makeUnaryRequest,
      server_stream: os.Client.prototype.makeServerStreamRequest,
      client_stream: os.Client.prototype.makeClientStreamRequest,
      bidi: os.Client.prototype.makeBidiStreamRequest
    };

  function kh1(A) {
    return ["__proto__", "prototype", "constructor"].includes(A)
  }

  function y_0(A, B, Q) {
    if (!Q) Q = {};
    class I extends os.Client {}
    return Object.keys(A).forEach((G) => {
      if (kh1(G)) return;
      let Z = A[G],
        D;
      if (typeof G === "string" && G.charAt(0) === "$") throw new Error("Method names cannot start with $");
      if (Z.requestStream)
        if (Z.responseStream) D = "bidi";
        else D = "client_stream";
      else if (Z.responseStream) D = "server_stream";
      else D = "unary";
      let {
        requestSerialize: Y,
        responseDeserialize: W
      } = Z, J = GB6(IB6[D], Z.path, Y, W);
      if (I.prototype[G] = J, Object.assign(I.prototype[G], Z), Z.originalName && !kh1(Z.originalName)) I.prototype[Z.originalName] = I.prototype[G]
    }), I.service = A, I.serviceName = B, I
  }

  function GB6(A, B, Q, I) {
    return function(...G) {
      return A.call(this, B, Q, I, ...G)
    }
  }

  function ZB6(A) {
    return "format" in A
  }

  function DB6(A) {
    let B = {};
    for (let Q in A)
      if (Object.prototype.hasOwnProperty.call(A, Q)) {
        let I = A[Q],
          G = Q.split(".");
        if (G.some((Y) => kh1(Y))) continue;
        let Z = G[G.length - 1],
          D = B;
        for (let Y of G.slice(0, -1)) {
          if (!D[Y]) D[Y] = {};
          D = D[Y]
        }
        if (ZB6(I)) D[Z] = I;
        else D[Z] = y_0(I, Z, {})
      } return B
  }
})
// @from(Start 4742016, End 4749836)
Gj0 = z((k$8, Ij0) => {
  var JB6 = 1 / 0,
    FB6 = "[object Symbol]",
    XB6 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
    VB6 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
    DD1 = "\\ud800-\\udfff",
    d_0 = "\\u0300-\\u036f\\ufe20-\\ufe23",
    u_0 = "\\u20d0-\\u20f0",
    p_0 = "\\u2700-\\u27bf",
    c_0 = "a-z\\xdf-\\xf6\\xf8-\\xff",
    CB6 = "\\xac\\xb1\\xd7\\xf7",
    KB6 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",
    HB6 = "\\u2000-\\u206f",
    zB6 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
    l_0 = "A-Z\\xc0-\\xd6\\xd8-\\xde",
    i_0 = "\\ufe0e\\ufe0f",
    n_0 = CB6 + KB6 + HB6 + zB6,
    vh1 = "['’]",
    wB6 = "[" + DD1 + "]",
    x_0 = "[" + n_0 + "]",
    ZD1 = "[" + d_0 + u_0 + "]",
    a_0 = "\\d+",
    EB6 = "[" + p_0 + "]",
    s_0 = "[" + c_0 + "]",
    r_0 = "[^" + DD1 + n_0 + a_0 + p_0 + c_0 + l_0 + "]",
    fh1 = "\\ud83c[\\udffb-\\udfff]",
    UB6 = "(?:" + ZD1 + "|" + fh1 + ")",
    o_0 = "[^" + DD1 + "]",
    bh1 = "(?:\\ud83c[\\udde6-\\uddff]){2}",
    gh1 = "[\\ud800-\\udbff][\\udc00-\\udfff]",
    og = "[" + l_0 + "]",
    t_0 = "\\u200d",
    f_0 = "(?:" + s_0 + "|" + r_0 + ")",
    NB6 = "(?:" + og + "|" + r_0 + ")",
    v_0 = "(?:" + vh1 + "(?:d|ll|m|re|s|t|ve))?",
    b_0 = "(?:" + vh1 + "(?:D|LL|M|RE|S|T|VE))?",
    e_0 = UB6 + "?",
    Aj0 = "[" + i_0 + "]?",
    $B6 = "(?:" + t_0 + "(?:" + [o_0, bh1, gh1].join("|") + ")" + Aj0 + e_0 + ")*",
    Bj0 = Aj0 + e_0 + $B6,
    qB6 = "(?:" + [EB6, bh1, gh1].join("|") + ")" + Bj0,
    MB6 = "(?:" + [o_0 + ZD1 + "?", ZD1, bh1, gh1, wB6].join("|") + ")",
    LB6 = RegExp(vh1, "g"),
    RB6 = RegExp(ZD1, "g"),
    OB6 = RegExp(fh1 + "(?=" + fh1 + ")|" + MB6 + Bj0, "g"),
    TB6 = RegExp([og + "?" + s_0 + "+" + v_0 + "(?=" + [x_0, og, "$"].join("|") + ")", NB6 + "+" + b_0 + "(?=" + [x_0, og + f_0, "$"].join("|") + ")", og + "?" + f_0 + "+" + v_0, og + "+" + b_0, a_0, qB6].join("|"), "g"),
    PB6 = RegExp("[" + t_0 + DD1 + d_0 + u_0 + i_0 + "]"),
    SB6 = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
    _B6 = {
      "À": "A",
      "Á": "A",
      "Â": "A",
      "Ã": "A",
      "Ä": "A",
      "Å": "A",
      "à": "a",
      "á": "a",
      "â": "a",
      "ã": "a",
      "ä": "a",
      "å": "a",
      "Ç": "C",
      "ç": "c",
      "Ð": "D",
      "ð": "d",
      "È": "E",
      "É": "E",
      "Ê": "E",
      "Ë": "E",
      "è": "e",
      "é": "e",
      "ê": "e",
      "ë": "e",
      "Ì": "I",
      "Í": "I",
      "Î": "I",
      "Ï": "I",
      "ì": "i",
      "í": "i",
      "î": "i",
      "ï": "i",
      "Ñ": "N",
      "ñ": "n",
      "Ò": "O",
      "Ó": "O",
      "Ô": "O",
      "Õ": "O",
      "Ö": "O",
      "Ø": "O",
      "ò": "o",
      "ó": "o",
      "ô": "o",
      "õ": "o",
      "ö": "o",
      "ø": "o",
      "Ù": "U",
      "Ú": "U",
      "Û": "U",
      "Ü": "U",
      "ù": "u",
      "ú": "u",
      "û": "u",
      "ü": "u",
      "Ý": "Y",
      "ý": "y",
      "ÿ": "y",
      "Æ": "Ae",
      "æ": "ae",
      "Þ": "Th",
      "þ": "th",
      "ß": "ss",
      "Ā": "A",
      "Ă": "A",
      "Ą": "A",
      "ā": "a",
      "ă": "a",
      "ą": "a",
      "Ć": "C",
      "Ĉ": "C",
      "Ċ": "C",
      "Č": "C",
      "ć": "c",
      "ĉ": "c",
      "ċ": "c",
      "č": "c",
      "Ď": "D",
      "Đ": "D",
      "ď": "d",
      "đ": "d",
      "Ē": "E",
      "Ĕ": "E",
      "Ė": "E",
      "Ę": "E",
      "Ě": "E",
      "ē": "e",
      "ĕ": "e",
      "ė": "e",
      "ę": "e",
      "ě": "e",
      "Ĝ": "G",
      "Ğ": "G",
      "Ġ": "G",
      "Ģ": "G",
      "ĝ": "g",
      "ğ": "g",
      "ġ": "g",
      "ģ": "g",
      "Ĥ": "H",
      "Ħ": "H",
      "ĥ": "h",
      "ħ": "h",
      "Ĩ": "I",
      "Ī": "I",
      "Ĭ": "I",
      "Į": "I",
      "İ": "I",
      "ĩ": "i",
      "ī": "i",
      "ĭ": "i",
      "į": "i",
      "ı": "i",
      "Ĵ": "J",
      "ĵ": "j",
      "Ķ": "K",
      "ķ": "k",
      "ĸ": "k",
      "Ĺ": "L",
      "Ļ": "L",
      "Ľ": "L",
      "Ŀ": "L",
      "Ł": "L",
      "ĺ": "l",
      "ļ": "l",
      "ľ": "l",
      "ŀ": "l",
      "ł": "l",
      "Ń": "N",
      "Ņ": "N",
      "Ň": "N",
      "Ŋ": "N",
      "ń": "n",
      "ņ": "n",
      "ň": "n",
      "ŋ": "n",
      "Ō": "O",
      "Ŏ": "O",
      "Ő": "O",
      "ō": "o",
      "ŏ": "o",
      "ő": "o",
      "Ŕ": "R",
      "Ŗ": "R",
      "Ř": "R",
      "ŕ": "r",
      "ŗ": "r",
      "ř": "r",
      "Ś": "S",
      "Ŝ": "S",
      "Ş": "S",
      "Š": "S",
      "ś": "s",
      "ŝ": "s",
      "ş": "s",
      "š": "s",
      "Ţ": "T",
      "Ť": "T",
      "Ŧ": "T",
      "ţ": "t",
      "ť": "t",
      "ŧ": "t",
      "Ũ": "U",
      "Ū": "U",
      "Ŭ": "U",
      "Ů": "U",
      "Ű": "U",
      "Ų": "U",
      "ũ": "u",
      "ū": "u",
      "ŭ": "u",
      "ů": "u",
      "ű": "u",
      "ų": "u",
      "Ŵ": "W",
      "ŵ": "w",
      "Ŷ": "Y",
      "ŷ": "y",
      "Ÿ": "Y",
      "Ź": "Z",
      "Ż": "Z",
      "Ž": "Z",
      "ź": "z",
      "ż": "z",
      "ž": "z",
      "Ĳ": "IJ",
      "ĳ": "ij",
      "Œ": "Oe",
      "œ": "oe",
      "ŉ": "'n",
      "ſ": "ss"
    },
    jB6 = typeof global == "object" && global && global.Object === Object && global,
    yB6 = typeof self == "object" && self && self.Object === Object && self,
    kB6 = jB6 || yB6 || Function("return this")();

  function xB6(A, B, Q, I) {
    var G = -1,
      Z = A ? A.length : 0;
    if (I && Z) Q = A[++G];
    while (++G < Z) Q = B(Q, A[G], G, A);
    return Q
  }

  function fB6(A) {
    return A.split("")
  }

  function vB6(A) {
    return A.match(XB6) || []
  }

  function bB6(A) {
    return function(B) {
      return A == null ? void 0 : A[B]
    }
  }
  var gB6 = bB6(_B6);

  function Qj0(A) {
    return PB6.test(A)
  }

  function hB6(A) {
    return SB6.test(A)
  }

  function mB6(A) {
    return Qj0(A) ? dB6(A) : fB6(A)
  }

  function dB6(A) {
    return A.match(OB6) || []
  }

  function uB6(A) {
    return A.match(TB6) || []
  }
  var pB6 = Object.prototype,
    cB6 = pB6.toString,
    g_0 = kB6.Symbol,
    h_0 = g_0 ? g_0.prototype : void 0,
    m_0 = h_0 ? h_0.toString : void 0;

  function lB6(A, B, Q) {
    var I = -1,
      G = A.length;
    if (B < 0) B = -B > G ? 0 : G + B;
    if (Q = Q > G ? G : Q, Q < 0) Q += G;
    G = B > Q ? 0 : Q - B >>> 0, B >>>= 0;
    var Z = Array(G);
    while (++I < G) Z[I] = A[I + B];
    return Z
  }

  function iB6(A) {
    if (typeof A == "string") return A;
    if (oB6(A)) return m_0 ? m_0.call(A) : "";
    var B = A + "";
    return B == "0" && 1 / A == -JB6 ? "-0" : B
  }

  function nB6(A, B, Q) {
    var I = A.length;
    return Q = Q === void 0 ? I : Q, !B && Q >= I ? A : lB6(A, B, Q)
  }

  function aB6(A) {
    return function(B) {
      B = YD1(B);
      var Q = Qj0(B) ? mB6(B) : void 0,
        I = Q ? Q[0] : B.charAt(0),
        G = Q ? nB6(Q, 1).join("") : B.slice(1);
      return I[A]() + G
    }
  }

  function sB6(A) {
    return function(B) {
      return xB6(Q36(A36(B).replace(LB6, "")), A, "")
    }
  }

  function rB6(A) {
    return !!A && typeof A == "object"
  }

  function oB6(A) {
    return typeof A == "symbol" || rB6(A) && cB6.call(A) == FB6
  }

  function YD1(A) {
    return A == null ? "" : iB6(A)
  }
  var tB6 = sB6(function(A, B, Q) {
    return B = B.toLowerCase(), A + (Q ? eB6(B) : B)
  });

  function eB6(A) {
    return B36(YD1(A).toLowerCase())
  }

  function A36(A) {
    return A = YD1(A), A && A.replace(VB6, gB6).replace(RB6, "")
  }
  var B36 = aB6("toUpperCase");

  function Q36(A, B, Q) {
    if (A = YD1(A), B = Q ? void 0 : B, B === void 0) return hB6(A) ? uB6(A) : vB6(A);
    return A.match(B) || []
  }
  Ij0.exports = tB6
})
// @from(Start 4749842, End 4751266)
Dj0 = z((x$8, Zj0) => {
  Zj0.exports = hh1;

  function hh1(A, B) {
    if (typeof A === "string") B = A, A = void 0;
    var Q = [];

    function I(Z) {
      if (typeof Z !== "string") {
        var D = G();
        if (hh1.verbose) console.log("codegen: " + D);
        if (D = "return " + D, Z) {
          var Y = Object.keys(Z),
            W = new Array(Y.length + 1),
            J = new Array(Y.length),
            F = 0;
          while (F < Y.length) W[F] = Y[F], J[F] = Z[Y[F++]];
          return W[F] = D, Function.apply(null, W).apply(null, J)
        }
        return Function(D)()
      }
      var X = new Array(arguments.length - 1),
        V = 0;
      while (V < X.length) X[V] = arguments[++V];
      if (V = 0, Z = Z.replace(/%([%dfijs])/g, function C(K, E) {
          var N = X[V++];
          switch (E) {
            case "d":
            case "f":
              return String(Number(N));
            case "i":
              return String(Math.floor(N));
            case "j":
              return JSON.stringify(N);
            case "s":
              return String(N)
          }
          return "%"
        }), V !== X.length) throw Error("parameter count mismatch");
      return Q.push(Z), I
    }

    function G(Z) {
      return "function " + (Z || B || "") + "(" + (A && A.join(",") || "") + `){
  ` + Q.join(`
  `) + `
}`
    }
    return I.toString = G, I
  }
  hh1.verbose = !1
})
// @from(Start 4751272, End 4752536)
Wj0 = z((f$8, Yj0) => {
  Yj0.exports = ts;
  var I36 = Lg1(),
    G36 = Og1(),
    mh1 = G36("fs");

  function ts(A, B, Q) {
    if (typeof B === "function") Q = B, B = {};
    else if (!B) B = {};
    if (!Q) return I36(ts, this, A, B);
    if (!B.xhr && mh1 && mh1.readFile) return mh1.readFile(A, function I(G, Z) {
      return G && typeof XMLHttpRequest !== "undefined" ? ts.xhr(A, B, Q) : G ? Q(G) : Q(null, B.binary ? Z : Z.toString("utf8"))
    });
    return ts.xhr(A, B, Q)
  }
  ts.xhr = function A(B, Q, I) {
    var G = new XMLHttpRequest;
    if (G.onreadystatechange = function Z() {
        if (G.readyState !== 4) return;
        if (G.status !== 0 && G.status !== 200) return I(Error("status " + G.status));
        if (Q.binary) {
          var D = G.response;
          if (!D) {
            D = [];
            for (var Y = 0; Y < G.responseText.length; ++Y) D.push(G.responseText.charCodeAt(Y) & 255)
          }
          return I(null, typeof Uint8Array !== "undefined" ? new Uint8Array(D) : D)
        }
        return I(null, G.responseText)
      }, Q.binary) {
      if ("overrideMimeType" in G) G.overrideMimeType("text/plain; charset=x-user-defined");
      G.responseType = "arraybuffer"
    }
    G.open("GET", B), G.send()
  }
})
// @from(Start 4752542, End 4753333)
Xj0 = z((Fj0) => {
  var uh1 = Fj0,
    Jj0 = uh1.isAbsolute = function A(B) {
      return /^(?:\/|\w+:)/.test(B)
    },
    dh1 = uh1.normalize = function A(B) {
      B = B.replace(/\\/g, "/").replace(/\/{2,}/g, "/");
      var Q = B.split("/"),
        I = Jj0(B),
        G = "";
      if (I) G = Q.shift() + "/";
      for (var Z = 0; Z < Q.length;)
        if (Q[Z] === "..")
          if (Z > 0 && Q[Z - 1] !== "..") Q.splice(--Z, 2);
          else if (I) Q.splice(Z, 1);
      else ++Z;
      else if (Q[Z] === ".") Q.splice(Z, 1);
      else ++Z;
      return G + Q.join("/")
    };
  uh1.resolve = function A(B, Q, I) {
    if (!I) Q = dh1(Q);
    if (Jj0(Q)) return Q;
    if (!I) B = dh1(B);
    return (B = B.replace(/(?:\/|^)[^/]+$/, "")).length ? dh1(B + "/" + Q) : Q
  }
})
// @from(Start 4753339, End 4753988)
r_ = z((Vj0) => {
  var es = Vj0,
    Z36 = RI(),
    D36 = ["double", "float", "int32", "uint32", "sint32", "fixed32", "sfixed32", "int64", "uint64", "sint64", "fixed64", "sfixed64", "bool", "string", "bytes"];

  function Ar(A, B) {
    var Q = 0,
      I = {};
    B |= 0;
    while (Q < A.length) I[D36[Q + B]] = A[Q++];
    return I
  }
  es.basic = Ar([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2]);
  es.defaults = Ar([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !1, "", Z36.emptyArray, null]);
  es.long = Ar([0, 0, 0, 1, 1], 7);
  es.mapKey = Ar([0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2], 2);
  es.packed = Ar([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0])
})
// @from(Start 4753994, End 4758267)
VR = z((g$8, Hj0) => {
  Hj0.exports = SX;
  var WD1 = o_();
  ((SX.prototype = Object.create(WD1.prototype)).constructor = SX).className = "Field";
  var Cj0 = cC(),
    Kj0 = r_(),
    X7 = RI(),
    ph1, Y36 = /^required|optional|repeated$/;
  SX.fromJSON = function A(B, Q) {
    return new SX(B, Q.id, Q.type, Q.rule, Q.extend, Q.options, Q.comment)
  };

  function SX(A, B, Q, I, G, Z, D) {
    if (X7.isObject(I)) D = G, Z = I, I = G = void 0;
    else if (X7.isObject(G)) D = Z, Z = G, G = void 0;
    if (WD1.call(this, A, Z), !X7.isInteger(B) || B < 0) throw TypeError("id must be a non-negative integer");
    if (!X7.isString(Q)) throw TypeError("type must be a string");
    if (I !== void 0 && !Y36.test(I = I.toString().toLowerCase())) throw TypeError("rule must be a string rule");
    if (G !== void 0 && !X7.isString(G)) throw TypeError("extend must be a string");
    if (I === "proto3_optional") I = "optional";
    this.rule = I && I !== "optional" ? I : void 0, this.type = Q, this.id = B, this.extend = G || void 0, this.required = I === "required", this.optional = !this.required, this.repeated = I === "repeated", this.map = !1, this.message = null, this.partOf = null, this.typeDefault = null, this.defaultValue = null, this.long = X7.Long ? Kj0.long[Q] !== void 0 : !1, this.bytes = Q === "bytes", this.resolvedType = null, this.extensionField = null, this.declaringField = null, this._packed = null, this.comment = D
  }
  Object.defineProperty(SX.prototype, "packed", {
    get: function() {
      if (this._packed === null) this._packed = this.getOption("packed") !== !1;
      return this._packed
    }
  });
  SX.prototype.setOption = function A(B, Q, I) {
    if (B === "packed") this._packed = null;
    return WD1.prototype.setOption.call(this, B, Q, I)
  };
  SX.prototype.toJSON = function A(B) {
    var Q = B ? Boolean(B.keepComments) : !1;
    return X7.toObject(["rule", this.rule !== "optional" && this.rule || void 0, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", Q ? this.comment : void 0])
  };
  SX.prototype.resolve = function A() {
    if (this.resolved) return this;
    if ((this.typeDefault = Kj0.defaults[this.type]) === void 0)
      if (this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type), this.resolvedType instanceof ph1) this.typeDefault = null;
      else this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]];
    else if (this.options && this.options.proto3_optional) this.typeDefault = null;
    if (this.options && this.options.default != null) {
      if (this.typeDefault = this.options.default, this.resolvedType instanceof Cj0 && typeof this.typeDefault === "string") this.typeDefault = this.resolvedType.values[this.typeDefault]
    }
    if (this.options) {
      if (this.options.packed === !0 || this.options.packed !== void 0 && this.resolvedType && !(this.resolvedType instanceof Cj0)) delete this.options.packed;
      if (!Object.keys(this.options).length) this.options = void 0
    }
    if (this.long) {
      if (this.typeDefault = X7.Long.fromNumber(this.typeDefault, this.type.charAt(0) === "u"), Object.freeze) Object.freeze(this.typeDefault)
    } else if (this.bytes && typeof this.typeDefault === "string") {
      var B;
      if (X7.base64.test(this.typeDefault)) X7.base64.decode(this.typeDefault, B = X7.newBuffer(X7.base64.length(this.typeDefault)), 0);
      else X7.utf8.write(this.typeDefault, B = X7.newBuffer(X7.utf8.length(this.typeDefault)), 0);
      this.typeDefault = B
    }
    if (this.map) this.defaultValue = X7.emptyObject;
    else if (this.repeated) this.defaultValue = X7.emptyArray;
    else this.defaultValue = this.typeDefault;
    if (this.parent instanceof ph1) this.parent.ctor.prototype[this.name] = this.defaultValue;
    return WD1.prototype.resolve.call(this)
  };
  SX.d = function A(B, Q, I, G) {
    if (typeof Q === "function") Q = X7.decorateType(Q).name;
    else if (Q && typeof Q === "object") Q = X7.decorateEnum(Q).name;
    return function Z(D, Y) {
      X7.decorateType(D.constructor).add(new SX(Y, B, Q, I, {
        default: G
      }))
    }
  };
  SX._configure = function A(B) {
    ph1 = B
  }
})
// @from(Start 4758273, End 4760628)
tg = z((h$8, Ej0) => {
  Ej0.exports = _X;
  var FD1 = o_();
  ((_X.prototype = Object.create(FD1.prototype)).constructor = _X).className = "OneOf";
  var zj0 = VR(),
    JD1 = RI();

  function _X(A, B, Q, I) {
    if (!Array.isArray(B)) Q = B, B = void 0;
    if (FD1.call(this, A, Q), !(B === void 0 || Array.isArray(B))) throw TypeError("fieldNames must be an Array");
    this.oneof = B || [], this.fieldsArray = [], this.comment = I
  }
  _X.fromJSON = function A(B, Q) {
    return new _X(B, Q.oneof, Q.options, Q.comment)
  };
  _X.prototype.toJSON = function A(B) {
    var Q = B ? Boolean(B.keepComments) : !1;
    return JD1.toObject(["options", this.options, "oneof", this.oneof, "comment", Q ? this.comment : void 0])
  };

  function wj0(A) {
    if (A.parent) {
      for (var B = 0; B < A.fieldsArray.length; ++B)
        if (!A.fieldsArray[B].parent) A.parent.add(A.fieldsArray[B])
    }
  }
  _X.prototype.add = function A(B) {
    if (!(B instanceof zj0)) throw TypeError("field must be a Field");
    if (B.parent && B.parent !== this.parent) B.parent.remove(B);
    return this.oneof.push(B.name), this.fieldsArray.push(B), B.partOf = this, wj0(this), this
  };
  _X.prototype.remove = function A(B) {
    if (!(B instanceof zj0)) throw TypeError("field must be a Field");
    var Q = this.fieldsArray.indexOf(B);
    if (Q < 0) throw Error(B + " is not a member of " + this);
    if (this.fieldsArray.splice(Q, 1), Q = this.oneof.indexOf(B.name), Q > -1) this.oneof.splice(Q, 1);
    return B.partOf = null, this
  };
  _X.prototype.onAdd = function A(B) {
    FD1.prototype.onAdd.call(this, B);
    var Q = this;
    for (var I = 0; I < this.oneof.length; ++I) {
      var G = B.get(this.oneof[I]);
      if (G && !G.partOf) G.partOf = Q, Q.fieldsArray.push(G)
    }
    wj0(this)
  };
  _X.prototype.onRemove = function A(B) {
    for (var Q = 0, I; Q < this.fieldsArray.length; ++Q)
      if ((I = this.fieldsArray[Q]).parent) I.parent.remove(I);
    FD1.prototype.onRemove.call(this, B)
  };
  _X.d = function A() {
    var B = new Array(arguments.length),
      Q = 0;
    while (Q < arguments.length) B[Q] = arguments[Q++];
    return function I(G, Z) {
      JD1.decorateType(G.constructor).add(new _X(Z, B)), Object.defineProperty(G, Z, {
        get: JD1.oneOfGetter(B),
        set: JD1.oneOfSetter(B)
      })
    }
  }
})
// @from(Start 4760634, End 4765915)
Bh = z((m$8, qj0) => {
  qj0.exports = R5;
  var ch1 = o_();
  ((R5.prototype = Object.create(ch1.prototype)).constructor = R5).className = "Namespace";
  var Uj0 = VR(),
    XD1 = RI(),
    W36 = tg(),
    eg, Br, Ah;
  R5.fromJSON = function A(B, Q) {
    return new R5(B, Q.options).addJSON(Q.nested)
  };

  function Nj0(A, B) {
    if (!(A && A.length)) return;
    var Q = {};
    for (var I = 0; I < A.length; ++I) Q[A[I].name] = A[I].toJSON(B);
    return Q
  }
  R5.arrayToJSON = Nj0;
  R5.isReservedId = function A(B, Q) {
    if (B) {
      for (var I = 0; I < B.length; ++I)
        if (typeof B[I] !== "string" && B[I][0] <= Q && B[I][1] > Q) return !0
    }
    return !1
  };
  R5.isReservedName = function A(B, Q) {
    if (B) {
      for (var I = 0; I < B.length; ++I)
        if (B[I] === Q) return !0
    }
    return !1
  };

  function R5(A, B) {
    ch1.call(this, A, B), this.nested = void 0, this._nestedArray = null
  }

  function $j0(A) {
    return A._nestedArray = null, A
  }
  Object.defineProperty(R5.prototype, "nestedArray", {
    get: function() {
      return this._nestedArray || (this._nestedArray = XD1.toArray(this.nested))
    }
  });
  R5.prototype.toJSON = function A(B) {
    return XD1.toObject(["options", this.options, "nested", Nj0(this.nestedArray, B)])
  };
  R5.prototype.addJSON = function A(B) {
    var Q = this;
    if (B)
      for (var I = Object.keys(B), G = 0, Z; G < I.length; ++G) Z = B[I[G]], Q.add((Z.fields !== void 0 ? eg.fromJSON : Z.values !== void 0 ? Ah.fromJSON : Z.methods !== void 0 ? Br.fromJSON : Z.id !== void 0 ? Uj0.fromJSON : R5.fromJSON)(I[G], Z));
    return this
  };
  R5.prototype.get = function A(B) {
    return this.nested && this.nested[B] || null
  };
  R5.prototype.getEnum = function A(B) {
    if (this.nested && this.nested[B] instanceof Ah) return this.nested[B].values;
    throw Error("no such enum: " + B)
  };
  R5.prototype.add = function A(B) {
    if (!(B instanceof Uj0 && B.extend !== void 0 || B instanceof eg || B instanceof W36 || B instanceof Ah || B instanceof Br || B instanceof R5)) throw TypeError("object must be a valid nested object");
    if (!this.nested) this.nested = {};
    else {
      var Q = this.get(B.name);
      if (Q)
        if (Q instanceof R5 && B instanceof R5 && !(Q instanceof eg || Q instanceof Br)) {
          var I = Q.nestedArray;
          for (var G = 0; G < I.length; ++G) B.add(I[G]);
          if (this.remove(Q), !this.nested) this.nested = {};
          B.setOptions(Q.options, !0)
        } else throw Error("duplicate name '" + B.name + "' in " + this)
    }
    return this.nested[B.name] = B, B.onAdd(this), $j0(this)
  };
  R5.prototype.remove = function A(B) {
    if (!(B instanceof ch1)) throw TypeError("object must be a ReflectionObject");
    if (B.parent !== this) throw Error(B + " is not a member of " + this);
    if (delete this.nested[B.name], !Object.keys(this.nested).length) this.nested = void 0;
    return B.onRemove(this), $j0(this)
  };
  R5.prototype.define = function A(B, Q) {
    if (XD1.isString(B)) B = B.split(".");
    else if (!Array.isArray(B)) throw TypeError("illegal path");
    if (B && B.length && B[0] === "") throw Error("path must be relative");
    var I = this;
    while (B.length > 0) {
      var G = B.shift();
      if (I.nested && I.nested[G]) {
        if (I = I.nested[G], !(I instanceof R5)) throw Error("path conflicts with non-namespace objects")
      } else I.add(I = new R5(G))
    }
    if (Q) I.addJSON(Q);
    return I
  };
  R5.prototype.resolveAll = function A() {
    var B = this.nestedArray,
      Q = 0;
    while (Q < B.length)
      if (B[Q] instanceof R5) B[Q++].resolveAll();
      else B[Q++].resolve();
    return this.resolve()
  };
  R5.prototype.lookup = function A(B, Q, I) {
    if (typeof Q === "boolean") I = Q, Q = void 0;
    else if (Q && !Array.isArray(Q)) Q = [Q];
    if (XD1.isString(B) && B.length) {
      if (B === ".") return this.root;
      B = B.split(".")
    } else if (!B.length) return this;
    if (B[0] === "") return this.root.lookup(B.slice(1), Q);
    var G = this.get(B[0]);
    if (G) {
      if (B.length === 1) {
        if (!Q || Q.indexOf(G.constructor) > -1) return G
      } else if (G instanceof R5 && (G = G.lookup(B.slice(1), Q, !0))) return G
    } else
      for (var Z = 0; Z < this.nestedArray.length; ++Z)
        if (this._nestedArray[Z] instanceof R5 && (G = this._nestedArray[Z].lookup(B, Q, !0))) return G;
    if (this.parent === null || I) return null;
    return this.parent.lookup(B, Q)
  };
  R5.prototype.lookupType = function A(B) {
    var Q = this.lookup(B, [eg]);
    if (!Q) throw Error("no such type: " + B);
    return Q
  };
  R5.prototype.lookupEnum = function A(B) {
    var Q = this.lookup(B, [Ah]);
    if (!Q) throw Error("no such Enum '" + B + "' in " + this);
    return Q
  };
  R5.prototype.lookupTypeOrEnum = function A(B) {
    var Q = this.lookup(B, [eg, Ah]);
    if (!Q) throw Error("no such Type or Enum '" + B + "' in " + this);
    return Q
  };
  R5.prototype.lookupService = function A(B) {
    var Q = this.lookup(B, [Br]);
    if (!Q) throw Error("no such Service '" + B + "' in " + this);
    return Q
  };
  R5._configure = function(A, B, Q) {
    eg = A, Br = B, Ah = Q
  }
})
// @from(Start 4765921, End 4767183)
VD1 = z((d$8, Mj0) => {
  Mj0.exports = PN;
  var lh1 = VR();
  ((PN.prototype = Object.create(lh1.prototype)).constructor = PN).className = "MapField";
  var J36 = r_(),
    Qr = RI();

  function PN(A, B, Q, I, G, Z) {
    if (lh1.call(this, A, B, I, void 0, void 0, G, Z), !Qr.isString(Q)) throw TypeError("keyType must be a string");
    this.keyType = Q, this.resolvedKeyType = null, this.map = !0
  }
  PN.fromJSON = function A(B, Q) {
    return new PN(B, Q.id, Q.keyType, Q.type, Q.options, Q.comment)
  };
  PN.prototype.toJSON = function A(B) {
    var Q = B ? Boolean(B.keepComments) : !1;
    return Qr.toObject(["keyType", this.keyType, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", Q ? this.comment : void 0])
  };
  PN.prototype.resolve = function A() {
    if (this.resolved) return this;
    if (J36.mapKey[this.keyType] === void 0) throw Error("invalid key type: " + this.keyType);
    return lh1.prototype.resolve.call(this)
  };
  PN.d = function A(B, Q, I) {
    if (typeof I === "function") I = Qr.decorateType(I).name;
    else if (I && typeof I === "object") I = Qr.decorateEnum(I).name;
    return function G(Z, D) {
      Qr.decorateType(Z.constructor).add(new PN(D, B, Q, I))
    }
  }
})
// @from(Start 4767189, End 4768866)
CD1 = z((u$8, Lj0) => {
  Lj0.exports = t_;
  var ih1 = o_();
  ((t_.prototype = Object.create(ih1.prototype)).constructor = t_).className = "Method";
  var Qh = RI();

  function t_(A, B, Q, I, G, Z, D, Y, W) {
    if (Qh.isObject(G)) D = G, G = Z = void 0;
    else if (Qh.isObject(Z)) D = Z, Z = void 0;
    if (!(B === void 0 || Qh.isString(B))) throw TypeError("type must be a string");
    if (!Qh.isString(Q)) throw TypeError("requestType must be a string");
    if (!Qh.isString(I)) throw TypeError("responseType must be a string");
    ih1.call(this, A, D), this.type = B || "rpc", this.requestType = Q, this.requestStream = G ? !0 : void 0, this.responseType = I, this.responseStream = Z ? !0 : void 0, this.resolvedRequestType = null, this.resolvedResponseType = null, this.comment = Y, this.parsedOptions = W
  }
  t_.fromJSON = function A(B, Q) {
    return new t_(B, Q.type, Q.requestType, Q.responseType, Q.requestStream, Q.responseStream, Q.options, Q.comment, Q.parsedOptions)
  };
  t_.prototype.toJSON = function A(B) {
    var Q = B ? Boolean(B.keepComments) : !1;
    return Qh.toObject(["type", this.type !== "rpc" && this.type || void 0, "requestType", this.requestType, "requestStream", this.requestStream, "responseType", this.responseType, "responseStream", this.responseStream, "options", this.options, "comment", Q ? this.comment : void 0, "parsedOptions", this.parsedOptions])
  };
  t_.prototype.resolve = function A() {
    if (this.resolved) return this;
    return this.resolvedRequestType = this.parent.lookupType(this.requestType), this.resolvedResponseType = this.parent.lookupType(this.responseType), ih1.prototype.resolve.call(this)
  }
})
// @from(Start 4768872, End 4771295)
KD1 = z((p$8, Oj0) => {
  Oj0.exports = jX;
  var CR = Bh();
  ((jX.prototype = Object.create(CR.prototype)).constructor = jX).className = "Service";
  var nh1 = CD1(),
    Ir = RI(),
    F36 = gg1();

  function jX(A, B) {
    CR.call(this, A, B), this.methods = {}, this._methodsArray = null
  }
  jX.fromJSON = function A(B, Q) {
    var I = new jX(B, Q.options);
    if (Q.methods)
      for (var G = Object.keys(Q.methods), Z = 0; Z < G.length; ++Z) I.add(nh1.fromJSON(G[Z], Q.methods[G[Z]]));
    if (Q.nested) I.addJSON(Q.nested);
    return I.comment = Q.comment, I
  };
  jX.prototype.toJSON = function A(B) {
    var Q = CR.prototype.toJSON.call(this, B),
      I = B ? Boolean(B.keepComments) : !1;
    return Ir.toObject(["options", Q && Q.options || void 0, "methods", CR.arrayToJSON(this.methodsArray, B) || {}, "nested", Q && Q.nested || void 0, "comment", I ? this.comment : void 0])
  };
  Object.defineProperty(jX.prototype, "methodsArray", {
    get: function() {
      return this._methodsArray || (this._methodsArray = Ir.toArray(this.methods))
    }
  });

  function Rj0(A) {
    return A._methodsArray = null, A
  }
  jX.prototype.get = function A(B) {
    return this.methods[B] || CR.prototype.get.call(this, B)
  };
  jX.prototype.resolveAll = function A() {
    var B = this.methodsArray;
    for (var Q = 0; Q < B.length; ++Q) B[Q].resolve();
    return CR.prototype.resolve.call(this)
  };
  jX.prototype.add = function A(B) {
    if (this.get(B.name)) throw Error("duplicate name '" + B.name + "' in " + this);
    if (B instanceof nh1) return this.methods[B.name] = B, B.parent = this, Rj0(this);
    return CR.prototype.add.call(this, B)
  };
  jX.prototype.remove = function A(B) {
    if (B instanceof nh1) {
      if (this.methods[B.name] !== B) throw Error(B + " is not a member of " + this);
      return delete this.methods[B.name], B.parent = null, Rj0(this)
    }
    return CR.prototype.remove.call(this, B)
  };
  jX.prototype.create = function A(B, Q, I) {
    var G = new F36.Service(B, Q, I);
    for (var Z = 0, D; Z < this.methodsArray.length; ++Z) {
      var Y = Ir.lcFirst((D = this._methodsArray[Z]).resolve().name).replace(/[^$\w_]/g, "");
      G[Y] = Ir.codegen(["r", "c"], Ir.isReserved(Y) ? Y + "_" : Y)("return this.rpcCall(m,q,s,r,c)")({
        m: D,
        q: D.resolvedRequestType.ctor,
        s: D.resolvedResponseType.ctor
      })
    }
    return G
  }
})
// @from(Start 4771301, End 4772183)
HD1 = z((c$8, Tj0) => {
  Tj0.exports = Yw;
  var X36 = Iw();

  function Yw(A) {
    if (A)
      for (var B = Object.keys(A), Q = 0; Q < B.length; ++Q) this[B[Q]] = A[B[Q]]
  }
  Yw.create = function A(B) {
    return this.$type.create(B)
  };
  Yw.encode = function A(B, Q) {
    return this.$type.encode(B, Q)
  };
  Yw.encodeDelimited = function A(B, Q) {
    return this.$type.encodeDelimited(B, Q)
  };
  Yw.decode = function A(B) {
    return this.$type.decode(B)
  };
  Yw.decodeDelimited = function A(B) {
    return this.$type.decodeDelimited(B)
  };
  Yw.verify = function A(B) {
    return this.$type.verify(B)
  };
  Yw.fromObject = function A(B) {
    return this.$type.fromObject(B)
  };
  Yw.toObject = function A(B, Q) {
    return this.$type.toObject(B, Q)
  };
  Yw.prototype.toJSON = function A() {
    return this.$type.toObject(this, X36.toJSONOptions)
  }
})
// @from(Start 4772189, End 4774589)
ah1 = z((l$8, Sj0) => {
  Sj0.exports = K36;
  var V36 = cC(),
    SN = r_(),
    Pj0 = RI();

  function C36(A) {
    return "missing required '" + A.name + "'"
  }

  function K36(A) {
    var B = Pj0.codegen(["r", "l"], A.name + "$decode")("if(!(r instanceof Reader))")("r=Reader.create(r)")("var c=l===undefined?r.len:r.pos+l,m=new this.ctor" + (A.fieldsArray.filter(function(Y) {
      return Y.map
    }).length ? ",k,value" : ""))("while(r.pos<c){")("var t=r.uint32()");
    if (A.group) B("if((t&7)===4)")("break");
    B("switch(t>>>3){");
    var Q = 0;
    for (; Q < A.fieldsArray.length; ++Q) {
      var I = A._fieldsArray[Q].resolve(),
        G = I.resolvedType instanceof V36 ? "int32" : I.type,
        Z = "m" + Pj0.safeProp(I.name);
      if (B("case %i: {", I.id), I.map) {
        if (B("if(%s===util.emptyObject)", Z)("%s={}", Z)("var c2 = r.uint32()+r.pos"), SN.defaults[I.keyType] !== void 0) B("k=%j", SN.defaults[I.keyType]);
        else B("k=null");
        if (SN.defaults[G] !== void 0) B("value=%j", SN.defaults[G]);
        else B("value=null");
        if (B("while(r.pos<c2){")("var tag2=r.uint32()")("switch(tag2>>>3){")("case 1: k=r.%s(); break", I.keyType)("case 2:"), SN.basic[G] === void 0) B("value=types[%i].decode(r,r.uint32())", Q);
        else B("value=r.%s()", G);
        if (B("break")("default:")("r.skipType(tag2&7)")("break")("}")("}"), SN.long[I.keyType] !== void 0) B('%s[typeof k==="object"?util.longToHash(k):k]=value', Z);
        else B("%s[k]=value", Z)
      } else if (I.repeated) {
        if (B("if(!(%s&&%s.length))", Z, Z)("%s=[]", Z), SN.packed[G] !== void 0) B("if((t&7)===2){")("var c2=r.uint32()+r.pos")("while(r.pos<c2)")("%s.push(r.%s())", Z, G)("}else");
        if (SN.basic[G] === void 0) B(I.resolvedType.group ? "%s.push(types[%i].decode(r))" : "%s.push(types[%i].decode(r,r.uint32()))", Z, Q);
        else B("%s.push(r.%s())", Z, G)
      } else if (SN.basic[G] === void 0) B(I.resolvedType.group ? "%s=types[%i].decode(r)" : "%s=types[%i].decode(r,r.uint32())", Z, Q);
      else B("%s=r.%s()", Z, G);
      B("break")("}")
    }
    B("default:")("r.skipType(t&7)")("break")("}")("}");
    for (Q = 0; Q < A._fieldsArray.length; ++Q) {
      var D = A._fieldsArray[Q];
      if (D.required) B("if(!m.hasOwnProperty(%j))", D.name)("throw util.ProtocolError(%j,{instance:m})", C36(D))
    }
    return B("return m")
  }
})
// @from(Start 4774595, End 4777957)
oh1 = z((i$8, _j0) => {
  _j0.exports = w36;
  var H36 = cC(),
    sh1 = RI();

  function yX(A, B) {
    return A.name + ": " + B + (A.repeated && B !== "array" ? "[]" : A.map && B !== "object" ? "{k:" + A.keyType + "}" : "") + " expected"
  }

  function rh1(A, B, Q, I) {
    if (B.resolvedType)
      if (B.resolvedType instanceof H36) {
        A("switch(%s){", I)("default:")("return%j", yX(B, "enum value"));
        for (var G = Object.keys(B.resolvedType.values), Z = 0; Z < G.length; ++Z) A("case %i:", B.resolvedType.values[G[Z]]);
        A("break")("}")
      } else A("{")("var e=types[%i].verify(%s);", Q, I)("if(e)")("return%j+e", B.name + ".")("}");
    else switch (B.type) {
      case "int32":
      case "uint32":
      case "sint32":
      case "fixed32":
      case "sfixed32":
        A("if(!util.isInteger(%s))", I)("return%j", yX(B, "integer"));
        break;
      case "int64":
      case "uint64":
      case "sint64":
      case "fixed64":
      case "sfixed64":
        A("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))", I, I, I, I)("return%j", yX(B, "integer|Long"));
        break;
      case "float":
      case "double":
        A('if(typeof %s!=="number")', I)("return%j", yX(B, "number"));
        break;
      case "bool":
        A('if(typeof %s!=="boolean")', I)("return%j", yX(B, "boolean"));
        break;
      case "string":
        A("if(!util.isString(%s))", I)("return%j", yX(B, "string"));
        break;
      case "bytes":
        A('if(!(%s&&typeof %s.length==="number"||util.isString(%s)))', I, I, I)("return%j", yX(B, "buffer"));
        break
    }
    return A
  }

  function z36(A, B, Q) {
    switch (B.keyType) {
      case "int32":
      case "uint32":
      case "sint32":
      case "fixed32":
      case "sfixed32":
        A("if(!util.key32Re.test(%s))", Q)("return%j", yX(B, "integer key"));
        break;
      case "int64":
      case "uint64":
      case "sint64":
      case "fixed64":
      case "sfixed64":
        A("if(!util.key64Re.test(%s))", Q)("return%j", yX(B, "integer|Long key"));
        break;
      case "bool":
        A("if(!util.key2Re.test(%s))", Q)("return%j", yX(B, "boolean key"));
        break
    }
    return A
  }

  function w36(A) {
    var B = sh1.codegen(["m"], A.name + "$verify")('if(typeof m!=="object"||m===null)')("return%j", "object expected"),
      Q = A.oneofsArray,
      I = {};
    if (Q.length) B("var p={}");
    for (var G = 0; G < A.fieldsArray.length; ++G) {
      var Z = A._fieldsArray[G].resolve(),
        D = "m" + sh1.safeProp(Z.name);
      if (Z.optional) B("if(%s!=null&&m.hasOwnProperty(%j)){", D, Z.name);
      if (Z.map) B("if(!util.isObject(%s))", D)("return%j", yX(Z, "object"))("var k=Object.keys(%s)", D)("for(var i=0;i<k.length;++i){"), z36(B, Z, "k[i]"), rh1(B, Z, G, D + "[k[i]]")("}");
      else if (Z.repeated) B("if(!Array.isArray(%s))", D)("return%j", yX(Z, "array"))("for(var i=0;i<%s.length;++i){", D), rh1(B, Z, G, D + "[i]")("}");
      else {
        if (Z.partOf) {
          var Y = sh1.safeProp(Z.partOf.name);
          if (I[Z.partOf.name] === 1) B("if(p%s===1)", Y)("return%j", Z.partOf.name + ": multiple values");
          I[Z.partOf.name] = 1, B("p%s=1", Y)
        }
        rh1(B, Z, G, D)
      }
      if (Z.optional) B("}")
    }
    return B("return null")
  }
})
// @from(Start 4777963, End 4784449)
Am1 = z((yj0) => {
  var jj0 = yj0,
    Gr = cC(),
    Ww = RI();

  function th1(A, B, Q, I) {
    var G = !1;
    if (B.resolvedType)
      if (B.resolvedType instanceof Gr) {
        A("switch(d%s){", I);
        for (var Z = B.resolvedType.values, D = Object.keys(Z), Y = 0; Y < D.length; ++Y) {
          if (Z[D[Y]] === B.typeDefault && !G) {
            if (A("default:")('if(typeof(d%s)==="number"){m%s=d%s;break}', I, I, I), !B.repeated) A("break");
            G = !0
          }
          A("case%j:", D[Y])("case %i:", Z[D[Y]])("m%s=%j", I, Z[D[Y]])("break")
        }
        A("}")
      } else A('if(typeof d%s!=="object")', I)("throw TypeError(%j)", B.fullName + ": object expected")("m%s=types[%i].fromObject(d%s)", I, Q, I);
    else {
      var W = !1;
      switch (B.type) {
        case "double":
        case "float":
          A("m%s=Number(d%s)", I, I);
          break;
        case "uint32":
        case "fixed32":
          A("m%s=d%s>>>0", I, I);
          break;
        case "int32":
        case "sint32":
        case "sfixed32":
          A("m%s=d%s|0", I, I);
          break;
        case "uint64":
          W = !0;
        case "int64":
        case "sint64":
        case "fixed64":
        case "sfixed64":
          A("if(util.Long)")("(m%s=util.Long.fromValue(d%s)).unsigned=%j", I, I, W)('else if(typeof d%s==="string")', I)("m%s=parseInt(d%s,10)", I, I)('else if(typeof d%s==="number")', I)("m%s=d%s", I, I)('else if(typeof d%s==="object")', I)("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)", I, I, I, W ? "true" : "");
          break;
        case "bytes":
          A('if(typeof d%s==="string")', I)("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)", I, I, I)("else if(d%s.length >= 0)", I)("m%s=d%s", I, I);
          break;
        case "string":
          A("m%s=String(d%s)", I, I);
          break;
        case "bool":
          A("m%s=Boolean(d%s)", I, I);
          break
      }
    }
    return A
  }
  jj0.fromObject = function A(B) {
    var Q = B.fieldsArray,
      I = Ww.codegen(["d"], B.name + "$fromObject")("if(d instanceof this.ctor)")("return d");
    if (!Q.length) return I("return new this.ctor");
    I("var m=new this.ctor");
    for (var G = 0; G < Q.length; ++G) {
      var Z = Q[G].resolve(),
        D = Ww.safeProp(Z.name);
      if (Z.map) I("if(d%s){", D)('if(typeof d%s!=="object")', D)("throw TypeError(%j)", Z.fullName + ": object expected")("m%s={}", D)("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){", D), th1(I, Z, G, D + "[ks[i]]")("}")("}");
      else if (Z.repeated) I("if(d%s){", D)("if(!Array.isArray(d%s))", D)("throw TypeError(%j)", Z.fullName + ": array expected")("m%s=[]", D)("for(var i=0;i<d%s.length;++i){", D), th1(I, Z, G, D + "[i]")("}")("}");
      else {
        if (!(Z.resolvedType instanceof Gr)) I("if(d%s!=null){", D);
        if (th1(I, Z, G, D), !(Z.resolvedType instanceof Gr)) I("}")
      }
    }
    return I("return m")
  };

  function eh1(A, B, Q, I) {
    if (B.resolvedType)
      if (B.resolvedType instanceof Gr) A("d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s", I, Q, I, I, Q, I, I);
      else A("d%s=types[%i].toObject(m%s,o)", I, Q, I);
    else {
      var G = !1;
      switch (B.type) {
        case "double":
        case "float":
          A("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s", I, I, I, I);
          break;
        case "uint64":
          G = !0;
        case "int64":
        case "sint64":
        case "fixed64":
        case "sfixed64":
          A('if(typeof m%s==="number")', I)("d%s=o.longs===String?String(m%s):m%s", I, I, I)("else")("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s", I, I, I, I, G ? "true" : "", I);
          break;
        case "bytes":
          A("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s", I, I, I, I, I);
          break;
        default:
          A("d%s=m%s", I, I);
          break
      }
    }
    return A
  }
  jj0.toObject = function A(B) {
    var Q = B.fieldsArray.slice().sort(Ww.compareFieldsById);
    if (!Q.length) return Ww.codegen()("return {}");
    var I = Ww.codegen(["m", "o"], B.name + "$toObject")("if(!o)")("o={}")("var d={}"),
      G = [],
      Z = [],
      D = [],
      Y = 0;
    for (; Y < Q.length; ++Y)
      if (!Q[Y].partOf)(Q[Y].resolve().repeated ? G : Q[Y].map ? Z : D).push(Q[Y]);
    if (G.length) {
      I("if(o.arrays||o.defaults){");
      for (Y = 0; Y < G.length; ++Y) I("d%s=[]", Ww.safeProp(G[Y].name));
      I("}")
    }
    if (Z.length) {
      I("if(o.objects||o.defaults){");
      for (Y = 0; Y < Z.length; ++Y) I("d%s={}", Ww.safeProp(Z[Y].name));
      I("}")
    }
    if (D.length) {
      I("if(o.defaults){");
      for (Y = 0; Y < D.length; ++Y) {
        var W = D[Y],
          J = Ww.safeProp(W.name);
        if (W.resolvedType instanceof Gr) I("d%s=o.enums===String?%j:%j", J, W.resolvedType.valuesById[W.typeDefault], W.typeDefault);
        else if (W.long) I("if(util.Long){")("var n=new util.Long(%i,%i,%j)", W.typeDefault.low, W.typeDefault.high, W.typeDefault.unsigned)("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n", J)("}else")("d%s=o.longs===String?%j:%i", J, W.typeDefault.toString(), W.typeDefault.toNumber());
        else if (W.bytes) {
          var F = "[" + Array.prototype.slice.call(W.typeDefault).join(",") + "]";
          I("if(o.bytes===String)d%s=%j", J, String.fromCharCode.apply(String, W.typeDefault))("else{")("d%s=%s", J, F)("if(o.bytes!==Array)d%s=util.newBuffer(d%s)", J, J)("}")
        } else I("d%s=%j", J, W.typeDefault)
      }
      I("}")
    }
    var X = !1;
    for (Y = 0; Y < Q.length; ++Y) {
      var W = Q[Y],
        V = B._fieldsArray.indexOf(W),
        J = Ww.safeProp(W.name);
      if (W.map) {
        if (!X) X = !0, I("var ks2");
        I("if(m%s&&(ks2=Object.keys(m%s)).length){", J, J)("d%s={}", J)("for(var j=0;j<ks2.length;++j){"), eh1(I, W, V, J + "[ks2[j]]")("}")
      } else if (W.repeated) I("if(m%s&&m%s.length){", J, J)("d%s=[]", J)("for(var j=0;j<m%s.length;++j){", J), eh1(I, W, V, J + "[j]")("}");
      else if (I("if(m%s!=null&&m.hasOwnProperty(%j)){", J, W.name), eh1(I, W, V, J), W.partOf) I("if(o.oneofs)")("d%s=%j", Ww.safeProp(W.partOf.name), W.name);
      I("}")
    }
    return I("return d")
  }
})
// @from(Start 4784455, End 4785704)
Bm1 = z((kj0) => {
  var E36 = kj0,
    U36 = HD1();
  E36[".google.protobuf.Any"] = {
    fromObject: function(A) {
      if (A && A["@type"]) {
        var B = A["@type"].substring(A["@type"].lastIndexOf("/") + 1),
          Q = this.lookup(B);
        if (Q) {
          var I = A["@type"].charAt(0) === "." ? A["@type"].slice(1) : A["@type"];
          if (I.indexOf("/") === -1) I = "/" + I;
          return this.create({
            type_url: I,
            value: Q.encode(Q.fromObject(A)).finish()
          })
        }
      }
      return this.fromObject(A)
    },
    toObject: function(A, B) {
      var Q = "type.googleapis.com/",
        I = "",
        G = "";
      if (B && B.json && A.type_url && A.value) {
        G = A.type_url.substring(A.type_url.lastIndexOf("/") + 1), I = A.type_url.substring(0, A.type_url.lastIndexOf("/") + 1);
        var Z = this.lookup(G);
        if (Z) A = Z.decode(A.value)
      }
      if (!(A instanceof this.ctor) && A instanceof U36) {
        var D = A.$type.toObject(A, B),
          Y = A.$type.fullName[0] === "." ? A.$type.fullName.slice(1) : A.$type.fullName;
        if (I === "") I = Q;
        return G = I + Y, D["@type"] = G, D
      }
      return this.toObject(A, B)
    }
  }
})
// @from(Start 4785710, End 4793643)
ED1 = z((s$8, fj0) => {
  fj0.exports = ZB;
  var lC = Bh();
  ((ZB.prototype = Object.create(lC.prototype)).constructor = ZB).className = "Type";
  var N36 = cC(),
    Gm1 = tg(),
    zD1 = VR(),
    $36 = VD1(),
    q36 = KD1(),
    Qm1 = HD1(),
    Im1 = xZ1(),
    M36 = yZ1(),
    _Z = RI(),
    L36 = Zm1(),
    R36 = ah1(),
    O36 = oh1(),
    xj0 = Am1(),
    T36 = Bm1();

  function ZB(A, B) {
    lC.call(this, A, B), this.fields = {}, this.oneofs = void 0, this.extensions = void 0, this.reserved = void 0, this.group = void 0, this._fieldsById = null, this._fieldsArray = null, this._oneofsArray = null, this._ctor = null
  }
  Object.defineProperties(ZB.prototype, {
    fieldsById: {
      get: function() {
        if (this._fieldsById) return this._fieldsById;
        this._fieldsById = {};
        for (var A = Object.keys(this.fields), B = 0; B < A.length; ++B) {
          var Q = this.fields[A[B]],
            I = Q.id;
          if (this._fieldsById[I]) throw Error("duplicate id " + I + " in " + this);
          this._fieldsById[I] = Q
        }
        return this._fieldsById
      }
    },
    fieldsArray: {
      get: function() {
        return this._fieldsArray || (this._fieldsArray = _Z.toArray(this.fields))
      }
    },
    oneofsArray: {
      get: function() {
        return this._oneofsArray || (this._oneofsArray = _Z.toArray(this.oneofs))
      }
    },
    ctor: {
      get: function() {
        return this._ctor || (this.ctor = ZB.generateConstructor(this)())
      },
      set: function(A) {
        var B = A.prototype;
        if (!(B instanceof Qm1))(A.prototype = new Qm1).constructor = A, _Z.merge(A.prototype, B);
        A.$type = A.prototype.$type = this, _Z.merge(A, Qm1, !0), this._ctor = A;
        var Q = 0;
        for (; Q < this.fieldsArray.length; ++Q) this._fieldsArray[Q].resolve();
        var I = {};
        for (Q = 0; Q < this.oneofsArray.length; ++Q) I[this._oneofsArray[Q].resolve().name] = {
          get: _Z.oneOfGetter(this._oneofsArray[Q].oneof),
          set: _Z.oneOfSetter(this._oneofsArray[Q].oneof)
        };
        if (Q) Object.defineProperties(A.prototype, I)
      }
    }
  });
  ZB.generateConstructor = function A(B) {
    var Q = _Z.codegen(["p"], B.name);
    for (var I = 0, G; I < B.fieldsArray.length; ++I)
      if ((G = B._fieldsArray[I]).map) Q("this%s={}", _Z.safeProp(G.name));
      else if (G.repeated) Q("this%s=[]", _Z.safeProp(G.name));
    return Q("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)")("this[ks[i]]=p[ks[i]]")
  };

  function wD1(A) {
    return A._fieldsById = A._fieldsArray = A._oneofsArray = null, delete A.encode, delete A.decode, delete A.verify, A
  }
  ZB.fromJSON = function A(B, Q) {
    var I = new ZB(B, Q.options);
    I.extensions = Q.extensions, I.reserved = Q.reserved;
    var G = Object.keys(Q.fields),
      Z = 0;
    for (; Z < G.length; ++Z) I.add((typeof Q.fields[G[Z]].keyType !== "undefined" ? $36.fromJSON : zD1.fromJSON)(G[Z], Q.fields[G[Z]]));
    if (Q.oneofs)
      for (G = Object.keys(Q.oneofs), Z = 0; Z < G.length; ++Z) I.add(Gm1.fromJSON(G[Z], Q.oneofs[G[Z]]));
    if (Q.nested)
      for (G = Object.keys(Q.nested), Z = 0; Z < G.length; ++Z) {
        var D = Q.nested[G[Z]];
        I.add((D.id !== void 0 ? zD1.fromJSON : D.fields !== void 0 ? ZB.fromJSON : D.values !== void 0 ? N36.fromJSON : D.methods !== void 0 ? q36.fromJSON : lC.fromJSON)(G[Z], D))
      }
    if (Q.extensions && Q.extensions.length) I.extensions = Q.extensions;
    if (Q.reserved && Q.reserved.length) I.reserved = Q.reserved;
    if (Q.group) I.group = !0;
    if (Q.comment) I.comment = Q.comment;
    return I
  };
  ZB.prototype.toJSON = function A(B) {
    var Q = lC.prototype.toJSON.call(this, B),
      I = B ? Boolean(B.keepComments) : !1;
    return _Z.toObject(["options", Q && Q.options || void 0, "oneofs", lC.arrayToJSON(this.oneofsArray, B), "fields", lC.arrayToJSON(this.fieldsArray.filter(function(G) {
      return !G.declaringField
    }), B) || {}, "extensions", this.extensions && this.extensions.length ? this.extensions : void 0, "reserved", this.reserved && this.reserved.length ? this.reserved : void 0, "group", this.group || void 0, "nested", Q && Q.nested || void 0, "comment", I ? this.comment : void 0])
  };
  ZB.prototype.resolveAll = function A() {
    var B = this.fieldsArray,
      Q = 0;
    while (Q < B.length) B[Q++].resolve();
    var I = this.oneofsArray;
    Q = 0;
    while (Q < I.length) I[Q++].resolve();
    return lC.prototype.resolveAll.call(this)
  };
  ZB.prototype.get = function A(B) {
    return this.fields[B] || this.oneofs && this.oneofs[B] || this.nested && this.nested[B] || null
  };
  ZB.prototype.add = function A(B) {
    if (this.get(B.name)) throw Error("duplicate name '" + B.name + "' in " + this);
    if (B instanceof zD1 && B.extend === void 0) {
      if (this._fieldsById ? this._fieldsById[B.id] : this.fieldsById[B.id]) throw Error("duplicate id " + B.id + " in " + this);
      if (this.isReservedId(B.id)) throw Error("id " + B.id + " is reserved in " + this);
      if (this.isReservedName(B.name)) throw Error("name '" + B.name + "' is reserved in " + this);
      if (B.parent) B.parent.remove(B);
      return this.fields[B.name] = B, B.message = this, B.onAdd(this), wD1(this)
    }
    if (B instanceof Gm1) {
      if (!this.oneofs) this.oneofs = {};
      return this.oneofs[B.name] = B, B.onAdd(this), wD1(this)
    }
    return lC.prototype.add.call(this, B)
  };
  ZB.prototype.remove = function A(B) {
    if (B instanceof zD1 && B.extend === void 0) {
      if (!this.fields || this.fields[B.name] !== B) throw Error(B + " is not a member of " + this);
      return delete this.fields[B.name], B.parent = null, B.onRemove(this), wD1(this)
    }
    if (B instanceof Gm1) {
      if (!this.oneofs || this.oneofs[B.name] !== B) throw Error(B + " is not a member of " + this);
      return delete this.oneofs[B.name], B.parent = null, B.onRemove(this), wD1(this)
    }
    return lC.prototype.remove.call(this, B)
  };
  ZB.prototype.isReservedId = function A(B) {
    return lC.isReservedId(this.reserved, B)
  };
  ZB.prototype.isReservedName = function A(B) {
    return lC.isReservedName(this.reserved, B)
  };
  ZB.prototype.create = function A(B) {
    return new this.ctor(B)
  };
  ZB.prototype.setup = function A() {
    var B = this.fullName,
      Q = [];
    for (var I = 0; I < this.fieldsArray.length; ++I) Q.push(this._fieldsArray[I].resolve().resolvedType);
    this.encode = L36(this)({
      Writer: M36,
      types: Q,
      util: _Z
    }), this.decode = R36(this)({
      Reader: Im1,
      types: Q,
      util: _Z
    }), this.verify = O36(this)({
      types: Q,
      util: _Z
    }), this.fromObject = xj0.fromObject(this)({
      types: Q,
      util: _Z
    }), this.toObject = xj0.toObject(this)({
      types: Q,
      util: _Z
    });
    var G = T36[B];
    if (G) {
      var Z = Object.create(this);
      Z.fromObject = this.fromObject, this.fromObject = G.fromObject.bind(Z), Z.toObject = this.toObject, this.toObject = G.toObject.bind(Z)
    }
    return this
  };
  ZB.prototype.encode = function A(B, Q) {
    return this.setup().encode(B, Q)
  };
  ZB.prototype.encodeDelimited = function A(B, Q) {
    return this.encode(B, Q && Q.len ? Q.fork() : Q).ldelim()
  };
  ZB.prototype.decode = function A(B, Q) {
    return this.setup().decode(B, Q)
  };
  ZB.prototype.decodeDelimited = function A(B) {
    if (!(B instanceof Im1)) B = Im1.create(B);
    return this.decode(B, B.uint32())
  };
  ZB.prototype.verify = function A(B) {
    return this.setup().verify(B)
  };
  ZB.prototype.fromObject = function A(B) {
    return this.setup().fromObject(B)
  };
  ZB.prototype.toObject = function A(B, Q) {
    return this.setup().toObject(B, Q)
  };
  ZB.d = function A(B) {
    return function Q(I) {
      _Z.decorateType(I, B)
    }
  }
})
// @from(Start 4793649, End 4798275)
$D1 = z((r$8, mj0) => {
  mj0.exports = NJ;
  var ND1 = Bh();
  ((NJ.prototype = Object.create(ND1.prototype)).constructor = NJ).className = "Root";
  var Ym1 = VR(),
    bj0 = cC(),
    P36 = tg(),
    KR = RI(),
    gj0, Dm1, Zr;

  function NJ(A) {
    ND1.call(this, "", A), this.deferred = [], this.files = []
  }
  NJ.fromJSON = function A(B, Q) {
    if (!Q) Q = new NJ;
    if (B.options) Q.setOptions(B.options);
    return Q.addJSON(B.nested)
  };
  NJ.prototype.resolvePath = KR.path.resolve;
  NJ.prototype.fetch = KR.fetch;

  function hj0() {}
  NJ.prototype.load = function A(B, Q, I) {
    if (typeof Q === "function") I = Q, Q = void 0;
    var G = this;
    if (!I) return KR.asPromise(A, G, B, Q);
    var Z = I === hj0;

    function D(C, K) {
      if (!I) return;
      if (Z) throw C;
      var E = I;
      I = null, E(C, K)
    }

    function Y(C) {
      var K = C.lastIndexOf("google/protobuf/");
      if (K > -1) {
        var E = C.substring(K);
        if (E in Zr) return E
      }
      return null
    }

    function W(C, K) {
      try {
        if (KR.isString(K) && K.charAt(0) === "{") K = JSON.parse(K);
        if (!KR.isString(K)) G.setOptions(K.options).addJSON(K.nested);
        else {
          Dm1.filename = C;
          var E = Dm1(K, G, Q),
            N, q = 0;
          if (E.imports) {
            for (; q < E.imports.length; ++q)
              if (N = Y(E.imports[q]) || G.resolvePath(C, E.imports[q])) J(N)
          }
          if (E.weakImports) {
            for (q = 0; q < E.weakImports.length; ++q)
              if (N = Y(E.weakImports[q]) || G.resolvePath(C, E.weakImports[q])) J(N, !0)
          }
        }
      } catch (O) {
        D(O)
      }
      if (!Z && !F) D(null, G)
    }

    function J(C, K) {
      if (C = Y(C) || C, G.files.indexOf(C) > -1) return;
      if (G.files.push(C), C in Zr) {
        if (Z) W(C, Zr[C]);
        else ++F, setTimeout(function() {
          --F, W(C, Zr[C])
        });
        return
      }
      if (Z) {
        var E;
        try {
          E = KR.fs.readFileSync(C).toString("utf8")
        } catch (N) {
          if (!K) D(N);
          return
        }
        W(C, E)
      } else ++F, G.fetch(C, function(N, q) {
        if (--F, !I) return;
        if (N) {
          if (!K) D(N);
          else if (!F) D(null, G);
          return
        }
        W(C, q)
      })
    }
    var F = 0;
    if (KR.isString(B)) B = [B];
    for (var X = 0, V; X < B.length; ++X)
      if (V = G.resolvePath("", B[X])) J(V);
    if (Z) return G;
    if (!F) D(null, G);
    return
  };
  NJ.prototype.loadSync = function A(B, Q) {
    if (!KR.isNode) throw Error("not supported");
    return this.load(B, Q, hj0)
  };
  NJ.prototype.resolveAll = function A() {
    if (this.deferred.length) throw Error("unresolvable extensions: " + this.deferred.map(function(B) {
      return "'extend " + B.extend + "' in " + B.parent.fullName
    }).join(", "));
    return ND1.prototype.resolveAll.call(this)
  };
  var UD1 = /^[A-Z]/;

  function vj0(A, B) {
    var Q = B.parent.lookup(B.extend);
    if (Q) {
      var I = new Ym1(B.fullName, B.id, B.type, B.rule, void 0, B.options);
      if (Q.get(I.name)) return !0;
      return I.declaringField = B, B.extensionField = I, Q.add(I), !0
    }
    return !1
  }
  NJ.prototype._handleAdd = function A(B) {
    if (B instanceof Ym1) {
      if (B.extend !== void 0 && !B.extensionField) {
        if (!vj0(this, B)) this.deferred.push(B)
      }
    } else if (B instanceof bj0) {
      if (UD1.test(B.name)) B.parent[B.name] = B.values
    } else if (!(B instanceof P36)) {
      if (B instanceof gj0)
        for (var Q = 0; Q < this.deferred.length;)
          if (vj0(this, this.deferred[Q])) this.deferred.splice(Q, 1);
          else ++Q;
      for (var I = 0; I < B.nestedArray.length; ++I) this._handleAdd(B._nestedArray[I]);
      if (UD1.test(B.name)) B.parent[B.name] = B
    }
  };
  NJ.prototype._handleRemove = function A(B) {
    if (B instanceof Ym1) {
      if (B.extend !== void 0)
        if (B.extensionField) B.extensionField.parent.remove(B.extensionField), B.extensionField = null;
        else {
          var Q = this.deferred.indexOf(B);
          if (Q > -1) this.deferred.splice(Q, 1)
        }
    } else if (B instanceof bj0) {
      if (UD1.test(B.name)) delete B.parent[B.name]
    } else if (B instanceof ND1) {
      for (var I = 0; I < B.nestedArray.length; ++I) this._handleRemove(B._nestedArray[I]);
      if (UD1.test(B.name)) delete B.parent[B.name]
    }
  };
  NJ._configure = function(A, B, Q) {
    gj0 = A, Dm1 = B, Zr = Q
  }
})
// @from(Start 4798281, End 4801164)
RI = z((o$8, uj0) => {
  var SQ = uj0.exports = Iw(),
    dj0 = hg1(),
    Wm1, Jm1;
  SQ.codegen = Dj0();
  SQ.fetch = Wj0();
  SQ.path = Xj0();
  SQ.fs = SQ.inquire("fs");
  SQ.toArray = function A(B) {
    if (B) {
      var Q = Object.keys(B),
        I = new Array(Q.length),
        G = 0;
      while (G < Q.length) I[G] = B[Q[G++]];
      return I
    }
    return []
  };
  SQ.toObject = function A(B) {
    var Q = {},
      I = 0;
    while (I < B.length) {
      var G = B[I++],
        Z = B[I++];
      if (Z !== void 0) Q[G] = Z
    }
    return Q
  };
  var S36 = /\\/g,
    _36 = /"/g;
  SQ.isReserved = function A(B) {
    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(B)
  };
  SQ.safeProp = function A(B) {
    if (!/^[$\w_]+$/.test(B) || SQ.isReserved(B)) return '["' + B.replace(S36, "\\\\").replace(_36, "\\\"") + '"]';
    return "." + B
  };
  SQ.ucFirst = function A(B) {
    return B.charAt(0).toUpperCase() + B.substring(1)
  };
  var j36 = /_([a-z])/g;
  SQ.camelCase = function A(B) {
    return B.substring(0, 1) + B.substring(1).replace(j36, function(Q, I) {
      return I.toUpperCase()
    })
  };
  SQ.compareFieldsById = function A(B, Q) {
    return B.id - Q.id
  };
  SQ.decorateType = function A(B, Q) {
    if (B.$type) {
      if (Q && B.$type.name !== Q) SQ.decorateRoot.remove(B.$type), B.$type.name = Q, SQ.decorateRoot.add(B.$type);
      return B.$type
    }
    if (!Wm1) Wm1 = ED1();
    var I = new Wm1(Q || B.name);
    return SQ.decorateRoot.add(I), I.ctor = B, Object.defineProperty(B, "$type", {
      value: I,
      enumerable: !1
    }), Object.defineProperty(B.prototype, "$type", {
      value: I,
      enumerable: !1
    }), I
  };
  var y36 = 0;
  SQ.decorateEnum = function A(B) {
    if (B.$type) return B.$type;
    if (!Jm1) Jm1 = cC();
    var Q = new Jm1("Enum" + y36++, B);
    return SQ.decorateRoot.add(Q), Object.defineProperty(B, "$type", {
      value: Q,
      enumerable: !1
    }), Q
  };
  SQ.setProperty = function A(B, Q, I) {
    function G(Z, D, Y) {
      var W = D.shift();
      if (W === "__proto__" || W === "prototype") return Z;
      if (D.length > 0) Z[W] = G(Z[W] || {}, D, Y);
      else {
        var J = Z[W];
        if (J) Y = [].concat(J).concat(Y);
        Z[W] = Y
      }
      return Z
    }
    if (typeof B !== "object") throw TypeError("dst must be an object");
    if (!Q) throw TypeError("path must be specified");
    return Q = Q.split("."), G(B, Q, I)
  };
  Object.defineProperty(SQ, "decorateRoot", {
    get: function() {
      return dj0.decorated || (dj0.decorated = new($D1()))
    }
  })
})
// @from(Start 4801170, End 4803700)
o_ = z((t$8, pj0) => {
  pj0.exports = $J;
  $J.className = "ReflectionObject";
  var qD1 = RI(),
    MD1;

  function $J(A, B) {
    if (!qD1.isString(A)) throw TypeError("name must be a string");
    if (B && !qD1.isObject(B)) throw TypeError("options must be an object");
    this.options = B, this.parsedOptions = null, this.name = A, this.parent = null, this.resolved = !1, this.comment = null, this.filename = null
  }
  Object.defineProperties($J.prototype, {
    root: {
      get: function() {
        var A = this;
        while (A.parent !== null) A = A.parent;
        return A
      }
    },
    fullName: {
      get: function() {
        var A = [this.name],
          B = this.parent;
        while (B) A.unshift(B.name), B = B.parent;
        return A.join(".")
      }
    }
  });
  $J.prototype.toJSON = function A() {
    throw Error()
  };
  $J.prototype.onAdd = function A(B) {
    if (this.parent && this.parent !== B) this.parent.remove(this);
    this.parent = B, this.resolved = !1;
    var Q = B.root;
    if (Q instanceof MD1) Q._handleAdd(this)
  };
  $J.prototype.onRemove = function A(B) {
    var Q = B.root;
    if (Q instanceof MD1) Q._handleRemove(this);
    this.parent = null, this.resolved = !1
  };
  $J.prototype.resolve = function A() {
    if (this.resolved) return this;
    if (this.root instanceof MD1) this.resolved = !0;
    return this
  };
  $J.prototype.getOption = function A(B) {
    if (this.options) return this.options[B];
    return
  };
  $J.prototype.setOption = function A(B, Q, I) {
    if (!I || !this.options || this.options[B] === void 0)(this.options || (this.options = {}))[B] = Q;
    return this
  };
  $J.prototype.setParsedOption = function A(B, Q, I) {
    if (!this.parsedOptions) this.parsedOptions = [];
    var G = this.parsedOptions;
    if (I) {
      var Z = G.find(function(W) {
        return Object.prototype.hasOwnProperty.call(W, B)
      });
      if (Z) {
        var D = Z[B];
        qD1.setProperty(D, I, Q)
      } else Z = {}, Z[B] = qD1.setProperty({}, I, Q), G.push(Z)
    } else {
      var Y = {};
      Y[B] = Q, G.push(Y)
    }
    return this
  };
  $J.prototype.setOptions = function A(B, Q) {
    if (B)
      for (var I = Object.keys(B), G = 0; G < I.length; ++G) this.setOption(I[G], B[I[G]], Q);
    return this
  };
  $J.prototype.toString = function A() {
    var B = this.constructor.className,
      Q = this.fullName;
    if (Q.length) return B + " " + Q;
    return B
  };
  $J._configure = function(A) {
    MD1 = A
  }
})
// @from(Start 4803706, End 4806271)
cC = z((e$8, ij0) => {
  ij0.exports = Jw;
  var cj0 = o_();
  ((Jw.prototype = Object.create(cj0.prototype)).constructor = Jw).className = "Enum";
  var lj0 = Bh(),
    LD1 = RI();

  function Jw(A, B, Q, I, G, Z) {
    if (cj0.call(this, A, Q), B && typeof B !== "object") throw TypeError("values must be an object");
    if (this.valuesById = {}, this.values = Object.create(this.valuesById), this.comment = I, this.comments = G || {}, this.valuesOptions = Z, this.reserved = void 0, B) {
      for (var D = Object.keys(B), Y = 0; Y < D.length; ++Y)
        if (typeof B[D[Y]] === "number") this.valuesById[this.values[D[Y]] = B[D[Y]]] = D[Y]
    }
  }
  Jw.fromJSON = function A(B, Q) {
    var I = new Jw(B, Q.values, Q.options, Q.comment, Q.comments);
    return I.reserved = Q.reserved, I
  };
  Jw.prototype.toJSON = function A(B) {
    var Q = B ? Boolean(B.keepComments) : !1;
    return LD1.toObject(["options", this.options, "valuesOptions", this.valuesOptions, "values", this.values, "reserved", this.reserved && this.reserved.length ? this.reserved : void 0, "comment", Q ? this.comment : void 0, "comments", Q ? this.comments : void 0])
  };
  Jw.prototype.add = function A(B, Q, I, G) {
    if (!LD1.isString(B)) throw TypeError("name must be a string");
    if (!LD1.isInteger(Q)) throw TypeError("id must be an integer");
    if (this.values[B] !== void 0) throw Error("duplicate name '" + B + "' in " + this);
    if (this.isReservedId(Q)) throw Error("id " + Q + " is reserved in " + this);
    if (this.isReservedName(B)) throw Error("name '" + B + "' is reserved in " + this);
    if (this.valuesById[Q] !== void 0) {
      if (!(this.options && this.options.allow_alias)) throw Error("duplicate id " + Q + " in " + this);
      this.values[B] = Q
    } else this.valuesById[this.values[B] = Q] = B;
    if (G) {
      if (this.valuesOptions === void 0) this.valuesOptions = {};
      this.valuesOptions[B] = G || null
    }
    return this.comments[B] = I || null, this
  };
  Jw.prototype.remove = function A(B) {
    if (!LD1.isString(B)) throw TypeError("name must be a string");
    var Q = this.values[B];
    if (Q == null) throw Error("name '" + B + "' does not exist in " + this);
    if (delete this.valuesById[Q], delete this.values[B], delete this.comments[B], this.valuesOptions) delete this.valuesOptions[B];
    return this
  };
  Jw.prototype.isReservedId = function A(B) {
    return lj0.isReservedId(this.reserved, B)
  };
  Jw.prototype.isReservedName = function A(B) {
    return lj0.isReservedName(this.reserved, B)
  }
})
// @from(Start 4806277, End 4808145)
Zm1 = z((Aq8, aj0) => {
  aj0.exports = x36;
  var k36 = cC(),
    Fm1 = r_(),
    Xm1 = RI();

  function nj0(A, B, Q, I) {
    return B.resolvedType.group ? A("types[%i].encode(%s,w.uint32(%i)).uint32(%i)", Q, I, (B.id << 3 | 3) >>> 0, (B.id << 3 | 4) >>> 0) : A("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()", Q, I, (B.id << 3 | 2) >>> 0)
  }

  function x36(A) {
    var B = Xm1.codegen(["m", "w"], A.name + "$encode")("if(!w)")("w=Writer.create()"),
      Q, I, G = A.fieldsArray.slice().sort(Xm1.compareFieldsById);
    for (var Q = 0; Q < G.length; ++Q) {
      var Z = G[Q].resolve(),
        D = A._fieldsArray.indexOf(Z),
        Y = Z.resolvedType instanceof k36 ? "int32" : Z.type,
        W = Fm1.basic[Y];
      if (I = "m" + Xm1.safeProp(Z.name), Z.map) {
        if (B("if(%s!=null&&Object.hasOwnProperty.call(m,%j)){", I, Z.name)("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){", I)("w.uint32(%i).fork().uint32(%i).%s(ks[i])", (Z.id << 3 | 2) >>> 0, 8 | Fm1.mapKey[Z.keyType], Z.keyType), W === void 0) B("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()", D, I);
        else B(".uint32(%i).%s(%s[ks[i]]).ldelim()", 16 | W, Y, I);
        B("}")("}")
      } else if (Z.repeated) {
        if (B("if(%s!=null&&%s.length){", I, I), Z.packed && Fm1.packed[Y] !== void 0) B("w.uint32(%i).fork()", (Z.id << 3 | 2) >>> 0)("for(var i=0;i<%s.length;++i)", I)("w.%s(%s[i])", Y, I)("w.ldelim()");
        else if (B("for(var i=0;i<%s.length;++i)", I), W === void 0) nj0(B, Z, D, I + "[i]");
        else B("w.uint32(%i).%s(%s[i])", (Z.id << 3 | W) >>> 0, Y, I);
        B("}")
      } else {
        if (Z.optional) B("if(%s!=null&&Object.hasOwnProperty.call(m,%j))", I, Z.name);
        if (W === void 0) nj0(B, Z, D, I);
        else B("w.uint32(%i).%s(%s)", (Z.id << 3 | W) >>> 0, Y, I)
      }
    }
    return B("return w")
  }
})
// @from(Start 4808151, End 4809045)
rj0 = z((Bq8, sj0) => {
  var Q5 = sj0.exports = mg1();
  Q5.build = "light";

  function f36(A, B, Q) {
    if (typeof B === "function") Q = B, B = new Q5.Root;
    else if (!B) B = new Q5.Root;
    return B.load(A, Q)
  }
  Q5.load = f36;

  function v36(A, B) {
    if (!B) B = new Q5.Root;
    return B.loadSync(A)
  }
  Q5.loadSync = v36;
  Q5.encoder = Zm1();
  Q5.decoder = ah1();
  Q5.verifier = oh1();
  Q5.converter = Am1();
  Q5.ReflectionObject = o_();
  Q5.Namespace = Bh();
  Q5.Root = $D1();
  Q5.Enum = cC();
  Q5.Type = ED1();
  Q5.Field = VR();
  Q5.OneOf = tg();
  Q5.MapField = VD1();
  Q5.Service = KD1();
  Q5.Method = CD1();
  Q5.Message = HD1();
  Q5.wrappers = Bm1();
  Q5.types = r_();
  Q5.util = RI();
  Q5.ReflectionObject._configure(Q5.Root);
  Q5.Namespace._configure(Q5.Type, Q5.Service, Q5.Enum);
  Q5.Root._configure(Q5.Type);
  Q5.Field._configure(Q5.Type)
})
// @from(Start 4809051, End 4813438)
Cm1 = z((Qq8, ej0) => {
  ej0.exports = tj0;
  var Vm1 = /[\s{}=;:[\],'"()<>]/g,
    b36 = /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g,
    g36 = /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g,
    h36 = /^ *[*/]+ */,
    m36 = /^\s*\*?\/*/,
    d36 = /\n/g,
    u36 = /\s/,
    p36 = /\\(.?)/g,
    c36 = {
      "0": "\x00",
      r: "\r",
      n: `
`,
      t: "\t"
    };

  function oj0(A) {
    return A.replace(p36, function(B, Q) {
      switch (Q) {
        case "\\":
        case "":
          return Q;
        default:
          return c36[Q] || ""
      }
    })
  }
  tj0.unescape = oj0;

  function tj0(A, B) {
    A = A.toString();
    var Q = 0,
      I = A.length,
      G = 1,
      Z = 0,
      D = {},
      Y = [],
      W = null;

    function J(T) {
      return Error("illegal " + T + " (line " + G + ")")
    }

    function F() {
      var T = W === "'" ? g36 : b36;
      T.lastIndex = Q - 1;
      var L = T.exec(A);
      if (!L) throw J("string");
      return Q = T.lastIndex, N(W), W = null, oj0(L[1])
    }

    function X(T) {
      return A.charAt(T)
    }

    function V(T, L, _) {
      var k = {
          type: A.charAt(T++),
          lineEmpty: !1,
          leading: _
        },
        i;
      if (B) i = 2;
      else i = 3;
      var x = T - i,
        s;
      do
        if (--x < 0 || (s = A.charAt(x)) === `
`) {
          k.lineEmpty = !0;
          break
        } while (s === " " || s === "\t");
      var d = A.substring(T, L).split(d36);
      for (var F1 = 0; F1 < d.length; ++F1) d[F1] = d[F1].replace(B ? m36 : h36, "").trim();
      k.text = d.join(`
`).trim(), D[G] = k, Z = G
    }

    function C(T) {
      var L = K(T),
        _ = A.substring(T, L),
        k = /^\s*\/\//.test(_);
      return k
    }

    function K(T) {
      var L = T;
      while (L < I && X(L) !== `
`) L++;
      return L
    }

    function E() {
      if (Y.length > 0) return Y.shift();
      if (W) return F();
      var T, L, _, k, i, x = Q === 0;
      do {
        if (Q === I) return null;
        T = !1;
        while (u36.test(_ = X(Q))) {
          if (_ === `
`) x = !0, ++G;
          if (++Q === I) return null
        }
        if (X(Q) === "/") {
          if (++Q === I) throw J("comment");
          if (X(Q) === "/")
            if (!B) {
              i = X(k = Q + 1) === "/";
              while (X(++Q) !== `
`)
                if (Q === I) return null;
              if (++Q, i) V(k, Q - 1, x), x = !0;
              ++G, T = !0
            } else {
              if (k = Q, i = !1, C(Q - 1)) {
                i = !0;
                do {
                  if (Q = K(Q), Q === I) break;
                  if (Q++, !x) break
                } while (C(Q))
              } else Q = Math.min(I, K(Q) + 1);
              if (i) V(k, Q, x), x = !0;
              G++, T = !0
            }
          else if ((_ = X(Q)) === "*") {
            k = Q + 1, i = B || X(k) === "*";
            do {
              if (_ === `
`) ++G;
              if (++Q === I) throw J("comment");
              L = _, _ = X(Q)
            } while (L !== "*" || _ !== "/");
            if (++Q, i) V(k, Q - 2, x), x = !0;
            T = !0
          } else return "/"
        }
      } while (T);
      var s = Q;
      Vm1.lastIndex = 0;
      var d = Vm1.test(X(s++));
      if (!d)
        while (s < I && !Vm1.test(X(s))) ++s;
      var F1 = A.substring(Q, Q = s);
      if (F1 === '"' || F1 === "'") W = F1;
      return F1
    }

    function N(T) {
      Y.push(T)
    }

    function q() {
      if (!Y.length) {
        var T = E();
        if (T === null) return null;
        N(T)
      }
      return Y[0]
    }

    function O(T, L) {
      var _ = q(),
        k = _ === T;
      if (k) return E(), !0;
      if (!L) throw J("token '" + _ + "', '" + T + "' expected");
      return !1
    }

    function R(T) {
      var L = null,
        _;
      if (T === void 0) {
        if (_ = D[G - 1], delete D[G - 1], _ && (B || _.type === "*" || _.lineEmpty)) L = _.leading ? _.text : null
      } else {
        if (Z < T) q();
        if (_ = D[T], delete D[T], _ && !_.lineEmpty && (B || _.type === "/")) L = _.leading ? null : _.text
      }
      return L
    }
    return Object.defineProperty({
      next: E,
      peek: q,
      push: N,
      skip: O,
      cmnt: R
    }, "line", {
      get: function() {
        return G
      }
    })
  }
})
// @from(Start 4813444, End 4826032)
Zy0 = z((Iq8, Gy0) => {
  Gy0.exports = _N;
  _N.filename = null;
  _N.defaults = {
    keepCase: !1
  };
  var l36 = Cm1(),
    Ay0 = $D1(),
    By0 = ED1(),
    Qy0 = VR(),
    i36 = VD1(),
    Iy0 = tg(),
    n36 = cC(),
    a36 = KD1(),
    s36 = CD1(),
    Km1 = r_(),
    Hm1 = RI(),
    r36 = /^[1-9][0-9]*$/,
    o36 = /^-?[1-9][0-9]*$/,
    t36 = /^0[x][0-9a-fA-F]+$/,
    e36 = /^-?0[x][0-9a-fA-F]+$/,
    AQ6 = /^0[0-7]+$/,
    BQ6 = /^-?0[0-7]+$/,
    QQ6 = /^(?![eE])[0-9]*(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,
    Fw = /^[a-zA-Z_][a-zA-Z_0-9]*$/,
    Xw = /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,
    IQ6 = /^(?:\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;

  function _N(A, B, Q) {
    if (!(B instanceof Ay0)) Q = B, B = new Ay0;
    if (!Q) Q = _N.defaults;
    var I = Q.preferTrailingComment || !1,
      G = l36(A, Q.alternateCommentMode || !1),
      Z = G.next,
      D = G.push,
      Y = G.peek,
      W = G.skip,
      J = G.cmnt,
      F = !0,
      X, V, C, K, E = !1,
      N = B,
      q = Q.keepCase ? function(t) {
        return t
      } : Hm1.camelCase;

    function O(t, B1, W1) {
      var w1 = _N.filename;
      if (!W1) _N.filename = null;
      return Error("illegal " + (B1 || "token") + " '" + t + "' (" + (w1 ? w1 + ", " : "") + "line " + G.line + ")")
    }

    function R() {
      var t = [],
        B1;
      do {
        if ((B1 = Z()) !== '"' && B1 !== "'") throw O(B1);
        t.push(Z()), W(B1), B1 = Y()
      } while (B1 === '"' || B1 === "'");
      return t.join("")
    }

    function T(t) {
      var B1 = Z();
      switch (B1) {
        case "'":
        case '"':
          return D(B1), R();
        case "true":
        case "TRUE":
          return !0;
        case "false":
        case "FALSE":
          return !1
      }
      try {
        return _(B1, !0)
      } catch (W1) {
        if (t && Xw.test(B1)) return B1;
        throw O(B1, "value")
      }
    }

    function L(t, B1) {
      var W1, w1;
      do
        if (B1 && ((W1 = Y()) === '"' || W1 === "'")) t.push(R());
        else t.push([w1 = k(Z()), W("to", !0) ? k(Z()) : w1]); while (W(",", !0));
      var P1 = {
        options: void 0
      };
      P1.setOption = function(e, y1) {
        if (this.options === void 0) this.options = {};
        this.options[e] = y1
      }, F1(P1, function e(y1) {
        if (y1 === "option") bA(P1, y1), W(";");
        else throw O(y1)
      }, function e() {
        v1(P1)
      })
    }

    function _(t, B1) {
      var W1 = 1;
      if (t.charAt(0) === "-") W1 = -1, t = t.substring(1);
      switch (t) {
        case "inf":
        case "INF":
        case "Inf":
          return W1 * (1 / 0);
        case "nan":
        case "NAN":
        case "Nan":
        case "NaN":
          return NaN;
        case "0":
          return 0
      }
      if (r36.test(t)) return W1 * parseInt(t, 10);
      if (t36.test(t)) return W1 * parseInt(t, 16);
      if (AQ6.test(t)) return W1 * parseInt(t, 8);
      if (QQ6.test(t)) return W1 * parseFloat(t);
      throw O(t, "number", B1)
    }

    function k(t, B1) {
      switch (t) {
        case "max":
        case "MAX":
        case "Max":
          return 536870911;
        case "0":
          return 0
      }
      if (!B1 && t.charAt(0) === "-") throw O(t, "id");
      if (o36.test(t)) return parseInt(t, 10);
      if (e36.test(t)) return parseInt(t, 16);
      if (BQ6.test(t)) return parseInt(t, 8);
      throw O(t, "id")
    }

    function i() {
      if (X !== void 0) throw O("package");
      if (X = Z(), !Xw.test(X)) throw O(X, "name");
      N = N.define(X), W(";")
    }

    function x() {
      var t = Y(),
        B1;
      switch (t) {
        case "weak":
          B1 = C || (C = []), Z();
          break;
        case "public":
          Z();
        default:
          B1 = V || (V = []);
          break
      }
      t = R(), W(";"), B1.push(t)
    }

    function s() {
      if (W("="), K = R(), E = K === "proto3", !E && K !== "proto2") throw O(K, "syntax");
      B.setOption("syntax", K), W(";")
    }

    function d(t, B1) {
      switch (B1) {
        case "option":
          return bA(t, B1), W(";"), !0;
        case "message":
          return X1(t, B1), !0;
        case "enum":
          return d1(t, B1), !0;
        case "service":
          return L1(t, B1), !0;
        case "extend":
          return HA(t, B1), !0
      }
      return !1
    }

    function F1(t, B1, W1) {
      var w1 = G.line;
      if (t) {
        if (typeof t.comment !== "string") t.comment = J();
        t.filename = _N.filename
      }
      if (W("{", !0)) {
        var P1;
        while ((P1 = Z()) !== "}") B1(P1);
        W(";", !0)
      } else {
        if (W1) W1();
        if (W(";"), t && (typeof t.comment !== "string" || I)) t.comment = J(w1) || t.comment
      }
    }

    function X1(t, B1) {
      if (!Fw.test(B1 = Z())) throw O(B1, "type name");
      var W1 = new By0(B1);
      F1(W1, function w1(P1) {
        if (d(W1, P1)) return;
        switch (P1) {
          case "map":
            N1(W1, P1);
            break;
          case "required":
          case "repeated":
            v(W1, P1);
            break;
          case "optional":
            if (E) v(W1, "proto3_optional");
            else v(W1, "optional");
            break;
          case "oneof":
            u1(W1, P1);
            break;
          case "extensions":
            L(W1.extensions || (W1.extensions = []));
            break;
          case "reserved":
            L(W1.reserved || (W1.reserved = []), !0);
            break;
          default:
            if (!E || !Xw.test(P1)) throw O(P1);
            D(P1), v(W1, "optional");
            break
        }
      }), t.add(W1)
    }

    function v(t, B1, W1) {
      var w1 = Z();
      if (w1 === "group") {
        D1(t, B1);
        return
      }
      while (w1.endsWith(".") || Y().startsWith(".")) w1 += Z();
      if (!Xw.test(w1)) throw O(w1, "type");
      var P1 = Z();
      if (!Fw.test(P1)) throw O(P1, "name");
      P1 = q(P1), W("=");
      var e = new Qy0(P1, k(Z()), w1, B1, W1);
      if (F1(e, function O1(h1) {
          if (h1 === "option") bA(e, h1), W(";");
          else throw O(h1)
        }, function O1() {
          v1(e)
        }), B1 === "proto3_optional") {
        var y1 = new Iy0("_" + P1);
        e.setOption("proto3_optional", !0), y1.add(e), t.add(y1)
      } else t.add(e);
      if (!E && e.repeated && (Km1.packed[w1] !== void 0 || Km1.basic[w1] === void 0)) e.setOption("packed", !1, !0)
    }

    function D1(t, B1) {
      var W1 = Z();
      if (!Fw.test(W1)) throw O(W1, "name");
      var w1 = Hm1.lcFirst(W1);
      if (W1 === w1) W1 = Hm1.ucFirst(W1);
      W("=");
      var P1 = k(Z()),
        e = new By0(W1);
      e.group = !0;
      var y1 = new Qy0(w1, P1, W1, B1);
      y1.filename = _N.filename, F1(e, function O1(h1) {
        switch (h1) {
          case "option":
            bA(e, h1), W(";");
            break;
          case "required":
          case "repeated":
            v(e, h1);
            break;
          case "optional":
            if (E) v(e, "proto3_optional");
            else v(e, "optional");
            break;
          case "message":
            X1(e, h1);
            break;
          case "enum":
            d1(e, h1);
            break;
          default:
            throw O(h1)
        }
      }), t.add(e).add(y1)
    }

    function N1(t) {
      W("<");
      var B1 = Z();
      if (Km1.mapKey[B1] === void 0) throw O(B1, "type");
      W(",");
      var W1 = Z();
      if (!Xw.test(W1)) throw O(W1, "type");
      W(">");
      var w1 = Z();
      if (!Fw.test(w1)) throw O(w1, "name");
      W("=");
      var P1 = new i36(q(w1), k(Z()), B1, W1);
      F1(P1, function e(y1) {
        if (y1 === "option") bA(P1, y1), W(";");
        else throw O(y1)
      }, function e() {
        v1(P1)
      }), t.add(P1)
    }

    function u1(t, B1) {
      if (!Fw.test(B1 = Z())) throw O(B1, "name");
      var W1 = new Iy0(q(B1));
      F1(W1, function w1(P1) {
        if (P1 === "option") bA(W1, P1), W(";");
        else D(P1), v(W1, "optional")
      }), t.add(W1)
    }

    function d1(t, B1) {
      if (!Fw.test(B1 = Z())) throw O(B1, "name");
      var W1 = new n36(B1);
      F1(W1, function w1(P1) {
        switch (P1) {
          case "option":
            bA(W1, P1), W(";");
            break;
          case "reserved":
            L(W1.reserved || (W1.reserved = []), !0);
            break;
          default:
            YA(W1, P1)
        }
      }), t.add(W1)
    }

    function YA(t, B1) {
      if (!Fw.test(B1)) throw O(B1, "name");
      W("=");
      var W1 = k(Z(), !0),
        w1 = {
          options: void 0
        };
      w1.setOption = function(P1, e) {
        if (this.options === void 0) this.options = {};
        this.options[P1] = e
      }, F1(w1, function P1(e) {
        if (e === "option") bA(w1, e), W(";");
        else throw O(e)
      }, function P1() {
        v1(w1)
      }), t.add(B1, W1, w1.comment, w1.options)
    }

    function bA(t, B1) {
      var W1 = W("(", !0);
      if (!Xw.test(B1 = Z())) throw O(B1, "name");
      var w1 = B1,
        P1 = w1,
        e;
      if (W1) {
        if (W(")"), w1 = "(" + w1 + ")", P1 = w1, B1 = Y(), IQ6.test(B1)) e = B1.slice(1), w1 += B1, Z()
      }
      W("=");
      var y1 = e1(t, w1);
      Q1(t, P1, y1, e)
    }

    function e1(t, B1) {
      if (W("{", !0)) {
        var W1 = {};
        while (!W("}", !0)) {
          if (!Fw.test(MA = Z())) throw O(MA, "name");
          if (MA === null) throw O(MA, "end of input");
          var w1, P1 = MA;
          if (W(":", !0), Y() === "{") w1 = e1(t, B1 + "." + MA);
          else if (Y() === "[") {
            w1 = [];
            var e;
            if (W("[", !0)) {
              do e = T(!0), w1.push(e); while (W(",", !0));
              if (W("]"), typeof e !== "undefined") k1(t, B1 + "." + MA, e)
            }
          } else w1 = T(!0), k1(t, B1 + "." + MA, w1);
          var y1 = W1[P1];
          if (y1) w1 = [].concat(y1).concat(w1);
          W1[P1] = w1, W(",", !0), W(";", !0)
        }
        return W1
      }
      var O1 = T(!0);
      return k1(t, B1, O1), O1
    }

    function k1(t, B1, W1) {
      if (t.setOption) t.setOption(B1, W1)
    }

    function Q1(t, B1, W1, w1) {
      if (t.setParsedOption) t.setParsedOption(B1, W1, w1)
    }

    function v1(t) {
      if (W("[", !0)) {
        do bA(t, "option"); while (W(",", !0));
        W("]")
      }
      return t
    }

    function L1(t, B1) {
      if (!Fw.test(B1 = Z())) throw O(B1, "service name");
      var W1 = new a36(B1);
      F1(W1, function w1(P1) {
        if (d(W1, P1)) return;
        if (P1 === "rpc") BA(W1, P1);
        else throw O(P1)
      }), t.add(W1)
    }

    function BA(t, B1) {
      var W1 = J(),
        w1 = B1;
      if (!Fw.test(B1 = Z())) throw O(B1, "name");
      var P1 = B1,
        e, y1, O1, h1;
      if (W("("), W("stream", !0)) y1 = !0;
      if (!Xw.test(B1 = Z())) throw O(B1);
      if (e = B1, W(")"), W("returns"), W("("), W("stream", !0)) h1 = !0;
      if (!Xw.test(B1 = Z())) throw O(B1);
      O1 = B1, W(")");
      var o1 = new s36(P1, w1, e, O1, y1, h1);
      o1.comment = W1, F1(o1, function QA(zA) {
        if (zA === "option") bA(o1, zA), W(";");
        else throw O(zA)
      }), t.add(o1)
    }

    function HA(t, B1) {
      if (!Xw.test(B1 = Z())) throw O(B1, "reference");
      var W1 = B1;
      F1(null, function w1(P1) {
        switch (P1) {
          case "required":
          case "repeated":
            v(t, P1, W1);
            break;
          case "optional":
            if (E) v(t, "proto3_optional", W1);
            else v(t, "optional", W1);
            break;
          default:
            if (!E || !Xw.test(P1)) throw O(P1);
            D(P1), v(t, "optional", W1);
            break
        }
      })
    }
    var MA;
    while ((MA = Z()) !== null) switch (MA) {
      case "package":
        if (!F) throw O(MA);
        i();
        break;
      case "import":
        if (!F) throw O(MA);
        x();
        break;
      case "syntax":
        if (!F) throw O(MA);
        s();
        break;
      case "option":
        bA(N, MA), W(";");
        break;
      default:
        if (d(N, MA)) {
          F = !1;
          continue
        }
        throw O(MA)
    }
    return _N.filename = null, {
      package: X,
      imports: V,
      weakImports: C,
      syntax: K,
      root: B
    }
  }
})
// @from(Start 4826038, End 4829238)
Wy0 = z((Gq8, Yy0) => {
  Yy0.exports = iC;
  var GQ6 = /\/|\./;

  function iC(A, B) {
    if (!GQ6.test(A)) A = "google/protobuf/" + A + ".proto", B = {
      nested: {
        google: {
          nested: {
            protobuf: {
              nested: B
            }
          }
        }
      }
    };
    iC[A] = B
  }
  iC("any", {
    Any: {
      fields: {
        type_url: {
          type: "string",
          id: 1
        },
        value: {
          type: "bytes",
          id: 2
        }
      }
    }
  });
  var Dy0;
  iC("duration", {
    Duration: Dy0 = {
      fields: {
        seconds: {
          type: "int64",
          id: 1
        },
        nanos: {
          type: "int32",
          id: 2
        }
      }
    }
  });
  iC("timestamp", {
    Timestamp: Dy0
  });
  iC("empty", {
    Empty: {
      fields: {}
    }
  });
  iC("struct", {
    Struct: {
      fields: {
        fields: {
          keyType: "string",
          type: "Value",
          id: 1
        }
      }
    },
    Value: {
      oneofs: {
        kind: {
          oneof: ["nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue"]
        }
      },
      fields: {
        nullValue: {
          type: "NullValue",
          id: 1
        },
        numberValue: {
          type: "double",
          id: 2
        },
        stringValue: {
          type: "string",
          id: 3
        },
        boolValue: {
          type: "bool",
          id: 4
        },
        structValue: {
          type: "Struct",
          id: 5
        },
        listValue: {
          type: "ListValue",
          id: 6
        }
      }
    },
    NullValue: {
      values: {
        NULL_VALUE: 0
      }
    },
    ListValue: {
      fields: {
        values: {
          rule: "repeated",
          type: "Value",
          id: 1
        }
      }
    }
  });
  iC("wrappers", {
    DoubleValue: {
      fields: {
        value: {
          type: "double",
          id: 1
        }
      }
    },
    FloatValue: {
      fields: {
        value: {
          type: "float",
          id: 1
        }
      }
    },
    Int64Value: {
      fields: {
        value: {
          type: "int64",
          id: 1
        }
      }
    },
    UInt64Value: {
      fields: {
        value: {
          type: "uint64",
          id: 1
        }
      }
    },
    Int32Value: {
      fields: {
        value: {
          type: "int32",
          id: 1
        }
      }
    },
    UInt32Value: {
      fields: {
        value: {
          type: "uint32",
          id: 1
        }
      }
    },
    BoolValue: {
      fields: {
        value: {
          type: "bool",
          id: 1
        }
      }
    },
    StringValue: {
      fields: {
        value: {
          type: "string",
          id: 1
        }
      }
    },
    BytesValue: {
      fields: {
        value: {
          type: "bytes",
          id: 1
        }
      }
    }
  });
  iC("field_mask", {
    FieldMask: {
      fields: {
        paths: {
          rule: "repeated",
          type: "string",
          id: 1
        }
      }
    }
  });
  iC.get = function A(B) {
    return iC[B] || null
  }
})
// @from(Start 4829244, End 4829438)
RD1 = z((Zq8, Jy0) => {
  var HR = Jy0.exports = rj0();
  HR.build = "full";
  HR.tokenize = Cm1();
  HR.parse = Zy0();
  HR.common = Wy0();
  HR.Root._configure(HR.Type, HR.parse, HR.common)
})
// @from(Start 4829444, End 4850154)
zm1 = z((Dq8, ZQ6) => {
  ZQ6.exports = {
    nested: {
      google: {
        nested: {
          protobuf: {
            nested: {
              FileDescriptorSet: {
                fields: {
                  file: {
                    rule: "repeated",
                    type: "FileDescriptorProto",
                    id: 1
                  }
                }
              },
              FileDescriptorProto: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  package: {
                    type: "string",
                    id: 2
                  },
                  dependency: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  },
                  publicDependency: {
                    rule: "repeated",
                    type: "int32",
                    id: 10,
                    options: {
                      packed: !1
                    }
                  },
                  weakDependency: {
                    rule: "repeated",
                    type: "int32",
                    id: 11,
                    options: {
                      packed: !1
                    }
                  },
                  messageType: {
                    rule: "repeated",
                    type: "DescriptorProto",
                    id: 4
                  },
                  enumType: {
                    rule: "repeated",
                    type: "EnumDescriptorProto",
                    id: 5
                  },
                  service: {
                    rule: "repeated",
                    type: "ServiceDescriptorProto",
                    id: 6
                  },
                  extension: {
                    rule: "repeated",
                    type: "FieldDescriptorProto",
                    id: 7
                  },
                  options: {
                    type: "FileOptions",
                    id: 8
                  },
                  sourceCodeInfo: {
                    type: "SourceCodeInfo",
                    id: 9
                  },
                  syntax: {
                    type: "string",
                    id: 12
                  }
                }
              },
              DescriptorProto: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  field: {
                    rule: "repeated",
                    type: "FieldDescriptorProto",
                    id: 2
                  },
                  extension: {
                    rule: "repeated",
                    type: "FieldDescriptorProto",
                    id: 6
                  },
                  nestedType: {
                    rule: "repeated",
                    type: "DescriptorProto",
                    id: 3
                  },
                  enumType: {
                    rule: "repeated",
                    type: "EnumDescriptorProto",
                    id: 4
                  },
                  extensionRange: {
                    rule: "repeated",
                    type: "ExtensionRange",
                    id: 5
                  },
                  oneofDecl: {
                    rule: "repeated",
                    type: "OneofDescriptorProto",
                    id: 8
                  },
                  options: {
                    type: "MessageOptions",
                    id: 7
                  },
                  reservedRange: {
                    rule: "repeated",
                    type: "ReservedRange",
                    id: 9
                  },
                  reservedName: {
                    rule: "repeated",
                    type: "string",
                    id: 10
                  }
                },
                nested: {
                  ExtensionRange: {
                    fields: {
                      start: {
                        type: "int32",
                        id: 1
                      },
                      end: {
                        type: "int32",
                        id: 2
                      }
                    }
                  },
                  ReservedRange: {
                    fields: {
                      start: {
                        type: "int32",
                        id: 1
                      },
                      end: {
                        type: "int32",
                        id: 2
                      }
                    }
                  }
                }
              },
              FieldDescriptorProto: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  number: {
                    type: "int32",
                    id: 3
                  },
                  label: {
                    type: "Label",
                    id: 4
                  },
                  type: {
                    type: "Type",
                    id: 5
                  },
                  typeName: {
                    type: "string",
                    id: 6
                  },
                  extendee: {
                    type: "string",
                    id: 2
                  },
                  defaultValue: {
                    type: "string",
                    id: 7
                  },
                  oneofIndex: {
                    type: "int32",
                    id: 9
                  },
                  jsonName: {
                    type: "string",
                    id: 10
                  },
                  options: {
                    type: "FieldOptions",
                    id: 8
                  }
                },
                nested: {
                  Type: {
                    values: {
                      TYPE_DOUBLE: 1,
                      TYPE_FLOAT: 2,
                      TYPE_INT64: 3,
                      TYPE_UINT64: 4,
                      TYPE_INT32: 5,
                      TYPE_FIXED64: 6,
                      TYPE_FIXED32: 7,
                      TYPE_BOOL: 8,
                      TYPE_STRING: 9,
                      TYPE_GROUP: 10,
                      TYPE_MESSAGE: 11,
                      TYPE_BYTES: 12,
                      TYPE_UINT32: 13,
                      TYPE_ENUM: 14,
                      TYPE_SFIXED32: 15,
                      TYPE_SFIXED64: 16,
                      TYPE_SINT32: 17,
                      TYPE_SINT64: 18
                    }
                  },
                  Label: {
                    values: {
                      LABEL_OPTIONAL: 1,
                      LABEL_REQUIRED: 2,
                      LABEL_REPEATED: 3
                    }
                  }
                }
              },
              OneofDescriptorProto: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  options: {
                    type: "OneofOptions",
                    id: 2
                  }
                }
              },
              EnumDescriptorProto: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  value: {
                    rule: "repeated",
                    type: "EnumValueDescriptorProto",
                    id: 2
                  },
                  options: {
                    type: "EnumOptions",
                    id: 3
                  }
                }
              },
              EnumValueDescriptorProto: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  number: {
                    type: "int32",
                    id: 2
                  },
                  options: {
                    type: "EnumValueOptions",
                    id: 3
                  }
                }
              },
              ServiceDescriptorProto: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  method: {
                    rule: "repeated",
                    type: "MethodDescriptorProto",
                    id: 2
                  },
                  options: {
                    type: "ServiceOptions",
                    id: 3
                  }
                }
              },
              MethodDescriptorProto: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  inputType: {
                    type: "string",
                    id: 2
                  },
                  outputType: {
                    type: "string",
                    id: 3
                  },
                  options: {
                    type: "MethodOptions",
                    id: 4
                  },
                  clientStreaming: {
                    type: "bool",
                    id: 5
                  },
                  serverStreaming: {
                    type: "bool",
                    id: 6
                  }
                }
              },
              FileOptions: {
                fields: {
                  javaPackage: {
                    type: "string",
                    id: 1
                  },
                  javaOuterClassname: {
                    type: "string",
                    id: 8
                  },
                  javaMultipleFiles: {
                    type: "bool",
                    id: 10
                  },
                  javaGenerateEqualsAndHash: {
                    type: "bool",
                    id: 20,
                    options: {
                      deprecated: !0
                    }
                  },
                  javaStringCheckUtf8: {
                    type: "bool",
                    id: 27
                  },
                  optimizeFor: {
                    type: "OptimizeMode",
                    id: 9,
                    options: {
                      default: "SPEED"
                    }
                  },
                  goPackage: {
                    type: "string",
                    id: 11
                  },
                  ccGenericServices: {
                    type: "bool",
                    id: 16
                  },
                  javaGenericServices: {
                    type: "bool",
                    id: 17
                  },
                  pyGenericServices: {
                    type: "bool",
                    id: 18
                  },
                  deprecated: {
                    type: "bool",
                    id: 23
                  },
                  ccEnableArenas: {
                    type: "bool",
                    id: 31
                  },
                  objcClassPrefix: {
                    type: "string",
                    id: 36
                  },
                  csharpNamespace: {
                    type: "string",
                    id: 37
                  },
                  uninterpretedOption: {
                    rule: "repeated",
                    type: "UninterpretedOption",
                    id: 999
                  }
                },
                extensions: [
                  [1000, 536870911]
                ],
                reserved: [
                  [38, 38]
                ],
                nested: {
                  OptimizeMode: {
                    values: {
                      SPEED: 1,
                      CODE_SIZE: 2,
                      LITE_RUNTIME: 3
                    }
                  }
                }
              },
              MessageOptions: {
                fields: {
                  messageSetWireFormat: {
                    type: "bool",
                    id: 1
                  },
                  noStandardDescriptorAccessor: {
                    type: "bool",
                    id: 2
                  },
                  deprecated: {
                    type: "bool",
                    id: 3
                  },
                  mapEntry: {
                    type: "bool",
                    id: 7
                  },
                  uninterpretedOption: {
                    rule: "repeated",
                    type: "UninterpretedOption",
                    id: 999
                  }
                },
                extensions: [
                  [1000, 536870911]
                ],
                reserved: [
                  [8, 8]
                ]
              },
              FieldOptions: {
                fields: {
                  ctype: {
                    type: "CType",
                    id: 1,
                    options: {
                      default: "STRING"
                    }
                  },
                  packed: {
                    type: "bool",
                    id: 2
                  },
                  jstype: {
                    type: "JSType",
                    id: 6,
                    options: {
                      default: "JS_NORMAL"
                    }
                  },
                  lazy: {
                    type: "bool",
                    id: 5
                  },
                  deprecated: {
                    type: "bool",
                    id: 3
                  },
                  weak: {
                    type: "bool",
                    id: 10
                  },
                  uninterpretedOption: {
                    rule: "repeated",
                    type: "UninterpretedOption",
                    id: 999
                  }
                },
                extensions: [
                  [1000, 536870911]
                ],
                reserved: [
                  [4, 4]
                ],
                nested: {
                  CType: {
                    values: {
                      STRING: 0,
                      CORD: 1,
                      STRING_PIECE: 2
                    }
                  },
                  JSType: {
                    values: {
                      JS_NORMAL: 0,
                      JS_STRING: 1,
                      JS_NUMBER: 2
                    }
                  }
                }
              },
              OneofOptions: {
                fields: {
                  uninterpretedOption: {
                    rule: "repeated",
                    type: "UninterpretedOption",
                    id: 999
                  }
                },
                extensions: [
                  [1000, 536870911]
                ]
              },
              EnumOptions: {
                fields: {
                  allowAlias: {
                    type: "bool",
                    id: 2
                  },
                  deprecated: {
                    type: "bool",
                    id: 3
                  },
                  uninterpretedOption: {
                    rule: "repeated",
                    type: "UninterpretedOption",
                    id: 999
                  }
                },
                extensions: [
                  [1000, 536870911]
                ]
              },
              EnumValueOptions: {
                fields: {
                  deprecated: {
                    type: "bool",
                    id: 1
                  },
                  uninterpretedOption: {
                    rule: "repeated",
                    type: "UninterpretedOption",
                    id: 999
                  }
                },
                extensions: [
                  [1000, 536870911]
                ]
              },
              ServiceOptions: {
                fields: {
                  deprecated: {
                    type: "bool",
                    id: 33
                  },
                  uninterpretedOption: {
                    rule: "repeated",
                    type: "UninterpretedOption",
                    id: 999
                  }
                },
                extensions: [
                  [1000, 536870911]
                ]
              },
              MethodOptions: {
                fields: {
                  deprecated: {
                    type: "bool",
                    id: 33
                  },
                  uninterpretedOption: {
                    rule: "repeated",
                    type: "UninterpretedOption",
                    id: 999
                  }
                },
                extensions: [
                  [1000, 536870911]
                ]
              },
              UninterpretedOption: {
                fields: {
                  name: {
                    rule: "repeated",
                    type: "NamePart",
                    id: 2
                  },
                  identifierValue: {
                    type: "string",
                    id: 3
                  },
                  positiveIntValue: {
                    type: "uint64",
                    id: 4
                  },
                  negativeIntValue: {
                    type: "int64",
                    id: 5
                  },
                  doubleValue: {
                    type: "double",
                    id: 6
                  },
                  stringValue: {
                    type: "bytes",
                    id: 7
                  },
                  aggregateValue: {
                    type: "string",
                    id: 8
                  }
                },
                nested: {
                  NamePart: {
                    fields: {
                      namePart: {
                        rule: "required",
                        type: "string",
                        id: 1
                      },
                      isExtension: {
                        rule: "required",
                        type: "bool",
                        id: 2
                      }
                    }
                  }
                }
              },
              SourceCodeInfo: {
                fields: {
                  location: {
                    rule: "repeated",
                    type: "Location",
                    id: 1
                  }
                },
                nested: {
                  Location: {
                    fields: {
                      path: {
                        rule: "repeated",
                        type: "int32",
                        id: 1
                      },
                      span: {
                        rule: "repeated",
                        type: "int32",
                        id: 2
                      },
                      leadingComments: {
                        type: "string",
                        id: 3
                      },
                      trailingComments: {
                        type: "string",
                        id: 4
                      },
                      leadingDetachedComments: {
                        rule: "repeated",
                        type: "string",
                        id: 6
                      }
                    }
                  }
                }
              },
              GeneratedCodeInfo: {
                fields: {
                  annotation: {
                    rule: "repeated",
                    type: "Annotation",
                    id: 1
                  }
                },
                nested: {
                  Annotation: {
                    fields: {
                      path: {
                        rule: "repeated",
                        type: "int32",
                        id: 1
                      },
                      sourceFile: {
                        type: "string",
                        id: 2
                      },
                      begin: {
                        type: "int32",
                        id: 3
                      },
                      end: {
                        type: "int32",
                        id: 4
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
})
// @from(Start 4850160, End 4864850)
Ky0 = z((V6, Cy0) => {
  var yD = RD1();
  Cy0.exports = V6 = yD.descriptor = yD.Root.fromJSON(zm1()).lookup(".google.protobuf");
  var {
    Namespace: Fy0,
    Root: Dr,
    Enum: jN,
    Type: zR,
    Field: wR,
    MapField: DQ6,
    OneOf: OD1,
    Service: Yr,
    Method: TD1
  } = yD;
  Dr.fromDescriptor = function A(B) {
    if (typeof B.length === "number") B = V6.FileDescriptorSet.decode(B);
    var Q = new Dr;
    if (B.file) {
      var I, G;
      for (var Z = 0, D; Z < B.file.length; ++Z) {
        if (G = Q, (I = B.file[Z]).package && I.package.length) G = Q.define(I.package);
        if (I.name && I.name.length) Q.files.push(G.filename = I.name);
        if (I.messageType)
          for (D = 0; D < I.messageType.length; ++D) G.add(zR.fromDescriptor(I.messageType[D], I.syntax));
        if (I.enumType)
          for (D = 0; D < I.enumType.length; ++D) G.add(jN.fromDescriptor(I.enumType[D]));
        if (I.extension)
          for (D = 0; D < I.extension.length; ++D) G.add(wR.fromDescriptor(I.extension[D]));
        if (I.service)
          for (D = 0; D < I.service.length; ++D) G.add(Yr.fromDescriptor(I.service[D]));
        var Y = Ih(I.options, V6.FileOptions);
        if (Y) {
          var W = Object.keys(Y);
          for (D = 0; D < W.length; ++D) G.setOption(W[D], Y[W[D]])
        }
      }
    }
    return Q
  };
  Dr.prototype.toDescriptor = function A(B) {
    var Q = V6.FileDescriptorSet.create();
    return Xy0(this, Q.file, B), Q
  };

  function Xy0(A, B, Q) {
    var I = V6.FileDescriptorProto.create({
      name: A.filename || (A.fullName.substring(1).replace(/\./g, "_") || "root") + ".proto"
    });
    if (Q) I.syntax = Q;
    if (!(A instanceof Dr)) I.package = A.fullName.substring(1);
    for (var G = 0, Z; G < A.nestedArray.length; ++G)
      if ((Z = A._nestedArray[G]) instanceof zR) I.messageType.push(Z.toDescriptor(Q));
      else if (Z instanceof jN) I.enumType.push(Z.toDescriptor());
    else if (Z instanceof wR) I.extension.push(Z.toDescriptor(Q));
    else if (Z instanceof Yr) I.service.push(Z.toDescriptor());
    else if (Z instanceof Fy0) Xy0(Z, B, Q);
    if (I.options = Gh(A.options, V6.FileOptions), I.messageType.length + I.enumType.length + I.extension.length + I.service.length) B.push(I)
  }
  var YQ6 = 0;
  zR.fromDescriptor = function A(B, Q) {
    if (typeof B.length === "number") B = V6.DescriptorProto.decode(B);
    var I = new zR(B.name.length ? B.name : "Type" + YQ6++, Ih(B.options, V6.MessageOptions)),
      G;
    if (B.oneofDecl)
      for (G = 0; G < B.oneofDecl.length; ++G) I.add(OD1.fromDescriptor(B.oneofDecl[G]));
    if (B.field)
      for (G = 0; G < B.field.length; ++G) {
        var Z = wR.fromDescriptor(B.field[G], Q);
        if (I.add(Z), B.field[G].hasOwnProperty("oneofIndex")) I.oneofsArray[B.field[G].oneofIndex].add(Z)
      }
    if (B.extension)
      for (G = 0; G < B.extension.length; ++G) I.add(wR.fromDescriptor(B.extension[G], Q));
    if (B.nestedType) {
      for (G = 0; G < B.nestedType.length; ++G)
        if (I.add(zR.fromDescriptor(B.nestedType[G], Q)), B.nestedType[G].options && B.nestedType[G].options.mapEntry) I.setOption("map_entry", !0)
    }
    if (B.enumType)
      for (G = 0; G < B.enumType.length; ++G) I.add(jN.fromDescriptor(B.enumType[G]));
    if (B.extensionRange && B.extensionRange.length) {
      I.extensions = [];
      for (G = 0; G < B.extensionRange.length; ++G) I.extensions.push([B.extensionRange[G].start, B.extensionRange[G].end])
    }
    if (B.reservedRange && B.reservedRange.length || B.reservedName && B.reservedName.length) {
      if (I.reserved = [], B.reservedRange)
        for (G = 0; G < B.reservedRange.length; ++G) I.reserved.push([B.reservedRange[G].start, B.reservedRange[G].end]);
      if (B.reservedName)
        for (G = 0; G < B.reservedName.length; ++G) I.reserved.push(B.reservedName[G])
    }
    return I
  };
  zR.prototype.toDescriptor = function A(B) {
    var Q = V6.DescriptorProto.create({
        name: this.name
      }),
      I;
    for (I = 0; I < this.fieldsArray.length; ++I) {
      var G;
      if (Q.field.push(G = this._fieldsArray[I].toDescriptor(B)), this._fieldsArray[I] instanceof DQ6) {
        var Z = wm1(this._fieldsArray[I].keyType, this._fieldsArray[I].resolvedKeyType),
          D = wm1(this._fieldsArray[I].type, this._fieldsArray[I].resolvedType),
          Y = D === 11 || D === 14 ? this._fieldsArray[I].resolvedType && Vy0(this.parent, this._fieldsArray[I].resolvedType) || this._fieldsArray[I].type : void 0;
        Q.nestedType.push(V6.DescriptorProto.create({
          name: G.typeName,
          field: [V6.FieldDescriptorProto.create({
            name: "key",
            number: 1,
            label: 1,
            type: Z
          }), V6.FieldDescriptorProto.create({
            name: "value",
            number: 2,
            label: 1,
            type: D,
            typeName: Y
          })],
          options: V6.MessageOptions.create({
            mapEntry: !0
          })
        }))
      }
    }
    for (I = 0; I < this.oneofsArray.length; ++I) Q.oneofDecl.push(this._oneofsArray[I].toDescriptor());
    for (I = 0; I < this.nestedArray.length; ++I)
      if (this._nestedArray[I] instanceof wR) Q.field.push(this._nestedArray[I].toDescriptor(B));
      else if (this._nestedArray[I] instanceof zR) Q.nestedType.push(this._nestedArray[I].toDescriptor(B));
    else if (this._nestedArray[I] instanceof jN) Q.enumType.push(this._nestedArray[I].toDescriptor());
    if (this.extensions)
      for (I = 0; I < this.extensions.length; ++I) Q.extensionRange.push(V6.DescriptorProto.ExtensionRange.create({
        start: this.extensions[I][0],
        end: this.extensions[I][1]
      }));
    if (this.reserved)
      for (I = 0; I < this.reserved.length; ++I)
        if (typeof this.reserved[I] === "string") Q.reservedName.push(this.reserved[I]);
        else Q.reservedRange.push(V6.DescriptorProto.ReservedRange.create({
          start: this.reserved[I][0],
          end: this.reserved[I][1]
        }));
    return Q.options = Gh(this.options, V6.MessageOptions), Q
  };
  var WQ6 = /^(?![eE])[0-9]*(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;
  wR.fromDescriptor = function A(B, Q) {
    if (typeof B.length === "number") B = V6.DescriptorProto.decode(B);
    if (typeof B.number !== "number") throw Error("missing field id");
    var I;
    if (B.typeName && B.typeName.length) I = B.typeName;
    else I = CQ6(B.type);
    var G;
    switch (B.label) {
      case 1:
        G = void 0;
        break;
      case 2:
        G = "required";
        break;
      case 3:
        G = "repeated";
        break;
      default:
        throw Error("illegal label: " + B.label)
    }
    var Z = B.extendee;
    if (B.extendee !== void 0) Z = Z.length ? Z : void 0;
    var D = new wR(B.name.length ? B.name : "field" + B.number, B.number, I, G, Z);
    if (D.options = Ih(B.options, V6.FieldOptions), B.defaultValue && B.defaultValue.length) {
      var Y = B.defaultValue;
      switch (Y) {
        case "true":
        case "TRUE":
          Y = !0;
          break;
        case "false":
        case "FALSE":
          Y = !1;
          break;
        default:
          var W = WQ6.exec(Y);
          if (W) Y = parseInt(Y);
          break
      }
      D.setOption("default", Y)
    }
    if (KQ6(B.type)) {
      if (Q === "proto3") {
        if (B.options && !B.options.packed) D.setOption("packed", !1)
      } else if (!(B.options && B.options.packed)) D.setOption("packed", !1)
    }
    return D
  };
  wR.prototype.toDescriptor = function A(B) {
    var Q = V6.FieldDescriptorProto.create({
      name: this.name,
      number: this.id
    });
    if (this.map) Q.type = 11, Q.typeName = yD.util.ucFirst(this.name), Q.label = 3;
    else {
      switch (Q.type = wm1(this.type, this.resolve().resolvedType)) {
        case 10:
        case 11:
        case 14:
          Q.typeName = this.resolvedType ? Vy0(this.parent, this.resolvedType) : this.type;
          break
      }
      switch (this.rule) {
        case "repeated":
          Q.label = 3;
          break;
        case "required":
          Q.label = 2;
          break;
        default:
          Q.label = 1;
          break
      }
    }
    if (Q.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend, this.partOf) {
      if ((Q.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0) throw Error("missing oneof")
    }
    if (this.options) {
      if (Q.options = Gh(this.options, V6.FieldOptions), this.options.default != null) Q.defaultValue = String(this.options.default)
    }
    if (B === "proto3") {
      if (!this.packed)(Q.options || (Q.options = V6.FieldOptions.create())).packed = !1
    } else if (this.packed)(Q.options || (Q.options = V6.FieldOptions.create())).packed = !0;
    return Q
  };
  var JQ6 = 0;
  jN.fromDescriptor = function A(B) {
    if (typeof B.length === "number") B = V6.EnumDescriptorProto.decode(B);
    var Q = {};
    if (B.value)
      for (var I = 0; I < B.value.length; ++I) {
        var G = B.value[I].name,
          Z = B.value[I].number || 0;
        Q[G && G.length ? G : "NAME" + Z] = Z
      }
    return new jN(B.name && B.name.length ? B.name : "Enum" + JQ6++, Q, Ih(B.options, V6.EnumOptions))
  };
  jN.prototype.toDescriptor = function A() {
    var B = [];
    for (var Q = 0, I = Object.keys(this.values); Q < I.length; ++Q) B.push(V6.EnumValueDescriptorProto.create({
      name: I[Q],
      number: this.values[I[Q]]
    }));
    return V6.EnumDescriptorProto.create({
      name: this.name,
      value: B,
      options: Gh(this.options, V6.EnumOptions)
    })
  };
  var FQ6 = 0;
  OD1.fromDescriptor = function A(B) {
    if (typeof B.length === "number") B = V6.OneofDescriptorProto.decode(B);
    return new OD1(B.name && B.name.length ? B.name : "oneof" + FQ6++)
  };
  OD1.prototype.toDescriptor = function A() {
    return V6.OneofDescriptorProto.create({
      name: this.name
    })
  };
  var XQ6 = 0;
  Yr.fromDescriptor = function A(B) {
    if (typeof B.length === "number") B = V6.ServiceDescriptorProto.decode(B);
    var Q = new Yr(B.name && B.name.length ? B.name : "Service" + XQ6++, Ih(B.options, V6.ServiceOptions));
    if (B.method)
      for (var I = 0; I < B.method.length; ++I) Q.add(TD1.fromDescriptor(B.method[I]));
    return Q
  };
  Yr.prototype.toDescriptor = function A() {
    var B = [];
    for (var Q = 0; Q < this.methodsArray.length; ++Q) B.push(this._methodsArray[Q].toDescriptor());
    return V6.ServiceDescriptorProto.create({
      name: this.name,
      method: B,
      options: Gh(this.options, V6.ServiceOptions)
    })
  };
  var VQ6 = 0;
  TD1.fromDescriptor = function A(B) {
    if (typeof B.length === "number") B = V6.MethodDescriptorProto.decode(B);
    return new TD1(B.name && B.name.length ? B.name : "Method" + VQ6++, "rpc", B.inputType, B.outputType, Boolean(B.clientStreaming), Boolean(B.serverStreaming), Ih(B.options, V6.MethodOptions))
  };
  TD1.prototype.toDescriptor = function A() {
    return V6.MethodDescriptorProto.create({
      name: this.name,
      inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,
      outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,
      clientStreaming: this.requestStream,
      serverStreaming: this.responseStream,
      options: Gh(this.options, V6.MethodOptions)
    })
  };

  function CQ6(A) {
    switch (A) {
      case 1:
        return "double";
      case 2:
        return "float";
      case 3:
        return "int64";
      case 4:
        return "uint64";
      case 5:
        return "int32";
      case 6:
        return "fixed64";
      case 7:
        return "fixed32";
      case 8:
        return "bool";
      case 9:
        return "string";
      case 12:
        return "bytes";
      case 13:
        return "uint32";
      case 15:
        return "sfixed32";
      case 16:
        return "sfixed64";
      case 17:
        return "sint32";
      case 18:
        return "sint64"
    }
    throw Error("illegal type: " + A)
  }

  function KQ6(A) {
    switch (A) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
        return !0
    }
    return !1
  }

  function wm1(A, B) {
    switch (A) {
      case "double":
        return 1;
      case "float":
        return 2;
      case "int64":
        return 3;
      case "uint64":
        return 4;
      case "int32":
        return 5;
      case "fixed64":
        return 6;
      case "fixed32":
        return 7;
      case "bool":
        return 8;
      case "string":
        return 9;
      case "bytes":
        return 12;
      case "uint32":
        return 13;
      case "sfixed32":
        return 15;
      case "sfixed64":
        return 16;
      case "sint32":
        return 17;
      case "sint64":
        return 18
    }
    if (B instanceof jN) return 14;
    if (B instanceof zR) return B.group ? 10 : 11;
    throw Error("illegal type: " + A)
  }

  function Ih(A, B) {
    if (!A) return;
    var Q = [];
    for (var I = 0, G, Z, D; I < B.fieldsArray.length; ++I)
      if ((Z = (G = B._fieldsArray[I]).name) !== "uninterpretedOption") {
        if (A.hasOwnProperty(Z)) {
          if (D = A[Z], G.resolvedType instanceof jN && typeof D === "number" && G.resolvedType.valuesById[D] !== void 0) D = G.resolvedType.valuesById[D];
          Q.push(HQ6(Z), D)
        }
      } return Q.length ? yD.util.toObject(Q) : void 0
  }

  function Gh(A, B) {
    if (!A) return;
    var Q = [];
    for (var I = 0, G = Object.keys(A), Z, D; I < G.length; ++I) {
      if (D = A[Z = G[I]], Z === "default") continue;
      var Y = B.fields[Z];
      if (!Y && !(Y = B.fields[Z = yD.util.camelCase(Z)])) continue;
      Q.push(Z, D)
    }
    return Q.length ? B.fromObject(yD.util.toObject(Q)) : void 0
  }

  function Vy0(A, B) {
    var Q = A.fullName.split("."),
      I = B.fullName.split("."),
      G = 0,
      Z = 0,
      D = I.length - 1;
    if (!(A instanceof Dr) && B instanceof Fy0)
      while (G < Q.length && Z < D && Q[G] === I[Z]) {
        var Y = B.lookup(Q[G++], !0);
        if (Y !== null && Y !== B) break;
        ++Z
      } else
        for (; G < Q.length && Z < D && Q[G] === I[Z]; ++G, ++Z);
    return I.slice(Z).join(".")
  }

  function HQ6(A) {
    return A.substring(0, 1) + A.substring(1).replace(/([A-Z])(?=[a-z]|$)/g, function(B, Q) {
      return "_" + Q.toLowerCase()
    })
  }
})
// @from(Start 4864856, End 4867924)
Hy0 = z((Yq8, zQ6) => {
  zQ6.exports = {
    nested: {
      google: {
        nested: {
          protobuf: {
            nested: {
              Api: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  methods: {
                    rule: "repeated",
                    type: "Method",
                    id: 2
                  },
                  options: {
                    rule: "repeated",
                    type: "Option",
                    id: 3
                  },
                  version: {
                    type: "string",
                    id: 4
                  },
                  sourceContext: {
                    type: "SourceContext",
                    id: 5
                  },
                  mixins: {
                    rule: "repeated",
                    type: "Mixin",
                    id: 6
                  },
                  syntax: {
                    type: "Syntax",
                    id: 7
                  }
                }
              },
              Method: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  requestTypeUrl: {
                    type: "string",
                    id: 2
                  },
                  requestStreaming: {
                    type: "bool",
                    id: 3
                  },
                  responseTypeUrl: {
                    type: "string",
                    id: 4
                  },
                  responseStreaming: {
                    type: "bool",
                    id: 5
                  },
                  options: {
                    rule: "repeated",
                    type: "Option",
                    id: 6
                  },
                  syntax: {
                    type: "Syntax",
                    id: 7
                  }
                }
              },
              Mixin: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  root: {
                    type: "string",
                    id: 2
                  }
                }
              },
              SourceContext: {
                fields: {
                  fileName: {
                    type: "string",
                    id: 1
                  }
                }
              },
              Option: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  value: {
                    type: "Any",
                    id: 2
                  }
                }
              },
              Syntax: {
                values: {
                  SYNTAX_PROTO2: 0,
                  SYNTAX_PROTO3: 1
                }
              }
            }
          }
        }
      }
    }
  }
})
// @from(Start 4867930, End 4868323)
zy0 = z((Wq8, wQ6) => {
  wQ6.exports = {
    nested: {
      google: {
        nested: {
          protobuf: {
            nested: {
              SourceContext: {
                fields: {
                  fileName: {
                    type: "string",
                    id: 1
                  }
                }
              }
            }
          }
        }
      }
    }
  }
})
// @from(Start 4868329, End 4873954)
wy0 = z((Jq8, EQ6) => {
  EQ6.exports = {
    nested: {
      google: {
        nested: {
          protobuf: {
            nested: {
              Type: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  fields: {
                    rule: "repeated",
                    type: "Field",
                    id: 2
                  },
                  oneofs: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  },
                  options: {
                    rule: "repeated",
                    type: "Option",
                    id: 4
                  },
                  sourceContext: {
                    type: "SourceContext",
                    id: 5
                  },
                  syntax: {
                    type: "Syntax",
                    id: 6
                  }
                }
              },
              Field: {
                fields: {
                  kind: {
                    type: "Kind",
                    id: 1
                  },
                  cardinality: {
                    type: "Cardinality",
                    id: 2
                  },
                  number: {
                    type: "int32",
                    id: 3
                  },
                  name: {
                    type: "string",
                    id: 4
                  },
                  typeUrl: {
                    type: "string",
                    id: 6
                  },
                  oneofIndex: {
                    type: "int32",
                    id: 7
                  },
                  packed: {
                    type: "bool",
                    id: 8
                  },
                  options: {
                    rule: "repeated",
                    type: "Option",
                    id: 9
                  },
                  jsonName: {
                    type: "string",
                    id: 10
                  },
                  defaultValue: {
                    type: "string",
                    id: 11
                  }
                },
                nested: {
                  Kind: {
                    values: {
                      TYPE_UNKNOWN: 0,
                      TYPE_DOUBLE: 1,
                      TYPE_FLOAT: 2,
                      TYPE_INT64: 3,
                      TYPE_UINT64: 4,
                      TYPE_INT32: 5,
                      TYPE_FIXED64: 6,
                      TYPE_FIXED32: 7,
                      TYPE_BOOL: 8,
                      TYPE_STRING: 9,
                      TYPE_GROUP: 10,
                      TYPE_MESSAGE: 11,
                      TYPE_BYTES: 12,
                      TYPE_UINT32: 13,
                      TYPE_ENUM: 14,
                      TYPE_SFIXED32: 15,
                      TYPE_SFIXED64: 16,
                      TYPE_SINT32: 17,
                      TYPE_SINT64: 18
                    }
                  },
                  Cardinality: {
                    values: {
                      CARDINALITY_UNKNOWN: 0,
                      CARDINALITY_OPTIONAL: 1,
                      CARDINALITY_REQUIRED: 2,
                      CARDINALITY_REPEATED: 3
                    }
                  }
                }
              },
              Enum: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  enumvalue: {
                    rule: "repeated",
                    type: "EnumValue",
                    id: 2
                  },
                  options: {
                    rule: "repeated",
                    type: "Option",
                    id: 3
                  },
                  sourceContext: {
                    type: "SourceContext",
                    id: 4
                  },
                  syntax: {
                    type: "Syntax",
                    id: 5
                  }
                }
              },
              EnumValue: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  number: {
                    type: "int32",
                    id: 2
                  },
                  options: {
                    rule: "repeated",
                    type: "Option",
                    id: 3
                  }
                }
              },
              Option: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  value: {
                    type: "Any",
                    id: 2
                  }
                }
              },
              Syntax: {
                values: {
                  SYNTAX_PROTO2: 0,
                  SYNTAX_PROTO3: 1
                }
              },
              Any: {
                fields: {
                  type_url: {
                    type: "string",
                    id: 1
                  },
                  value: {
                    type: "bytes",
                    id: 2
                  }
                }
              },
              SourceContext: {
                fields: {
                  fileName: {
                    type: "string",
                    id: 1
                  }
                }
              }
            }
          }
        }
      }
    }
  }
})
// @from(Start 4873960, End 4875655)
My0 = z(($y0) => {
  Object.defineProperty($y0, "__esModule", {
    value: !0
  });
  $y0.addCommonProtos = $y0.loadProtosWithOptionsSync = $y0.loadProtosWithOptions = void 0;
  var Ey0 = Z1("fs"),
    Uy0 = Z1("path"),
    Zh = RD1();

  function Ny0(A, B) {
    let Q = A.resolvePath;
    A.resolvePath = (I, G) => {
      if (Uy0.isAbsolute(G)) return G;
      for (let Z of B) {
        let D = Uy0.join(Z, G);
        try {
          return Ey0.accessSync(D, Ey0.constants.R_OK), D
        } catch (Y) {
          continue
        }
      }
      return process.emitWarning(`${G} not found in any of the include paths ${B}`), Q(I, G)
    }
  }
  async function UQ6(A, B) {
    let Q = new Zh.Root;
    if (B = B || {}, B.includeDirs) {
      if (!Array.isArray(B.includeDirs)) return Promise.reject(new Error("The includeDirs option must be an array"));
      Ny0(Q, B.includeDirs)
    }
    let I = await Q.load(A, B);
    return I.resolveAll(), I
  }
  $y0.loadProtosWithOptions = UQ6;

  function NQ6(A, B) {
    let Q = new Zh.Root;
    if (B = B || {}, B.includeDirs) {
      if (!Array.isArray(B.includeDirs)) throw new Error("The includeDirs option must be an array");
      Ny0(Q, B.includeDirs)
    }
    let I = Q.loadSync(A, B);
    return I.resolveAll(), I
  }
  $y0.loadProtosWithOptionsSync = NQ6;

  function $Q6() {
    let A = Hy0(),
      B = zm1(),
      Q = zy0(),
      I = wy0();
    Zh.common("api", A.nested.google.nested.protobuf.nested), Zh.common("descriptor", B.nested.google.nested.protobuf.nested), Zh.common("source_context", Q.nested.google.nested.protobuf.nested), Zh.common("type", I.nested.google.nested.protobuf.nested)
  }
  $y0.addCommonProtos = $Q6
})
// @from(Start 4875661, End 4892903)
Ly0 = z((Wr, Em1) => {
  (function(A, B) {
    function Q(I) {
      return "default" in I ? I.default : I
    }
    if (typeof define === "function" && define.amd) define([], function() {
      var I = {};
      return B(I), Q(I)
    });
    else if (typeof Wr === "object") {
      if (B(Wr), typeof Em1 === "object") Em1.exports = Q(Wr)
    } else(function() {
      var I = {};
      B(I), A.Long = Q(I)
    })()
  })(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : Wr, function(A) {
    Object.defineProperty(A, "__esModule", {
      value: !0
    }), A.default = void 0;
    var B = null;
    try {
      B = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports
    } catch {}

    function Q(X1, v, D1) {
      this.low = X1 | 0, this.high = v | 0, this.unsigned = !!D1
    }
    Q.prototype.__isLong__, Object.defineProperty(Q.prototype, "__isLong__", {
      value: !0
    });

    function I(X1) {
      return (X1 && X1.__isLong__) === !0
    }

    function G(X1) {
      var v = Math.clz32(X1 & -X1);
      return X1 ? 31 - v : v
    }
    Q.isLong = I;
    var Z = {},
      D = {};

    function Y(X1, v) {
      var D1, N1, u1;
      if (v) {
        if (X1 >>>= 0, u1 = 0 <= X1 && X1 < 256) {
          if (N1 = D[X1], N1) return N1
        }
        if (D1 = J(X1, 0, !0), u1) D[X1] = D1;
        return D1
      } else {
        if (X1 |= 0, u1 = -128 <= X1 && X1 < 128) {
          if (N1 = Z[X1], N1) return N1
        }
        if (D1 = J(X1, X1 < 0 ? -1 : 0, !1), u1) Z[X1] = D1;
        return D1
      }
    }
    Q.fromInt = Y;

    function W(X1, v) {
      if (isNaN(X1)) return v ? T : R;
      if (v) {
        if (X1 < 0) return T;
        if (X1 >= N) return x
      } else {
        if (X1 <= -q) return s;
        if (X1 + 1 >= q) return i
      }
      if (X1 < 0) return W(-X1, v).neg();
      return J(X1 % E | 0, X1 / E | 0, v)
    }
    Q.fromNumber = W;

    function J(X1, v, D1) {
      return new Q(X1, v, D1)
    }
    Q.fromBits = J;
    var F = Math.pow;

    function X(X1, v, D1) {
      if (X1.length === 0) throw Error("empty string");
      if (typeof v === "number") D1 = v, v = !1;
      else v = !!v;
      if (X1 === "NaN" || X1 === "Infinity" || X1 === "+Infinity" || X1 === "-Infinity") return v ? T : R;
      if (D1 = D1 || 10, D1 < 2 || 36 < D1) throw RangeError("radix");
      var N1;
      if ((N1 = X1.indexOf("-")) > 0) throw Error("interior hyphen");
      else if (N1 === 0) return X(X1.substring(1), v, D1).neg();
      var u1 = W(F(D1, 8)),
        d1 = R;
      for (var YA = 0; YA < X1.length; YA += 8) {
        var bA = Math.min(8, X1.length - YA),
          e1 = parseInt(X1.substring(YA, YA + bA), D1);
        if (bA < 8) {
          var k1 = W(F(D1, bA));
          d1 = d1.mul(k1).add(W(e1))
        } else d1 = d1.mul(u1), d1 = d1.add(W(e1))
      }
      return d1.unsigned = v, d1
    }
    Q.fromString = X;

    function V(X1, v) {
      if (typeof X1 === "number") return W(X1, v);
      if (typeof X1 === "string") return X(X1, v);
      return J(X1.low, X1.high, typeof v === "boolean" ? v : X1.unsigned)
    }
    Q.fromValue = V;
    var C = 65536,
      K = 16777216,
      E = C * C,
      N = E * E,
      q = N / 2,
      O = Y(K),
      R = Y(0);
    Q.ZERO = R;
    var T = Y(0, !0);
    Q.UZERO = T;
    var L = Y(1);
    Q.ONE = L;
    var _ = Y(1, !0);
    Q.UONE = _;
    var k = Y(-1);
    Q.NEG_ONE = k;
    var i = J(-1, 2147483647, !1);
    Q.MAX_VALUE = i;
    var x = J(-1, -1, !0);
    Q.MAX_UNSIGNED_VALUE = x;
    var s = J(0, -2147483648, !1);
    Q.MIN_VALUE = s;
    var d = Q.prototype;
    if (d.toInt = function X1() {
        return this.unsigned ? this.low >>> 0 : this.low
      }, d.toNumber = function X1() {
        if (this.unsigned) return (this.high >>> 0) * E + (this.low >>> 0);
        return this.high * E + (this.low >>> 0)
      }, d.toString = function X1(v) {
        if (v = v || 10, v < 2 || 36 < v) throw RangeError("radix");
        if (this.isZero()) return "0";
        if (this.isNegative())
          if (this.eq(s)) {
            var D1 = W(v),
              N1 = this.div(D1),
              u1 = N1.mul(D1).sub(this);
            return N1.toString(v) + u1.toInt().toString(v)
          } else return "-" + this.neg().toString(v);
        var d1 = W(F(v, 6), this.unsigned),
          YA = this,
          bA = "";
        while (!0) {
          var e1 = YA.div(d1),
            k1 = YA.sub(e1.mul(d1)).toInt() >>> 0,
            Q1 = k1.toString(v);
          if (YA = e1, YA.isZero()) return Q1 + bA;
          else {
            while (Q1.length < 6) Q1 = "0" + Q1;
            bA = "" + Q1 + bA
          }
        }
      }, d.getHighBits = function X1() {
        return this.high
      }, d.getHighBitsUnsigned = function X1() {
        return this.high >>> 0
      }, d.getLowBits = function X1() {
        return this.low
      }, d.getLowBitsUnsigned = function X1() {
        return this.low >>> 0
      }, d.getNumBitsAbs = function X1() {
        if (this.isNegative()) return this.eq(s) ? 64 : this.neg().getNumBitsAbs();
        var v = this.high != 0 ? this.high : this.low;
        for (var D1 = 31; D1 > 0; D1--)
          if ((v & 1 << D1) != 0) break;
        return this.high != 0 ? D1 + 33 : D1 + 1
      }, d.isSafeInteger = function X1() {
        var v = this.high >> 21;
        if (!v) return !0;
        if (this.unsigned) return !1;
        return v === -1 && !(this.low === 0 && this.high === -2097152)
      }, d.isZero = function X1() {
        return this.high === 0 && this.low === 0
      }, d.eqz = d.isZero, d.isNegative = function X1() {
        return !this.unsigned && this.high < 0
      }, d.isPositive = function X1() {
        return this.unsigned || this.high >= 0
      }, d.isOdd = function X1() {
        return (this.low & 1) === 1
      }, d.isEven = function X1() {
        return (this.low & 1) === 0
      }, d.equals = function X1(v) {
        if (!I(v)) v = V(v);
        if (this.unsigned !== v.unsigned && this.high >>> 31 === 1 && v.high >>> 31 === 1) return !1;
        return this.high === v.high && this.low === v.low
      }, d.eq = d.equals, d.notEquals = function X1(v) {
        return !this.eq(v)
      }, d.neq = d.notEquals, d.ne = d.notEquals, d.lessThan = function X1(v) {
        return this.comp(v) < 0
      }, d.lt = d.lessThan, d.lessThanOrEqual = function X1(v) {
        return this.comp(v) <= 0
      }, d.lte = d.lessThanOrEqual, d.le = d.lessThanOrEqual, d.greaterThan = function X1(v) {
        return this.comp(v) > 0
      }, d.gt = d.greaterThan, d.greaterThanOrEqual = function X1(v) {
        return this.comp(v) >= 0
      }, d.gte = d.greaterThanOrEqual, d.ge = d.greaterThanOrEqual, d.compare = function X1(v) {
        if (!I(v)) v = V(v);
        if (this.eq(v)) return 0;
        var D1 = this.isNegative(),
          N1 = v.isNegative();
        if (D1 && !N1) return -1;
        if (!D1 && N1) return 1;
        if (!this.unsigned) return this.sub(v).isNegative() ? -1 : 1;
        return v.high >>> 0 > this.high >>> 0 || v.high === this.high && v.low >>> 0 > this.low >>> 0 ? -1 : 1
      }, d.comp = d.compare, d.negate = function X1() {
        if (!this.unsigned && this.eq(s)) return s;
        return this.not().add(L)
      }, d.neg = d.negate, d.add = function X1(v) {
        if (!I(v)) v = V(v);
        var D1 = this.high >>> 16,
          N1 = this.high & 65535,
          u1 = this.low >>> 16,
          d1 = this.low & 65535,
          YA = v.high >>> 16,
          bA = v.high & 65535,
          e1 = v.low >>> 16,
          k1 = v.low & 65535,
          Q1 = 0,
          v1 = 0,
          L1 = 0,
          BA = 0;
        return BA += d1 + k1, L1 += BA >>> 16, BA &= 65535, L1 += u1 + e1, v1 += L1 >>> 16, L1 &= 65535, v1 += N1 + bA, Q1 += v1 >>> 16, v1 &= 65535, Q1 += D1 + YA, Q1 &= 65535, J(L1 << 16 | BA, Q1 << 16 | v1, this.unsigned)
      }, d.subtract = function X1(v) {
        if (!I(v)) v = V(v);
        return this.add(v.neg())
      }, d.sub = d.subtract, d.multiply = function X1(v) {
        if (this.isZero()) return this;
        if (!I(v)) v = V(v);
        if (B) {
          var D1 = B.mul(this.low, this.high, v.low, v.high);
          return J(D1, B.get_high(), this.unsigned)
        }
        if (v.isZero()) return this.unsigned ? T : R;
        if (this.eq(s)) return v.isOdd() ? s : R;
        if (v.eq(s)) return this.isOdd() ? s : R;
        if (this.isNegative())
          if (v.isNegative()) return this.neg().mul(v.neg());
          else return this.neg().mul(v).neg();
        else if (v.isNegative()) return this.mul(v.neg()).neg();
        if (this.lt(O) && v.lt(O)) return W(this.toNumber() * v.toNumber(), this.unsigned);
        var N1 = this.high >>> 16,
          u1 = this.high & 65535,
          d1 = this.low >>> 16,
          YA = this.low & 65535,
          bA = v.high >>> 16,
          e1 = v.high & 65535,
          k1 = v.low >>> 16,
          Q1 = v.low & 65535,
          v1 = 0,
          L1 = 0,
          BA = 0,
          HA = 0;
        return HA += YA * Q1, BA += HA >>> 16, HA &= 65535, BA += d1 * Q1, L1 += BA >>> 16, BA &= 65535, BA += YA * k1, L1 += BA >>> 16, BA &= 65535, L1 += u1 * Q1, v1 += L1 >>> 16, L1 &= 65535, L1 += d1 * k1, v1 += L1 >>> 16, L1 &= 65535, L1 += YA * e1, v1 += L1 >>> 16, L1 &= 65535, v1 += N1 * Q1 + u1 * k1 + d1 * e1 + YA * bA, v1 &= 65535, J(BA << 16 | HA, v1 << 16 | L1, this.unsigned)
      }, d.mul = d.multiply, d.divide = function X1(v) {
        if (!I(v)) v = V(v);
        if (v.isZero()) throw Error("division by zero");
        if (B) {
          if (!this.unsigned && this.high === -2147483648 && v.low === -1 && v.high === -1) return this;
          var D1 = (this.unsigned ? B.div_u : B.div_s)(this.low, this.high, v.low, v.high);
          return J(D1, B.get_high(), this.unsigned)
        }
        if (this.isZero()) return this.unsigned ? T : R;
        var N1, u1, d1;
        if (!this.unsigned) {
          if (this.eq(s))
            if (v.eq(L) || v.eq(k)) return s;
            else if (v.eq(s)) return L;
          else {
            var YA = this.shr(1);
            if (N1 = YA.div(v).shl(1), N1.eq(R)) return v.isNegative() ? L : k;
            else return u1 = this.sub(v.mul(N1)), d1 = N1.add(u1.div(v)), d1
          } else if (v.eq(s)) return this.unsigned ? T : R;
          if (this.isNegative()) {
            if (v.isNegative()) return this.neg().div(v.neg());
            return this.neg().div(v).neg()
          } else if (v.isNegative()) return this.div(v.neg()).neg();
          d1 = R
        } else {
          if (!v.unsigned) v = v.toUnsigned();
          if (v.gt(this)) return T;
          if (v.gt(this.shru(1))) return _;
          d1 = T
        }
        u1 = this;
        while (u1.gte(v)) {
          N1 = Math.max(1, Math.floor(u1.toNumber() / v.toNumber()));
          var bA = Math.ceil(Math.log(N1) / Math.LN2),
            e1 = bA <= 48 ? 1 : F(2, bA - 48),
            k1 = W(N1),
            Q1 = k1.mul(v);
          while (Q1.isNegative() || Q1.gt(u1)) N1 -= e1, k1 = W(N1, this.unsigned), Q1 = k1.mul(v);
          if (k1.isZero()) k1 = L;
          d1 = d1.add(k1), u1 = u1.sub(Q1)
        }
        return d1
      }, d.div = d.divide, d.modulo = function X1(v) {
        if (!I(v)) v = V(v);
        if (B) {
          var D1 = (this.unsigned ? B.rem_u : B.rem_s)(this.low, this.high, v.low, v.high);
          return J(D1, B.get_high(), this.unsigned)
        }
        return this.sub(this.div(v).mul(v))
      }, d.mod = d.modulo, d.rem = d.modulo, d.not = function X1() {
        return J(~this.low, ~this.high, this.unsigned)
      }, d.countLeadingZeros = function X1() {
        return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32
      }, d.clz = d.countLeadingZeros, d.countTrailingZeros = function X1() {
        return this.low ? G(this.low) : G(this.high) + 32
      }, d.ctz = d.countTrailingZeros, d.and = function X1(v) {
        if (!I(v)) v = V(v);
        return J(this.low & v.low, this.high & v.high, this.unsigned)
      }, d.or = function X1(v) {
        if (!I(v)) v = V(v);
        return J(this.low | v.low, this.high | v.high, this.unsigned)
      }, d.xor = function X1(v) {
        if (!I(v)) v = V(v);
        return J(this.low ^ v.low, this.high ^ v.high, this.unsigned)
      }, d.shiftLeft = function X1(v) {
        if (I(v)) v = v.toInt();
        if ((v &= 63) === 0) return this;
        else if (v < 32) return J(this.low << v, this.high << v | this.low >>> 32 - v, this.unsigned);
        else return J(0, this.low << v - 32, this.unsigned)
      }, d.shl = d.shiftLeft, d.shiftRight = function X1(v) {
        if (I(v)) v = v.toInt();
        if ((v &= 63) === 0) return this;
        else if (v < 32) return J(this.low >>> v | this.high << 32 - v, this.high >> v, this.unsigned);
        else return J(this.high >> v - 32, this.high >= 0 ? 0 : -1, this.unsigned)
      }, d.shr = d.shiftRight, d.shiftRightUnsigned = function X1(v) {
        if (I(v)) v = v.toInt();
        if ((v &= 63) === 0) return this;
        if (v < 32) return J(this.low >>> v | this.high << 32 - v, this.high >>> v, this.unsigned);
        if (v === 32) return J(this.high, 0, this.unsigned);
        return J(this.high >>> v - 32, 0, this.unsigned)
      }, d.shru = d.shiftRightUnsigned, d.shr_u = d.shiftRightUnsigned, d.rotateLeft = function X1(v) {
        var D1;
        if (I(v)) v = v.toInt();
        if ((v &= 63) === 0) return this;
        if (v === 32) return J(this.high, this.low, this.unsigned);
        if (v < 32) return D1 = 32 - v, J(this.low << v | this.high >>> D1, this.high << v | this.low >>> D1, this.unsigned);
        return v -= 32, D1 = 32 - v, J(this.high << v | this.low >>> D1, this.low << v | this.high >>> D1, this.unsigned)
      }, d.rotl = d.rotateLeft, d.rotateRight = function X1(v) {
        var D1;
        if (I(v)) v = v.toInt();
        if ((v &= 63) === 0) return this;
        if (v === 32) return J(this.high, this.low, this.unsigned);
        if (v < 32) return D1 = 32 - v, J(this.high << D1 | this.low >>> v, this.low << D1 | this.high >>> v, this.unsigned);
        return v -= 32, D1 = 32 - v, J(this.low << D1 | this.high >>> v, this.high << D1 | this.low >>> v, this.unsigned)
      }, d.rotr = d.rotateRight, d.toSigned = function X1() {
        if (!this.unsigned) return this;
        return J(this.low, this.high, !1)
      }, d.toUnsigned = function X1() {
        if (this.unsigned) return this;
        return J(this.low, this.high, !0)
      }, d.toBytes = function X1(v) {
        return v ? this.toBytesLE() : this.toBytesBE()
      }, d.toBytesLE = function X1() {
        var v = this.high,
          D1 = this.low;
        return [D1 & 255, D1 >>> 8 & 255, D1 >>> 16 & 255, D1 >>> 24, v & 255, v >>> 8 & 255, v >>> 16 & 255, v >>> 24]
      }, d.toBytesBE = function X1() {
        var v = this.high,
          D1 = this.low;
        return [v >>> 24, v >>> 16 & 255, v >>> 8 & 255, v & 255, D1 >>> 24, D1 >>> 16 & 255, D1 >>> 8 & 255, D1 & 255]
      }, Q.fromBytes = function X1(v, D1, N1) {
        return N1 ? Q.fromBytesLE(v, D1) : Q.fromBytesBE(v, D1)
      }, Q.fromBytesLE = function X1(v, D1) {
        return new Q(v[0] | v[1] << 8 | v[2] << 16 | v[3] << 24, v[4] | v[5] << 8 | v[6] << 16 | v[7] << 24, D1)
      }, Q.fromBytesBE = function X1(v, D1) {
        return new Q(v[4] << 24 | v[5] << 16 | v[6] << 8 | v[7], v[0] << 24 | v[1] << 16 | v[2] << 8 | v[3], D1)
      }, typeof BigInt === "function") Q.fromBigInt = function X1(v, D1) {
      var N1 = Number(BigInt.asIntN(32, v)),
        u1 = Number(BigInt.asIntN(32, v >> BigInt(32)));
      return J(N1, u1, D1)
    }, Q.fromValue = function X1(v, D1) {
      if (typeof v === "bigint") return fromBigInt(v, D1);
      return V(v, D1)
    }, d.toBigInt = function X1() {
      var v = BigInt(this.low >>> 0),
        D1 = BigInt(this.unsigned ? this.high >>> 0 : this.high);
      return D1 << BigInt(32) | v
    };
    var F1 = A.default = Q
  })
})
// @from(Start 4892909, End 4897463)
xy0 = z((yy0) => {
  Object.defineProperty(yy0, "__esModule", {
    value: !0
  });
  yy0.loadFileDescriptorSetFromObject = yy0.loadFileDescriptorSetFromBuffer = yy0.fromJSON = yy0.loadSync = yy0.load = yy0.IdempotencyLevel = yy0.isAnyExtension = yy0.Long = void 0;
  var LQ6 = Gj0(),
    Vw = RD1(),
    Nm1 = Ky0(),
    $m1 = My0(),
    RQ6 = Ly0();
  yy0.Long = RQ6;

  function OQ6(A) {
    return "@type" in A && typeof A["@type"] === "string"
  }
  yy0.isAnyExtension = OQ6;
  var Py0;
  (function(A) {
    A.IDEMPOTENCY_UNKNOWN = "IDEMPOTENCY_UNKNOWN", A.NO_SIDE_EFFECTS = "NO_SIDE_EFFECTS", A.IDEMPOTENT = "IDEMPOTENT"
  })(Py0 = yy0.IdempotencyLevel || (yy0.IdempotencyLevel = {}));
  var Sy0 = {
    longs: String,
    enums: String,
    bytes: String,
    defaults: !0,
    oneofs: !0,
    json: !0
  };

  function TQ6(A, B) {
    if (A === "") return B;
    else return A + "." + B
  }

  function PQ6(A) {
    return A instanceof Vw.Service || A instanceof Vw.Type || A instanceof Vw.Enum
  }

  function SQ6(A) {
    return A instanceof Vw.Namespace || A instanceof Vw.Root
  }

  function _y0(A, B) {
    let Q = TQ6(B, A.name);
    if (PQ6(A)) return [
      [Q, A]
    ];
    else if (SQ6(A) && typeof A.nested !== "undefined") return Object.keys(A.nested).map((I) => {
      return _y0(A.nested[I], Q)
    }).reduce((I, G) => I.concat(G), []);
    return []
  }

  function Ry0(A, B) {
    return function Q(I) {
      return A.toObject(A.decode(I), B)
    }
  }

  function Oy0(A) {
    return function B(Q) {
      if (Array.isArray(Q)) throw new Error(`Failed to serialize message: expected object with ${A.name} structure, got array instead`);
      let I = A.fromObject(Q);
      return A.encode(I).finish()
    }
  }

  function _Q6(A) {
    return (A || []).reduce((B, Q) => {
      for (let [I, G] of Object.entries(Q)) switch (I) {
        case "uninterpreted_option":
          B.uninterpreted_option.push(Q.uninterpreted_option);
          break;
        default:
          B[I] = G
      }
      return B
    }, {
      deprecated: !1,
      idempotency_level: Py0.IDEMPOTENCY_UNKNOWN,
      uninterpreted_option: []
    })
  }

  function jQ6(A, B, Q, I) {
    let {
      resolvedRequestType: G,
      resolvedResponseType: Z
    } = A;
    return {
      path: "/" + B + "/" + A.name,
      requestStream: !!A.requestStream,
      responseStream: !!A.responseStream,
      requestSerialize: Oy0(G),
      requestDeserialize: Ry0(G, Q),
      responseSerialize: Oy0(Z),
      responseDeserialize: Ry0(Z, Q),
      originalName: LQ6(A.name),
      requestType: Um1(G, I),
      responseType: Um1(Z, I),
      options: _Q6(A.parsedOptions)
    }
  }

  function yQ6(A, B, Q, I) {
    let G = {};
    for (let Z of A.methodsArray) G[Z.name] = jQ6(Z, B, Q, I);
    return G
  }

  function Um1(A, B) {
    let Q = A.toDescriptor("proto3");
    return {
      format: "Protocol Buffer 3 DescriptorProto",
      type: Q.$type.toObject(Q, Sy0),
      fileDescriptorProtos: B
    }
  }

  function kQ6(A, B) {
    let Q = A.toDescriptor("proto3");
    return {
      format: "Protocol Buffer 3 EnumDescriptorProto",
      type: Q.$type.toObject(Q, Sy0),
      fileDescriptorProtos: B
    }
  }

  function xQ6(A, B, Q, I) {
    if (A instanceof Vw.Service) return yQ6(A, B, Q, I);
    else if (A instanceof Vw.Type) return Um1(A, I);
    else if (A instanceof Vw.Enum) return kQ6(A, I);
    else throw new Error("Type mismatch in reflection object handling")
  }

  function PD1(A, B) {
    let Q = {};
    A.resolveAll();
    let G = A.toDescriptor("proto3").file.map((Z) => Buffer.from(Nm1.FileDescriptorProto.encode(Z).finish()));
    for (let [Z, D] of _y0(A, "")) Q[Z] = xQ6(D, Z, B, G);
    return Q
  }

  function jy0(A, B) {
    B = B || {};
    let Q = Vw.Root.fromDescriptor(A);
    return Q.resolveAll(), PD1(Q, B)
  }

  function fQ6(A, B) {
    return $m1.loadProtosWithOptions(A, B).then((Q) => {
      return PD1(Q, B)
    })
  }
  yy0.load = fQ6;

  function vQ6(A, B) {
    let Q = $m1.loadProtosWithOptionsSync(A, B);
    return PD1(Q, B)
  }
  yy0.loadSync = vQ6;

  function bQ6(A, B) {
    B = B || {};
    let Q = Vw.Root.fromJSON(A);
    return Q.resolveAll(), PD1(Q, B)
  }
  yy0.fromJSON = bQ6;

  function gQ6(A, B) {
    let Q = Nm1.FileDescriptorSet.decode(A);
    return jy0(Q, B)
  }
  yy0.loadFileDescriptorSetFromBuffer = gQ6;

  function hQ6(A, B) {
    let Q = Nm1.FileDescriptorSet.fromObject(A);
    return jy0(Q, B)
  }
  yy0.loadFileDescriptorSetFromObject = hQ6;
  $m1.addCommonProtos()
})
// @from(Start 4897469, End 4911229)
Aj = z((ay0) => {
  var __dirname = "/home/runner/work/claude-cli-internal/claude-cli-internal/node_modules/@grpc/grpc-js/build/src";
  Object.defineProperty(ay0, "__esModule", {
    value: !0
  });
  ay0.registerChannelzSocket = ay0.registerChannelzServer = ay0.registerChannelzSubchannel = ay0.registerChannelzChannel = ay0.ChannelzCallTrackerStub = ay0.ChannelzCallTracker = ay0.ChannelzChildrenTrackerStub = ay0.ChannelzChildrenTracker = ay0.ChannelzTrace = ay0.ChannelzTraceStub = void 0;
  ay0.unregisterChannelzRef = rQ6;
  ay0.getChannelzHandlers = iy0;
  ay0.getChannelzServiceDefinition = ny0;
  ay0.setup = Y76;
  var _D1 = Z1("net"),
    e_ = Z_0(),
    Jr = TX(),
    Fr = y6(),
    iQ6 = PX(),
    nQ6 = ID1(),
    aQ6 = xh1();

  function qm1(A) {
    return {
      channel_id: A.id,
      name: A.name
    }
  }

  function Mm1(A) {
    return {
      subchannel_id: A.id,
      name: A.name
    }
  }

  function sQ6(A) {
    return {
      server_id: A.id
    }
  }

  function jD1(A) {
    return {
      socket_id: A.id,
      name: A.name
    }
  }
  var fy0 = 32,
    Lm1 = 100;
  class hy0 {
    constructor() {
      this.events = [], this.creationTimestamp = new Date, this.eventsLogged = 0
    }
    addTrace() {}
    getTraceMessage() {
      return {
        creation_timestamp: Cw(this.creationTimestamp),
        num_events_logged: this.eventsLogged,
        events: []
      }
    }
  }
  ay0.ChannelzTraceStub = hy0;
  class my0 {
    constructor() {
      this.events = [], this.eventsLogged = 0, this.creationTimestamp = new Date
    }
    addTrace(A, B, Q) {
      let I = new Date;
      if (this.events.push({
          description: B,
          severity: A,
          timestamp: I,
          childChannel: (Q === null || Q === void 0 ? void 0 : Q.kind) === "channel" ? Q : void 0,
          childSubchannel: (Q === null || Q === void 0 ? void 0 : Q.kind) === "subchannel" ? Q : void 0
        }), this.events.length >= fy0 * 2) this.events = this.events.slice(fy0);
      this.eventsLogged += 1
    }
    getTraceMessage() {
      return {
        creation_timestamp: Cw(this.creationTimestamp),
        num_events_logged: this.eventsLogged,
        events: this.events.map((A) => {
          return {
            description: A.description,
            severity: A.severity,
            timestamp: Cw(A.timestamp),
            channel_ref: A.childChannel ? qm1(A.childChannel) : null,
            subchannel_ref: A.childSubchannel ? Mm1(A.childSubchannel) : null
          }
        })
      }
    }
  }
  ay0.ChannelzTrace = my0;
  class Rm1 {
    constructor() {
      this.channelChildren = new e_.OrderedMap, this.subchannelChildren = new e_.OrderedMap, this.socketChildren = new e_.OrderedMap, this.trackerMap = {
        ["channel"]: this.channelChildren,
        ["subchannel"]: this.subchannelChildren,
        ["socket"]: this.socketChildren
      }
    }
    refChild(A) {
      let B = this.trackerMap[A.kind],
        Q = B.find(A.id);
      if (Q.equals(B.end())) B.setElement(A.id, {
        ref: A,
        count: 1
      }, Q);
      else Q.pointer[1].count += 1
    }
    unrefChild(A) {
      let B = this.trackerMap[A.kind],
        Q = B.getElementByKey(A.id);
      if (Q !== void 0) {
        if (Q.count -= 1, Q.count === 0) B.eraseElementByKey(A.id)
      }
    }
    getChildLists() {
      return {
        channels: this.channelChildren,
        subchannels: this.subchannelChildren,
        sockets: this.socketChildren
      }
    }
  }
  ay0.ChannelzChildrenTracker = Rm1;
  class dy0 extends Rm1 {
    refChild() {}
    unrefChild() {}
  }
  ay0.ChannelzChildrenTrackerStub = dy0;
  class Om1 {
    constructor() {
      this.callsStarted = 0, this.callsSucceeded = 0, this.callsFailed = 0, this.lastCallStartedTimestamp = null
    }
    addCallStarted() {
      this.callsStarted += 1, this.lastCallStartedTimestamp = new Date
    }
    addCallSucceeded() {
      this.callsSucceeded += 1
    }
    addCallFailed() {
      this.callsFailed += 1
    }
  }
  ay0.ChannelzCallTracker = Om1;
  class uy0 extends Om1 {
    addCallStarted() {}
    addCallSucceeded() {}
    addCallFailed() {}
  }
  ay0.ChannelzCallTrackerStub = uy0;
  var yN = {
      ["channel"]: new e_.OrderedMap,
      ["subchannel"]: new e_.OrderedMap,
      ["server"]: new e_.OrderedMap,
      ["socket"]: new e_.OrderedMap
    },
    yD1 = (A) => {
      let B = 1;

      function Q() {
        return B++
      }
      let I = yN[A];
      return (G, Z, D) => {
        let Y = Q(),
          W = {
            id: Y,
            name: G,
            kind: A
          };
        if (D) I.setElement(Y, {
          ref: W,
          getInfo: Z
        });
        return W
      }
    };
  ay0.registerChannelzChannel = yD1("channel");
  ay0.registerChannelzSubchannel = yD1("subchannel");
  ay0.registerChannelzServer = yD1("server");
  ay0.registerChannelzSocket = yD1("socket");

  function rQ6(A) {
    yN[A.kind].eraseElementByKey(A.id)
  }

  function oQ6(A) {
    let B = Number.parseInt(A, 16);
    return [B / 256 | 0, B % 256]
  }

  function vy0(A) {
    if (A === "") return [];
    let B = A.split(":").map((I) => oQ6(I));
    return [].concat(...B)
  }

  function tQ6(A) {
    return _D1.isIPv6(A) && A.toLowerCase().startsWith("::ffff:") && _D1.isIPv4(A.substring(7))
  }

  function by0(A) {
    return Buffer.from(Uint8Array.from(A.split(".").map((B) => Number.parseInt(B))))
  }

  function eQ6(A) {
    if (_D1.isIPv4(A)) return by0(A);
    else if (tQ6(A)) return by0(A.substring(7));
    else if (_D1.isIPv6(A)) {
      let B, Q, I = A.indexOf("::");
      if (I === -1) B = A, Q = "";
      else B = A.substring(0, I), Q = A.substring(I + 2);
      let G = Buffer.from(vy0(B)),
        Z = Buffer.from(vy0(Q)),
        D = Buffer.alloc(16 - G.length - Z.length, 0);
      return Buffer.concat([G, D, Z])
    } else return null
  }

  function py0(A) {
    switch (A) {
      case Jr.ConnectivityState.CONNECTING:
        return {
          state: "CONNECTING"
        };
      case Jr.ConnectivityState.IDLE:
        return {
          state: "IDLE"
        };
      case Jr.ConnectivityState.READY:
        return {
          state: "READY"
        };
      case Jr.ConnectivityState.SHUTDOWN:
        return {
          state: "SHUTDOWN"
        };
      case Jr.ConnectivityState.TRANSIENT_FAILURE:
        return {
          state: "TRANSIENT_FAILURE"
        };
      default:
        return {
          state: "UNKNOWN"
        }
    }
  }

  function Cw(A) {
    if (!A) return null;
    let B = A.getTime();
    return {
      seconds: B / 1000 | 0,
      nanos: B % 1000 * 1e6
    }
  }

  function cy0(A) {
    let B = A.getInfo(),
      Q = [],
      I = [];
    return B.children.channels.forEach((G) => {
      Q.push(qm1(G[1].ref))
    }), B.children.subchannels.forEach((G) => {
      I.push(Mm1(G[1].ref))
    }), {
      ref: qm1(A.ref),
      data: {
        target: B.target,
        state: py0(B.state),
        calls_started: B.callTracker.callsStarted,
        calls_succeeded: B.callTracker.callsSucceeded,
        calls_failed: B.callTracker.callsFailed,
        last_call_started_timestamp: Cw(B.callTracker.lastCallStartedTimestamp),
        trace: B.trace.getTraceMessage()
      },
      channel_ref: Q,
      subchannel_ref: I
    }
  }

  function A76(A, B) {
    let Q = parseInt(A.request.channel_id, 10),
      I = yN.channel.getElementByKey(Q);
    if (I === void 0) {
      B({
        code: Fr.Status.NOT_FOUND,
        details: "No channel data found for id " + Q
      });
      return
    }
    B(null, {
      channel: cy0(I)
    })
  }

  function B76(A, B) {
    let Q = parseInt(A.request.max_results, 10) || Lm1,
      I = [],
      G = parseInt(A.request.start_channel_id, 10),
      Z = yN.channel,
      D;
    for (D = Z.lowerBound(G); !D.equals(Z.end()) && I.length < Q; D = D.next()) I.push(cy0(D.pointer[1]));
    B(null, {
      channel: I,
      end: D.equals(Z.end())
    })
  }

  function ly0(A) {
    let B = A.getInfo(),
      Q = [];
    return B.listenerChildren.sockets.forEach((I) => {
      Q.push(jD1(I[1].ref))
    }), {
      ref: sQ6(A.ref),
      data: {
        calls_started: B.callTracker.callsStarted,
        calls_succeeded: B.callTracker.callsSucceeded,
        calls_failed: B.callTracker.callsFailed,
        last_call_started_timestamp: Cw(B.callTracker.lastCallStartedTimestamp),
        trace: B.trace.getTraceMessage()
      },
      listen_socket: Q
    }
  }

  function Q76(A, B) {
    let Q = parseInt(A.request.server_id, 10),
      G = yN.server.getElementByKey(Q);
    if (G === void 0) {
      B({
        code: Fr.Status.NOT_FOUND,
        details: "No server data found for id " + Q
      });
      return
    }
    B(null, {
      server: ly0(G)
    })
  }

  function I76(A, B) {
    let Q = parseInt(A.request.max_results, 10) || Lm1,
      I = parseInt(A.request.start_server_id, 10),
      G = yN.server,
      Z = [],
      D;
    for (D = G.lowerBound(I); !D.equals(G.end()) && Z.length < Q; D = D.next()) Z.push(ly0(D.pointer[1]));
    B(null, {
      server: Z,
      end: D.equals(G.end())
    })
  }

  function G76(A, B) {
    let Q = parseInt(A.request.subchannel_id, 10),
      I = yN.subchannel.getElementByKey(Q);
    if (I === void 0) {
      B({
        code: Fr.Status.NOT_FOUND,
        details: "No subchannel data found for id " + Q
      });
      return
    }
    let G = I.getInfo(),
      Z = [];
    G.children.sockets.forEach((Y) => {
      Z.push(jD1(Y[1].ref))
    });
    let D = {
      ref: Mm1(I.ref),
      data: {
        target: G.target,
        state: py0(G.state),
        calls_started: G.callTracker.callsStarted,
        calls_succeeded: G.callTracker.callsSucceeded,
        calls_failed: G.callTracker.callsFailed,
        last_call_started_timestamp: Cw(G.callTracker.lastCallStartedTimestamp),
        trace: G.trace.getTraceMessage()
      },
      socket_ref: Z
    };
    B(null, {
      subchannel: D
    })
  }

  function gy0(A) {
    var B;
    if (iQ6.isTcpSubchannelAddress(A)) return {
      address: "tcpip_address",
      tcpip_address: {
        ip_address: (B = eQ6(A.host)) !== null && B !== void 0 ? B : void 0,
        port: A.port
      }
    };
    else return {
      address: "uds_address",
      uds_address: {
        filename: A.path
      }
    }
  }

  function Z76(A, B) {
    var Q, I, G, Z, D;
    let Y = parseInt(A.request.socket_id, 10),
      W = yN.socket.getElementByKey(Y);
    if (W === void 0) {
      B({
        code: Fr.Status.NOT_FOUND,
        details: "No socket data found for id " + Y
      });
      return
    }
    let J = W.getInfo(),
      F = J.security ? {
        model: "tls",
        tls: {
          cipher_suite: J.security.cipherSuiteStandardName ? "standard_name" : "other_name",
          standard_name: (Q = J.security.cipherSuiteStandardName) !== null && Q !== void 0 ? Q : void 0,
          other_name: (I = J.security.cipherSuiteOtherName) !== null && I !== void 0 ? I : void 0,
          local_certificate: (G = J.security.localCertificate) !== null && G !== void 0 ? G : void 0,
          remote_certificate: (Z = J.security.remoteCertificate) !== null && Z !== void 0 ? Z : void 0
        }
      } : null,
      X = {
        ref: jD1(W.ref),
        local: J.localAddress ? gy0(J.localAddress) : null,
        remote: J.remoteAddress ? gy0(J.remoteAddress) : null,
        remote_name: (D = J.remoteName) !== null && D !== void 0 ? D : void 0,
        security: F,
        data: {
          keep_alives_sent: J.keepAlivesSent,
          streams_started: J.streamsStarted,
          streams_succeeded: J.streamsSucceeded,
          streams_failed: J.streamsFailed,
          last_local_stream_created_timestamp: Cw(J.lastLocalStreamCreatedTimestamp),
          last_remote_stream_created_timestamp: Cw(J.lastRemoteStreamCreatedTimestamp),
          messages_received: J.messagesReceived,
          messages_sent: J.messagesSent,
          last_message_received_timestamp: Cw(J.lastMessageReceivedTimestamp),
          last_message_sent_timestamp: Cw(J.lastMessageSentTimestamp),
          local_flow_control_window: J.localFlowControlWindow ? {
            value: J.localFlowControlWindow
          } : null,
          remote_flow_control_window: J.remoteFlowControlWindow ? {
            value: J.remoteFlowControlWindow
          } : null
        }
      };
    B(null, {
      socket: X
    })
  }

  function D76(A, B) {
    let Q = parseInt(A.request.server_id, 10),
      I = yN.server.getElementByKey(Q);
    if (I === void 0) {
      B({
        code: Fr.Status.NOT_FOUND,
        details: "No server data found for id " + Q
      });
      return
    }
    let G = parseInt(A.request.start_socket_id, 10),
      Z = parseInt(A.request.max_results, 10) || Lm1,
      Y = I.getInfo().sessionChildren.sockets,
      W = [],
      J;
    for (J = Y.lowerBound(G); !J.equals(Y.end()) && W.length < Z; J = J.next()) W.push(jD1(J.pointer[1].ref));
    B(null, {
      socket_ref: W,
      end: J.equals(Y.end())
    })
  }

  function iy0() {
    return {
      GetChannel: A76,
      GetTopChannels: B76,
      GetServer: Q76,
      GetServers: I76,
      GetSubchannel: G76,
      GetSocket: Z76,
      GetServerSockets: D76
    }
  }
  var SD1 = null;

  function ny0() {
    if (SD1) return SD1;
    let A = xy0().loadSync,
      B = A("channelz.proto", {
        keepCase: !0,
        longs: String,
        enums: String,
        defaults: !0,
        oneofs: !0,
        includeDirs: [`${__dirname}/../../proto`]
      });
    return SD1 = aQ6.loadPackageDefinition(B).grpc.channelz.v1.Channelz.service, SD1
  }

  function Y76() {
    nQ6.registerAdminService(ny0, iy0)
  }
})
// @from(Start 4911235, End 4919372)
ey0 = z((oy0) => {
  Object.defineProperty(oy0, "__esModule", {
    value: !0
  });
  oy0.Subchannel = void 0;
  var $8 = TX(),
    $76 = cs(),
    Tm1 = GB(),
    kD1 = y6(),
    q76 = uY(),
    M76 = PX(),
    Kw = Aj(),
    L76 = "subchannel",
    R76 = 2147483647;
  class ry0 {
    constructor(A, B, Q, I, G) {
      var Z;
      this.channelTarget = A, this.subchannelAddress = B, this.options = Q, this.connector = G, this.connectivityState = $8.ConnectivityState.IDLE, this.transport = null, this.continueConnecting = !1, this.stateListeners = new Set, this.refcount = 0, this.channelzEnabled = !0;
      let D = {
        initialDelay: Q["grpc.initial_reconnect_backoff_ms"],
        maxDelay: Q["grpc.max_reconnect_backoff_ms"]
      };
      if (this.backoffTimeout = new $76.BackoffTimeout(() => {
          this.handleBackoffTimer()
        }, D), this.backoffTimeout.unref(), this.subchannelAddressString = M76.subchannelAddressToString(B), this.keepaliveTime = (Z = Q["grpc.keepalive_time_ms"]) !== null && Z !== void 0 ? Z : -1, Q["grpc.enable_channelz"] === 0) this.channelzEnabled = !1, this.channelzTrace = new Kw.ChannelzTraceStub, this.callTracker = new Kw.ChannelzCallTrackerStub, this.childrenTracker = new Kw.ChannelzChildrenTrackerStub, this.streamTracker = new Kw.ChannelzCallTrackerStub;
      else this.channelzTrace = new Kw.ChannelzTrace, this.callTracker = new Kw.ChannelzCallTracker, this.childrenTracker = new Kw.ChannelzChildrenTracker, this.streamTracker = new Kw.ChannelzCallTracker;
      this.channelzRef = Kw.registerChannelzSubchannel(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled), this.channelzTrace.addTrace("CT_INFO", "Subchannel created"), this.trace("Subchannel constructed with options " + JSON.stringify(Q, void 0, 2)), this.secureConnector = I._createSecureConnector(A, Q)
    }
    getChannelzInfo() {
      return {
        state: this.connectivityState,
        trace: this.channelzTrace,
        callTracker: this.callTracker,
        children: this.childrenTracker.getChildLists(),
        target: this.subchannelAddressString
      }
    }
    trace(A) {
      Tm1.trace(kD1.LogVerbosity.DEBUG, L76, "(" + this.channelzRef.id + ") " + this.subchannelAddressString + " " + A)
    }
    refTrace(A) {
      Tm1.trace(kD1.LogVerbosity.DEBUG, "subchannel_refcount", "(" + this.channelzRef.id + ") " + this.subchannelAddressString + " " + A)
    }
    handleBackoffTimer() {
      if (this.continueConnecting) this.transitionToState([$8.ConnectivityState.TRANSIENT_FAILURE], $8.ConnectivityState.CONNECTING);
      else this.transitionToState([$8.ConnectivityState.TRANSIENT_FAILURE], $8.ConnectivityState.IDLE)
    }
    startBackoff() {
      this.backoffTimeout.runOnce()
    }
    stopBackoff() {
      this.backoffTimeout.stop(), this.backoffTimeout.reset()
    }
    startConnectingInternal() {
      let A = this.options;
      if (A["grpc.keepalive_time_ms"]) {
        let B = Math.min(this.keepaliveTime, R76);
        A = Object.assign(Object.assign({}, A), {
          "grpc.keepalive_time_ms": B
        })
      }
      this.connector.connect(this.subchannelAddress, this.secureConnector, A).then((B) => {
        if (this.transitionToState([$8.ConnectivityState.CONNECTING], $8.ConnectivityState.READY)) {
          if (this.transport = B, this.channelzEnabled) this.childrenTracker.refChild(B.getChannelzRef());
          B.addDisconnectListener((Q) => {
            if (this.transitionToState([$8.ConnectivityState.READY], $8.ConnectivityState.IDLE), Q && this.keepaliveTime > 0) this.keepaliveTime *= 2, Tm1.log(kD1.LogVerbosity.ERROR, `Connection to ${q76.uriToString(this.channelTarget)} at ${this.subchannelAddressString} rejected by server because of excess pings. Increasing ping interval to ${this.keepaliveTime} ms`)
          })
        } else B.shutdown()
      }, (B) => {
        this.transitionToState([$8.ConnectivityState.CONNECTING], $8.ConnectivityState.TRANSIENT_FAILURE, `${B}`)
      })
    }
    transitionToState(A, B, Q) {
      var I, G;
      if (A.indexOf(this.connectivityState) === -1) return !1;
      if (Q) this.trace($8.ConnectivityState[this.connectivityState] + " -> " + $8.ConnectivityState[B] + ' with error "' + Q + '"');
      else this.trace($8.ConnectivityState[this.connectivityState] + " -> " + $8.ConnectivityState[B]);
      if (this.channelzEnabled) this.channelzTrace.addTrace("CT_INFO", "Connectivity state change to " + $8.ConnectivityState[B]);
      let Z = this.connectivityState;
      switch (this.connectivityState = B, B) {
        case $8.ConnectivityState.READY:
          this.stopBackoff();
          break;
        case $8.ConnectivityState.CONNECTING:
          this.startBackoff(), this.startConnectingInternal(), this.continueConnecting = !1;
          break;
        case $8.ConnectivityState.TRANSIENT_FAILURE:
          if (this.channelzEnabled && this.transport) this.childrenTracker.unrefChild(this.transport.getChannelzRef());
          if ((I = this.transport) === null || I === void 0 || I.shutdown(), this.transport = null, !this.backoffTimeout.isRunning()) process.nextTick(() => {
            this.handleBackoffTimer()
          });
          break;
        case $8.ConnectivityState.IDLE:
          if (this.channelzEnabled && this.transport) this.childrenTracker.unrefChild(this.transport.getChannelzRef());
          (G = this.transport) === null || G === void 0 || G.shutdown(), this.transport = null;
          break;
        default:
          throw new Error(`Invalid state: unknown ConnectivityState ${B}`)
      }
      for (let D of this.stateListeners) D(this, Z, B, this.keepaliveTime, Q);
      return !0
    }
    ref() {
      this.refTrace("refcount " + this.refcount + " -> " + (this.refcount + 1)), this.refcount += 1
    }
    unref() {
      if (this.refTrace("refcount " + this.refcount + " -> " + (this.refcount - 1)), this.refcount -= 1, this.refcount === 0) this.channelzTrace.addTrace("CT_INFO", "Shutting down"), Kw.unregisterChannelzRef(this.channelzRef), this.secureConnector.destroy(), process.nextTick(() => {
        this.transitionToState([$8.ConnectivityState.CONNECTING, $8.ConnectivityState.READY], $8.ConnectivityState.IDLE)
      })
    }
    unrefIfOneRef() {
      if (this.refcount === 1) return this.unref(), !0;
      return !1
    }
    createCall(A, B, Q, I) {
      if (!this.transport) throw new Error("Cannot create call, subchannel not READY");
      let G;
      if (this.channelzEnabled) this.callTracker.addCallStarted(), this.streamTracker.addCallStarted(), G = {
        onCallEnd: (Z) => {
          if (Z.code === kD1.Status.OK) this.callTracker.addCallSucceeded();
          else this.callTracker.addCallFailed()
        }
      };
      else G = {};
      return this.transport.createCall(A, B, Q, I, G)
    }
    startConnecting() {
      process.nextTick(() => {
        if (!this.transitionToState([$8.ConnectivityState.IDLE], $8.ConnectivityState.CONNECTING)) {
          if (this.connectivityState === $8.ConnectivityState.TRANSIENT_FAILURE) this.continueConnecting = !0
        }
      })
    }
    getConnectivityState() {
      return this.connectivityState
    }
    addConnectivityStateListener(A) {
      this.stateListeners.add(A)
    }
    removeConnectivityStateListener(A) {
      this.stateListeners.delete(A)
    }
    resetBackoff() {
      process.nextTick(() => {
        this.backoffTimeout.reset(), this.transitionToState([$8.ConnectivityState.TRANSIENT_FAILURE], $8.ConnectivityState.CONNECTING)
      })
    }
    getAddress() {
      return this.subchannelAddressString
    }
    getChannelzRef() {
      return this.channelzRef
    }
    isHealthy() {
      return !0
    }
    addHealthStateWatcher(A) {}
    removeHealthStateWatcher(A) {}
    getRealSubchannel() {
      return this
    }
    realSubchannelEquals(A) {
      return A.getRealSubchannel() === this
    }
    throttleKeepalive(A) {
      if (A > this.keepaliveTime) this.keepaliveTime = A
    }
    getCallCredentials() {
      return this.secureConnector.getCallCredentials()
    }
  }
  oy0.Subchannel = ry0
})
// @from(Start 4919378, End 4919680)
Qk0 = z((Ak0) => {
  var Pm1;
  Object.defineProperty(Ak0, "__esModule", {
    value: !0
  });
  Ak0.GRPC_NODE_USE_ALTERNATIVE_RESOLVER = void 0;
  Ak0.GRPC_NODE_USE_ALTERNATIVE_RESOLVER = ((Pm1 = process.env.GRPC_NODE_USE_ALTERNATIVE_RESOLVER) !== null && Pm1 !== void 0 ? Pm1 : "false") === "true"
})
// @from(Start 4919686, End 4927600)
ym1 = z((Yk0) => {
  Object.defineProperty(Yk0, "__esModule", {
    value: !0
  });
  Yk0.DEFAULT_PORT = void 0;
  Yk0.setup = y76;
  var Ik0 = Zw(),
    Sm1 = Z1("dns"),
    O76 = Mh1(),
    _m1 = y6(),
    jm1 = SZ(),
    T76 = GB(),
    P76 = y6(),
    ER = uY(),
    Gk0 = Z1("net"),
    S76 = cs(),
    Zk0 = Qk0(),
    _76 = "dns_resolver";

  function Hw(A) {
    T76.trace(P76.LogVerbosity.DEBUG, _76, A)
  }
  Yk0.DEFAULT_PORT = 443;
  var j76 = 30000;
  class Dk0 {
    constructor(A, B, Q) {
      var I, G, Z;
      if (this.target = A, this.listener = B, this.pendingLookupPromise = null, this.pendingTxtPromise = null, this.latestLookupResult = null, this.latestServiceConfig = null, this.latestServiceConfigError = null, this.continueResolving = !1, this.isNextResolutionTimerRunning = !1, this.isServiceConfigEnabled = !0, this.returnedIpResult = !1, this.alternativeResolver = new Sm1.promises.Resolver, Hw("Resolver constructed for target " + ER.uriToString(A)), A.authority) this.alternativeResolver.setServers([A.authority]);
      let D = ER.splitHostPort(A.path);
      if (D === null) this.ipResult = null, this.dnsHostname = null, this.port = null;
      else if (Gk0.isIPv4(D.host) || Gk0.isIPv6(D.host)) this.ipResult = [{
        addresses: [{
          host: D.host,
          port: (I = D.port) !== null && I !== void 0 ? I : Yk0.DEFAULT_PORT
        }]
      }], this.dnsHostname = null, this.port = null;
      else this.ipResult = null, this.dnsHostname = D.host, this.port = (G = D.port) !== null && G !== void 0 ? G : Yk0.DEFAULT_PORT;
      if (this.percentage = Math.random() * 100, Q["grpc.service_config_disable_resolution"] === 1) this.isServiceConfigEnabled = !1;
      this.defaultResolutionError = {
        code: _m1.Status.UNAVAILABLE,
        details: `Name resolution failed for target ${ER.uriToString(this.target)}`,
        metadata: new jm1.Metadata
      };
      let Y = {
        initialDelay: Q["grpc.initial_reconnect_backoff_ms"],
        maxDelay: Q["grpc.max_reconnect_backoff_ms"]
      };
      this.backoff = new S76.BackoffTimeout(() => {
        if (this.continueResolving) this.startResolutionWithBackoff()
      }, Y), this.backoff.unref(), this.minTimeBetweenResolutionsMs = (Z = Q["grpc.dns_min_time_between_resolutions_ms"]) !== null && Z !== void 0 ? Z : j76, this.nextResolutionTimer = setTimeout(() => {}, 0), clearTimeout(this.nextResolutionTimer)
    }
    startResolution() {
      if (this.ipResult !== null) {
        if (!this.returnedIpResult) Hw("Returning IP address for target " + ER.uriToString(this.target)), setImmediate(() => {
          this.listener.onSuccessfulResolution(this.ipResult, null, null, null, {})
        }), this.returnedIpResult = !0;
        this.backoff.stop(), this.backoff.reset(), this.stopNextResolutionTimer();
        return
      }
      if (this.dnsHostname === null) Hw("Failed to parse DNS address " + ER.uriToString(this.target)), setImmediate(() => {
        this.listener.onError({
          code: _m1.Status.UNAVAILABLE,
          details: `Failed to parse DNS address ${ER.uriToString(this.target)}`,
          metadata: new jm1.Metadata
        })
      }), this.stopNextResolutionTimer();
      else {
        if (this.pendingLookupPromise !== null) return;
        Hw("Looking up DNS hostname " + this.dnsHostname), this.latestLookupResult = null;
        let A = this.dnsHostname;
        if (this.pendingLookupPromise = this.lookup(A), this.pendingLookupPromise.then((B) => {
            if (this.pendingLookupPromise === null) return;
            this.pendingLookupPromise = null, this.backoff.reset(), this.backoff.stop(), this.latestLookupResult = B.map((I) => ({
              addresses: [I]
            }));
            let Q = "[" + B.map((I) => I.host + ":" + I.port).join(",") + "]";
            if (Hw("Resolved addresses for target " + ER.uriToString(this.target) + ": " + Q), this.latestLookupResult.length === 0) {
              this.listener.onError(this.defaultResolutionError);
              return
            }
            this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {})
          }, (B) => {
            if (this.pendingLookupPromise === null) return;
            Hw("Resolution error for target " + ER.uriToString(this.target) + ": " + B.message), this.pendingLookupPromise = null, this.stopNextResolutionTimer(), this.listener.onError(this.defaultResolutionError)
          }), this.isServiceConfigEnabled && this.pendingTxtPromise === null) this.pendingTxtPromise = this.resolveTxt(A), this.pendingTxtPromise.then((B) => {
          if (this.pendingTxtPromise === null) return;
          this.pendingTxtPromise = null;
          try {
            this.latestServiceConfig = O76.extractAndSelectServiceConfig(B, this.percentage)
          } catch (Q) {
            this.latestServiceConfigError = {
              code: _m1.Status.UNAVAILABLE,
              details: `Parsing service config failed with error ${Q.message}`,
              metadata: new jm1.Metadata
            }
          }
          if (this.latestLookupResult !== null) this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {})
        }, (B) => {})
      }
    }
    async lookup(A) {
      if (Zk0.GRPC_NODE_USE_ALTERNATIVE_RESOLVER) {
        Hw("Using alternative DNS resolver.");
        let Q = await Promise.allSettled([this.alternativeResolver.resolve4(A), this.alternativeResolver.resolve6(A)]);
        if (Q.every((I) => I.status === "rejected")) throw new Error(Q[0].reason);
        return Q.reduce((I, G) => {
          return G.status === "fulfilled" ? [...I, ...G.value] : I
        }, []).map((I) => ({
          host: I,
          port: +this.port
        }))
      }
      return (await Sm1.promises.lookup(A, {
        all: !0
      })).map((Q) => ({
        host: Q.address,
        port: +this.port
      }))
    }
    async resolveTxt(A) {
      if (Zk0.GRPC_NODE_USE_ALTERNATIVE_RESOLVER) return Hw("Using alternative DNS resolver."), this.alternativeResolver.resolveTxt(A);
      return Sm1.promises.resolveTxt(A)
    }
    startNextResolutionTimer() {
      var A, B;
      clearTimeout(this.nextResolutionTimer), this.nextResolutionTimer = setTimeout(() => {
        if (this.stopNextResolutionTimer(), this.continueResolving) this.startResolutionWithBackoff()
      }, this.minTimeBetweenResolutionsMs), (B = (A = this.nextResolutionTimer).unref) === null || B === void 0 || B.call(A), this.isNextResolutionTimerRunning = !0
    }
    stopNextResolutionTimer() {
      clearTimeout(this.nextResolutionTimer), this.isNextResolutionTimerRunning = !1
    }
    startResolutionWithBackoff() {
      if (this.pendingLookupPromise === null) this.continueResolving = !1, this.backoff.runOnce(), this.startNextResolutionTimer(), this.startResolution()
    }
    updateResolution() {
      if (this.pendingLookupPromise === null)
        if (this.isNextResolutionTimerRunning || this.backoff.isRunning()) {
          if (this.isNextResolutionTimerRunning) Hw('resolution update delayed by "min time between resolutions" rate limit');
          else Hw("resolution update delayed by backoff timer until " + this.backoff.getEndTime().toISOString());
          this.continueResolving = !0
        } else this.startResolutionWithBackoff()
    }
    destroy() {
      this.continueResolving = !1, this.backoff.reset(), this.backoff.stop(), this.stopNextResolutionTimer(), this.pendingLookupPromise = null, this.pendingTxtPromise = null, this.latestLookupResult = null, this.latestServiceConfig = null, this.latestServiceConfigError = null, this.returnedIpResult = !1
    }
    static getDefaultAuthority(A) {
      return A.path
    }
  }

  function y76() {
    Ik0.registerResolver("dns", Dk0), Ik0.registerDefaultScheme("dns")
  }
})
// @from(Start 4927606, End 4932290)
km1 = z((Vk0) => {
  Object.defineProperty(Vk0, "__esModule", {
    value: !0
  });
  Vk0.parseCIDR = Fk0;
  Vk0.mapProxyName = p76;
  Vk0.getProxiedConnection = c76;
  var Xr = GB(),
    Dh = y6(),
    Jk0 = Z1("net"),
    x76 = Z1("http"),
    f76 = GB(),
    Wk0 = PX(),
    Vr = uY(),
    v76 = Z1("url"),
    b76 = ym1(),
    g76 = "proxy";

  function Yh(A) {
    f76.trace(Dh.LogVerbosity.DEBUG, g76, A)
  }

  function h76() {
    let A = "",
      B = "";
    if (process.env.grpc_proxy) B = "grpc_proxy", A = process.env.grpc_proxy;
    else if (process.env.https_proxy) B = "https_proxy", A = process.env.https_proxy;
    else if (process.env.http_proxy) B = "http_proxy", A = process.env.http_proxy;
    else return {};
    let Q;
    try {
      Q = new v76.URL(A)
    } catch (Y) {
      return Xr.log(Dh.LogVerbosity.ERROR, `cannot parse value of "${B}" env var`), {}
    }
    if (Q.protocol !== "http:") return Xr.log(Dh.LogVerbosity.ERROR, `"${Q.protocol}" scheme not supported in proxy URI`), {};
    let I = null;
    if (Q.username)
      if (Q.password) Xr.log(Dh.LogVerbosity.INFO, "userinfo found in proxy URI"), I = decodeURIComponent(`${Q.username}:${Q.password}`);
      else I = Q.username;
    let {
      hostname: G,
      port: Z
    } = Q;
    if (Z === "") Z = "80";
    let D = {
      address: `${G}:${Z}`
    };
    if (I) D.creds = I;
    return Yh("Proxy server " + D.address + " set by environment variable " + B), D
  }

  function m76() {
    let A = process.env.no_grpc_proxy,
      B = "no_grpc_proxy";
    if (!A) A = process.env.no_proxy, B = "no_proxy";
    if (A) return Yh("No proxy server list set by environment variable " + B), A.split(",");
    else return []
  }

  function Fk0(A) {
    let B = A.split("/");
    if (B.length !== 2) return null;
    let Q = parseInt(B[1], 10);
    if (!Jk0.isIPv4(B[0]) || Number.isNaN(Q) || Q < 0 || Q > 32) return null;
    return {
      ip: Xk0(B[0]),
      prefixLength: Q
    }
  }

  function Xk0(A) {
    return A.split(".").reduce((B, Q) => (B << 8) + parseInt(Q, 10), 0)
  }

  function d76(A, B) {
    let Q = A.ip,
      I = -1 << 32 - A.prefixLength;
    return (Xk0(B) & I) === (Q & I)
  }

  function u76(A) {
    for (let B of m76()) {
      let Q = Fk0(B);
      if (Jk0.isIPv4(A) && Q && d76(Q, A)) return !0;
      else if (A.endsWith(B)) return !0
    }
    return !1
  }

  function p76(A, B) {
    var Q;
    let I = {
      target: A,
      extraOptions: {}
    };
    if (((Q = B["grpc.enable_http_proxy"]) !== null && Q !== void 0 ? Q : 1) === 0) return I;
    if (A.scheme === "unix") return I;
    let G = h76();
    if (!G.address) return I;
    let Z = Vr.splitHostPort(A.path);
    if (!Z) return I;
    let D = Z.host;
    if (u76(D)) return Yh("Not using proxy for target in no_proxy list: " + Vr.uriToString(A)), I;
    let Y = {
      "grpc.http_connect_target": Vr.uriToString(A)
    };
    if (G.creds) Y["grpc.http_connect_creds"] = G.creds;
    return {
      target: {
        scheme: "dns",
        path: G.address
      },
      extraOptions: Y
    }
  }

  function c76(A, B) {
    var Q;
    if (!("grpc.http_connect_target" in B)) return Promise.resolve(null);
    let I = B["grpc.http_connect_target"],
      G = Vr.parseUri(I);
    if (G === null) return Promise.resolve(null);
    let Z = Vr.splitHostPort(G.path);
    if (Z === null) return Promise.resolve(null);
    let D = `${Z.host}:${(Q=Z.port)!==null&&Q!==void 0?Q:b76.DEFAULT_PORT}`,
      Y = {
        method: "CONNECT",
        path: D
      },
      W = {
        Host: D
      };
    if (Wk0.isTcpSubchannelAddress(A)) Y.host = A.host, Y.port = A.port;
    else Y.socketPath = A.path;
    if ("grpc.http_connect_creds" in B) W["Proxy-Authorization"] = "Basic " + Buffer.from(B["grpc.http_connect_creds"]).toString("base64");
    Y.headers = W;
    let J = Wk0.subchannelAddressToString(A);
    return Yh("Using proxy " + J + " to connect to " + Y.path), new Promise((F, X) => {
      let V = x76.request(Y);
      V.once("connect", (C, K, E) => {
        if (V.removeAllListeners(), K.removeAllListeners(), C.statusCode === 200) {
          if (Yh("Successfully connected to " + Y.path + " through proxy " + J), E.length > 0) K.unshift(E);
          Yh("Successfully established a plaintext connection to " + Y.path + " through proxy " + J), F(K)
        } else Xr.log(Dh.LogVerbosity.ERROR, "Failed to connect to " + Y.path + " through proxy " + J + " with status " + C.statusCode), X()
      }), V.once("error", (C) => {
        V.removeAllListeners(), Xr.log(Dh.LogVerbosity.ERROR, "Failed to connect to proxy " + J + " with error " + C.message), X()
      }), V.end()
    })
  }
})
// @from(Start 4932296, End 4934706)
xm1 = z((Kk0) => {
  Object.defineProperty(Kk0, "__esModule", {
    value: !0
  });
  Kk0.StreamDecoder = void 0;
  var zw;
  (function(A) {
    A[A.NO_DATA = 0] = "NO_DATA", A[A.READING_SIZE = 1] = "READING_SIZE", A[A.READING_MESSAGE = 2] = "READING_MESSAGE"
  })(zw || (zw = {}));
  class Ck0 {
    constructor(A) {
      this.maxReadMessageLength = A, this.readState = zw.NO_DATA, this.readCompressFlag = Buffer.alloc(1), this.readPartialSize = Buffer.alloc(4), this.readSizeRemaining = 4, this.readMessageSize = 0, this.readPartialMessage = [], this.readMessageRemaining = 0
    }
    write(A) {
      let B = 0,
        Q, I = [];
      while (B < A.length) switch (this.readState) {
        case zw.NO_DATA:
          this.readCompressFlag = A.slice(B, B + 1), B += 1, this.readState = zw.READING_SIZE, this.readPartialSize.fill(0), this.readSizeRemaining = 4, this.readMessageSize = 0, this.readMessageRemaining = 0, this.readPartialMessage = [];
          break;
        case zw.READING_SIZE:
          if (Q = Math.min(A.length - B, this.readSizeRemaining), A.copy(this.readPartialSize, 4 - this.readSizeRemaining, B, B + Q), this.readSizeRemaining -= Q, B += Q, this.readSizeRemaining === 0) {
            if (this.readMessageSize = this.readPartialSize.readUInt32BE(0), this.maxReadMessageLength !== -1 && this.readMessageSize > this.maxReadMessageLength) throw new Error(`Received message larger than max (${this.readMessageSize} vs ${this.maxReadMessageLength})`);
            if (this.readMessageRemaining = this.readMessageSize, this.readMessageRemaining > 0) this.readState = zw.READING_MESSAGE;
            else {
              let G = Buffer.concat([this.readCompressFlag, this.readPartialSize], 5);
              this.readState = zw.NO_DATA, I.push(G)
            }
          }
          break;
        case zw.READING_MESSAGE:
          if (Q = Math.min(A.length - B, this.readMessageRemaining), this.readPartialMessage.push(A.slice(B, B + Q)), this.readMessageRemaining -= Q, B += Q, this.readMessageRemaining === 0) {
            let G = [this.readCompressFlag, this.readPartialSize].concat(this.readPartialMessage),
              Z = Buffer.concat(G, this.readMessageSize + 5);
            this.readState = zw.NO_DATA, I.push(Z)
          }
          break;
        default:
          throw new Error("Unexpected read state")
      }
      return I
    }
  }
  Kk0.StreamDecoder = Ck0
})
// @from(Start 4934712, End 4945593)
Uk0 = z((wk0) => {
  Object.defineProperty(wk0, "__esModule", {
    value: !0
  });
  wk0.Http2SubchannelCall = void 0;
  var kN = Z1("http2"),
    a76 = Z1("os"),
    q8 = y6(),
    xN = SZ(),
    s76 = xm1(),
    r76 = GB(),
    o76 = y6(),
    t76 = "subchannel_call";

  function e76(A) {
    for (let [B, Q] of Object.entries(a76.constants.errno))
      if (Q === A) return B;
    return "Unknown system error " + A
  }

  function fm1(A) {
    let B = `Received HTTP status code ${A}`,
      Q;
    switch (A) {
      case 400:
        Q = q8.Status.INTERNAL;
        break;
      case 401:
        Q = q8.Status.UNAUTHENTICATED;
        break;
      case 403:
        Q = q8.Status.PERMISSION_DENIED;
        break;
      case 404:
        Q = q8.Status.UNIMPLEMENTED;
        break;
      case 429:
      case 502:
      case 503:
      case 504:
        Q = q8.Status.UNAVAILABLE;
        break;
      default:
        Q = q8.Status.UNKNOWN
    }
    return {
      code: Q,
      details: B,
      metadata: new xN.Metadata
    }
  }
  class zk0 {
    constructor(A, B, Q, I, G) {
      var Z;
      this.http2Stream = A, this.callEventTracker = B, this.listener = Q, this.transport = I, this.callId = G, this.isReadFilterPending = !1, this.isPushPending = !1, this.canPush = !1, this.readsClosed = !1, this.statusOutput = !1, this.unpushedReadMessages = [], this.finalStatus = null, this.internalError = null, this.serverEndedCall = !1, this.connectionDropped = !1;
      let D = (Z = I.getOptions()["grpc.max_receive_message_length"]) !== null && Z !== void 0 ? Z : q8.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;
      this.decoder = new s76.StreamDecoder(D), A.on("response", (Y, W) => {
        let J = "";
        for (let F of Object.keys(Y)) J += "\t\t" + F + ": " + Y[F] + `
`;
        if (this.trace(`Received server headers:
` + J), this.httpStatusCode = Y[":status"], W & kN.constants.NGHTTP2_FLAG_END_STREAM) this.handleTrailers(Y);
        else {
          let F;
          try {
            F = xN.Metadata.fromHttp2Headers(Y)
          } catch (X) {
            this.endCall({
              code: q8.Status.UNKNOWN,
              details: X.message,
              metadata: new xN.Metadata
            });
            return
          }
          this.listener.onReceiveMetadata(F)
        }
      }), A.on("trailers", (Y) => {
        this.handleTrailers(Y)
      }), A.on("data", (Y) => {
        if (this.statusOutput) return;
        this.trace("receive HTTP/2 data frame of length " + Y.length);
        let W;
        try {
          W = this.decoder.write(Y)
        } catch (J) {
          if (this.httpStatusCode !== void 0 && this.httpStatusCode !== 200) {
            let F = fm1(this.httpStatusCode);
            this.cancelWithStatus(F.code, F.details)
          } else this.cancelWithStatus(q8.Status.RESOURCE_EXHAUSTED, J.message);
          return
        }
        for (let J of W) this.trace("parsed message of length " + J.length), this.callEventTracker.addMessageReceived(), this.tryPush(J)
      }), A.on("end", () => {
        this.readsClosed = !0, this.maybeOutputStatus()
      }), A.on("close", () => {
        this.serverEndedCall = !0, process.nextTick(() => {
          var Y;
          if (this.trace("HTTP/2 stream closed with code " + A.rstCode), ((Y = this.finalStatus) === null || Y === void 0 ? void 0 : Y.code) === q8.Status.OK) return;
          let W, J = "";
          switch (A.rstCode) {
            case kN.constants.NGHTTP2_NO_ERROR:
              if (this.finalStatus !== null) return;
              if (this.httpStatusCode && this.httpStatusCode !== 200) {
                let F = fm1(this.httpStatusCode);
                W = F.code, J = F.details
              } else W = q8.Status.INTERNAL, J = `Received RST_STREAM with code ${A.rstCode} (Call ended without gRPC status)`;
              break;
            case kN.constants.NGHTTP2_REFUSED_STREAM:
              W = q8.Status.UNAVAILABLE, J = "Stream refused by server";
              break;
            case kN.constants.NGHTTP2_CANCEL:
              if (this.connectionDropped) W = q8.Status.UNAVAILABLE, J = "Connection dropped";
              else W = q8.Status.CANCELLED, J = "Call cancelled";
              break;
            case kN.constants.NGHTTP2_ENHANCE_YOUR_CALM:
              W = q8.Status.RESOURCE_EXHAUSTED, J = "Bandwidth exhausted or memory limit exceeded";
              break;
            case kN.constants.NGHTTP2_INADEQUATE_SECURITY:
              W = q8.Status.PERMISSION_DENIED, J = "Protocol not secure enough";
              break;
            case kN.constants.NGHTTP2_INTERNAL_ERROR:
              if (W = q8.Status.INTERNAL, this.internalError === null) J = `Received RST_STREAM with code ${A.rstCode} (Internal server error)`;
              else if (this.internalError.code === "ECONNRESET" || this.internalError.code === "ETIMEDOUT") W = q8.Status.UNAVAILABLE, J = this.internalError.message;
              else J = `Received RST_STREAM with code ${A.rstCode} triggered by internal client error: ${this.internalError.message}`;
              break;
            default:
              W = q8.Status.INTERNAL, J = `Received RST_STREAM with code ${A.rstCode}`
          }
          this.endCall({
            code: W,
            details: J,
            metadata: new xN.Metadata,
            rstCode: A.rstCode
          })
        })
      }), A.on("error", (Y) => {
        if (Y.code !== "ERR_HTTP2_STREAM_ERROR") this.trace("Node error event: message=" + Y.message + " code=" + Y.code + " errno=" + e76(Y.errno) + " syscall=" + Y.syscall), this.internalError = Y;
        this.callEventTracker.onStreamEnd(!1)
      })
    }
    getDeadlineInfo() {
      return [`remote_addr=${this.getPeer()}`]
    }
    onDisconnect() {
      this.connectionDropped = !0, setImmediate(() => {
        this.endCall({
          code: q8.Status.UNAVAILABLE,
          details: "Connection dropped",
          metadata: new xN.Metadata
        })
      })
    }
    outputStatus() {
      if (!this.statusOutput) this.statusOutput = !0, this.trace("ended with status: code=" + this.finalStatus.code + ' details="' + this.finalStatus.details + '"'), this.callEventTracker.onCallEnd(this.finalStatus), process.nextTick(() => {
        this.listener.onReceiveStatus(this.finalStatus)
      }), this.http2Stream.resume()
    }
    trace(A) {
      r76.trace(o76.LogVerbosity.DEBUG, t76, "[" + this.callId + "] " + A)
    }
    endCall(A) {
      if (this.finalStatus === null || this.finalStatus.code === q8.Status.OK) this.finalStatus = A, this.maybeOutputStatus();
      this.destroyHttp2Stream()
    }
    maybeOutputStatus() {
      if (this.finalStatus !== null) {
        if (this.finalStatus.code !== q8.Status.OK || this.readsClosed && this.unpushedReadMessages.length === 0 && !this.isReadFilterPending && !this.isPushPending) this.outputStatus()
      }
    }
    push(A) {
      this.trace("pushing to reader message of length " + (A instanceof Buffer ? A.length : null)), this.canPush = !1, this.isPushPending = !0, process.nextTick(() => {
        if (this.isPushPending = !1, this.statusOutput) return;
        this.listener.onReceiveMessage(A), this.maybeOutputStatus()
      })
    }
    tryPush(A) {
      if (this.canPush) this.http2Stream.pause(), this.push(A);
      else this.trace("unpushedReadMessages.push message of length " + A.length), this.unpushedReadMessages.push(A)
    }
    handleTrailers(A) {
      this.serverEndedCall = !0, this.callEventTracker.onStreamEnd(!0);
      let B = "";
      for (let Z of Object.keys(A)) B += "\t\t" + Z + ": " + A[Z] + `
`;
      this.trace(`Received server trailers:
` + B);
      let Q;
      try {
        Q = xN.Metadata.fromHttp2Headers(A)
      } catch (Z) {
        Q = new xN.Metadata
      }
      let I = Q.getMap(),
        G;
      if (typeof I["grpc-status"] === "string") {
        let Z = Number(I["grpc-status"]);
        this.trace("received status code " + Z + " from server"), Q.remove("grpc-status");
        let D = "";
        if (typeof I["grpc-message"] === "string") {
          try {
            D = decodeURI(I["grpc-message"])
          } catch (Y) {
            D = I["grpc-message"]
          }
          Q.remove("grpc-message"), this.trace('received status details string "' + D + '" from server')
        }
        G = {
          code: Z,
          details: D,
          metadata: Q
        }
      } else if (this.httpStatusCode) G = fm1(this.httpStatusCode), G.metadata = Q;
      else G = {
        code: q8.Status.UNKNOWN,
        details: "No status information received",
        metadata: Q
      };
      this.endCall(G)
    }
    destroyHttp2Stream() {
      var A;
      if (this.http2Stream.destroyed) return;
      if (this.serverEndedCall) this.http2Stream.end();
      else {
        let B;
        if (((A = this.finalStatus) === null || A === void 0 ? void 0 : A.code) === q8.Status.OK) B = kN.constants.NGHTTP2_NO_ERROR;
        else B = kN.constants.NGHTTP2_CANCEL;
        this.trace("close http2 stream with code " + B), this.http2Stream.close(B)
      }
    }
    cancelWithStatus(A, B) {
      this.trace("cancelWithStatus code: " + A + ' details: "' + B + '"'), this.endCall({
        code: A,
        details: B,
        metadata: new xN.Metadata
      })
    }
    getStatus() {
      return this.finalStatus
    }
    getPeer() {
      return this.transport.getPeerName()
    }
    getCallNumber() {
      return this.callId
    }
    startRead() {
      if (this.finalStatus !== null && this.finalStatus.code !== q8.Status.OK) {
        this.readsClosed = !0, this.maybeOutputStatus();
        return
      }
      if (this.canPush = !0, this.unpushedReadMessages.length > 0) {
        let A = this.unpushedReadMessages.shift();
        this.push(A);
        return
      }
      this.http2Stream.resume()
    }
    sendMessageWithContext(A, B) {
      this.trace("write() called with message of length " + B.length);
      let Q = (I) => {
        process.nextTick(() => {
          var G;
          let Z = q8.Status.UNAVAILABLE;
          if ((I === null || I === void 0 ? void 0 : I.code) === "ERR_STREAM_WRITE_AFTER_END") Z = q8.Status.INTERNAL;
          if (I) this.cancelWithStatus(Z, `Write error: ${I.message}`);
          (G = A.callback) === null || G === void 0 || G.call(A)
        })
      };
      this.trace("sending data chunk of length " + B.length), this.callEventTracker.addMessageSent();
      try {
        this.http2Stream.write(B, Q)
      } catch (I) {
        this.endCall({
          code: q8.Status.UNAVAILABLE,
          details: `Write failed with error ${I.message}`,
          metadata: new xN.Metadata
        })
      }
    }
    halfClose() {
      this.trace("end() called"), this.trace("calling end() on HTTP/2 stream"), this.http2Stream.end()
    }
  }
  wk0.Http2SubchannelCall = zk0
})
// @from(Start 4945599, End 4945772)
vm1 = z((Nk0) => {
  Object.defineProperty(Nk0, "__esModule", {
    value: !0
  });
  Nk0.getNextCallNumber = BI6;
  var AI6 = 0;

  function BI6() {
    return AI6++
  }
})
// @from(Start 4945778, End 4959976)
Rk0 = z((Mk0) => {
  Object.defineProperty(Mk0, "__esModule", {
    value: !0
  });
  Mk0.Http2SubchannelConnector = void 0;
  var bD1 = Z1("http2"),
    fD1 = Aj(),
    Cr = y6(),
    II6 = km1(),
    Wh = GB(),
    GI6 = Zw(),
    vD1 = PX(),
    bm1 = uY(),
    ZI6 = Z1("net"),
    DI6 = Uk0(),
    YI6 = vm1(),
    gm1 = "transport",
    WI6 = "transport_flowctrl",
    JI6 = Dh1().version,
    {
      HTTP2_HEADER_AUTHORITY: FI6,
      HTTP2_HEADER_CONTENT_TYPE: XI6,
      HTTP2_HEADER_METHOD: VI6,
      HTTP2_HEADER_PATH: CI6,
      HTTP2_HEADER_TE: KI6,
      HTTP2_HEADER_USER_AGENT: HI6
    } = bD1.constants,
    zI6 = 20000,
    wI6 = Buffer.from("too_many_pings", "ascii");
  class $k0 {
    constructor(A, B, Q, I) {
      if (this.session = A, this.options = Q, this.remoteName = I, this.keepaliveTimer = null, this.pendingSendKeepalivePing = !1, this.activeCalls = new Set, this.disconnectListeners = [], this.disconnectHandled = !1, this.channelzEnabled = !0, this.keepalivesSent = 0, this.messagesSent = 0, this.messagesReceived = 0, this.lastMessageSentTimestamp = null, this.lastMessageReceivedTimestamp = null, this.subchannelAddressString = vD1.subchannelAddressToString(B), Q["grpc.enable_channelz"] === 0) this.channelzEnabled = !1, this.streamTracker = new fD1.ChannelzCallTrackerStub;
      else this.streamTracker = new fD1.ChannelzCallTracker;
      if (this.channelzRef = fD1.registerChannelzSocket(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled), this.userAgent = [Q["grpc.primary_user_agent"], `grpc-node-js/${JI6}`, Q["grpc.secondary_user_agent"]].filter((G) => G).join(" "), "grpc.keepalive_time_ms" in Q) this.keepaliveTimeMs = Q["grpc.keepalive_time_ms"];
      else this.keepaliveTimeMs = -1;
      if ("grpc.keepalive_timeout_ms" in Q) this.keepaliveTimeoutMs = Q["grpc.keepalive_timeout_ms"];
      else this.keepaliveTimeoutMs = zI6;
      if ("grpc.keepalive_permit_without_calls" in Q) this.keepaliveWithoutCalls = Q["grpc.keepalive_permit_without_calls"] === 1;
      else this.keepaliveWithoutCalls = !1;
      if (A.once("close", () => {
          this.trace("session closed"), this.handleDisconnect()
        }), A.once("goaway", (G, Z, D) => {
          let Y = !1;
          if (G === bD1.constants.NGHTTP2_ENHANCE_YOUR_CALM && D && D.equals(wI6)) Y = !0;
          this.trace("connection closed by GOAWAY with code " + G + " and data " + (D === null || D === void 0 ? void 0 : D.toString())), this.reportDisconnectToOwner(Y)
        }), A.once("error", (G) => {
          this.trace("connection closed with error " + G.message), this.handleDisconnect()
        }), A.socket.once("close", (G) => {
          this.trace("connection closed. hadError=" + G), this.handleDisconnect()
        }), Wh.isTracerEnabled(gm1)) A.on("remoteSettings", (G) => {
        this.trace("new settings received" + (this.session !== A ? " on the old connection" : "") + ": " + JSON.stringify(G))
      }), A.on("localSettings", (G) => {
        this.trace("local settings acknowledged by remote" + (this.session !== A ? " on the old connection" : "") + ": " + JSON.stringify(G))
      });
      if (this.keepaliveWithoutCalls) this.maybeStartKeepalivePingTimer()
    }
    getChannelzInfo() {
      var A, B, Q;
      let I = this.session.socket,
        G = I.remoteAddress ? vD1.stringToSubchannelAddress(I.remoteAddress, I.remotePort) : null,
        Z = I.localAddress ? vD1.stringToSubchannelAddress(I.localAddress, I.localPort) : null,
        D;
      if (this.session.encrypted) {
        let W = I,
          J = W.getCipher(),
          F = W.getCertificate(),
          X = W.getPeerCertificate();
        D = {
          cipherSuiteStandardName: (A = J.standardName) !== null && A !== void 0 ? A : null,
          cipherSuiteOtherName: J.standardName ? null : J.name,
          localCertificate: F && "raw" in F ? F.raw : null,
          remoteCertificate: X && "raw" in X ? X.raw : null
        }
      } else D = null;
      return {
        remoteAddress: G,
        localAddress: Z,
        security: D,
        remoteName: this.remoteName,
        streamsStarted: this.streamTracker.callsStarted,
        streamsSucceeded: this.streamTracker.callsSucceeded,
        streamsFailed: this.streamTracker.callsFailed,
        messagesSent: this.messagesSent,
        messagesReceived: this.messagesReceived,
        keepAlivesSent: this.keepalivesSent,
        lastLocalStreamCreatedTimestamp: this.streamTracker.lastCallStartedTimestamp,
        lastRemoteStreamCreatedTimestamp: null,
        lastMessageSentTimestamp: this.lastMessageSentTimestamp,
        lastMessageReceivedTimestamp: this.lastMessageReceivedTimestamp,
        localFlowControlWindow: (B = this.session.state.localWindowSize) !== null && B !== void 0 ? B : null,
        remoteFlowControlWindow: (Q = this.session.state.remoteWindowSize) !== null && Q !== void 0 ? Q : null
      }
    }
    trace(A) {
      Wh.trace(Cr.LogVerbosity.DEBUG, gm1, "(" + this.channelzRef.id + ") " + this.subchannelAddressString + " " + A)
    }
    keepaliveTrace(A) {
      Wh.trace(Cr.LogVerbosity.DEBUG, "keepalive", "(" + this.channelzRef.id + ") " + this.subchannelAddressString + " " + A)
    }
    flowControlTrace(A) {
      Wh.trace(Cr.LogVerbosity.DEBUG, WI6, "(" + this.channelzRef.id + ") " + this.subchannelAddressString + " " + A)
    }
    internalsTrace(A) {
      Wh.trace(Cr.LogVerbosity.DEBUG, "transport_internals", "(" + this.channelzRef.id + ") " + this.subchannelAddressString + " " + A)
    }
    reportDisconnectToOwner(A) {
      if (this.disconnectHandled) return;
      this.disconnectHandled = !0, this.disconnectListeners.forEach((B) => B(A))
    }
    handleDisconnect() {
      this.clearKeepaliveTimeout(), this.reportDisconnectToOwner(!1);
      for (let A of this.activeCalls) A.onDisconnect();
      setImmediate(() => {
        this.session.destroy()
      })
    }
    addDisconnectListener(A) {
      this.disconnectListeners.push(A)
    }
    canSendPing() {
      return !this.session.destroyed && this.keepaliveTimeMs > 0 && (this.keepaliveWithoutCalls || this.activeCalls.size > 0)
    }
    maybeSendPing() {
      var A, B;
      if (!this.canSendPing()) {
        this.pendingSendKeepalivePing = !0;
        return
      }
      if (this.keepaliveTimer) {
        console.error("keepaliveTimeout is not null");
        return
      }
      if (this.channelzEnabled) this.keepalivesSent += 1;
      this.keepaliveTrace("Sending ping with timeout " + this.keepaliveTimeoutMs + "ms"), this.keepaliveTimer = setTimeout(() => {
        this.keepaliveTimer = null, this.keepaliveTrace("Ping timeout passed without response"), this.handleDisconnect()
      }, this.keepaliveTimeoutMs), (B = (A = this.keepaliveTimer).unref) === null || B === void 0 || B.call(A);
      let Q = "";
      try {
        if (!this.session.ping((G, Z, D) => {
            if (this.clearKeepaliveTimeout(), G) this.keepaliveTrace("Ping failed with error " + G.message), this.handleDisconnect();
            else this.keepaliveTrace("Received ping response"), this.maybeStartKeepalivePingTimer()
          })) Q = "Ping returned false"
      } catch (I) {
        Q = (I instanceof Error ? I.message : "") || "Unknown error"
      }
      if (Q) this.keepaliveTrace("Ping send failed: " + Q), this.handleDisconnect()
    }
    maybeStartKeepalivePingTimer() {
      var A, B;
      if (!this.canSendPing()) return;
      if (this.pendingSendKeepalivePing) this.pendingSendKeepalivePing = !1, this.maybeSendPing();
      else if (!this.keepaliveTimer) this.keepaliveTrace("Starting keepalive timer for " + this.keepaliveTimeMs + "ms"), this.keepaliveTimer = setTimeout(() => {
        this.keepaliveTimer = null, this.maybeSendPing()
      }, this.keepaliveTimeMs), (B = (A = this.keepaliveTimer).unref) === null || B === void 0 || B.call(A)
    }
    clearKeepaliveTimeout() {
      if (this.keepaliveTimer) clearTimeout(this.keepaliveTimer), this.keepaliveTimer = null
    }
    removeActiveCall(A) {
      if (this.activeCalls.delete(A), this.activeCalls.size === 0) this.session.unref()
    }
    addActiveCall(A) {
      if (this.activeCalls.add(A), this.activeCalls.size === 1) {
        if (this.session.ref(), !this.keepaliveWithoutCalls) this.maybeStartKeepalivePingTimer()
      }
    }
    createCall(A, B, Q, I, G) {
      let Z = A.toHttp2Headers();
      Z[FI6] = B, Z[HI6] = this.userAgent, Z[XI6] = "application/grpc", Z[VI6] = "POST", Z[CI6] = Q, Z[KI6] = "trailers";
      let D;
      try {
        D = this.session.request(Z)
      } catch (J) {
        throw this.handleDisconnect(), J
      }
      this.flowControlTrace("local window size: " + this.session.state.localWindowSize + " remote window size: " + this.session.state.remoteWindowSize), this.internalsTrace("session.closed=" + this.session.closed + " session.destroyed=" + this.session.destroyed + " session.socket.destroyed=" + this.session.socket.destroyed);
      let Y, W;
      if (this.channelzEnabled) this.streamTracker.addCallStarted(), Y = {
        addMessageSent: () => {
          var J;
          this.messagesSent += 1, this.lastMessageSentTimestamp = new Date, (J = G.addMessageSent) === null || J === void 0 || J.call(G)
        },
        addMessageReceived: () => {
          var J;
          this.messagesReceived += 1, this.lastMessageReceivedTimestamp = new Date, (J = G.addMessageReceived) === null || J === void 0 || J.call(G)
        },
        onCallEnd: (J) => {
          var F;
          (F = G.onCallEnd) === null || F === void 0 || F.call(G, J), this.removeActiveCall(W)
        },
        onStreamEnd: (J) => {
          var F;
          if (J) this.streamTracker.addCallSucceeded();
          else this.streamTracker.addCallFailed();
          (F = G.onStreamEnd) === null || F === void 0 || F.call(G, J)
        }
      };
      else Y = {
        addMessageSent: () => {
          var J;
          (J = G.addMessageSent) === null || J === void 0 || J.call(G)
        },
        addMessageReceived: () => {
          var J;
          (J = G.addMessageReceived) === null || J === void 0 || J.call(G)
        },
        onCallEnd: (J) => {
          var F;
          (F = G.onCallEnd) === null || F === void 0 || F.call(G, J), this.removeActiveCall(W)
        },
        onStreamEnd: (J) => {
          var F;
          (F = G.onStreamEnd) === null || F === void 0 || F.call(G, J)
        }
      };
      return W = new DI6.Http2SubchannelCall(D, Y, I, this, YI6.getNextCallNumber()), this.addActiveCall(W), W
    }
    getChannelzRef() {
      return this.channelzRef
    }
    getPeerName() {
      return this.subchannelAddressString
    }
    getOptions() {
      return this.options
    }
    shutdown() {
      this.session.close(), fD1.unregisterChannelzRef(this.channelzRef)
    }
  }
  class qk0 {
    constructor(A) {
      this.channelTarget = A, this.session = null, this.isShutdown = !1
    }
    trace(A) {
      Wh.trace(Cr.LogVerbosity.DEBUG, gm1, bm1.uriToString(this.channelTarget) + " " + A)
    }
    createSession(A, B, Q) {
      if (this.isShutdown) return Promise.reject();
      if (A.socket.closed) return Promise.reject("Connection closed before starting HTTP/2 handshake");
      return new Promise((I, G) => {
        var Z;
        let D = null,
          Y = this.channelTarget;
        if ("grpc.http_connect_target" in Q) {
          let E = bm1.parseUri(Q["grpc.http_connect_target"]);
          if (E) Y = E, D = bm1.uriToString(E)
        }
        let W = A.secure ? "https" : "http",
          J = GI6.getDefaultAuthority(Y),
          F = () => {
            var E;
            (E = this.session) === null || E === void 0 || E.destroy(), this.session = null, setImmediate(() => {
              if (!K) K = !0, G(`${C.trim()} (${new Date().toISOString()})`)
            })
          },
          X = (E) => {
            var N;
            if ((N = this.session) === null || N === void 0 || N.destroy(), C = E.message, this.trace("connection failed with error " + C), !K) K = !0, G(`${C} (${new Date().toISOString()})`)
          },
          V = bD1.connect(`${W}://${J}`, {
            createConnection: (E, N) => {
              return A.socket
            },
            settings: {
              initialWindowSize: (Z = Q["grpc-node.flow_control_window"]) !== null && Z !== void 0 ? Z : bD1.getDefaultSettings().initialWindowSize
            }
          });
        this.session = V;
        let C = "Failed to connect",
          K = !1;
        V.unref(), V.once("remoteSettings", () => {
          V.removeAllListeners(), A.socket.removeListener("close", F), A.socket.removeListener("error", X), I(new $k0(V, B, Q, D)), this.session = null
        }), V.once("close", F), V.once("error", X), A.socket.once("close", F), A.socket.once("error", X)
      })
    }
    tcpConnect(A, B) {
      return II6.getProxiedConnection(A, B).then((Q) => {
        if (Q) return Q;
        else return new Promise((I, G) => {
          let Z = () => {
              G(new Error("Socket closed"))
            },
            D = (W) => {
              G(W)
            },
            Y = ZI6.connect(A, () => {
              Y.removeListener("close", Z), Y.removeListener("error", D), I(Y)
            });
          Y.once("close", Z), Y.once("error", D)
        })
      })
    }
    async connect(A, B, Q) {
      if (this.isShutdown) return Promise.reject();
      let I = null,
        G = null,
        Z = vD1.subchannelAddressToString(A);
      try {
        return this.trace(Z + " Waiting for secureConnector to be ready"), await B.waitForReady(), this.trace(Z + " secureConnector is ready"), I = await this.tcpConnect(A, Q), this.trace(Z + " Established TCP connection"), G = await B.connect(I), this.trace(Z + " Established secure connection"), this.createSession(G, A, Q)
      } catch (D) {
        throw I === null || I === void 0 || I.destroy(), G === null || G === void 0 || G.socket.destroy(), D
      }
    }
    shutdown() {
      var A;
      this.isShutdown = !0, (A = this.session) === null || A === void 0 || A.close(), this.session = null
    }
  }
  Mk0.Http2SubchannelConnector = qk0
})
// @from(Start 4959982, End 4961715)
Pk0 = z((Ok0) => {
  Object.defineProperty(Ok0, "__esModule", {
    value: !0
  });
  Ok0.SubchannelPool = void 0;
  Ok0.getSubchannelPool = RI6;
  var EI6 = cS0(),
    UI6 = ey0(),
    NI6 = PX(),
    $I6 = uY(),
    qI6 = Rk0(),
    MI6 = 1e4;
  class gD1 {
    constructor() {
      this.pool = Object.create(null), this.cleanupTimer = null
    }
    unrefUnusedSubchannels() {
      let A = !0;
      for (let B in this.pool) {
        let I = this.pool[B].filter((G) => !G.subchannel.unrefIfOneRef());
        if (I.length > 0) A = !1;
        this.pool[B] = I
      }
      if (A && this.cleanupTimer !== null) clearInterval(this.cleanupTimer), this.cleanupTimer = null
    }
    ensureCleanupTask() {
      var A, B;
      if (this.cleanupTimer === null) this.cleanupTimer = setInterval(() => {
        this.unrefUnusedSubchannels()
      }, MI6), (B = (A = this.cleanupTimer).unref) === null || B === void 0 || B.call(A)
    }
    getOrCreateSubchannel(A, B, Q, I) {
      this.ensureCleanupTask();
      let G = $I6.uriToString(A);
      if (G in this.pool) {
        let D = this.pool[G];
        for (let Y of D)
          if (NI6.subchannelAddressEqual(B, Y.subchannelAddress) && EI6.channelOptionsEqual(Q, Y.channelArguments) && I._equals(Y.channelCredentials)) return Y.subchannel
      }
      let Z = new UI6.Subchannel(A, B, Q, I, new qI6.Http2SubchannelConnector(A));
      if (!(G in this.pool)) this.pool[G] = [];
      return this.pool[G].push({
        subchannelAddress: B,
        channelArguments: Q,
        channelCredentials: I,
        subchannel: Z
      }), Z.ref(), Z
    }
  }
  Ok0.SubchannelPool = gD1;
  var LI6 = new gD1;

  function RI6(A) {
    if (A) return LI6;
    else return new gD1
  }
})
// @from(Start 4961721, End 4963142)
dm1 = z((Sk0) => {
  Object.defineProperty(Sk0, "__esModule", {
    value: !0
  });
  Sk0.FilterStackFactory = Sk0.FilterStack = void 0;
  class hm1 {
    constructor(A) {
      this.filters = A
    }
    sendMetadata(A) {
      let B = A;
      for (let Q = 0; Q < this.filters.length; Q++) B = this.filters[Q].sendMetadata(B);
      return B
    }
    receiveMetadata(A) {
      let B = A;
      for (let Q = this.filters.length - 1; Q >= 0; Q--) B = this.filters[Q].receiveMetadata(B);
      return B
    }
    sendMessage(A) {
      let B = A;
      for (let Q = 0; Q < this.filters.length; Q++) B = this.filters[Q].sendMessage(B);
      return B
    }
    receiveMessage(A) {
      let B = A;
      for (let Q = this.filters.length - 1; Q >= 0; Q--) B = this.filters[Q].receiveMessage(B);
      return B
    }
    receiveTrailers(A) {
      let B = A;
      for (let Q = this.filters.length - 1; Q >= 0; Q--) B = this.filters[Q].receiveTrailers(B);
      return B
    }
    push(A) {
      this.filters.unshift(...A)
    }
    getFilters() {
      return this.filters
    }
  }
  Sk0.FilterStack = hm1;
  class mm1 {
    constructor(A) {
      this.factories = A
    }
    push(A) {
      this.factories.unshift(...A)
    }
    clone() {
      return new mm1([...this.factories])
    }
    createFilter() {
      return new hm1(this.factories.map((A) => A.createFilter()))
    }
  }
  Sk0.FilterStackFactory = mm1
})
// @from(Start 4963148, End 4963441)
um1 = z((yk0) => {
  Object.defineProperty(yk0, "__esModule", {
    value: !0
  });
  yk0.CompressionAlgorithms = void 0;
  var jk0;
  (function(A) {
    A[A.identity = 0] = "identity", A[A.deflate = 1] = "deflate", A[A.gzip = 2] = "gzip"
  })(jk0 || (yk0.CompressionAlgorithms = jk0 = {}))
})
// @from(Start 4963447, End 4963841)
pm1 = z((fk0) => {
  Object.defineProperty(fk0, "__esModule", {
    value: !0
  });
  fk0.BaseFilter = void 0;
  class xk0 {
    async sendMetadata(A) {
      return A
    }
    receiveMetadata(A) {
      return A
    }
    async sendMessage(A) {
      return A
    }
    async receiveMessage(A) {
      return A
    }
    receiveTrailers(A) {
      return A
    }
  }
  fk0.BaseFilter = xk0
})
// @from(Start 4963847, End 4970197)
lk0 = z((pk0) => {
  Object.defineProperty(pk0, "__esModule", {
    value: !0
  });
  pk0.CompressionFilterFactory = pk0.CompressionFilter = void 0;
  var hD1 = Z1("zlib"),
    gk0 = um1(),
    Jh = y6(),
    PI6 = pm1(),
    SI6 = GB(),
    _I6 = (A) => {
      return typeof A === "number" && typeof gk0.CompressionAlgorithms[A] === "string"
    };
  class Kr {
    async writeMessage(A, B) {
      let Q = A;
      if (B) Q = await this.compressMessage(Q);
      let I = Buffer.allocUnsafe(Q.length + 5);
      return I.writeUInt8(B ? 1 : 0, 0), I.writeUInt32BE(Q.length, 1), Q.copy(I, 5), I
    }
    async readMessage(A) {
      let B = A.readUInt8(0) === 1,
        Q = A.slice(5);
      if (B) Q = await this.decompressMessage(Q);
      return Q
    }
  }
  class Fh extends Kr {
    async compressMessage(A) {
      return A
    }
    async writeMessage(A, B) {
      let Q = Buffer.allocUnsafe(A.length + 5);
      return Q.writeUInt8(0, 0), Q.writeUInt32BE(A.length, 1), A.copy(Q, 5), Q
    }
    decompressMessage(A) {
      return Promise.reject(new Error('Received compressed message but "grpc-encoding" header was identity'))
    }
  }
  class hk0 extends Kr {
    constructor(A) {
      super();
      this.maxRecvMessageLength = A
    }
    compressMessage(A) {
      return new Promise((B, Q) => {
        hD1.deflate(A, (I, G) => {
          if (I) Q(I);
          else B(G)
        })
      })
    }
    decompressMessage(A) {
      return new Promise((B, Q) => {
        let I = 0,
          G = [],
          Z = hD1.createInflate();
        Z.on("data", (D) => {
          if (G.push(D), I += D.byteLength, this.maxRecvMessageLength !== -1 && I > this.maxRecvMessageLength) Z.destroy(), Q({
            code: Jh.Status.RESOURCE_EXHAUSTED,
            details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`
          })
        }), Z.on("end", () => {
          B(Buffer.concat(G))
        }), Z.write(A), Z.end()
      })
    }
  }
  class mk0 extends Kr {
    constructor(A) {
      super();
      this.maxRecvMessageLength = A
    }
    compressMessage(A) {
      return new Promise((B, Q) => {
        hD1.gzip(A, (I, G) => {
          if (I) Q(I);
          else B(G)
        })
      })
    }
    decompressMessage(A) {
      return new Promise((B, Q) => {
        let I = 0,
          G = [],
          Z = hD1.createGunzip();
        Z.on("data", (D) => {
          if (G.push(D), I += D.byteLength, this.maxRecvMessageLength !== -1 && I > this.maxRecvMessageLength) Z.destroy(), Q({
            code: Jh.Status.RESOURCE_EXHAUSTED,
            details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`
          })
        }), Z.on("end", () => {
          B(Buffer.concat(G))
        }), Z.write(A), Z.end()
      })
    }
  }
  class dk0 extends Kr {
    constructor(A) {
      super();
      this.compressionName = A
    }
    compressMessage(A) {
      return Promise.reject(new Error(`Received message compressed with unsupported compression method ${this.compressionName}`))
    }
    decompressMessage(A) {
      return Promise.reject(new Error(`Compression method not supported: ${this.compressionName}`))
    }
  }

  function bk0(A, B) {
    switch (A) {
      case "identity":
        return new Fh;
      case "deflate":
        return new hk0(B);
      case "gzip":
        return new mk0(B);
      default:
        return new dk0(A)
    }
  }
  class cm1 extends PI6.BaseFilter {
    constructor(A, B) {
      var Q, I, G;
      super();
      this.sharedFilterConfig = B, this.sendCompression = new Fh, this.receiveCompression = new Fh, this.currentCompressionAlgorithm = "identity";
      let Z = A["grpc.default_compression_algorithm"];
      if (this.maxReceiveMessageLength = (Q = A["grpc.max_receive_message_length"]) !== null && Q !== void 0 ? Q : Jh.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH, this.maxSendMessageLength = (I = A["grpc.max_send_message_length"]) !== null && I !== void 0 ? I : Jh.DEFAULT_MAX_SEND_MESSAGE_LENGTH, Z !== void 0)
        if (_I6(Z)) {
          let D = gk0.CompressionAlgorithms[Z],
            Y = (G = B.serverSupportedEncodingHeader) === null || G === void 0 ? void 0 : G.split(",");
          if (!Y || Y.includes(D)) this.currentCompressionAlgorithm = D, this.sendCompression = bk0(this.currentCompressionAlgorithm, -1)
        } else SI6.log(Jh.LogVerbosity.ERROR, `Invalid value provided for grpc.default_compression_algorithm option: ${Z}`)
    }
    async sendMetadata(A) {
      let B = await A;
      if (B.set("grpc-accept-encoding", "identity,deflate,gzip"), B.set("accept-encoding", "identity"), this.currentCompressionAlgorithm === "identity") B.remove("grpc-encoding");
      else B.set("grpc-encoding", this.currentCompressionAlgorithm);
      return B
    }
    receiveMetadata(A) {
      let B = A.get("grpc-encoding");
      if (B.length > 0) {
        let I = B[0];
        if (typeof I === "string") this.receiveCompression = bk0(I, this.maxReceiveMessageLength)
      }
      A.remove("grpc-encoding");
      let Q = A.get("grpc-accept-encoding")[0];
      if (Q) {
        if (this.sharedFilterConfig.serverSupportedEncodingHeader = Q, !Q.split(",").includes(this.currentCompressionAlgorithm)) this.sendCompression = new Fh, this.currentCompressionAlgorithm = "identity"
      }
      return A.remove("grpc-accept-encoding"), A
    }
    async sendMessage(A) {
      var B;
      let Q = await A;
      if (this.maxSendMessageLength !== -1 && Q.message.length > this.maxSendMessageLength) throw {
        code: Jh.Status.RESOURCE_EXHAUSTED,
        details: `Attempted to send message with a size larger than ${this.maxSendMessageLength}`
      };
      let I;
      if (this.sendCompression instanceof Fh) I = !1;
      else I = (((B = Q.flags) !== null && B !== void 0 ? B : 0) & 2) === 0;
      return {
        message: await this.sendCompression.writeMessage(Q.message, I),
        flags: Q.flags
      }
    }
    async receiveMessage(A) {
      return this.receiveCompression.readMessage(await A)
    }
  }
  pk0.CompressionFilter = cm1;
  class uk0 {
    constructor(A, B) {
      this.options = B, this.sharedFilterConfig = {}
    }
    createFilter() {
      return new cm1(this.options, this.sharedFilterConfig)
    }
  }
  pk0.CompressionFilterFactory = uk0
})
// @from(Start 4970203, End 4971522)
Hr = z((ik0) => {
  Object.defineProperty(ik0, "__esModule", {
    value: !0
  });
  ik0.minDeadline = yI6;
  ik0.getDeadlineTimeoutString = xI6;
  ik0.getRelativeTimeout = vI6;
  ik0.deadlineToString = bI6;
  ik0.formatDateDifference = gI6;

  function yI6(...A) {
    let B = 1 / 0;
    for (let Q of A) {
      let I = Q instanceof Date ? Q.getTime() : Q;
      if (I < B) B = I
    }
    return B
  }
  var kI6 = [
    ["m", 1],
    ["S", 1000],
    ["M", 60000],
    ["H", 3600000]
  ];

  function xI6(A) {
    let B = new Date().getTime();
    if (A instanceof Date) A = A.getTime();
    let Q = Math.max(A - B, 0);
    for (let [I, G] of kI6) {
      let Z = Q / G;
      if (Z < 1e8) return String(Math.ceil(Z)) + I
    }
    throw new Error("Deadline is too far in the future")
  }
  var fI6 = 2147483647;

  function vI6(A) {
    let B = A instanceof Date ? A.getTime() : A,
      Q = new Date().getTime(),
      I = B - Q;
    if (I < 0) return 0;
    else if (I > fI6) return 1 / 0;
    else return I
  }

  function bI6(A) {
    if (A instanceof Date) return A.toISOString();
    else {
      let B = new Date(A);
      if (Number.isNaN(B.getTime())) return "" + A;
      else return B.toISOString()
    }
  }

  function gI6(A, B) {
    return ((B.getTime() - A.getTime()) / 1000).toFixed(3) + "s"
  }
})
// @from(Start 4971528, End 4972106)
mD1 = z((nk0) => {
  Object.defineProperty(nk0, "__esModule", {
    value: !0
  });
  nk0.restrictControlPlaneStatusCode = lI6;
  var ww = y6(),
    cI6 = [ww.Status.OK, ww.Status.INVALID_ARGUMENT, ww.Status.NOT_FOUND, ww.Status.ALREADY_EXISTS, ww.Status.FAILED_PRECONDITION, ww.Status.ABORTED, ww.Status.OUT_OF_RANGE, ww.Status.DATA_LOSS];

  function lI6(A, B) {
    if (cI6.includes(A)) return {
      code: ww.Status.INTERNAL,
      details: `Invalid status from control plane: ${A} ${ww.Status[A]} ${B}`
    };
    else return {
      code: A,
      details: B
    }
  }
})
// @from(Start 4972112, End 4980416)
ek0 = z((ok0) => {
  Object.defineProperty(ok0, "__esModule", {
    value: !0
  });
  ok0.LoadBalancingCall = void 0;
  var ak0 = TX(),
    dD1 = y6(),
    sk0 = Hr(),
    uD1 = SZ(),
    zr = FR(),
    nI6 = uY(),
    aI6 = GB(),
    lm1 = mD1(),
    sI6 = Z1("http2"),
    rI6 = "load_balancing_call";
  class rk0 {
    constructor(A, B, Q, I, G, Z, D) {
      var Y, W;
      this.channel = A, this.callConfig = B, this.methodName = Q, this.host = I, this.credentials = G, this.deadline = Z, this.callNumber = D, this.child = null, this.readPending = !1, this.pendingMessage = null, this.pendingHalfClose = !1, this.ended = !1, this.metadata = null, this.listener = null, this.onCallEnded = null, this.childStartTime = null;
      let J = this.methodName.split("/"),
        F = "";
      if (J.length >= 2) F = J[1];
      let X = (W = (Y = nI6.splitHostPort(this.host)) === null || Y === void 0 ? void 0 : Y.host) !== null && W !== void 0 ? W : "localhost";
      this.serviceUrl = `https://${X}/${F}`, this.startTime = new Date
    }
    getDeadlineInfo() {
      var A, B;
      let Q = [];
      if (this.childStartTime) {
        if (this.childStartTime > this.startTime) {
          if ((A = this.metadata) === null || A === void 0 ? void 0 : A.getOptions().waitForReady) Q.push("wait_for_ready");
          Q.push(`LB pick: ${sk0.formatDateDifference(this.startTime,this.childStartTime)}`)
        }
        return Q.push(...this.child.getDeadlineInfo()), Q
      } else {
        if ((B = this.metadata) === null || B === void 0 ? void 0 : B.getOptions().waitForReady) Q.push("wait_for_ready");
        Q.push("Waiting for LB pick")
      }
      return Q
    }
    trace(A) {
      aI6.trace(dD1.LogVerbosity.DEBUG, rI6, "[" + this.callNumber + "] " + A)
    }
    outputStatus(A, B) {
      var Q, I;
      if (!this.ended) {
        this.ended = !0, this.trace("ended with status: code=" + A.code + ' details="' + A.details + '" start time=' + this.startTime.toISOString());
        let G = Object.assign(Object.assign({}, A), {
          progress: B
        });
        (Q = this.listener) === null || Q === void 0 || Q.onReceiveStatus(G), (I = this.onCallEnded) === null || I === void 0 || I.call(this, G.code)
      }
    }
    doPick() {
      var A, B;
      if (this.ended) return;
      if (!this.metadata) throw new Error("doPick called before start");
      this.trace("Pick called");
      let Q = this.metadata.clone(),
        I = this.channel.doPick(Q, this.callConfig.pickInformation),
        G = I.subchannel ? "(" + I.subchannel.getChannelzRef().id + ") " + I.subchannel.getAddress() : "" + I.subchannel;
      switch (this.trace("Pick result: " + zr.PickResultType[I.pickResultType] + " subchannel: " + G + " status: " + ((A = I.status) === null || A === void 0 ? void 0 : A.code) + " " + ((B = I.status) === null || B === void 0 ? void 0 : B.details)), I.pickResultType) {
        case zr.PickResultType.COMPLETE:
          this.credentials.compose(I.subchannel.getCallCredentials()).generateMetadata({
            method_name: this.methodName,
            service_url: this.serviceUrl
          }).then((W) => {
            var J;
            if (this.ended) {
              this.trace("Credentials metadata generation finished after call ended");
              return
            }
            if (Q.merge(W), Q.get("authorization").length > 1) this.outputStatus({
              code: dD1.Status.INTERNAL,
              details: '"authorization" metadata cannot have multiple values',
              metadata: new uD1.Metadata
            }, "PROCESSED");
            if (I.subchannel.getConnectivityState() !== ak0.ConnectivityState.READY) {
              this.trace("Picked subchannel " + G + " has state " + ak0.ConnectivityState[I.subchannel.getConnectivityState()] + " after getting credentials metadata. Retrying pick"), this.doPick();
              return
            }
            if (this.deadline !== 1 / 0) Q.set("grpc-timeout", sk0.getDeadlineTimeoutString(this.deadline));
            try {
              this.child = I.subchannel.getRealSubchannel().createCall(Q, this.host, this.methodName, {
                onReceiveMetadata: (F) => {
                  this.trace("Received metadata"), this.listener.onReceiveMetadata(F)
                },
                onReceiveMessage: (F) => {
                  this.trace("Received message"), this.listener.onReceiveMessage(F)
                },
                onReceiveStatus: (F) => {
                  if (this.trace("Received status"), F.rstCode === sI6.constants.NGHTTP2_REFUSED_STREAM) this.outputStatus(F, "REFUSED");
                  else this.outputStatus(F, "PROCESSED")
                }
              }), this.childStartTime = new Date
            } catch (F) {
              this.trace("Failed to start call on picked subchannel " + G + " with error " + F.message), this.outputStatus({
                code: dD1.Status.INTERNAL,
                details: "Failed to start HTTP/2 stream with error " + F.message,
                metadata: new uD1.Metadata
              }, "NOT_STARTED");
              return
            }
            if ((J = I.onCallStarted) === null || J === void 0 || J.call(I), this.onCallEnded = I.onCallEnded, this.trace("Created child call [" + this.child.getCallNumber() + "]"), this.readPending) this.child.startRead();
            if (this.pendingMessage) this.child.sendMessageWithContext(this.pendingMessage.context, this.pendingMessage.message);
            if (this.pendingHalfClose) this.child.halfClose()
          }, (W) => {
            let {
              code: J,
              details: F
            } = lm1.restrictControlPlaneStatusCode(typeof W.code === "number" ? W.code : dD1.Status.UNKNOWN, `Getting metadata from plugin failed with error: ${W.message}`);
            this.outputStatus({
              code: J,
              details: F,
              metadata: new uD1.Metadata
            }, "PROCESSED")
          });
          break;
        case zr.PickResultType.DROP:
          let {
            code: D, details: Y
          } = lm1.restrictControlPlaneStatusCode(I.status.code, I.status.details);
          setImmediate(() => {
            this.outputStatus({
              code: D,
              details: Y,
              metadata: I.status.metadata
            }, "DROP")
          });
          break;
        case zr.PickResultType.TRANSIENT_FAILURE:
          if (this.metadata.getOptions().waitForReady) this.channel.queueCallForPick(this);
          else {
            let {
              code: W,
              details: J
            } = lm1.restrictControlPlaneStatusCode(I.status.code, I.status.details);
            setImmediate(() => {
              this.outputStatus({
                code: W,
                details: J,
                metadata: I.status.metadata
              }, "PROCESSED")
            })
          }
          break;
        case zr.PickResultType.QUEUE:
          this.channel.queueCallForPick(this)
      }
    }
    cancelWithStatus(A, B) {
      var Q;
      this.trace("cancelWithStatus code: " + A + ' details: "' + B + '"'), (Q = this.child) === null || Q === void 0 || Q.cancelWithStatus(A, B), this.outputStatus({
        code: A,
        details: B,
        metadata: new uD1.Metadata
      }, "PROCESSED")
    }
    getPeer() {
      var A, B;
      return (B = (A = this.child) === null || A === void 0 ? void 0 : A.getPeer()) !== null && B !== void 0 ? B : this.channel.getTarget()
    }
    start(A, B) {
      this.trace("start called"), this.listener = B, this.metadata = A, this.doPick()
    }
    sendMessageWithContext(A, B) {
      if (this.trace("write() called with message of length " + B.length), this.child) this.child.sendMessageWithContext(A, B);
      else this.pendingMessage = {
        context: A,
        message: B
      }
    }
    startRead() {
      if (this.trace("startRead called"), this.child) this.child.startRead();
      else this.readPending = !0
    }
    halfClose() {
      if (this.trace("halfClose called"), this.child) this.child.halfClose();
      else this.pendingHalfClose = !0
    }
    setCredentials(A) {
      throw new Error("Method not implemented.")
    }
    getCallNumber() {
      return this.callNumber
    }
  }
  ok0.LoadBalancingCall = rk0
})
// @from(Start 4980422, End 4988675)
Gx0 = z((Qx0) => {
  Object.defineProperty(Qx0, "__esModule", {
    value: !0
  });
  Qx0.ResolvingCall = void 0;
  var oI6 = iZ1(),
    Bj = y6(),
    Qj = Hr(),
    Ax0 = SZ(),
    tI6 = GB(),
    eI6 = mD1(),
    AG6 = "resolving_call";
  class Bx0 {
    constructor(A, B, Q, I, G) {
      if (this.channel = A, this.method = B, this.filterStackFactory = I, this.callNumber = G, this.child = null, this.readPending = !1, this.pendingMessage = null, this.pendingHalfClose = !1, this.ended = !1, this.readFilterPending = !1, this.writeFilterPending = !1, this.pendingChildStatus = null, this.metadata = null, this.listener = null, this.statusWatchers = [], this.deadlineTimer = setTimeout(() => {}, 0), this.filterStack = null, this.deadlineStartTime = null, this.configReceivedTime = null, this.childStartTime = null, this.credentials = oI6.CallCredentials.createEmpty(), this.deadline = Q.deadline, this.host = Q.host, Q.parentCall) {
        if (Q.flags & Bj.Propagate.CANCELLATION) Q.parentCall.on("cancelled", () => {
          this.cancelWithStatus(Bj.Status.CANCELLED, "Cancelled by parent call")
        });
        if (Q.flags & Bj.Propagate.DEADLINE) this.trace("Propagating deadline from parent: " + Q.parentCall.getDeadline()), this.deadline = Qj.minDeadline(this.deadline, Q.parentCall.getDeadline())
      }
      this.trace("Created"), this.runDeadlineTimer()
    }
    trace(A) {
      tI6.trace(Bj.LogVerbosity.DEBUG, AG6, "[" + this.callNumber + "] " + A)
    }
    runDeadlineTimer() {
      clearTimeout(this.deadlineTimer), this.deadlineStartTime = new Date, this.trace("Deadline: " + Qj.deadlineToString(this.deadline));
      let A = Qj.getRelativeTimeout(this.deadline);
      if (A !== 1 / 0) {
        this.trace("Deadline will be reached in " + A + "ms");
        let B = () => {
          if (!this.deadlineStartTime) {
            this.cancelWithStatus(Bj.Status.DEADLINE_EXCEEDED, "Deadline exceeded");
            return
          }
          let Q = [],
            I = new Date;
          if (Q.push(`Deadline exceeded after ${Qj.formatDateDifference(this.deadlineStartTime,I)}`), this.configReceivedTime) {
            if (this.configReceivedTime > this.deadlineStartTime) Q.push(`name resolution: ${Qj.formatDateDifference(this.deadlineStartTime,this.configReceivedTime)}`);
            if (this.childStartTime) {
              if (this.childStartTime > this.configReceivedTime) Q.push(`metadata filters: ${Qj.formatDateDifference(this.configReceivedTime,this.childStartTime)}`)
            } else Q.push("waiting for metadata filters")
          } else Q.push("waiting for name resolution");
          if (this.child) Q.push(...this.child.getDeadlineInfo());
          this.cancelWithStatus(Bj.Status.DEADLINE_EXCEEDED, Q.join(","))
        };
        if (A <= 0) process.nextTick(B);
        else this.deadlineTimer = setTimeout(B, A)
      }
    }
    outputStatus(A) {
      if (!this.ended) {
        if (this.ended = !0, !this.filterStack) this.filterStack = this.filterStackFactory.createFilter();
        clearTimeout(this.deadlineTimer);
        let B = this.filterStack.receiveTrailers(A);
        this.trace("ended with status: code=" + B.code + ' details="' + B.details + '"'), this.statusWatchers.forEach((Q) => Q(B)), process.nextTick(() => {
          var Q;
          (Q = this.listener) === null || Q === void 0 || Q.onReceiveStatus(B)
        })
      }
    }
    sendMessageOnChild(A, B) {
      if (!this.child) throw new Error("sendMessageonChild called with child not populated");
      let Q = this.child;
      this.writeFilterPending = !0, this.filterStack.sendMessage(Promise.resolve({
        message: B,
        flags: A.flags
      })).then((I) => {
        if (this.writeFilterPending = !1, Q.sendMessageWithContext(A, I.message), this.pendingHalfClose) Q.halfClose()
      }, (I) => {
        this.cancelWithStatus(I.code, I.details)
      })
    }
    getConfig() {
      if (this.ended) return;
      if (!this.metadata || !this.listener) throw new Error("getConfig called before start");
      let A = this.channel.getConfig(this.method, this.metadata);
      if (A.type === "NONE") {
        this.channel.queueCallForConfig(this);
        return
      } else if (A.type === "ERROR") {
        if (this.metadata.getOptions().waitForReady) this.channel.queueCallForConfig(this);
        else this.outputStatus(A.error);
        return
      }
      this.configReceivedTime = new Date;
      let B = A.config;
      if (B.status !== Bj.Status.OK) {
        let {
          code: Q,
          details: I
        } = eI6.restrictControlPlaneStatusCode(B.status, "Failed to route call to method " + this.method);
        this.outputStatus({
          code: Q,
          details: I,
          metadata: new Ax0.Metadata
        });
        return
      }
      if (B.methodConfig.timeout) {
        let Q = new Date;
        Q.setSeconds(Q.getSeconds() + B.methodConfig.timeout.seconds), Q.setMilliseconds(Q.getMilliseconds() + B.methodConfig.timeout.nanos / 1e6), this.deadline = Qj.minDeadline(this.deadline, Q), this.runDeadlineTimer()
      }
      this.filterStackFactory.push(B.dynamicFilterFactories), this.filterStack = this.filterStackFactory.createFilter(), this.filterStack.sendMetadata(Promise.resolve(this.metadata)).then((Q) => {
        if (this.child = this.channel.createRetryingCall(B, this.method, this.host, this.credentials, this.deadline), this.trace("Created child [" + this.child.getCallNumber() + "]"), this.childStartTime = new Date, this.child.start(Q, {
            onReceiveMetadata: (I) => {
              this.trace("Received metadata"), this.listener.onReceiveMetadata(this.filterStack.receiveMetadata(I))
            },
            onReceiveMessage: (I) => {
              this.trace("Received message"), this.readFilterPending = !0, this.filterStack.receiveMessage(I).then((G) => {
                if (this.trace("Finished filtering received message"), this.readFilterPending = !1, this.listener.onReceiveMessage(G), this.pendingChildStatus) this.outputStatus(this.pendingChildStatus)
              }, (G) => {
                this.cancelWithStatus(G.code, G.details)
              })
            },
            onReceiveStatus: (I) => {
              if (this.trace("Received status"), this.readFilterPending) this.pendingChildStatus = I;
              else this.outputStatus(I)
            }
          }), this.readPending) this.child.startRead();
        if (this.pendingMessage) this.sendMessageOnChild(this.pendingMessage.context, this.pendingMessage.message);
        else if (this.pendingHalfClose) this.child.halfClose()
      }, (Q) => {
        this.outputStatus(Q)
      })
    }
    reportResolverError(A) {
      var B;
      if ((B = this.metadata) === null || B === void 0 ? void 0 : B.getOptions().waitForReady) this.channel.queueCallForConfig(this);
      else this.outputStatus(A)
    }
    cancelWithStatus(A, B) {
      var Q;
      this.trace("cancelWithStatus code: " + A + ' details: "' + B + '"'), (Q = this.child) === null || Q === void 0 || Q.cancelWithStatus(A, B), this.outputStatus({
        code: A,
        details: B,
        metadata: new Ax0.Metadata
      })
    }
    getPeer() {
      var A, B;
      return (B = (A = this.child) === null || A === void 0 ? void 0 : A.getPeer()) !== null && B !== void 0 ? B : this.channel.getTarget()
    }
    start(A, B) {
      this.trace("start called"), this.metadata = A.clone(), this.listener = B, this.getConfig()
    }
    sendMessageWithContext(A, B) {
      if (this.trace("write() called with message of length " + B.length), this.child) this.sendMessageOnChild(A, B);
      else this.pendingMessage = {
        context: A,
        message: B
      }
    }
    startRead() {
      if (this.trace("startRead called"), this.child) this.child.startRead();
      else this.readPending = !0
    }
    halfClose() {
      if (this.trace("halfClose called"), this.child && !this.writeFilterPending) this.child.halfClose();
      else this.pendingHalfClose = !0
    }
    setCredentials(A) {
      this.credentials = A
    }
    addStatusWatcher(A) {
      this.statusWatchers.push(A)
    }
    getCallNumber() {
      return this.callNumber
    }
  }
  Qx0.ResolvingCall = Bx0
})
// @from(Start 4988681, End 5005570)
Fx0 = z((Wx0) => {
  Object.defineProperty(Wx0, "__esModule", {
    value: !0
  });
  Wx0.RetryingCall = Wx0.MessageBufferTracker = Wx0.RetryThrottler = void 0;
  var pD1 = y6(),
    BG6 = Hr(),
    QG6 = SZ(),
    IG6 = GB(),
    GG6 = "retrying_call";
  class Zx0 {
    constructor(A, B, Q) {
      if (this.maxTokens = A, this.tokenRatio = B, Q) this.tokens = Q.tokens * (A / Q.maxTokens);
      else this.tokens = A
    }
    addCallSucceeded() {
      this.tokens = Math.min(this.tokens + this.tokenRatio, this.maxTokens)
    }
    addCallFailed() {
      this.tokens = Math.max(this.tokens - 1, 0)
    }
    canRetryCall() {
      return this.tokens > this.maxTokens / 2
    }
  }
  Wx0.RetryThrottler = Zx0;
  class Dx0 {
    constructor(A, B) {
      this.totalLimit = A, this.limitPerCall = B, this.totalAllocated = 0, this.allocatedPerCall = new Map
    }
    allocate(A, B) {
      var Q;
      let I = (Q = this.allocatedPerCall.get(B)) !== null && Q !== void 0 ? Q : 0;
      if (this.limitPerCall - I < A || this.totalLimit - this.totalAllocated < A) return !1;
      return this.allocatedPerCall.set(B, I + A), this.totalAllocated += A, !0
    }
    free(A, B) {
      var Q;
      if (this.totalAllocated < A) throw new Error(`Invalid buffer allocation state: call ${B} freed ${A} > total allocated ${this.totalAllocated}`);
      this.totalAllocated -= A;
      let I = (Q = this.allocatedPerCall.get(B)) !== null && Q !== void 0 ? Q : 0;
      if (I < A) throw new Error(`Invalid buffer allocation state: call ${B} freed ${A} > allocated for call ${I}`);
      this.allocatedPerCall.set(B, I - A)
    }
    freeAll(A) {
      var B;
      let Q = (B = this.allocatedPerCall.get(A)) !== null && B !== void 0 ? B : 0;
      if (this.totalAllocated < Q) throw new Error(`Invalid buffer allocation state: call ${A} allocated ${Q} > total allocated ${this.totalAllocated}`);
      this.totalAllocated -= Q, this.allocatedPerCall.delete(A)
    }
  }
  Wx0.MessageBufferTracker = Dx0;
  var im1 = "grpc-previous-rpc-attempts",
    ZG6 = 5;
  class Yx0 {
    constructor(A, B, Q, I, G, Z, D, Y, W) {
      var J;
      this.channel = A, this.callConfig = B, this.methodName = Q, this.host = I, this.credentials = G, this.deadline = Z, this.callNumber = D, this.bufferTracker = Y, this.retryThrottler = W, this.listener = null, this.initialMetadata = null, this.underlyingCalls = [], this.writeBuffer = [], this.writeBufferOffset = 0, this.readStarted = !1, this.transparentRetryUsed = !1, this.attempts = 0, this.hedgingTimer = null, this.committedCallIndex = null, this.initialRetryBackoffSec = 0, this.nextRetryBackoffSec = 0;
      let F = (J = A.getOptions()["grpc-node.retry_max_attempts_limit"]) !== null && J !== void 0 ? J : ZG6;
      if (A.getOptions()["grpc.enable_retries"] === 0) this.state = "NO_RETRY", this.maxAttempts = 1;
      else if (B.methodConfig.retryPolicy) {
        this.state = "RETRY";
        let X = B.methodConfig.retryPolicy;
        this.nextRetryBackoffSec = this.initialRetryBackoffSec = Number(X.initialBackoff.substring(0, X.initialBackoff.length - 1)), this.maxAttempts = Math.min(X.maxAttempts, F)
      } else if (B.methodConfig.hedgingPolicy) this.state = "HEDGING", this.maxAttempts = Math.min(B.methodConfig.hedgingPolicy.maxAttempts, F);
      else this.state = "TRANSPARENT_ONLY", this.maxAttempts = 1;
      this.startTime = new Date
    }
    getDeadlineInfo() {
      if (this.underlyingCalls.length === 0) return [];
      let A = [],
        B = this.underlyingCalls[this.underlyingCalls.length - 1];
      if (this.underlyingCalls.length > 1) A.push(`previous attempts: ${this.underlyingCalls.length-1}`);
      if (B.startTime > this.startTime) A.push(`time to current attempt start: ${BG6.formatDateDifference(this.startTime,B.startTime)}`);
      return A.push(...B.call.getDeadlineInfo()), A
    }
    getCallNumber() {
      return this.callNumber
    }
    trace(A) {
      IG6.trace(pD1.LogVerbosity.DEBUG, GG6, "[" + this.callNumber + "] " + A)
    }
    reportStatus(A) {
      this.trace("ended with status: code=" + A.code + ' details="' + A.details + '" start time=' + this.startTime.toISOString()), this.bufferTracker.freeAll(this.callNumber), this.writeBufferOffset = this.writeBufferOffset + this.writeBuffer.length, this.writeBuffer = [], process.nextTick(() => {
        var B;
        (B = this.listener) === null || B === void 0 || B.onReceiveStatus({
          code: A.code,
          details: A.details,
          metadata: A.metadata
        })
      })
    }
    cancelWithStatus(A, B) {
      this.trace("cancelWithStatus code: " + A + ' details: "' + B + '"'), this.reportStatus({
        code: A,
        details: B,
        metadata: new QG6.Metadata
      });
      for (let {
          call: Q
        }
        of this.underlyingCalls) Q.cancelWithStatus(A, B)
    }
    getPeer() {
      if (this.committedCallIndex !== null) return this.underlyingCalls[this.committedCallIndex].call.getPeer();
      else return "unknown"
    }
    getBufferEntry(A) {
      var B;
      return (B = this.writeBuffer[A - this.writeBufferOffset]) !== null && B !== void 0 ? B : {
        entryType: "FREED",
        allocated: !1
      }
    }
    getNextBufferIndex() {
      return this.writeBufferOffset + this.writeBuffer.length
    }
    clearSentMessages() {
      if (this.state !== "COMMITTED") return;
      let A;
      if (this.underlyingCalls[this.committedCallIndex].state === "COMPLETED") A = this.getNextBufferIndex();
      else A = this.underlyingCalls[this.committedCallIndex].nextMessageToSend;
      for (let B = this.writeBufferOffset; B < A; B++) {
        let Q = this.getBufferEntry(B);
        if (Q.allocated) this.bufferTracker.free(Q.message.message.length, this.callNumber)
      }
      this.writeBuffer = this.writeBuffer.slice(A - this.writeBufferOffset), this.writeBufferOffset = A
    }
    commitCall(A) {
      var B, Q;
      if (this.state === "COMMITTED") return;
      this.trace("Committing call [" + this.underlyingCalls[A].call.getCallNumber() + "] at index " + A), this.state = "COMMITTED", (Q = (B = this.callConfig).onCommitted) === null || Q === void 0 || Q.call(B), this.committedCallIndex = A;
      for (let I = 0; I < this.underlyingCalls.length; I++) {
        if (I === A) continue;
        if (this.underlyingCalls[I].state === "COMPLETED") continue;
        this.underlyingCalls[I].state = "COMPLETED", this.underlyingCalls[I].call.cancelWithStatus(pD1.Status.CANCELLED, "Discarded in favor of other hedged attempt")
      }
      this.clearSentMessages()
    }
    commitCallWithMostMessages() {
      if (this.state === "COMMITTED") return;
      let A = -1,
        B = -1;
      for (let [Q, I] of this.underlyingCalls.entries())
        if (I.state === "ACTIVE" && I.nextMessageToSend > A) A = I.nextMessageToSend, B = Q;
      if (B === -1) this.state = "TRANSPARENT_ONLY";
      else this.commitCall(B)
    }
    isStatusCodeInList(A, B) {
      return A.some((Q) => {
        var I;
        return Q === B || Q.toString().toLowerCase() === ((I = pD1.Status[B]) === null || I === void 0 ? void 0 : I.toLowerCase())
      })
    }
    getNextRetryBackoffMs() {
      var A;
      let B = (A = this.callConfig) === null || A === void 0 ? void 0 : A.methodConfig.retryPolicy;
      if (!B) return 0;
      let Q = Math.random() * this.nextRetryBackoffSec * 1000,
        I = Number(B.maxBackoff.substring(0, B.maxBackoff.length - 1));
      return this.nextRetryBackoffSec = Math.min(this.nextRetryBackoffSec * B.backoffMultiplier, I), Q
    }
    maybeRetryCall(A, B) {
      if (this.state !== "RETRY") {
        B(!1);
        return
      }
      if (this.attempts >= this.maxAttempts) {
        B(!1);
        return
      }
      let Q;
      if (A === null) Q = this.getNextRetryBackoffMs();
      else if (A < 0) {
        this.state = "TRANSPARENT_ONLY", B(!1);
        return
      } else Q = A, this.nextRetryBackoffSec = this.initialRetryBackoffSec;
      setTimeout(() => {
        var I, G;
        if (this.state !== "RETRY") {
          B(!1);
          return
        }
        if ((G = (I = this.retryThrottler) === null || I === void 0 ? void 0 : I.canRetryCall()) !== null && G !== void 0 ? G : !0) B(!0), this.attempts += 1, this.startNewAttempt();
        else this.trace("Retry attempt denied by throttling policy"), B(!1)
      }, Q)
    }
    countActiveCalls() {
      let A = 0;
      for (let B of this.underlyingCalls)
        if ((B === null || B === void 0 ? void 0 : B.state) === "ACTIVE") A += 1;
      return A
    }
    handleProcessedStatus(A, B, Q) {
      var I, G, Z;
      switch (this.state) {
        case "COMMITTED":
        case "NO_RETRY":
        case "TRANSPARENT_ONLY":
          this.commitCall(B), this.reportStatus(A);
          break;
        case "HEDGING":
          if (this.isStatusCodeInList((I = this.callConfig.methodConfig.hedgingPolicy.nonFatalStatusCodes) !== null && I !== void 0 ? I : [], A.code)) {
            (G = this.retryThrottler) === null || G === void 0 || G.addCallFailed();
            let D;
            if (Q === null) D = 0;
            else if (Q < 0) {
              this.state = "TRANSPARENT_ONLY", this.commitCall(B), this.reportStatus(A);
              return
            } else D = Q;
            setTimeout(() => {
              if (this.maybeStartHedgingAttempt(), this.countActiveCalls() === 0) this.commitCall(B), this.reportStatus(A)
            }, D)
          } else this.commitCall(B), this.reportStatus(A);
          break;
        case "RETRY":
          if (this.isStatusCodeInList(this.callConfig.methodConfig.retryPolicy.retryableStatusCodes, A.code))(Z = this.retryThrottler) === null || Z === void 0 || Z.addCallFailed(), this.maybeRetryCall(Q, (D) => {
            if (!D) this.commitCall(B), this.reportStatus(A)
          });
          else this.commitCall(B), this.reportStatus(A);
          break
      }
    }
    getPushback(A) {
      let B = A.get("grpc-retry-pushback-ms");
      if (B.length === 0) return null;
      try {
        return parseInt(B[0])
      } catch (Q) {
        return -1
      }
    }
    handleChildStatus(A, B) {
      var Q;
      if (this.underlyingCalls[B].state === "COMPLETED") return;
      if (this.trace("state=" + this.state + " handling status with progress " + A.progress + " from child [" + this.underlyingCalls[B].call.getCallNumber() + "] in state " + this.underlyingCalls[B].state), this.underlyingCalls[B].state = "COMPLETED", A.code === pD1.Status.OK) {
        (Q = this.retryThrottler) === null || Q === void 0 || Q.addCallSucceeded(), this.commitCall(B), this.reportStatus(A);
        return
      }
      if (this.state === "NO_RETRY") {
        this.commitCall(B), this.reportStatus(A);
        return
      }
      if (this.state === "COMMITTED") {
        this.reportStatus(A);
        return
      }
      let I = this.getPushback(A.metadata);
      switch (A.progress) {
        case "NOT_STARTED":
          this.startNewAttempt();
          break;
        case "REFUSED":
          if (this.transparentRetryUsed) this.handleProcessedStatus(A, B, I);
          else this.transparentRetryUsed = !0, this.startNewAttempt();
          break;
        case "DROP":
          this.commitCall(B), this.reportStatus(A);
          break;
        case "PROCESSED":
          this.handleProcessedStatus(A, B, I);
          break
      }
    }
    maybeStartHedgingAttempt() {
      if (this.state !== "HEDGING") return;
      if (!this.callConfig.methodConfig.hedgingPolicy) return;
      if (this.attempts >= this.maxAttempts) return;
      this.attempts += 1, this.startNewAttempt(), this.maybeStartHedgingTimer()
    }
    maybeStartHedgingTimer() {
      var A, B, Q;
      if (this.hedgingTimer) clearTimeout(this.hedgingTimer);
      if (this.state !== "HEDGING") return;
      if (!this.callConfig.methodConfig.hedgingPolicy) return;
      let I = this.callConfig.methodConfig.hedgingPolicy;
      if (this.attempts >= this.maxAttempts) return;
      let G = (A = I.hedgingDelay) !== null && A !== void 0 ? A : "0s",
        Z = Number(G.substring(0, G.length - 1));
      this.hedgingTimer = setTimeout(() => {
        this.maybeStartHedgingAttempt()
      }, Z * 1000), (Q = (B = this.hedgingTimer).unref) === null || Q === void 0 || Q.call(B)
    }
    startNewAttempt() {
      let A = this.channel.createLoadBalancingCall(this.callConfig, this.methodName, this.host, this.credentials, this.deadline);
      this.trace("Created child call [" + A.getCallNumber() + "] for attempt " + this.attempts);
      let B = this.underlyingCalls.length;
      this.underlyingCalls.push({
        state: "ACTIVE",
        call: A,
        nextMessageToSend: 0,
        startTime: new Date
      });
      let Q = this.attempts - 1,
        I = this.initialMetadata.clone();
      if (Q > 0) I.set(im1, `${Q}`);
      let G = !1;
      if (A.start(I, {
          onReceiveMetadata: (Z) => {
            if (this.trace("Received metadata from child [" + A.getCallNumber() + "]"), this.commitCall(B), G = !0, Q > 0) Z.set(im1, `${Q}`);
            if (this.underlyingCalls[B].state === "ACTIVE") this.listener.onReceiveMetadata(Z)
          },
          onReceiveMessage: (Z) => {
            if (this.trace("Received message from child [" + A.getCallNumber() + "]"), this.commitCall(B), this.underlyingCalls[B].state === "ACTIVE") this.listener.onReceiveMessage(Z)
          },
          onReceiveStatus: (Z) => {
            if (this.trace("Received status from child [" + A.getCallNumber() + "]"), !G && Q > 0) Z.metadata.set(im1, `${Q}`);
            this.handleChildStatus(Z, B)
          }
        }), this.sendNextChildMessage(B), this.readStarted) A.startRead()
    }
    start(A, B) {
      this.trace("start called"), this.listener = B, this.initialMetadata = A, this.attempts += 1, this.startNewAttempt(), this.maybeStartHedgingTimer()
    }
    handleChildWriteCompleted(A) {
      var B, Q;
      let I = this.underlyingCalls[A],
        G = I.nextMessageToSend;
      (Q = (B = this.getBufferEntry(G)).callback) === null || Q === void 0 || Q.call(B), this.clearSentMessages(), I.nextMessageToSend += 1, this.sendNextChildMessage(A)
    }
    sendNextChildMessage(A) {
      let B = this.underlyingCalls[A];
      if (B.state === "COMPLETED") return;
      if (this.getBufferEntry(B.nextMessageToSend)) {
        let Q = this.getBufferEntry(B.nextMessageToSend);
        switch (Q.entryType) {
          case "MESSAGE":
            B.call.sendMessageWithContext({
              callback: (I) => {
                this.handleChildWriteCompleted(A)
              }
            }, Q.message.message);
            break;
          case "HALF_CLOSE":
            B.nextMessageToSend += 1, B.call.halfClose();
            break;
          case "FREED":
            break
        }
      }
    }
    sendMessageWithContext(A, B) {
      var Q;
      this.trace("write() called with message of length " + B.length);
      let I = {
          message: B,
          flags: A.flags
        },
        G = this.getNextBufferIndex(),
        Z = {
          entryType: "MESSAGE",
          message: I,
          allocated: this.bufferTracker.allocate(B.length, this.callNumber)
        };
      if (this.writeBuffer.push(Z), Z.allocated) {
        (Q = A.callback) === null || Q === void 0 || Q.call(A);
        for (let [D, Y] of this.underlyingCalls.entries())
          if (Y.state === "ACTIVE" && Y.nextMessageToSend === G) Y.call.sendMessageWithContext({
            callback: (W) => {
              this.handleChildWriteCompleted(D)
            }
          }, B)
      } else {
        if (this.commitCallWithMostMessages(), this.committedCallIndex === null) return;
        let D = this.underlyingCalls[this.committedCallIndex];
        if (Z.callback = A.callback, D.state === "ACTIVE" && D.nextMessageToSend === G) D.call.sendMessageWithContext({
          callback: (Y) => {
            this.handleChildWriteCompleted(this.committedCallIndex)
          }
        }, B)
      }
    }
    startRead() {
      this.trace("startRead called"), this.readStarted = !0;
      for (let A of this.underlyingCalls)
        if ((A === null || A === void 0 ? void 0 : A.state) === "ACTIVE") A.call.startRead()
    }
    halfClose() {
      this.trace("halfClose called");
      let A = this.getNextBufferIndex();
      this.writeBuffer.push({
        entryType: "HALF_CLOSE",
        allocated: !1
      });
      for (let B of this.underlyingCalls)
        if ((B === null || B === void 0 ? void 0 : B.state) === "ACTIVE" && B.nextMessageToSend === A) B.nextMessageToSend += 1, B.call.halfClose()
    }
    setCredentials(A) {
      throw new Error("Method not implemented.")
    }
    getMethod() {
      return this.methodName
    }
    getHost() {
      return this.host
    }
  }
  Wx0.RetryingCall = Yx0
})
// @from(Start 5005576, End 5007302)
cD1 = z((Vx0) => {
  Object.defineProperty(Vx0, "__esModule", {
    value: !0
  });
  Vx0.BaseSubchannelWrapper = void 0;
  class Xx0 {
    constructor(A) {
      this.child = A, this.healthy = !0, this.healthListeners = new Set, A.addHealthStateWatcher((B) => {
        if (this.healthy) this.updateHealthListeners()
      })
    }
    updateHealthListeners() {
      for (let A of this.healthListeners) A(this.isHealthy())
    }
    getConnectivityState() {
      return this.child.getConnectivityState()
    }
    addConnectivityStateListener(A) {
      this.child.addConnectivityStateListener(A)
    }
    removeConnectivityStateListener(A) {
      this.child.removeConnectivityStateListener(A)
    }
    startConnecting() {
      this.child.startConnecting()
    }
    getAddress() {
      return this.child.getAddress()
    }
    throttleKeepalive(A) {
      this.child.throttleKeepalive(A)
    }
    ref() {
      this.child.ref()
    }
    unref() {
      this.child.unref()
    }
    getChannelzRef() {
      return this.child.getChannelzRef()
    }
    isHealthy() {
      return this.healthy && this.child.isHealthy()
    }
    addHealthStateWatcher(A) {
      this.healthListeners.add(A)
    }
    removeHealthStateWatcher(A) {
      this.healthListeners.delete(A)
    }
    setHealthy(A) {
      if (A !== this.healthy) {
        if (this.healthy = A, this.child.isHealthy()) this.updateHealthListeners()
      }
    }
    getRealSubchannel() {
      return this.child.getRealSubchannel()
    }
    realSubchannelEquals(A) {
      return this.getRealSubchannel() === A.getRealSubchannel()
    }
    getCallCredentials() {
      return this.child.getCallCredentials()
    }
  }
  Vx0.BaseSubchannelWrapper = Xx0
})
// @from(Start 5007308, End 5023224)
rm1 = z((Ux0) => {
  Object.defineProperty(Ux0, "__esModule", {
    value: !0
  });
  Ux0.InternalChannel = Ux0.SUBCHANNEL_ARGS_EXCLUDE_KEY_PREFIX = void 0;
  var WG6 = us(),
    JG6 = dS0(),
    FG6 = Pk0(),
    sm1 = FR(),
    XG6 = SZ(),
    UR = y6(),
    VG6 = dm1(),
    CG6 = lk0(),
    Kx0 = Zw(),
    lD1 = GB(),
    KG6 = km1(),
    iD1 = uY(),
    kX = TX(),
    wr = Aj(),
    HG6 = ek0(),
    zG6 = Hr(),
    wG6 = Gx0(),
    nm1 = vm1(),
    EG6 = mD1(),
    am1 = Fx0(),
    UG6 = cD1(),
    NG6 = 2147483647,
    $G6 = 1000,
    qG6 = 1800000,
    nD1 = new Map,
    MG6 = 16777216,
    LG6 = 1048576;
  class Hx0 extends UG6.BaseSubchannelWrapper {
    constructor(A, B) {
      super(A);
      this.channel = B, this.refCount = 0, this.subchannelStateListener = (Q, I, G, Z) => {
        B.throttleKeepalive(Z)
      }
    }
    ref() {
      if (this.refCount === 0) this.child.addConnectivityStateListener(this.subchannelStateListener), this.channel.addWrappedSubchannel(this);
      this.child.ref(), this.refCount += 1
    }
    unref() {
      if (this.child.unref(), this.refCount -= 1, this.refCount <= 0) this.child.removeConnectivityStateListener(this.subchannelStateListener), this.channel.removeWrappedSubchannel(this)
    }
  }
  class zx0 {
    pick(A) {
      return {
        pickResultType: sm1.PickResultType.DROP,
        status: {
          code: UR.Status.UNAVAILABLE,
          details: "Channel closed before call started",
          metadata: new XG6.Metadata
        },
        subchannel: null,
        onCallStarted: null,
        onCallEnded: null
      }
    }
  }
  Ux0.SUBCHANNEL_ARGS_EXCLUDE_KEY_PREFIX = "grpc.internal.no_subchannel";
  class wx0 {
    constructor(A) {
      this.target = A, this.trace = new wr.ChannelzTrace, this.callTracker = new wr.ChannelzCallTracker, this.childrenTracker = new wr.ChannelzChildrenTracker, this.state = kX.ConnectivityState.IDLE
    }
    getChannelzInfoCallback() {
      return () => {
        return {
          target: this.target,
          state: this.state,
          trace: this.trace,
          callTracker: this.callTracker,
          children: this.childrenTracker.getChildLists()
        }
      }
    }
  }
  class Ex0 {
    constructor(A, B, Q) {
      var I, G, Z, D, Y, W;
      if (this.credentials = B, this.options = Q, this.connectivityState = kX.ConnectivityState.IDLE, this.currentPicker = new sm1.UnavailablePicker, this.configSelectionQueue = [], this.pickQueue = [], this.connectivityStateWatchers = [], this.callRefTimer = null, this.configSelector = null, this.currentResolutionError = null, this.wrappedSubchannels = new Set, this.callCount = 0, this.idleTimer = null, this.channelzEnabled = !0, this.randomChannelId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER), typeof A !== "string") throw new TypeError("Channel target must be a string");
      if (!(B instanceof WG6.ChannelCredentials)) throw new TypeError("Channel credentials must be a ChannelCredentials object");
      if (Q) {
        if (typeof Q !== "object") throw new TypeError("Channel options must be an object")
      }
      this.channelzInfoTracker = new wx0(A);
      let J = iD1.parseUri(A);
      if (J === null) throw new Error(`Could not parse target name "${A}"`);
      let F = Kx0.mapUriDefaultScheme(J);
      if (F === null) throw new Error(`Could not find a default scheme for target name "${A}"`);
      if (this.options["grpc.enable_channelz"] === 0) this.channelzEnabled = !1;
      if (this.channelzRef = wr.registerChannelzChannel(A, this.channelzInfoTracker.getChannelzInfoCallback(), this.channelzEnabled), this.channelzEnabled) this.channelzInfoTracker.trace.addTrace("CT_INFO", "Channel created");
      if (this.options["grpc.default_authority"]) this.defaultAuthority = this.options["grpc.default_authority"];
      else this.defaultAuthority = Kx0.getDefaultAuthority(F);
      let X = KG6.mapProxyName(F, Q);
      this.target = X.target, this.options = Object.assign({}, this.options, X.extraOptions), this.subchannelPool = FG6.getSubchannelPool(((I = Q["grpc.use_local_subchannel_pool"]) !== null && I !== void 0 ? I : 0) === 0), this.retryBufferTracker = new am1.MessageBufferTracker((G = Q["grpc.retry_buffer_size"]) !== null && G !== void 0 ? G : MG6, (Z = Q["grpc.per_rpc_retry_buffer_size"]) !== null && Z !== void 0 ? Z : LG6), this.keepaliveTime = (D = Q["grpc.keepalive_time_ms"]) !== null && D !== void 0 ? D : -1, this.idleTimeoutMs = Math.max((Y = Q["grpc.client_idle_timeout_ms"]) !== null && Y !== void 0 ? Y : qG6, $G6);
      let V = {
        createSubchannel: (K, E) => {
          let N = {};
          for (let [R, T] of Object.entries(E))
            if (!R.startsWith(Ux0.SUBCHANNEL_ARGS_EXCLUDE_KEY_PREFIX)) N[R] = T;
          let q = this.subchannelPool.getOrCreateSubchannel(this.target, K, N, this.credentials);
          if (q.throttleKeepalive(this.keepaliveTime), this.channelzEnabled) this.channelzInfoTracker.trace.addTrace("CT_INFO", "Created subchannel or used existing subchannel", q.getChannelzRef());
          return new Hx0(q, this)
        },
        updateState: (K, E) => {
          this.currentPicker = E;
          let N = this.pickQueue.slice();
          if (this.pickQueue = [], N.length > 0) this.callRefTimerUnref();
          for (let q of N) q.doPick();
          this.updateState(K)
        },
        requestReresolution: () => {
          throw new Error("Resolving load balancer should never call requestReresolution")
        },
        addChannelzChild: (K) => {
          if (this.channelzEnabled) this.channelzInfoTracker.childrenTracker.refChild(K)
        },
        removeChannelzChild: (K) => {
          if (this.channelzEnabled) this.channelzInfoTracker.childrenTracker.unrefChild(K)
        }
      };
      this.resolvingLoadBalancer = new JG6.ResolvingLoadBalancer(this.target, V, Q, (K, E) => {
        var N;
        if (K.retryThrottling) nD1.set(this.getTarget(), new am1.RetryThrottler(K.retryThrottling.maxTokens, K.retryThrottling.tokenRatio, nD1.get(this.getTarget())));
        else nD1.delete(this.getTarget());
        if (this.channelzEnabled) this.channelzInfoTracker.trace.addTrace("CT_INFO", "Address resolution succeeded");
        (N = this.configSelector) === null || N === void 0 || N.unref(), this.configSelector = E, this.currentResolutionError = null, process.nextTick(() => {
          let q = this.configSelectionQueue;
          if (this.configSelectionQueue = [], q.length > 0) this.callRefTimerUnref();
          for (let O of q) O.getConfig()
        })
      }, (K) => {
        if (this.channelzEnabled) this.channelzInfoTracker.trace.addTrace("CT_WARNING", "Address resolution failed with code " + K.code + ' and details "' + K.details + '"');
        if (this.configSelectionQueue.length > 0) this.trace("Name resolution failed with calls queued for config selection");
        if (this.configSelector === null) this.currentResolutionError = Object.assign(Object.assign({}, EG6.restrictControlPlaneStatusCode(K.code, K.details)), {
          metadata: K.metadata
        });
        let E = this.configSelectionQueue;
        if (this.configSelectionQueue = [], E.length > 0) this.callRefTimerUnref();
        for (let N of E) N.reportResolverError(K)
      }), this.filterStackFactory = new VG6.FilterStackFactory([new CG6.CompressionFilterFactory(this, this.options)]), this.trace("Channel constructed with options " + JSON.stringify(Q, void 0, 2));
      let C = new Error;
      if (lD1.isTracerEnabled("channel_stacktrace")) lD1.trace(UR.LogVerbosity.DEBUG, "channel_stacktrace", "(" + this.channelzRef.id + `) Channel constructed 
` + ((W = C.stack) === null || W === void 0 ? void 0 : W.substring(C.stack.indexOf(`
`) + 1)));
      this.lastActivityTimestamp = new Date
    }
    trace(A, B) {
      lD1.trace(B !== null && B !== void 0 ? B : UR.LogVerbosity.DEBUG, "channel", "(" + this.channelzRef.id + ") " + iD1.uriToString(this.target) + " " + A)
    }
    callRefTimerRef() {
      var A, B, Q, I;
      if (!this.callRefTimer) this.callRefTimer = setInterval(() => {}, NG6);
      if (!((B = (A = this.callRefTimer).hasRef) === null || B === void 0 ? void 0 : B.call(A))) this.trace("callRefTimer.ref | configSelectionQueue.length=" + this.configSelectionQueue.length + " pickQueue.length=" + this.pickQueue.length), (I = (Q = this.callRefTimer).ref) === null || I === void 0 || I.call(Q)
    }
    callRefTimerUnref() {
      var A, B, Q;
      if (!((A = this.callRefTimer) === null || A === void 0 ? void 0 : A.hasRef) || this.callRefTimer.hasRef()) this.trace("callRefTimer.unref | configSelectionQueue.length=" + this.configSelectionQueue.length + " pickQueue.length=" + this.pickQueue.length), (Q = (B = this.callRefTimer) === null || B === void 0 ? void 0 : B.unref) === null || Q === void 0 || Q.call(B)
    }
    removeConnectivityStateWatcher(A) {
      let B = this.connectivityStateWatchers.findIndex((Q) => Q === A);
      if (B >= 0) this.connectivityStateWatchers.splice(B, 1)
    }
    updateState(A) {
      if (lD1.trace(UR.LogVerbosity.DEBUG, "connectivity_state", "(" + this.channelzRef.id + ") " + iD1.uriToString(this.target) + " " + kX.ConnectivityState[this.connectivityState] + " -> " + kX.ConnectivityState[A]), this.channelzEnabled) this.channelzInfoTracker.trace.addTrace("CT_INFO", "Connectivity state change to " + kX.ConnectivityState[A]);
      this.connectivityState = A, this.channelzInfoTracker.state = A;
      let B = this.connectivityStateWatchers.slice();
      for (let Q of B)
        if (A !== Q.currentState) {
          if (Q.timer) clearTimeout(Q.timer);
          this.removeConnectivityStateWatcher(Q), Q.callback()
        } if (A !== kX.ConnectivityState.TRANSIENT_FAILURE) this.currentResolutionError = null
    }
    throttleKeepalive(A) {
      if (A > this.keepaliveTime) {
        this.keepaliveTime = A;
        for (let B of this.wrappedSubchannels) B.throttleKeepalive(A)
      }
    }
    addWrappedSubchannel(A) {
      this.wrappedSubchannels.add(A)
    }
    removeWrappedSubchannel(A) {
      this.wrappedSubchannels.delete(A)
    }
    doPick(A, B) {
      return this.currentPicker.pick({
        metadata: A,
        extraPickInfo: B
      })
    }
    queueCallForPick(A) {
      this.pickQueue.push(A), this.callRefTimerRef()
    }
    getConfig(A, B) {
      if (this.connectivityState !== kX.ConnectivityState.SHUTDOWN) this.resolvingLoadBalancer.exitIdle();
      if (this.configSelector) return {
        type: "SUCCESS",
        config: this.configSelector.invoke(A, B, this.randomChannelId)
      };
      else if (this.currentResolutionError) return {
        type: "ERROR",
        error: this.currentResolutionError
      };
      else return {
        type: "NONE"
      }
    }
    queueCallForConfig(A) {
      this.configSelectionQueue.push(A), this.callRefTimerRef()
    }
    enterIdle() {
      if (this.resolvingLoadBalancer.destroy(), this.updateState(kX.ConnectivityState.IDLE), this.currentPicker = new sm1.QueuePicker(this.resolvingLoadBalancer), this.idleTimer) clearTimeout(this.idleTimer), this.idleTimer = null;
      if (this.callRefTimer) clearInterval(this.callRefTimer), this.callRefTimer = null
    }
    startIdleTimeout(A) {
      var B, Q;
      this.idleTimer = setTimeout(() => {
        if (this.callCount > 0) {
          this.startIdleTimeout(this.idleTimeoutMs);
          return
        }
        let G = new Date().valueOf() - this.lastActivityTimestamp.valueOf();
        if (G >= this.idleTimeoutMs) this.trace("Idle timer triggered after " + this.idleTimeoutMs + "ms of inactivity"), this.enterIdle();
        else this.startIdleTimeout(this.idleTimeoutMs - G)
      }, A), (Q = (B = this.idleTimer).unref) === null || Q === void 0 || Q.call(B)
    }
    maybeStartIdleTimer() {
      if (this.connectivityState !== kX.ConnectivityState.SHUTDOWN && !this.idleTimer) this.startIdleTimeout(this.idleTimeoutMs)
    }
    onCallStart() {
      if (this.channelzEnabled) this.channelzInfoTracker.callTracker.addCallStarted();
      this.callCount += 1
    }
    onCallEnd(A) {
      if (this.channelzEnabled)
        if (A.code === UR.Status.OK) this.channelzInfoTracker.callTracker.addCallSucceeded();
        else this.channelzInfoTracker.callTracker.addCallFailed();
      this.callCount -= 1, this.lastActivityTimestamp = new Date, this.maybeStartIdleTimer()
    }
    createLoadBalancingCall(A, B, Q, I, G) {
      let Z = nm1.getNextCallNumber();
      return this.trace("createLoadBalancingCall [" + Z + '] method="' + B + '"'), new HG6.LoadBalancingCall(this, A, B, Q, I, G, Z)
    }
    createRetryingCall(A, B, Q, I, G) {
      let Z = nm1.getNextCallNumber();
      return this.trace("createRetryingCall [" + Z + '] method="' + B + '"'), new am1.RetryingCall(this, A, B, Q, I, G, Z, this.retryBufferTracker, nD1.get(this.getTarget()))
    }
    createResolvingCall(A, B, Q, I, G) {
      let Z = nm1.getNextCallNumber();
      this.trace("createResolvingCall [" + Z + '] method="' + A + '", deadline=' + zG6.deadlineToString(B));
      let D = {
          deadline: B,
          flags: G !== null && G !== void 0 ? G : UR.Propagate.DEFAULTS,
          host: Q !== null && Q !== void 0 ? Q : this.defaultAuthority,
          parentCall: I
        },
        Y = new wG6.ResolvingCall(this, A, D, this.filterStackFactory.clone(), Z);
      return this.onCallStart(), Y.addStatusWatcher((W) => {
        this.onCallEnd(W)
      }), Y
    }
    close() {
      var A;
      this.resolvingLoadBalancer.destroy(), this.updateState(kX.ConnectivityState.SHUTDOWN), this.currentPicker = new zx0;
      for (let B of this.configSelectionQueue) B.cancelWithStatus(UR.Status.UNAVAILABLE, "Channel closed before call started");
      this.configSelectionQueue = [];
      for (let B of this.pickQueue) B.cancelWithStatus(UR.Status.UNAVAILABLE, "Channel closed before call started");
      if (this.pickQueue = [], this.callRefTimer) clearInterval(this.callRefTimer);
      if (this.idleTimer) clearTimeout(this.idleTimer);
      if (this.channelzEnabled) wr.unregisterChannelzRef(this.channelzRef);
      this.subchannelPool.unrefUnusedSubchannels(), (A = this.configSelector) === null || A === void 0 || A.unref(), this.configSelector = null
    }
    getTarget() {
      return iD1.uriToString(this.target)
    }
    getConnectivityState(A) {
      let B = this.connectivityState;
      if (A) this.resolvingLoadBalancer.exitIdle(), this.lastActivityTimestamp = new Date, this.maybeStartIdleTimer();
      return B
    }
    watchConnectivityState(A, B, Q) {
      if (this.connectivityState === kX.ConnectivityState.SHUTDOWN) throw new Error("Channel has been shut down");
      let I = null;
      if (B !== 1 / 0) {
        let Z = B instanceof Date ? B : new Date(B),
          D = new Date;
        if (B === -1 / 0 || Z <= D) {
          process.nextTick(Q, new Error("Deadline passed without connectivity state change"));
          return
        }
        I = setTimeout(() => {
          this.removeConnectivityStateWatcher(G), Q(new Error("Deadline passed without connectivity state change"))
        }, Z.getTime() - D.getTime())
      }
      let G = {
        currentState: A,
        callback: Q,
        timer: I
      };
      this.connectivityStateWatchers.push(G)
    }
    getChannelzRef() {
      return this.channelzRef
    }
    createCall(A, B, Q, I, G) {
      if (typeof A !== "string") throw new TypeError("Channel#createCall: method must be a string");
      if (!(typeof B === "number" || B instanceof Date)) throw new TypeError("Channel#createCall: deadline must be a number or Date");
      if (this.connectivityState === kX.ConnectivityState.SHUTDOWN) throw new Error("Channel has been shut down");
      return this.createResolvingCall(A, B, Q, I, G)
    }
    getOptions() {
      return this.options
    }
  }
  Ux0.InternalChannel = Ex0
})
// @from(Start 5023230, End 5024606)
yh1 = z((Mx0) => {
  Object.defineProperty(Mx0, "__esModule", {
    value: !0
  });
  Mx0.ChannelImplementation = void 0;
  var RG6 = us(),
    OG6 = rm1();
  class qx0 {
    constructor(A, B, Q) {
      if (typeof A !== "string") throw new TypeError("Channel target must be a string");
      if (!(B instanceof RG6.ChannelCredentials)) throw new TypeError("Channel credentials must be a ChannelCredentials object");
      if (Q) {
        if (typeof Q !== "object") throw new TypeError("Channel options must be an object")
      }
      this.internalChannel = new OG6.InternalChannel(A, B, Q)
    }
    close() {
      this.internalChannel.close()
    }
    getTarget() {
      return this.internalChannel.getTarget()
    }
    getConnectivityState(A) {
      return this.internalChannel.getConnectivityState(A)
    }
    watchConnectivityState(A, B, Q) {
      this.internalChannel.watchConnectivityState(A, B, Q)
    }
    getChannelzRef() {
      return this.internalChannel.getChannelzRef()
    }
    createCall(A, B, Q, I, G) {
      if (typeof A !== "string") throw new TypeError("Channel#createCall: method must be a string");
      if (!(typeof B === "number" || B instanceof Date)) throw new TypeError("Channel#createCall: deadline must be a number or Date");
      return this.internalChannel.createCall(A, B, Q, I, G)
    }
  }
  Mx0.ChannelImplementation = qx0
})
// @from(Start 5024612, End 5028727)
yx0 = z((_x0) => {
  Object.defineProperty(_x0, "__esModule", {
    value: !0
  });
  _x0.ServerDuplexStreamImpl = _x0.ServerWritableStreamImpl = _x0.ServerReadableStreamImpl = _x0.ServerUnaryCallImpl = void 0;
  _x0.serverErrorToStatus = em1;
  var TG6 = Z1("events"),
    om1 = Z1("stream"),
    tm1 = y6(),
    Rx0 = SZ();

  function em1(A, B) {
    var Q;
    let I = {
      code: tm1.Status.UNKNOWN,
      details: "message" in A ? A.message : "Unknown Error",
      metadata: (Q = B !== null && B !== void 0 ? B : A.metadata) !== null && Q !== void 0 ? Q : null
    };
    if ("code" in A && typeof A.code === "number" && Number.isInteger(A.code)) {
      if (I.code = A.code, "details" in A && typeof A.details === "string") I.details = A.details
    }
    return I
  }
  class Ox0 extends TG6.EventEmitter {
    constructor(A, B, Q, I) {
      super();
      this.path = A, this.call = B, this.metadata = Q, this.request = I, this.cancelled = !1
    }
    getPeer() {
      return this.call.getPeer()
    }
    sendMetadata(A) {
      this.call.sendMetadata(A)
    }
    getDeadline() {
      return this.call.getDeadline()
    }
    getPath() {
      return this.path
    }
    getHost() {
      return this.call.getHost()
    }
  }
  _x0.ServerUnaryCallImpl = Ox0;
  class Tx0 extends om1.Readable {
    constructor(A, B, Q) {
      super({
        objectMode: !0
      });
      this.path = A, this.call = B, this.metadata = Q, this.cancelled = !1
    }
    _read(A) {
      this.call.startRead()
    }
    getPeer() {
      return this.call.getPeer()
    }
    sendMetadata(A) {
      this.call.sendMetadata(A)
    }
    getDeadline() {
      return this.call.getDeadline()
    }
    getPath() {
      return this.path
    }
    getHost() {
      return this.call.getHost()
    }
  }
  _x0.ServerReadableStreamImpl = Tx0;
  class Px0 extends om1.Writable {
    constructor(A, B, Q, I) {
      super({
        objectMode: !0
      });
      this.path = A, this.call = B, this.metadata = Q, this.request = I, this.pendingStatus = {
        code: tm1.Status.OK,
        details: "OK"
      }, this.cancelled = !1, this.trailingMetadata = new Rx0.Metadata, this.on("error", (G) => {
        this.pendingStatus = em1(G), this.end()
      })
    }
    getPeer() {
      return this.call.getPeer()
    }
    sendMetadata(A) {
      this.call.sendMetadata(A)
    }
    getDeadline() {
      return this.call.getDeadline()
    }
    getPath() {
      return this.path
    }
    getHost() {
      return this.call.getHost()
    }
    _write(A, B, Q) {
      this.call.sendMessage(A, Q)
    }
    _final(A) {
      var B;
      A(null), this.call.sendStatus(Object.assign(Object.assign({}, this.pendingStatus), {
        metadata: (B = this.pendingStatus.metadata) !== null && B !== void 0 ? B : this.trailingMetadata
      }))
    }
    end(A) {
      if (A) this.trailingMetadata = A;
      return super.end()
    }
  }
  _x0.ServerWritableStreamImpl = Px0;
  class Sx0 extends om1.Duplex {
    constructor(A, B, Q) {
      super({
        objectMode: !0
      });
      this.path = A, this.call = B, this.metadata = Q, this.pendingStatus = {
        code: tm1.Status.OK,
        details: "OK"
      }, this.cancelled = !1, this.trailingMetadata = new Rx0.Metadata, this.on("error", (I) => {
        this.pendingStatus = em1(I), this.end()
      })
    }
    getPeer() {
      return this.call.getPeer()
    }
    sendMetadata(A) {
      this.call.sendMetadata(A)
    }
    getDeadline() {
      return this.call.getDeadline()
    }
    getPath() {
      return this.path
    }
    getHost() {
      return this.call.getHost()
    }
    _read(A) {
      this.call.startRead()
    }
    _write(A, B, Q) {
      this.call.sendMessage(A, Q)
    }
    _final(A) {
      var B;
      A(null), this.call.sendStatus(Object.assign(Object.assign({}, this.pendingStatus), {
        metadata: (B = this.pendingStatus.metadata) !== null && B !== void 0 ? B : this.trailingMetadata
      }))
    }
    end(A) {
      if (A) this.trailingMetadata = A;
      return super.end()
    }
  }
  _x0.ServerDuplexStreamImpl = Sx0
})
// @from(Start 5028733, End 5035993)
aD1 = z((kx0) => {
  Object.defineProperty(kx0, "__esModule", {
    value: !0
  });
  kx0.ServerCredentials = void 0;
  kx0.createCertificateProviderServerCredentials = yG6;
  kx0.createServerCredentialsWithInterceptors = kG6;
  var Ad1 = wh1();
  class Xh {
    constructor(A, B) {
      this.serverConstructorOptions = A, this.watchers = new Set, this.latestContextOptions = null, this.latestContextOptions = B !== null && B !== void 0 ? B : null
    }
    _addWatcher(A) {
      this.watchers.add(A)
    }
    _removeWatcher(A) {
      this.watchers.delete(A)
    }
    getWatcherCount() {
      return this.watchers.size
    }
    updateSecureContextOptions(A) {
      this.latestContextOptions = A;
      for (let B of this.watchers) B(this.latestContextOptions)
    }
    _isSecure() {
      return this.serverConstructorOptions !== null
    }
    _getSecureContextOptions() {
      return this.latestContextOptions
    }
    _getConstructorOptions() {
      return this.serverConstructorOptions
    }
    _getInterceptors() {
      return []
    }
    static createInsecure() {
      return new Bd1
    }
    static createSsl(A, B, Q = !1) {
      var I;
      if (A !== null && !Buffer.isBuffer(A)) throw new TypeError("rootCerts must be null or a Buffer");
      if (!Array.isArray(B)) throw new TypeError("keyCertPairs must be an array");
      if (typeof Q !== "boolean") throw new TypeError("checkClientCertificate must be a boolean");
      let G = [],
        Z = [];
      for (let D = 0; D < B.length; D++) {
        let Y = B[D];
        if (Y === null || typeof Y !== "object") throw new TypeError(`keyCertPair[${D}] must be an object`);
        if (!Buffer.isBuffer(Y.private_key)) throw new TypeError(`keyCertPair[${D}].private_key must be a Buffer`);
        if (!Buffer.isBuffer(Y.cert_chain)) throw new TypeError(`keyCertPair[${D}].cert_chain must be a Buffer`);
        G.push(Y.cert_chain), Z.push(Y.private_key)
      }
      return new Qd1({
        requestCert: Q,
        ciphers: Ad1.CIPHER_SUITES
      }, {
        ca: (I = A !== null && A !== void 0 ? A : Ad1.getDefaultRootsData()) !== null && I !== void 0 ? I : void 0,
        cert: G,
        key: Z
      })
    }
  }
  kx0.ServerCredentials = Xh;
  class Bd1 extends Xh {
    constructor() {
      super(null)
    }
    _getSettings() {
      return null
    }
    _equals(A) {
      return A instanceof Bd1
    }
  }
  class Qd1 extends Xh {
    constructor(A, B) {
      super(A, B);
      this.options = Object.assign(Object.assign({}, A), B)
    }
    _equals(A) {
      if (this === A) return !0;
      if (!(A instanceof Qd1)) return !1;
      if (Buffer.isBuffer(this.options.ca) && Buffer.isBuffer(A.options.ca)) {
        if (!this.options.ca.equals(A.options.ca)) return !1
      } else if (this.options.ca !== A.options.ca) return !1;
      if (Array.isArray(this.options.cert) && Array.isArray(A.options.cert)) {
        if (this.options.cert.length !== A.options.cert.length) return !1;
        for (let B = 0; B < this.options.cert.length; B++) {
          let Q = this.options.cert[B],
            I = A.options.cert[B];
          if (Buffer.isBuffer(Q) && Buffer.isBuffer(I)) {
            if (!Q.equals(I)) return !1
          } else if (Q !== I) return !1
        }
      } else if (this.options.cert !== A.options.cert) return !1;
      if (Array.isArray(this.options.key) && Array.isArray(A.options.key)) {
        if (this.options.key.length !== A.options.key.length) return !1;
        for (let B = 0; B < this.options.key.length; B++) {
          let Q = this.options.key[B],
            I = A.options.key[B];
          if (Buffer.isBuffer(Q) && Buffer.isBuffer(I)) {
            if (!Q.equals(I)) return !1
          } else if (Q !== I) return !1
        }
      } else if (this.options.key !== A.options.key) return !1;
      if (this.options.requestCert !== A.options.requestCert) return !1;
      return !0
    }
  }
  class Id1 extends Xh {
    constructor(A, B, Q) {
      super({
        requestCert: B !== null,
        rejectUnauthorized: Q,
        ciphers: Ad1.CIPHER_SUITES
      });
      this.identityCertificateProvider = A, this.caCertificateProvider = B, this.requireClientCertificate = Q, this.latestCaUpdate = null, this.latestIdentityUpdate = null, this.caCertificateUpdateListener = this.handleCaCertificateUpdate.bind(this), this.identityCertificateUpdateListener = this.handleIdentityCertitificateUpdate.bind(this)
    }
    _addWatcher(A) {
      var B;
      if (this.getWatcherCount() === 0)(B = this.caCertificateProvider) === null || B === void 0 || B.addCaCertificateListener(this.caCertificateUpdateListener), this.identityCertificateProvider.addIdentityCertificateListener(this.identityCertificateUpdateListener);
      super._addWatcher(A)
    }
    _removeWatcher(A) {
      var B;
      if (super._removeWatcher(A), this.getWatcherCount() === 0)(B = this.caCertificateProvider) === null || B === void 0 || B.removeCaCertificateListener(this.caCertificateUpdateListener), this.identityCertificateProvider.removeIdentityCertificateListener(this.identityCertificateUpdateListener)
    }
    _equals(A) {
      if (this === A) return !0;
      if (!(A instanceof Id1)) return !1;
      return this.caCertificateProvider === A.caCertificateProvider && this.identityCertificateProvider === A.identityCertificateProvider && this.requireClientCertificate === A.requireClientCertificate
    }
    calculateSecureContextOptions() {
      var A;
      if (this.latestIdentityUpdate === null) return null;
      if (this.caCertificateProvider !== null && this.latestCaUpdate === null) return null;
      return {
        ca: (A = this.latestCaUpdate) === null || A === void 0 ? void 0 : A.caCertificate,
        cert: [this.latestIdentityUpdate.certificate],
        key: [this.latestIdentityUpdate.privateKey]
      }
    }
    finalizeUpdate() {
      let A = this.calculateSecureContextOptions();
      this.updateSecureContextOptions(A)
    }
    handleCaCertificateUpdate(A) {
      this.latestCaUpdate = A, this.finalizeUpdate()
    }
    handleIdentityCertitificateUpdate(A) {
      this.latestIdentityUpdate = A, this.finalizeUpdate()
    }
  }

  function yG6(A, B, Q) {
    return new Id1(A, B, Q)
  }
  class Gd1 extends Xh {
    constructor(A, B) {
      super({});
      this.childCredentials = A, this.interceptors = B
    }
    _isSecure() {
      return this.childCredentials._isSecure()
    }
    _equals(A) {
      if (!(A instanceof Gd1)) return !1;
      if (!this.childCredentials._equals(A.childCredentials)) return !1;
      if (this.interceptors.length !== A.interceptors.length) return !1;
      for (let B = 0; B < this.interceptors.length; B++)
        if (this.interceptors[B] !== A.interceptors[B]) return !1;
      return !0
    }
    _getInterceptors() {
      return this.interceptors
    }
    _addWatcher(A) {
      this.childCredentials._addWatcher(A)
    }
    _removeWatcher(A) {
      this.childCredentials._removeWatcher(A)
    }
    _getConstructorOptions() {
      return this.childCredentials._getConstructorOptions()
    }
    _getSecureContextOptions() {
      return this.childCredentials._getSecureContextOptions()
    }
  }

  function kG6(A, B) {
    return new Gd1(A, B)
  }
})
// @from(Start 5035999, End 5054358)
Jd1 = z((nx0) => {
  Object.defineProperty(nx0, "__esModule", {
    value: !0
  });
  nx0.BaseServerInterceptingCall = nx0.ServerInterceptingCall = nx0.ResponderBuilder = nx0.ServerListenerBuilder = void 0;
  nx0.isInterceptingServerListener = bG6;
  nx0.getServerInterceptingCall = uG6;
  var Dd1 = SZ(),
    cY = y6(),
    Vh = Z1("http2"),
    fx0 = uZ1(),
    vx0 = Z1("zlib"),
    vG6 = xm1(),
    mx0 = GB(),
    dx0 = "server_call";

  function Ij(A) {
    mx0.trace(cY.LogVerbosity.DEBUG, dx0, A)
  }
  class ux0 {
    constructor() {
      this.metadata = void 0, this.message = void 0, this.halfClose = void 0, this.cancel = void 0
    }
    withOnReceiveMetadata(A) {
      return this.metadata = A, this
    }
    withOnReceiveMessage(A) {
      return this.message = A, this
    }
    withOnReceiveHalfClose(A) {
      return this.halfClose = A, this
    }
    withOnCancel(A) {
      return this.cancel = A, this
    }
    build() {
      return {
        onReceiveMetadata: this.metadata,
        onReceiveMessage: this.message,
        onReceiveHalfClose: this.halfClose,
        onCancel: this.cancel
      }
    }
  }
  nx0.ServerListenerBuilder = ux0;

  function bG6(A) {
    return A.onReceiveMetadata !== void 0 && A.onReceiveMetadata.length === 1
  }
  class px0 {
    constructor(A, B) {
      this.listener = A, this.nextListener = B, this.cancelled = !1, this.processingMetadata = !1, this.hasPendingMessage = !1, this.pendingMessage = null, this.processingMessage = !1, this.hasPendingHalfClose = !1
    }
    processPendingMessage() {
      if (this.hasPendingMessage) this.nextListener.onReceiveMessage(this.pendingMessage), this.pendingMessage = null, this.hasPendingMessage = !1
    }
    processPendingHalfClose() {
      if (this.hasPendingHalfClose) this.nextListener.onReceiveHalfClose(), this.hasPendingHalfClose = !1
    }
    onReceiveMetadata(A) {
      if (this.cancelled) return;
      this.processingMetadata = !0, this.listener.onReceiveMetadata(A, (B) => {
        if (this.processingMetadata = !1, this.cancelled) return;
        this.nextListener.onReceiveMetadata(B), this.processPendingMessage(), this.processPendingHalfClose()
      })
    }
    onReceiveMessage(A) {
      if (this.cancelled) return;
      this.processingMessage = !0, this.listener.onReceiveMessage(A, (B) => {
        if (this.processingMessage = !1, this.cancelled) return;
        if (this.processingMetadata) this.pendingMessage = B, this.hasPendingMessage = !0;
        else this.nextListener.onReceiveMessage(B), this.processPendingHalfClose()
      })
    }
    onReceiveHalfClose() {
      if (this.cancelled) return;
      this.listener.onReceiveHalfClose(() => {
        if (this.cancelled) return;
        if (this.processingMetadata || this.processingMessage) this.hasPendingHalfClose = !0;
        else this.nextListener.onReceiveHalfClose()
      })
    }
    onCancel() {
      this.cancelled = !0, this.listener.onCancel(), this.nextListener.onCancel()
    }
  }
  class cx0 {
    constructor() {
      this.start = void 0, this.metadata = void 0, this.message = void 0, this.status = void 0
    }
    withStart(A) {
      return this.start = A, this
    }
    withSendMetadata(A) {
      return this.metadata = A, this
    }
    withSendMessage(A) {
      return this.message = A, this
    }
    withSendStatus(A) {
      return this.status = A, this
    }
    build() {
      return {
        start: this.start,
        sendMetadata: this.metadata,
        sendMessage: this.message,
        sendStatus: this.status
      }
    }
  }
  nx0.ResponderBuilder = cx0;
  var sD1 = {
      onReceiveMetadata: (A, B) => {
        B(A)
      },
      onReceiveMessage: (A, B) => {
        B(A)
      },
      onReceiveHalfClose: (A) => {
        A()
      },
      onCancel: () => {}
    },
    rD1 = {
      start: (A) => {
        A()
      },
      sendMetadata: (A, B) => {
        B(A)
      },
      sendMessage: (A, B) => {
        B(A)
      },
      sendStatus: (A, B) => {
        B(A)
      }
    };
  class lx0 {
    constructor(A, B) {
      var Q, I, G, Z;
      this.nextCall = A, this.processingMetadata = !1, this.sentMetadata = !1, this.processingMessage = !1, this.pendingMessage = null, this.pendingMessageCallback = null, this.pendingStatus = null, this.responder = {
        start: (Q = B === null || B === void 0 ? void 0 : B.start) !== null && Q !== void 0 ? Q : rD1.start,
        sendMetadata: (I = B === null || B === void 0 ? void 0 : B.sendMetadata) !== null && I !== void 0 ? I : rD1.sendMetadata,
        sendMessage: (G = B === null || B === void 0 ? void 0 : B.sendMessage) !== null && G !== void 0 ? G : rD1.sendMessage,
        sendStatus: (Z = B === null || B === void 0 ? void 0 : B.sendStatus) !== null && Z !== void 0 ? Z : rD1.sendStatus
      }
    }
    processPendingMessage() {
      if (this.pendingMessageCallback) this.nextCall.sendMessage(this.pendingMessage, this.pendingMessageCallback), this.pendingMessage = null, this.pendingMessageCallback = null
    }
    processPendingStatus() {
      if (this.pendingStatus) this.nextCall.sendStatus(this.pendingStatus), this.pendingStatus = null
    }
    start(A) {
      this.responder.start((B) => {
        var Q, I, G, Z;
        let D = {
            onReceiveMetadata: (Q = B === null || B === void 0 ? void 0 : B.onReceiveMetadata) !== null && Q !== void 0 ? Q : sD1.onReceiveMetadata,
            onReceiveMessage: (I = B === null || B === void 0 ? void 0 : B.onReceiveMessage) !== null && I !== void 0 ? I : sD1.onReceiveMessage,
            onReceiveHalfClose: (G = B === null || B === void 0 ? void 0 : B.onReceiveHalfClose) !== null && G !== void 0 ? G : sD1.onReceiveHalfClose,
            onCancel: (Z = B === null || B === void 0 ? void 0 : B.onCancel) !== null && Z !== void 0 ? Z : sD1.onCancel
          },
          Y = new px0(D, A);
        this.nextCall.start(Y)
      })
    }
    sendMetadata(A) {
      this.processingMetadata = !0, this.sentMetadata = !0, this.responder.sendMetadata(A, (B) => {
        this.processingMetadata = !1, this.nextCall.sendMetadata(B), this.processPendingMessage(), this.processPendingStatus()
      })
    }
    sendMessage(A, B) {
      if (this.processingMessage = !0, !this.sentMetadata) this.sendMetadata(new Dd1.Metadata);
      this.responder.sendMessage(A, (Q) => {
        if (this.processingMessage = !1, this.processingMetadata) this.pendingMessage = Q, this.pendingMessageCallback = B;
        else this.nextCall.sendMessage(Q, B)
      })
    }
    sendStatus(A) {
      this.responder.sendStatus(A, (B) => {
        if (this.processingMetadata || this.processingMessage) this.pendingStatus = B;
        else this.nextCall.sendStatus(B)
      })
    }
    startRead() {
      this.nextCall.startRead()
    }
    getPeer() {
      return this.nextCall.getPeer()
    }
    getDeadline() {
      return this.nextCall.getDeadline()
    }
    getHost() {
      return this.nextCall.getHost()
    }
  }
  nx0.ServerInterceptingCall = lx0;
  var ix0 = "grpc-accept-encoding",
    Yd1 = "grpc-encoding",
    bx0 = "grpc-message",
    gx0 = "grpc-status",
    Zd1 = "grpc-timeout",
    gG6 = /(\d{1,8})\s*([HMSmun])/,
    hG6 = {
      H: 3600000,
      M: 60000,
      S: 1000,
      m: 1,
      u: 0.001,
      n: 0.000001
    },
    mG6 = {
      [ix0]: "identity,deflate,gzip",
      [Yd1]: "identity"
    },
    hx0 = {
      [Vh.constants.HTTP2_HEADER_STATUS]: Vh.constants.HTTP_STATUS_OK,
      [Vh.constants.HTTP2_HEADER_CONTENT_TYPE]: "application/grpc+proto"
    },
    dG6 = {
      waitForTrailers: !0
    };
  class Wd1 {
    constructor(A, B, Q, I, G) {
      var Z;
      if (this.stream = A, this.callEventTracker = Q, this.handler = I, this.listener = null, this.deadlineTimer = null, this.deadline = 1 / 0, this.maxSendMessageSize = cY.DEFAULT_MAX_SEND_MESSAGE_LENGTH, this.maxReceiveMessageSize = cY.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH, this.cancelled = !1, this.metadataSent = !1, this.wantTrailers = !1, this.cancelNotified = !1, this.incomingEncoding = "identity", this.readQueue = [], this.isReadPending = !1, this.receivedHalfClose = !1, this.streamEnded = !1, this.stream.once("error", (J) => {}), this.stream.once("close", () => {
          var J;
          if (Ij("Request to method " + ((J = this.handler) === null || J === void 0 ? void 0 : J.path) + " stream closed with rstCode " + this.stream.rstCode), this.callEventTracker && !this.streamEnded) this.streamEnded = !0, this.callEventTracker.onStreamEnd(!1), this.callEventTracker.onCallEnd({
            code: cY.Status.CANCELLED,
            details: "Stream closed before sending status",
            metadata: null
          });
          this.notifyOnCancel()
        }), this.stream.on("data", (J) => {
          this.handleDataFrame(J)
        }), this.stream.pause(), this.stream.on("end", () => {
          this.handleEndEvent()
        }), "grpc.max_send_message_length" in G) this.maxSendMessageSize = G["grpc.max_send_message_length"];
      if ("grpc.max_receive_message_length" in G) this.maxReceiveMessageSize = G["grpc.max_receive_message_length"];
      this.host = (Z = B[":authority"]) !== null && Z !== void 0 ? Z : B.host, this.decoder = new vG6.StreamDecoder(this.maxReceiveMessageSize);
      let D = Dd1.Metadata.fromHttp2Headers(B);
      if (mx0.isTracerEnabled(dx0)) Ij("Request to " + this.handler.path + " received headers " + JSON.stringify(D.toJSON()));
      let Y = D.get(Zd1);
      if (Y.length > 0) this.handleTimeoutHeader(Y[0]);
      let W = D.get(Yd1);
      if (W.length > 0) this.incomingEncoding = W[0];
      D.remove(Zd1), D.remove(Yd1), D.remove(ix0), D.remove(Vh.constants.HTTP2_HEADER_ACCEPT_ENCODING), D.remove(Vh.constants.HTTP2_HEADER_TE), D.remove(Vh.constants.HTTP2_HEADER_CONTENT_TYPE), this.metadata = D
    }
    handleTimeoutHeader(A) {
      let B = A.toString().match(gG6);
      if (B === null) {
        let G = {
          code: cY.Status.INTERNAL,
          details: `Invalid ${Zd1} value "${A}"`,
          metadata: null
        };
        process.nextTick(() => {
          this.sendStatus(G)
        });
        return
      }
      let Q = +B[1] * hG6[B[2]] | 0,
        I = new Date;
      this.deadline = I.setMilliseconds(I.getMilliseconds() + Q), this.deadlineTimer = setTimeout(() => {
        let G = {
          code: cY.Status.DEADLINE_EXCEEDED,
          details: "Deadline exceeded",
          metadata: null
        };
        this.sendStatus(G)
      }, Q)
    }
    checkCancelled() {
      if (!this.cancelled && (this.stream.destroyed || this.stream.closed)) this.notifyOnCancel(), this.cancelled = !0;
      return this.cancelled
    }
    notifyOnCancel() {
      if (this.cancelNotified) return;
      if (this.cancelNotified = !0, this.cancelled = !0, process.nextTick(() => {
          var A;
          (A = this.listener) === null || A === void 0 || A.onCancel()
        }), this.deadlineTimer) clearTimeout(this.deadlineTimer);
      this.stream.resume()
    }
    maybeSendMetadata() {
      if (!this.metadataSent) this.sendMetadata(new Dd1.Metadata)
    }
    serializeMessage(A) {
      let B = this.handler.serialize(A),
        Q = B.byteLength,
        I = Buffer.allocUnsafe(Q + 5);
      return I.writeUInt8(0, 0), I.writeUInt32BE(Q, 1), B.copy(I, 5), I
    }
    decompressMessage(A, B) {
      let Q = A.subarray(5);
      if (B === "identity") return Q;
      else if (B === "deflate" || B === "gzip") {
        let I;
        if (B === "deflate") I = vx0.createInflate();
        else I = vx0.createGunzip();
        return new Promise((G, Z) => {
          let D = 0,
            Y = [];
          I.on("data", (W) => {
            if (Y.push(W), D += W.byteLength, this.maxReceiveMessageSize !== -1 && D > this.maxReceiveMessageSize) I.destroy(), Z({
              code: cY.Status.RESOURCE_EXHAUSTED,
              details: `Received message that decompresses to a size larger than ${this.maxReceiveMessageSize}`
            })
          }), I.on("end", () => {
            G(Buffer.concat(Y))
          }), I.write(Q), I.end()
        })
      } else return Promise.reject({
        code: cY.Status.UNIMPLEMENTED,
        details: `Received message compressed with unsupported encoding "${B}"`
      })
    }
    async decompressAndMaybePush(A) {
      if (A.type !== "COMPRESSED") throw new Error(`Invalid queue entry type: ${A.type}`);
      let Q = A.compressedMessage.readUInt8(0) === 1 ? this.incomingEncoding : "identity",
        I;
      try {
        I = await this.decompressMessage(A.compressedMessage, Q)
      } catch (G) {
        this.sendStatus(G);
        return
      }
      try {
        A.parsedMessage = this.handler.deserialize(I)
      } catch (G) {
        this.sendStatus({
          code: cY.Status.INTERNAL,
          details: `Error deserializing request: ${G.message}`
        });
        return
      }
      A.type = "READABLE", this.maybePushNextMessage()
    }
    maybePushNextMessage() {
      if (this.listener && this.isReadPending && this.readQueue.length > 0 && this.readQueue[0].type !== "COMPRESSED") {
        this.isReadPending = !1;
        let A = this.readQueue.shift();
        if (A.type === "READABLE") this.listener.onReceiveMessage(A.parsedMessage);
        else this.listener.onReceiveHalfClose()
      }
    }
    handleDataFrame(A) {
      var B;
      if (this.checkCancelled()) return;
      Ij("Request to " + this.handler.path + " received data frame of size " + A.length);
      let Q;
      try {
        Q = this.decoder.write(A)
      } catch (I) {
        this.sendStatus({
          code: cY.Status.RESOURCE_EXHAUSTED,
          details: I.message
        });
        return
      }
      for (let I of Q) {
        this.stream.pause();
        let G = {
          type: "COMPRESSED",
          compressedMessage: I,
          parsedMessage: null
        };
        this.readQueue.push(G), this.decompressAndMaybePush(G), (B = this.callEventTracker) === null || B === void 0 || B.addMessageReceived()
      }
    }
    handleEndEvent() {
      this.readQueue.push({
        type: "HALF_CLOSE",
        compressedMessage: null,
        parsedMessage: null
      }), this.receivedHalfClose = !0, this.maybePushNextMessage()
    }
    start(A) {
      if (Ij("Request to " + this.handler.path + " start called"), this.checkCancelled()) return;
      this.listener = A, A.onReceiveMetadata(this.metadata)
    }
    sendMetadata(A) {
      if (this.checkCancelled()) return;
      if (this.metadataSent) return;
      this.metadataSent = !0;
      let B = A ? A.toHttp2Headers() : null,
        Q = Object.assign(Object.assign(Object.assign({}, hx0), mG6), B);
      this.stream.respond(Q, dG6)
    }
    sendMessage(A, B) {
      if (this.checkCancelled()) return;
      let Q;
      try {
        Q = this.serializeMessage(A)
      } catch (I) {
        this.sendStatus({
          code: cY.Status.INTERNAL,
          details: `Error serializing response: ${fx0.getErrorMessage(I)}`,
          metadata: null
        });
        return
      }
      if (this.maxSendMessageSize !== -1 && Q.length - 5 > this.maxSendMessageSize) {
        this.sendStatus({
          code: cY.Status.RESOURCE_EXHAUSTED,
          details: `Sent message larger than max (${Q.length} vs. ${this.maxSendMessageSize})`,
          metadata: null
        });
        return
      }
      this.maybeSendMetadata(), Ij("Request to " + this.handler.path + " sent data frame of size " + Q.length), this.stream.write(Q, (I) => {
        var G;
        if (I) {
          this.sendStatus({
            code: cY.Status.INTERNAL,
            details: `Error writing message: ${fx0.getErrorMessage(I)}`,
            metadata: null
          });
          return
        }(G = this.callEventTracker) === null || G === void 0 || G.addMessageSent(), B()
      })
    }
    sendStatus(A) {
      var B, Q;
      if (this.checkCancelled()) return;
      if (Ij("Request to method " + ((B = this.handler) === null || B === void 0 ? void 0 : B.path) + " ended with status code: " + cY.Status[A.code] + " details: " + A.details), this.metadataSent)
        if (!this.wantTrailers) this.wantTrailers = !0, this.stream.once("wantTrailers", () => {
          var I;
          if (this.callEventTracker && !this.streamEnded) this.streamEnded = !0, this.callEventTracker.onStreamEnd(!0), this.callEventTracker.onCallEnd(A);
          let G = Object.assign({
            [gx0]: A.code,
            [bx0]: encodeURI(A.details)
          }, (I = A.metadata) === null || I === void 0 ? void 0 : I.toHttp2Headers());
          this.stream.sendTrailers(G), this.notifyOnCancel()
        }), this.stream.end();
        else this.notifyOnCancel();
      else {
        if (this.callEventTracker && !this.streamEnded) this.streamEnded = !0, this.callEventTracker.onStreamEnd(!0), this.callEventTracker.onCallEnd(A);
        let I = Object.assign(Object.assign({
          [gx0]: A.code,
          [bx0]: encodeURI(A.details)
        }, hx0), (Q = A.metadata) === null || Q === void 0 ? void 0 : Q.toHttp2Headers());
        this.stream.respond(I, {
          endStream: !0
        }), this.notifyOnCancel()
      }
    }
    startRead() {
      if (Ij("Request to " + this.handler.path + " startRead called"), this.checkCancelled()) return;
      if (this.isReadPending = !0, this.readQueue.length === 0) {
        if (!this.receivedHalfClose) this.stream.resume()
      } else this.maybePushNextMessage()
    }
    getPeer() {
      var A;
      let B = (A = this.stream.session) === null || A === void 0 ? void 0 : A.socket;
      if (B === null || B === void 0 ? void 0 : B.remoteAddress)
        if (B.remotePort) return `${B.remoteAddress}:${B.remotePort}`;
        else return B.remoteAddress;
      else return "unknown"
    }
    getDeadline() {
      return this.deadline
    }
    getHost() {
      return this.host
    }
  }
  nx0.BaseServerInterceptingCall = Wd1;

  function uG6(A, B, Q, I, G, Z) {
    let D = {
        path: G.path,
        requestStream: G.type === "clientStream" || G.type === "bidi",
        responseStream: G.type === "serverStream" || G.type === "bidi",
        requestDeserialize: G.deserialize,
        responseSerialize: G.serialize
      },
      Y = new Wd1(B, Q, I, G, Z);
    return A.reduce((W, J) => {
      return J(D, W)
    }, Y)
  }
})
// @from(Start 5054364, End 5096732)
Bf0 = z(($R) => {
  var aG6 = $R && $R.__runInitializers || function(A, B, Q) {
      var I = arguments.length > 2;
      for (var G = 0; G < B.length; G++) Q = I ? B[G].call(A, Q) : B[G].call(A);
      return I ? Q : void 0
    },
    sG6 = $R && $R.__esDecorate || function(A, B, Q, I, G, Z) {
      function D(q) {
        if (q !== void 0 && typeof q !== "function") throw new TypeError("Function expected");
        return q
      }
      var Y = I.kind,
        W = Y === "getter" ? "get" : Y === "setter" ? "set" : "value",
        J = !B && A ? I.static ? A : A.prototype : null,
        F = B || (J ? Object.getOwnPropertyDescriptor(J, I.name) : {}),
        X, V = !1;
      for (var C = Q.length - 1; C >= 0; C--) {
        var K = {};
        for (var E in I) K[E] = E === "access" ? {} : I[E];
        for (var E in I.access) K.access[E] = I.access[E];
        K.addInitializer = function(q) {
          if (V) throw new TypeError("Cannot add initializers after decoration has completed");
          Z.push(D(q || null))
        };
        var N = Q[C](Y === "accessor" ? {
          get: F.get,
          set: F.set
        } : F[W], K);
        if (Y === "accessor") {
          if (N === void 0) continue;
          if (N === null || typeof N !== "object") throw new TypeError("Object expected");
          if (X = D(N.get)) F.get = X;
          if (X = D(N.set)) F.set = X;
          if (X = D(N.init)) G.unshift(X)
        } else if (X = D(N))
          if (Y === "field") G.unshift(X);
          else F[W] = X
      }
      if (J) Object.defineProperty(J, I.name, F);
      V = !0
    };
  Object.defineProperty($R, "__esModule", {
    value: !0
  });
  $R.Server = void 0;
  var lY = Z1("http2"),
    rG6 = Z1("util"),
    _Q = y6(),
    Hh = yx0(),
    Fd1 = aD1(),
    sx0 = Zw(),
    Kh = GB(),
    NR = PX(),
    nC = uY(),
    d7 = Aj(),
    rx0 = Jd1(),
    Ch = 2147483647,
    Xd1 = 2147483647,
    oG6 = 20000,
    ox0 = 2147483647,
    {
      HTTP2_HEADER_PATH: tx0
    } = lY.constants,
    tG6 = "server",
    ex0 = Buffer.from("max_age");

  function Af0(A) {
    Kh.trace(_Q.LogVerbosity.DEBUG, "server_call", A)
  }

  function eG6() {}

  function AZ6(A) {
    return function(B, Q) {
      return rG6.deprecate(B, A)
    }
  }

  function Vd1(A) {
    return {
      code: _Q.Status.UNIMPLEMENTED,
      details: `The server does not implement the method ${A}`
    }
  }

  function BZ6(A, B) {
    let Q = Vd1(B);
    switch (A) {
      case "unary":
        return (I, G) => {
          G(Q, null)
        };
      case "clientStream":
        return (I, G) => {
          G(Q, null)
        };
      case "serverStream":
        return (I) => {
          I.emit("error", Q)
        };
      case "bidi":
        return (I) => {
          I.emit("error", Q)
        };
      default:
        throw new Error(`Invalid handlerType ${A}`)
    }
  }
  var QZ6 = (() => {
    var A;
    let B = [],
      Q;
    return A = class I {
      constructor(G) {
        var Z, D, Y, W, J, F;
        if (this.boundPorts = (aG6(this, B), new Map), this.http2Servers = new Map, this.sessionIdleTimeouts = new Map, this.handlers = new Map, this.sessions = new Map, this.started = !1, this.shutdown = !1, this.serverAddressString = "null", this.channelzEnabled = !0, this.options = G !== null && G !== void 0 ? G : {}, this.options["grpc.enable_channelz"] === 0) this.channelzEnabled = !1, this.channelzTrace = new d7.ChannelzTraceStub, this.callTracker = new d7.ChannelzCallTrackerStub, this.listenerChildrenTracker = new d7.ChannelzChildrenTrackerStub, this.sessionChildrenTracker = new d7.ChannelzChildrenTrackerStub;
        else this.channelzTrace = new d7.ChannelzTrace, this.callTracker = new d7.ChannelzCallTracker, this.listenerChildrenTracker = new d7.ChannelzChildrenTracker, this.sessionChildrenTracker = new d7.ChannelzChildrenTracker;
        if (this.channelzRef = d7.registerChannelzServer("server", () => this.getChannelzInfo(), this.channelzEnabled), this.channelzTrace.addTrace("CT_INFO", "Server created"), this.maxConnectionAgeMs = (Z = this.options["grpc.max_connection_age_ms"]) !== null && Z !== void 0 ? Z : Ch, this.maxConnectionAgeGraceMs = (D = this.options["grpc.max_connection_age_grace_ms"]) !== null && D !== void 0 ? D : Ch, this.keepaliveTimeMs = (Y = this.options["grpc.keepalive_time_ms"]) !== null && Y !== void 0 ? Y : Xd1, this.keepaliveTimeoutMs = (W = this.options["grpc.keepalive_timeout_ms"]) !== null && W !== void 0 ? W : oG6, this.sessionIdleTimeout = (J = this.options["grpc.max_connection_idle_ms"]) !== null && J !== void 0 ? J : ox0, this.commonServerOptions = {
            maxSendHeaderBlockLength: Number.MAX_SAFE_INTEGER
          }, "grpc-node.max_session_memory" in this.options) this.commonServerOptions.maxSessionMemory = this.options["grpc-node.max_session_memory"];
        else this.commonServerOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;
        if ("grpc.max_concurrent_streams" in this.options) this.commonServerOptions.settings = {
          maxConcurrentStreams: this.options["grpc.max_concurrent_streams"]
        };
        this.interceptors = (F = this.options.interceptors) !== null && F !== void 0 ? F : [], this.trace("Server constructed")
      }
      getChannelzInfo() {
        return {
          trace: this.channelzTrace,
          callTracker: this.callTracker,
          listenerChildren: this.listenerChildrenTracker.getChildLists(),
          sessionChildren: this.sessionChildrenTracker.getChildLists()
        }
      }
      getChannelzSessionInfo(G) {
        var Z, D, Y;
        let W = this.sessions.get(G),
          J = G.socket,
          F = J.remoteAddress ? NR.stringToSubchannelAddress(J.remoteAddress, J.remotePort) : null,
          X = J.localAddress ? NR.stringToSubchannelAddress(J.localAddress, J.localPort) : null,
          V;
        if (G.encrypted) {
          let K = J,
            E = K.getCipher(),
            N = K.getCertificate(),
            q = K.getPeerCertificate();
          V = {
            cipherSuiteStandardName: (Z = E.standardName) !== null && Z !== void 0 ? Z : null,
            cipherSuiteOtherName: E.standardName ? null : E.name,
            localCertificate: N && "raw" in N ? N.raw : null,
            remoteCertificate: q && "raw" in q ? q.raw : null
          }
        } else V = null;
        return {
          remoteAddress: F,
          localAddress: X,
          security: V,
          remoteName: null,
          streamsStarted: W.streamTracker.callsStarted,
          streamsSucceeded: W.streamTracker.callsSucceeded,
          streamsFailed: W.streamTracker.callsFailed,
          messagesSent: W.messagesSent,
          messagesReceived: W.messagesReceived,
          keepAlivesSent: W.keepAlivesSent,
          lastLocalStreamCreatedTimestamp: null,
          lastRemoteStreamCreatedTimestamp: W.streamTracker.lastCallStartedTimestamp,
          lastMessageSentTimestamp: W.lastMessageSentTimestamp,
          lastMessageReceivedTimestamp: W.lastMessageReceivedTimestamp,
          localFlowControlWindow: (D = G.state.localWindowSize) !== null && D !== void 0 ? D : null,
          remoteFlowControlWindow: (Y = G.state.remoteWindowSize) !== null && Y !== void 0 ? Y : null
        }
      }
      trace(G) {
        Kh.trace(_Q.LogVerbosity.DEBUG, tG6, "(" + this.channelzRef.id + ") " + G)
      }
      keepaliveTrace(G) {
        Kh.trace(_Q.LogVerbosity.DEBUG, "keepalive", "(" + this.channelzRef.id + ") " + G)
      }
      addProtoService() {
        throw new Error("Not implemented. Use addService() instead")
      }
      addService(G, Z) {
        if (G === null || typeof G !== "object" || Z === null || typeof Z !== "object") throw new Error("addService() requires two objects as arguments");
        let D = Object.keys(G);
        if (D.length === 0) throw new Error("Cannot add an empty service to a server");
        D.forEach((Y) => {
          let W = G[Y],
            J;
          if (W.requestStream)
            if (W.responseStream) J = "bidi";
            else J = "clientStream";
          else if (W.responseStream) J = "serverStream";
          else J = "unary";
          let F = Z[Y],
            X;
          if (F === void 0 && typeof W.originalName === "string") F = Z[W.originalName];
          if (F !== void 0) X = F.bind(Z);
          else X = BZ6(J, Y);
          if (this.register(W.path, X, W.responseSerialize, W.requestDeserialize, J) === !1) throw new Error(`Method handler for ${W.path} already provided.`)
        })
      }
      removeService(G) {
        if (G === null || typeof G !== "object") throw new Error("removeService() requires object as argument");
        Object.keys(G).forEach((D) => {
          let Y = G[D];
          this.unregister(Y.path)
        })
      }
      bind(G, Z) {
        throw new Error("Not implemented. Use bindAsync() instead")
      }
      experimentalRegisterListenerToChannelz(G) {
        return d7.registerChannelzSocket(NR.subchannelAddressToString(G), () => {
          return {
            localAddress: G,
            remoteAddress: null,
            security: null,
            remoteName: null,
            streamsStarted: 0,
            streamsSucceeded: 0,
            streamsFailed: 0,
            messagesSent: 0,
            messagesReceived: 0,
            keepAlivesSent: 0,
            lastLocalStreamCreatedTimestamp: null,
            lastRemoteStreamCreatedTimestamp: null,
            lastMessageSentTimestamp: null,
            lastMessageReceivedTimestamp: null,
            localFlowControlWindow: null,
            remoteFlowControlWindow: null
          }
        }, this.channelzEnabled)
      }
      experimentalUnregisterListenerFromChannelz(G) {
        d7.unregisterChannelzRef(G)
      }
      createHttp2Server(G) {
        let Z;
        if (G._isSecure()) {
          let D = G._getConstructorOptions(),
            Y = G._getSecureContextOptions(),
            W = Object.assign(Object.assign(Object.assign(Object.assign({}, this.commonServerOptions), D), Y), {
              enableTrace: this.options["grpc-node.tls_enable_trace"] === 1
            }),
            J = Y !== null;
          this.trace("Initial credentials valid: " + J), Z = lY.createSecureServer(W), Z.prependListener("connection", (X) => {
            if (!J) this.trace("Dropped connection from " + JSON.stringify(X.address()) + " due to unloaded credentials"), X.destroy()
          }), Z.on("secureConnection", (X) => {
            X.on("error", (V) => {
              this.trace("An incoming TLS connection closed with error: " + V.message)
            })
          });
          let F = (X) => {
            if (X) {
              let V = Z;
              try {
                V.setSecureContext(X)
              } catch (C) {
                Kh.log(_Q.LogVerbosity.ERROR, "Failed to set secure context with error " + C.message), X = null
              }
            }
            J = X !== null, this.trace("Post-update credentials valid: " + J)
          };
          G._addWatcher(F), Z.on("close", () => {
            G._removeWatcher(F)
          })
        } else Z = lY.createServer(this.commonServerOptions);
        return Z.setTimeout(0, eG6), this._setupHandlers(Z, G._getInterceptors()), Z
      }
      bindOneAddress(G, Z) {
        this.trace("Attempting to bind " + NR.subchannelAddressToString(G));
        let D = this.createHttp2Server(Z.credentials);
        return new Promise((Y, W) => {
          let J = (F) => {
            this.trace("Failed to bind " + NR.subchannelAddressToString(G) + " with error " + F.message), Y({
              port: "port" in G ? G.port : 1,
              error: F.message
            })
          };
          D.once("error", J), D.listen(G, () => {
            let F = D.address(),
              X;
            if (typeof F === "string") X = {
              path: F
            };
            else X = {
              host: F.address,
              port: F.port
            };
            let V = this.experimentalRegisterListenerToChannelz(X);
            this.listenerChildrenTracker.refChild(V), this.http2Servers.set(D, {
              channelzRef: V,
              sessions: new Set,
              ownsChannelzRef: !0
            }), Z.listeningServers.add(D), this.trace("Successfully bound " + NR.subchannelAddressToString(X)), Y({
              port: "port" in X ? X.port : 1
            }), D.removeListener("error", J)
          })
        })
      }
      async bindManyPorts(G, Z) {
        if (G.length === 0) return {
          count: 0,
          port: 0,
          errors: []
        };
        if (NR.isTcpSubchannelAddress(G[0]) && G[0].port === 0) {
          let D = await this.bindOneAddress(G[0], Z);
          if (D.error) {
            let Y = await this.bindManyPorts(G.slice(1), Z);
            return Object.assign(Object.assign({}, Y), {
              errors: [D.error, ...Y.errors]
            })
          } else {
            let Y = G.slice(1).map((F) => NR.isTcpSubchannelAddress(F) ? {
                host: F.host,
                port: D.port
              } : F),
              W = await Promise.all(Y.map((F) => this.bindOneAddress(F, Z))),
              J = [D, ...W];
            return {
              count: J.filter((F) => F.error === void 0).length,
              port: D.port,
              errors: J.filter((F) => F.error).map((F) => F.error)
            }
          }
        } else {
          let D = await Promise.all(G.map((Y) => this.bindOneAddress(Y, Z)));
          return {
            count: D.filter((Y) => Y.error === void 0).length,
            port: D[0].port,
            errors: D.filter((Y) => Y.error).map((Y) => Y.error)
          }
        }
      }
      async bindAddressList(G, Z) {
        let D = await this.bindManyPorts(G, Z);
        if (D.count > 0) {
          if (D.count < G.length) Kh.log(_Q.LogVerbosity.INFO, `WARNING Only ${D.count} addresses added out of total ${G.length} resolved`);
          return D.port
        } else {
          let Y = `No address added out of total ${G.length} resolved`;
          throw Kh.log(_Q.LogVerbosity.ERROR, Y), new Error(`${Y} errors: [${D.errors.join(",")}]`)
        }
      }
      resolvePort(G) {
        return new Promise((Z, D) => {
          let Y = {
            onSuccessfulResolution: (J, F, X) => {
              Y.onSuccessfulResolution = () => {};
              let V = [].concat(...J.map((C) => C.addresses));
              if (V.length === 0) {
                D(new Error(`No addresses resolved for port ${G}`));
                return
              }
              Z(V)
            },
            onError: (J) => {
              D(new Error(J.details))
            }
          };
          sx0.createResolver(G, Y, this.options).updateResolution()
        })
      }
      async bindPort(G, Z) {
        let D = await this.resolvePort(G);
        if (Z.cancelled) throw this.completeUnbind(Z), new Error("bindAsync operation cancelled by unbind call");
        let Y = await this.bindAddressList(D, Z);
        if (Z.cancelled) throw this.completeUnbind(Z), new Error("bindAsync operation cancelled by unbind call");
        return Y
      }
      normalizePort(G) {
        let Z = nC.parseUri(G);
        if (Z === null) throw new Error(`Could not parse port "${G}"`);
        let D = sx0.mapUriDefaultScheme(Z);
        if (D === null) throw new Error(`Could not get a default scheme for port "${G}"`);
        return D
      }
      bindAsync(G, Z, D) {
        if (this.shutdown) throw new Error("bindAsync called after shutdown");
        if (typeof G !== "string") throw new TypeError("port must be a string");
        if (Z === null || !(Z instanceof Fd1.ServerCredentials)) throw new TypeError("creds must be a ServerCredentials object");
        if (typeof D !== "function") throw new TypeError("callback must be a function");
        this.trace("bindAsync port=" + G);
        let Y = this.normalizePort(G),
          W = (V, C) => {
            process.nextTick(() => D(V, C))
          },
          J = this.boundPorts.get(nC.uriToString(Y));
        if (J) {
          if (!Z._equals(J.credentials)) {
            W(new Error(`${G} already bound with incompatible credentials`), 0);
            return
          }
          if (J.cancelled = !1, J.completionPromise) J.completionPromise.then((V) => D(null, V), (V) => D(V, 0));
          else W(null, J.portNumber);
          return
        }
        J = {
          mapKey: nC.uriToString(Y),
          originalUri: Y,
          completionPromise: null,
          cancelled: !1,
          portNumber: 0,
          credentials: Z,
          listeningServers: new Set
        };
        let F = nC.splitHostPort(Y.path),
          X = this.bindPort(Y, J);
        if (J.completionPromise = X, (F === null || F === void 0 ? void 0 : F.port) === 0) X.then((V) => {
          let C = {
            scheme: Y.scheme,
            authority: Y.authority,
            path: nC.combineHostPort({
              host: F.host,
              port: V
            })
          };
          J.mapKey = nC.uriToString(C), J.completionPromise = null, J.portNumber = V, this.boundPorts.set(J.mapKey, J), D(null, V)
        }, (V) => {
          D(V, 0)
        });
        else this.boundPorts.set(J.mapKey, J), X.then((V) => {
          J.completionPromise = null, J.portNumber = V, D(null, V)
        }, (V) => {
          D(V, 0)
        })
      }
      registerInjectorToChannelz() {
        return d7.registerChannelzSocket("injector", () => {
          return {
            localAddress: null,
            remoteAddress: null,
            security: null,
            remoteName: null,
            streamsStarted: 0,
            streamsSucceeded: 0,
            streamsFailed: 0,
            messagesSent: 0,
            messagesReceived: 0,
            keepAlivesSent: 0,
            lastLocalStreamCreatedTimestamp: null,
            lastRemoteStreamCreatedTimestamp: null,
            lastMessageSentTimestamp: null,
            lastMessageReceivedTimestamp: null,
            localFlowControlWindow: null,
            remoteFlowControlWindow: null
          }
        }, this.channelzEnabled)
      }
      experimentalCreateConnectionInjectorWithChannelzRef(G, Z, D = !1) {
        if (G === null || !(G instanceof Fd1.ServerCredentials)) throw new TypeError("creds must be a ServerCredentials object");
        if (this.channelzEnabled) this.listenerChildrenTracker.refChild(Z);
        let Y = this.createHttp2Server(G),
          W = new Set;
        return this.http2Servers.set(Y, {
          channelzRef: Z,
          sessions: W,
          ownsChannelzRef: D
        }), {
          injectConnection: (J) => {
            Y.emit("connection", J)
          },
          drain: (J) => {
            var F, X;
            for (let V of W) this.closeSession(V);
            (X = (F = setTimeout(() => {
              for (let V of W) V.destroy(lY.constants.NGHTTP2_CANCEL)
            }, J)).unref) === null || X === void 0 || X.call(F)
          },
          destroy: () => {
            this.closeServer(Y);
            for (let J of W) this.closeSession(J)
          }
        }
      }
      createConnectionInjector(G) {
        if (G === null || !(G instanceof Fd1.ServerCredentials)) throw new TypeError("creds must be a ServerCredentials object");
        let Z = this.registerInjectorToChannelz();
        return this.experimentalCreateConnectionInjectorWithChannelzRef(G, Z, !0)
      }
      closeServer(G, Z) {
        this.trace("Closing server with address " + JSON.stringify(G.address()));
        let D = this.http2Servers.get(G);
        G.close(() => {
          if (D && D.ownsChannelzRef) this.listenerChildrenTracker.unrefChild(D.channelzRef), d7.unregisterChannelzRef(D.channelzRef);
          this.http2Servers.delete(G), Z === null || Z === void 0 || Z()
        })
      }
      closeSession(G, Z) {
        var D;
        this.trace("Closing session initiated by " + ((D = G.socket) === null || D === void 0 ? void 0 : D.remoteAddress));
        let Y = this.sessions.get(G),
          W = () => {
            if (Y) this.sessionChildrenTracker.unrefChild(Y.ref), d7.unregisterChannelzRef(Y.ref);
            Z === null || Z === void 0 || Z()
          };
        if (G.closed) queueMicrotask(W);
        else G.close(W)
      }
      completeUnbind(G) {
        for (let Z of G.listeningServers) {
          let D = this.http2Servers.get(Z);
          if (this.closeServer(Z, () => {
              G.listeningServers.delete(Z)
            }), D)
            for (let Y of D.sessions) this.closeSession(Y)
        }
        this.boundPorts.delete(G.mapKey)
      }
      unbind(G) {
        this.trace("unbind port=" + G);
        let Z = this.normalizePort(G),
          D = nC.splitHostPort(Z.path);
        if ((D === null || D === void 0 ? void 0 : D.port) === 0) throw new Error("Cannot unbind port 0");
        let Y = this.boundPorts.get(nC.uriToString(Z));
        if (Y)
          if (this.trace("unbinding " + Y.mapKey + " originally bound as " + nC.uriToString(Y.originalUri)), Y.completionPromise) Y.cancelled = !0;
          else this.completeUnbind(Y)
      }
      drain(G, Z) {
        var D, Y;
        this.trace("drain port=" + G + " graceTimeMs=" + Z);
        let W = this.normalizePort(G),
          J = nC.splitHostPort(W.path);
        if ((J === null || J === void 0 ? void 0 : J.port) === 0) throw new Error("Cannot drain port 0");
        let F = this.boundPorts.get(nC.uriToString(W));
        if (!F) return;
        let X = new Set;
        for (let V of F.listeningServers) {
          let C = this.http2Servers.get(V);
          if (C)
            for (let K of C.sessions) X.add(K), this.closeSession(K, () => {
              X.delete(K)
            })
        }(Y = (D = setTimeout(() => {
          for (let V of X) V.destroy(lY.constants.NGHTTP2_CANCEL)
        }, Z)).unref) === null || Y === void 0 || Y.call(D)
      }
      forceShutdown() {
        for (let G of this.boundPorts.values()) G.cancelled = !0;
        this.boundPorts.clear();
        for (let G of this.http2Servers.keys()) this.closeServer(G);
        this.sessions.forEach((G, Z) => {
          this.closeSession(Z), Z.destroy(lY.constants.NGHTTP2_CANCEL)
        }), this.sessions.clear(), d7.unregisterChannelzRef(this.channelzRef), this.shutdown = !0
      }
      register(G, Z, D, Y, W) {
        if (this.handlers.has(G)) return !1;
        return this.handlers.set(G, {
          func: Z,
          serialize: D,
          deserialize: Y,
          type: W,
          path: G
        }), !0
      }
      unregister(G) {
        return this.handlers.delete(G)
      }
      start() {
        if (this.http2Servers.size === 0 || [...this.http2Servers.keys()].every((G) => !G.listening)) throw new Error("server must be bound in order to start");
        if (this.started === !0) throw new Error("server is already started");
        this.started = !0
      }
      tryShutdown(G) {
        var Z;
        let D = (J) => {
            d7.unregisterChannelzRef(this.channelzRef), G(J)
          },
          Y = 0;

        function W() {
          if (Y--, Y === 0) D()
        }
        this.shutdown = !0;
        for (let [J, F] of this.http2Servers.entries()) {
          Y++;
          let X = F.channelzRef.name;
          this.trace("Waiting for server " + X + " to close"), this.closeServer(J, () => {
            this.trace("Server " + X + " finished closing"), W()
          });
          for (let V of F.sessions.keys()) {
            Y++;
            let C = (Z = V.socket) === null || Z === void 0 ? void 0 : Z.remoteAddress;
            this.trace("Waiting for session " + C + " to close"), this.closeSession(V, () => {
              this.trace("Session " + C + " finished closing"), W()
            })
          }
        }
        if (Y === 0) D()
      }
      addHttp2Port() {
        throw new Error("Not yet implemented")
      }
      getChannelzRef() {
        return this.channelzRef
      }
      _verifyContentType(G, Z) {
        let D = Z[lY.constants.HTTP2_HEADER_CONTENT_TYPE];
        if (typeof D !== "string" || !D.startsWith("application/grpc")) return G.respond({
          [lY.constants.HTTP2_HEADER_STATUS]: lY.constants.HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE
        }, {
          endStream: !0
        }), !1;
        return !0
      }
      _retrieveHandler(G) {
        Af0("Received call to method " + G + " at address " + this.serverAddressString);
        let Z = this.handlers.get(G);
        if (Z === void 0) return Af0("No handler registered for method " + G + ". Sending UNIMPLEMENTED status."), null;
        return Z
      }
      _respondWithError(G, Z, D = null) {
        var Y, W;
        let J = Object.assign({
          "grpc-status": (Y = G.code) !== null && Y !== void 0 ? Y : _Q.Status.INTERNAL,
          "grpc-message": G.details,
          [lY.constants.HTTP2_HEADER_STATUS]: lY.constants.HTTP_STATUS_OK,
          [lY.constants.HTTP2_HEADER_CONTENT_TYPE]: "application/grpc+proto"
        }, (W = G.metadata) === null || W === void 0 ? void 0 : W.toHttp2Headers());
        Z.respond(J, {
          endStream: !0
        }), this.callTracker.addCallFailed(), D === null || D === void 0 || D.streamTracker.addCallFailed()
      }
      _channelzHandler(G, Z, D) {
        this.onStreamOpened(Z);
        let Y = this.sessions.get(Z.session);
        if (this.callTracker.addCallStarted(), Y === null || Y === void 0 || Y.streamTracker.addCallStarted(), !this._verifyContentType(Z, D)) {
          this.callTracker.addCallFailed(), Y === null || Y === void 0 || Y.streamTracker.addCallFailed();
          return
        }
        let W = D[tx0],
          J = this._retrieveHandler(W);
        if (!J) {
          this._respondWithError(Vd1(W), Z, Y);
          return
        }
        let F = {
            addMessageSent: () => {
              if (Y) Y.messagesSent += 1, Y.lastMessageSentTimestamp = new Date
            },
            addMessageReceived: () => {
              if (Y) Y.messagesReceived += 1, Y.lastMessageReceivedTimestamp = new Date
            },
            onCallEnd: (V) => {
              if (V.code === _Q.Status.OK) this.callTracker.addCallSucceeded();
              else this.callTracker.addCallFailed()
            },
            onStreamEnd: (V) => {
              if (Y)
                if (V) Y.streamTracker.addCallSucceeded();
                else Y.streamTracker.addCallFailed()
            }
          },
          X = rx0.getServerInterceptingCall([...G, ...this.interceptors], Z, D, F, J, this.options);
        if (!this._runHandlerForCall(X, J)) this.callTracker.addCallFailed(), Y === null || Y === void 0 || Y.streamTracker.addCallFailed(), X.sendStatus({
          code: _Q.Status.INTERNAL,
          details: `Unknown handler type: ${J.type}`
        })
      }
      _streamHandler(G, Z, D) {
        if (this.onStreamOpened(Z), this._verifyContentType(Z, D) !== !0) return;
        let Y = D[tx0],
          W = this._retrieveHandler(Y);
        if (!W) {
          this._respondWithError(Vd1(Y), Z, null);
          return
        }
        let J = rx0.getServerInterceptingCall([...G, ...this.interceptors], Z, D, null, W, this.options);
        if (!this._runHandlerForCall(J, W)) J.sendStatus({
          code: _Q.Status.INTERNAL,
          details: `Unknown handler type: ${W.type}`
        })
      }
      _runHandlerForCall(G, Z) {
        let {
          type: D
        } = Z;
        if (D === "unary") IZ6(G, Z);
        else if (D === "clientStream") GZ6(G, Z);
        else if (D === "serverStream") ZZ6(G, Z);
        else if (D === "bidi") DZ6(G, Z);
        else return !1;
        return !0
      }
      _setupHandlers(G, Z) {
        if (G === null) return;
        let D = G.address(),
          Y = "null";
        if (D)
          if (typeof D === "string") Y = D;
          else Y = D.address + ":" + D.port;
        this.serverAddressString = Y;
        let W = this.channelzEnabled ? this._channelzHandler : this._streamHandler,
          J = this.channelzEnabled ? this._channelzSessionHandler(G) : this._sessionHandler(G);
        G.on("stream", W.bind(this, Z)), G.on("session", J)
      }
      _sessionHandler(G) {
        return (Z) => {
          var D, Y;
          (D = this.http2Servers.get(G)) === null || D === void 0 || D.sessions.add(Z);
          let W = null,
            J = null,
            F = null,
            X = !1,
            V = this.enableIdleTimeout(Z);
          if (this.maxConnectionAgeMs !== Ch) {
            let q = this.maxConnectionAgeMs / 10,
              O = Math.random() * q * 2 - q;
            W = setTimeout(() => {
              var R, T;
              X = !0, this.trace("Connection dropped by max connection age: " + ((R = Z.socket) === null || R === void 0 ? void 0 : R.remoteAddress));
              try {
                Z.goaway(lY.constants.NGHTTP2_NO_ERROR, 2147483647, ex0)
              } catch (L) {
                Z.destroy();
                return
              }
              if (Z.close(), this.maxConnectionAgeGraceMs !== Ch) J = setTimeout(() => {
                Z.destroy()
              }, this.maxConnectionAgeGraceMs), (T = J.unref) === null || T === void 0 || T.call(J)
            }, this.maxConnectionAgeMs + O), (Y = W.unref) === null || Y === void 0 || Y.call(W)
          }
          let C = () => {
              if (F) clearTimeout(F), F = null
            },
            K = () => {
              return !Z.destroyed && this.keepaliveTimeMs < Xd1 && this.keepaliveTimeMs > 0
            },
            E, N = () => {
              var q;
              if (!K()) return;
              this.keepaliveTrace("Starting keepalive timer for " + this.keepaliveTimeMs + "ms"), F = setTimeout(() => {
                C(), E()
              }, this.keepaliveTimeMs), (q = F.unref) === null || q === void 0 || q.call(F)
            };
          E = () => {
            var q;
            if (!K()) return;
            this.keepaliveTrace("Sending ping with timeout " + this.keepaliveTimeoutMs + "ms");
            let O = "";
            try {
              if (!Z.ping((T, L, _) => {
                  if (C(), T) this.keepaliveTrace("Ping failed with error: " + T.message), X = !0, Z.close();
                  else this.keepaliveTrace("Received ping response"), N()
                })) O = "Ping returned false"
            } catch (R) {
              O = (R instanceof Error ? R.message : "") || "Unknown error"
            }
            if (O) {
              this.keepaliveTrace("Ping send failed: " + O), this.trace("Connection dropped due to ping send error: " + O), X = !0, Z.close();
              return
            }
            F = setTimeout(() => {
              C(), this.keepaliveTrace("Ping timeout passed without response"), this.trace("Connection dropped by keepalive timeout"), X = !0, Z.close()
            }, this.keepaliveTimeoutMs), (q = F.unref) === null || q === void 0 || q.call(F)
          }, N(), Z.on("close", () => {
            var q, O;
            if (!X) this.trace(`Connection dropped by client ${(q=Z.socket)===null||q===void 0?void 0:q.remoteAddress}`);
            if (W) clearTimeout(W);
            if (J) clearTimeout(J);
            if (C(), V !== null) clearTimeout(V.timeout), this.sessionIdleTimeouts.delete(Z);
            (O = this.http2Servers.get(G)) === null || O === void 0 || O.sessions.delete(Z)
          })
        }
      }
      _channelzSessionHandler(G) {
        return (Z) => {
          var D, Y, W, J;
          let F = d7.registerChannelzSocket((Y = (D = Z.socket) === null || D === void 0 ? void 0 : D.remoteAddress) !== null && Y !== void 0 ? Y : "unknown", this.getChannelzSessionInfo.bind(this, Z), this.channelzEnabled),
            X = {
              ref: F,
              streamTracker: new d7.ChannelzCallTracker,
              messagesSent: 0,
              messagesReceived: 0,
              keepAlivesSent: 0,
              lastMessageSentTimestamp: null,
              lastMessageReceivedTimestamp: null
            };
          (W = this.http2Servers.get(G)) === null || W === void 0 || W.sessions.add(Z), this.sessions.set(Z, X);
          let V = `${Z.socket.remoteAddress}:${Z.socket.remotePort}`;
          this.channelzTrace.addTrace("CT_INFO", "Connection established by client " + V), this.trace("Connection established by client " + V), this.sessionChildrenTracker.refChild(F);
          let C = null,
            K = null,
            E = null,
            N = !1,
            q = this.enableIdleTimeout(Z);
          if (this.maxConnectionAgeMs !== Ch) {
            let _ = this.maxConnectionAgeMs / 10,
              k = Math.random() * _ * 2 - _;
            C = setTimeout(() => {
              var i;
              N = !0, this.channelzTrace.addTrace("CT_INFO", "Connection dropped by max connection age from " + V);
              try {
                Z.goaway(lY.constants.NGHTTP2_NO_ERROR, 2147483647, ex0)
              } catch (x) {
                Z.destroy();
                return
              }
              if (Z.close(), this.maxConnectionAgeGraceMs !== Ch) K = setTimeout(() => {
                Z.destroy()
              }, this.maxConnectionAgeGraceMs), (i = K.unref) === null || i === void 0 || i.call(K)
            }, this.maxConnectionAgeMs + k), (J = C.unref) === null || J === void 0 || J.call(C)
          }
          let O = () => {
              if (E) clearTimeout(E), E = null
            },
            R = () => {
              return !Z.destroyed && this.keepaliveTimeMs < Xd1 && this.keepaliveTimeMs > 0
            },
            T, L = () => {
              var _;
              if (!R()) return;
              this.keepaliveTrace("Starting keepalive timer for " + this.keepaliveTimeMs + "ms"), E = setTimeout(() => {
                O(), T()
              }, this.keepaliveTimeMs), (_ = E.unref) === null || _ === void 0 || _.call(E)
            };
          T = () => {
            var _;
            if (!R()) return;
            this.keepaliveTrace("Sending ping with timeout " + this.keepaliveTimeoutMs + "ms");
            let k = "";
            try {
              if (!Z.ping((x, s, d) => {
                  if (O(), x) this.keepaliveTrace("Ping failed with error: " + x.message), this.channelzTrace.addTrace("CT_INFO", "Connection dropped due to error of a ping frame " + x.message + " return in " + s), N = !0, Z.close();
                  else this.keepaliveTrace("Received ping response"), L()
                })) k = "Ping returned false"
            } catch (i) {
              k = (i instanceof Error ? i.message : "") || "Unknown error"
            }
            if (k) {
              this.keepaliveTrace("Ping send failed: " + k), this.channelzTrace.addTrace("CT_INFO", "Connection dropped due to ping send error: " + k), N = !0, Z.close();
              return
            }
            X.keepAlivesSent += 1, E = setTimeout(() => {
              O(), this.keepaliveTrace("Ping timeout passed without response"), this.channelzTrace.addTrace("CT_INFO", "Connection dropped by keepalive timeout from " + V), N = !0, Z.close()
            }, this.keepaliveTimeoutMs), (_ = E.unref) === null || _ === void 0 || _.call(E)
          }, L(), Z.on("close", () => {
            var _;
            if (!N) this.channelzTrace.addTrace("CT_INFO", "Connection dropped by client " + V);
            if (this.sessionChildrenTracker.unrefChild(F), d7.unregisterChannelzRef(F), C) clearTimeout(C);
            if (K) clearTimeout(K);
            if (O(), q !== null) clearTimeout(q.timeout), this.sessionIdleTimeouts.delete(Z);
            (_ = this.http2Servers.get(G)) === null || _ === void 0 || _.sessions.delete(Z), this.sessions.delete(Z)
          })
        }
      }
      enableIdleTimeout(G) {
        var Z, D;
        if (this.sessionIdleTimeout >= ox0) return null;
        let Y = {
          activeStreams: 0,
          lastIdle: Date.now(),
          onClose: this.onStreamClose.bind(this, G),
          timeout: setTimeout(this.onIdleTimeout, this.sessionIdleTimeout, this, G)
        };
        (D = (Z = Y.timeout).unref) === null || D === void 0 || D.call(Z), this.sessionIdleTimeouts.set(G, Y);
        let {
          socket: W
        } = G;
        return this.trace("Enable idle timeout for " + W.remoteAddress + ":" + W.remotePort), Y
      }
      onIdleTimeout(G, Z) {
        let {
          socket: D
        } = Z, Y = G.sessionIdleTimeouts.get(Z);
        if (Y !== void 0 && Y.activeStreams === 0)
          if (Date.now() - Y.lastIdle >= G.sessionIdleTimeout) G.trace("Session idle timeout triggered for " + (D === null || D === void 0 ? void 0 : D.remoteAddress) + ":" + (D === null || D === void 0 ? void 0 : D.remotePort) + " last idle at " + Y.lastIdle), G.closeSession(Z);
          else Y.timeout.refresh()
      }
      onStreamOpened(G) {
        let Z = G.session,
          D = this.sessionIdleTimeouts.get(Z);
        if (D) D.activeStreams += 1, G.once("close", D.onClose)
      }
      onStreamClose(G) {
        var Z, D;
        let Y = this.sessionIdleTimeouts.get(G);
        if (Y) {
          if (Y.activeStreams -= 1, Y.activeStreams === 0) Y.lastIdle = Date.now(), Y.timeout.refresh(), this.trace("Session onStreamClose" + ((Z = G.socket) === null || Z === void 0 ? void 0 : Z.remoteAddress) + ":" + ((D = G.socket) === null || D === void 0 ? void 0 : D.remotePort) + " at " + Y.lastIdle)
        }
      }
    }, (() => {
      let I = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
      if (Q = [AZ6("Calling start() is no longer necessary. It can be safely omitted.")], sG6(A, null, Q, {
          kind: "method",
          name: "start",
          static: !1,
          private: !1,
          access: {
            has: (G) => ("start" in G),
            get: (G) => G.start
          },
          metadata: I
        }, null, B), I) Object.defineProperty(A, Symbol.metadata, {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: I
      })
    })(), A
  })();
  $R.Server = QZ6;
  async function IZ6(A, B) {
    let Q;

    function I(D, Y, W, J) {
      if (D) {
        A.sendStatus(Hh.serverErrorToStatus(D, W));
        return
      }
      A.sendMessage(Y, () => {
        A.sendStatus({
          code: _Q.Status.OK,
          details: "OK",
          metadata: W !== null && W !== void 0 ? W : null
        })
      })
    }
    let G, Z = null;
    A.start({
      onReceiveMetadata(D) {
        G = D, A.startRead()
      },
      onReceiveMessage(D) {
        if (Z) {
          A.sendStatus({
            code: _Q.Status.UNIMPLEMENTED,
            details: `Received a second request message for server streaming method ${B.path}`,
            metadata: null
          });
          return
        }
        Z = D, A.startRead()
      },
      onReceiveHalfClose() {
        if (!Z) {
          A.sendStatus({
            code: _Q.Status.UNIMPLEMENTED,
            details: `Received no request message for server streaming method ${B.path}`,
            metadata: null
          });
          return
        }
        Q = new Hh.ServerWritableStreamImpl(B.path, A, G, Z);
        try {
          B.func(Q, I)
        } catch (D) {
          A.sendStatus({
            code: _Q.Status.UNKNOWN,
            details: `Server method handler threw error ${D.message}`,
            metadata: null
          })
        }
      },
      onCancel() {
        if (Q) Q.cancelled = !0, Q.emit("cancelled", "cancelled")
      }
    })
  }

  function GZ6(A, B) {
    let Q;

    function I(G, Z, D, Y) {
      if (G) {
        A.sendStatus(Hh.serverErrorToStatus(G, D));
        return
      }
      A.sendMessage(Z, () => {
        A.sendStatus({
          code: _Q.Status.OK,
          details: "OK",
          metadata: D !== null && D !== void 0 ? D : null
        })
      })
    }
    A.start({
      onReceiveMetadata(G) {
        Q = new Hh.ServerDuplexStreamImpl(B.path, A, G);
        try {
          B.func(Q, I)
        } catch (Z) {
          A.sendStatus({
            code: _Q.Status.UNKNOWN,
            details: `Server method handler threw error ${Z.message}`,
            metadata: null
          })
        }
      },
      onReceiveMessage(G) {
        Q.push(G)
      },
      onReceiveHalfClose() {
        Q.push(null)
      },
      onCancel() {
        if (Q) Q.cancelled = !0, Q.emit("cancelled", "cancelled"), Q.destroy()
      }
    })
  }

  function ZZ6(A, B) {
    let Q, I, G = null;
    A.start({
      onReceiveMetadata(Z) {
        I = Z, A.startRead()
      },
      onReceiveMessage(Z) {
        if (G) {
          A.sendStatus({
            code: _Q.Status.UNIMPLEMENTED,
            details: `Received a second request message for server streaming method ${B.path}`,
            metadata: null
          });
          return
        }
        G = Z, A.startRead()
      },
      onReceiveHalfClose() {
        if (!G) {
          A.sendStatus({
            code: _Q.Status.UNIMPLEMENTED,
            details: `Received no request message for server streaming method ${B.path}`,
            metadata: null
          });
          return
        }
        Q = new Hh.ServerWritableStreamImpl(B.path, A, I, G);
        try {
          B.func(Q)
        } catch (Z) {
          A.sendStatus({
            code: _Q.Status.UNKNOWN,
            details: `Server method handler threw error ${Z.message}`,
            metadata: null
          })
        }
      },
      onCancel() {
        if (Q) Q.cancelled = !0, Q.emit("cancelled", "cancelled"), Q.destroy()
      }
    })
  }

  function DZ6(A, B) {
    let Q;
    A.start({
      onReceiveMetadata(I) {
        Q = new Hh.ServerDuplexStreamImpl(B.path, A, I);
        try {
          B.func(Q)
        } catch (G) {
          A.sendStatus({
            code: _Q.Status.UNKNOWN,
            details: `Server method handler threw error ${G.message}`,
            metadata: null
          })
        }
      },
      onReceiveMessage(I) {
        Q.push(I)
      },
      onReceiveHalfClose() {
        Q.push(null)
      },
      onCancel() {
        if (Q) Q.cancelled = !0, Q.emit("cancelled", "cancelled"), Q.destroy()
      }
    })
  }
})
// @from(Start 5096738, End 5097399)
Zf0 = z((If0) => {
  Object.defineProperty(If0, "__esModule", {
    value: !0
  });
  If0.StatusBuilder = void 0;
  class Qf0 {
    constructor() {
      this.code = null, this.details = null, this.metadata = null
    }
    withCode(A) {
      return this.code = A, this
    }
    withDetails(A) {
      return this.details = A, this
    }
    withMetadata(A) {
      return this.metadata = A, this
    }
    build() {
      let A = {};
      if (this.code !== null) A.code = this.code;
      if (this.details !== null) A.details = this.details;
      if (this.metadata !== null) A.metadata = this.metadata;
      return A
    }
  }
  If0.StatusBuilder = Qf0
})
// @from(Start 5097405, End 5098107)
Cd1 = z((Df0) => {
  Object.defineProperty(Df0, "__esModule", {
    value: !0
  });
  Df0.msToDuration = YZ6;
  Df0.durationToMs = WZ6;
  Df0.isDuration = JZ6;
  Df0.parseDuration = XZ6;

  function YZ6(A) {
    return {
      seconds: A / 1000 | 0,
      nanos: A % 1000 * 1e6 | 0
    }
  }

  function WZ6(A) {
    return A.seconds * 1000 + A.nanos / 1e6 | 0
  }

  function JZ6(A) {
    return typeof A.seconds === "number" && typeof A.nanos === "number"
  }
  var FZ6 = /^(\d+)(?:\.(\d+))?s$/;

  function XZ6(A) {
    let B = A.match(FZ6);
    if (!B) return null;
    return {
      seconds: Number.parseInt(B[1], 10),
      nanos: B[2] ? Number.parseInt(B[2].padEnd(9, "0"), 10) : 0
    }
  }
})
// @from(Start 5098113, End 5109278)
tD1 = z((Kf0) => {
  Object.defineProperty(Kf0, "__esModule", {
    value: !0
  });
  Kf0.LeafLoadBalancer = Kf0.PickFirstLoadBalancer = Kf0.PickFirstLoadBalancingConfig = void 0;
  Kf0.shuffled = Xf0;
  Kf0.setup = qZ6;
  var Kd1 = a_(),
    V7 = TX(),
    Gj = FR(),
    Yf0 = PX(),
    zZ6 = GB(),
    wZ6 = y6(),
    Wf0 = PX(),
    Jf0 = Z1("net"),
    EZ6 = "pick_first";

  function Er(A) {
    zZ6.trace(wZ6.LogVerbosity.DEBUG, EZ6, A)
  }
  var Ur = "pick_first",
    UZ6 = 250;
  class zh {
    constructor(A) {
      this.shuffleAddressList = A
    }
    getLoadBalancerName() {
      return Ur
    }
    toJsonObject() {
      return {
        [Ur]: {
          shuffleAddressList: this.shuffleAddressList
        }
      }
    }
    getShuffleAddressList() {
      return this.shuffleAddressList
    }
    static createFromJson(A) {
      if ("shuffleAddressList" in A && typeof A.shuffleAddressList !== "boolean") throw new Error("pick_first config field shuffleAddressList must be a boolean if provided");
      return new zh(A.shuffleAddressList === !0)
    }
  }
  Kf0.PickFirstLoadBalancingConfig = zh;
  class Ff0 {
    constructor(A) {
      this.subchannel = A
    }
    pick(A) {
      return {
        pickResultType: Gj.PickResultType.COMPLETE,
        subchannel: this.subchannel,
        status: null,
        onCallStarted: null,
        onCallEnded: null
      }
    }
  }

  function Xf0(A) {
    let B = A.slice();
    for (let Q = B.length - 1; Q > 1; Q--) {
      let I = Math.floor(Math.random() * (Q + 1)),
        G = B[Q];
      B[Q] = B[I], B[I] = G
    }
    return B
  }

  function NZ6(A) {
    if (A.length === 0) return [];
    let B = [],
      Q = [],
      I = [],
      G = Wf0.isTcpSubchannelAddress(A[0]) && Jf0.isIPv6(A[0].host);
    for (let Y of A)
      if (Wf0.isTcpSubchannelAddress(Y) && Jf0.isIPv6(Y.host)) Q.push(Y);
      else I.push(Y);
    let Z = G ? Q : I,
      D = G ? I : Q;
    for (let Y = 0; Y < Math.max(Z.length, D.length); Y++) {
      if (Y < Z.length) B.push(Z[Y]);
      if (Y < D.length) B.push(D[Y])
    }
    return B
  }
  var Vf0 = "grpc-node.internal.pick-first.report_health_status";
  class oD1 {
    constructor(A) {
      this.channelControlHelper = A, this.children = [], this.currentState = V7.ConnectivityState.IDLE, this.currentSubchannelIndex = 0, this.currentPick = null, this.subchannelStateListener = (B, Q, I, G, Z) => {
        this.onSubchannelStateUpdate(B, Q, I, Z)
      }, this.pickedSubchannelHealthListener = () => this.calculateAndReportNewState(), this.stickyTransientFailureMode = !1, this.reportHealthStatus = !1, this.lastError = null, this.latestAddressList = null, this.latestOptions = {}, this.connectionDelayTimeout = setTimeout(() => {}, 0), clearTimeout(this.connectionDelayTimeout)
    }
    allChildrenHaveReportedTF() {
      return this.children.every((A) => A.hasReportedTransientFailure)
    }
    resetChildrenReportedTF() {
      this.children.every((A) => A.hasReportedTransientFailure = !1)
    }
    calculateAndReportNewState() {
      var A;
      if (this.currentPick)
        if (this.reportHealthStatus && !this.currentPick.isHealthy()) {
          let B = `Picked subchannel ${this.currentPick.getAddress()} is unhealthy`;
          this.updateState(V7.ConnectivityState.TRANSIENT_FAILURE, new Gj.UnavailablePicker({
            details: B
          }), B)
        } else this.updateState(V7.ConnectivityState.READY, new Ff0(this.currentPick), null);
      else if (((A = this.latestAddressList) === null || A === void 0 ? void 0 : A.length) === 0) {
        let B = `No connection established. Last error: ${this.lastError}`;
        this.updateState(V7.ConnectivityState.TRANSIENT_FAILURE, new Gj.UnavailablePicker({
          details: B
        }), B)
      } else if (this.children.length === 0) this.updateState(V7.ConnectivityState.IDLE, new Gj.QueuePicker(this), null);
      else if (this.stickyTransientFailureMode) {
        let B = `No connection established. Last error: ${this.lastError}`;
        this.updateState(V7.ConnectivityState.TRANSIENT_FAILURE, new Gj.UnavailablePicker({
          details: B
        }), B)
      } else this.updateState(V7.ConnectivityState.CONNECTING, new Gj.QueuePicker(this), null)
    }
    requestReresolution() {
      this.channelControlHelper.requestReresolution()
    }
    maybeEnterStickyTransientFailureMode() {
      if (!this.allChildrenHaveReportedTF()) return;
      if (this.requestReresolution(), this.resetChildrenReportedTF(), this.stickyTransientFailureMode) {
        this.calculateAndReportNewState();
        return
      }
      this.stickyTransientFailureMode = !0;
      for (let {
          subchannel: A
        }
        of this.children) A.startConnecting();
      this.calculateAndReportNewState()
    }
    removeCurrentPick() {
      if (this.currentPick !== null) this.currentPick.removeConnectivityStateListener(this.subchannelStateListener), this.channelControlHelper.removeChannelzChild(this.currentPick.getChannelzRef()), this.currentPick.removeHealthStateWatcher(this.pickedSubchannelHealthListener), this.currentPick.unref(), this.currentPick = null
    }
    onSubchannelStateUpdate(A, B, Q, I) {
      var G;
      if ((G = this.currentPick) === null || G === void 0 ? void 0 : G.realSubchannelEquals(A)) {
        if (Q !== V7.ConnectivityState.READY) this.removeCurrentPick(), this.calculateAndReportNewState();
        return
      }
      for (let [Z, D] of this.children.entries())
        if (A.realSubchannelEquals(D.subchannel)) {
          if (Q === V7.ConnectivityState.READY) this.pickSubchannel(D.subchannel);
          if (Q === V7.ConnectivityState.TRANSIENT_FAILURE) {
            if (D.hasReportedTransientFailure = !0, I) this.lastError = I;
            if (this.maybeEnterStickyTransientFailureMode(), Z === this.currentSubchannelIndex) this.startNextSubchannelConnecting(Z + 1)
          }
          D.subchannel.startConnecting();
          return
        }
    }
    startNextSubchannelConnecting(A) {
      clearTimeout(this.connectionDelayTimeout);
      for (let [B, Q] of this.children.entries())
        if (B >= A) {
          let I = Q.subchannel.getConnectivityState();
          if (I === V7.ConnectivityState.IDLE || I === V7.ConnectivityState.CONNECTING) {
            this.startConnecting(B);
            return
          }
        } this.maybeEnterStickyTransientFailureMode()
    }
    startConnecting(A) {
      var B, Q;
      if (clearTimeout(this.connectionDelayTimeout), this.currentSubchannelIndex = A, this.children[A].subchannel.getConnectivityState() === V7.ConnectivityState.IDLE) Er("Start connecting to subchannel with address " + this.children[A].subchannel.getAddress()), process.nextTick(() => {
        var I;
        (I = this.children[A]) === null || I === void 0 || I.subchannel.startConnecting()
      });
      this.connectionDelayTimeout = setTimeout(() => {
        this.startNextSubchannelConnecting(A + 1)
      }, UZ6), (Q = (B = this.connectionDelayTimeout).unref) === null || Q === void 0 || Q.call(B)
    }
    pickSubchannel(A) {
      Er("Pick subchannel with address " + A.getAddress()), this.stickyTransientFailureMode = !1, A.ref(), this.channelControlHelper.addChannelzChild(A.getChannelzRef()), this.removeCurrentPick(), this.resetSubchannelList(), A.addConnectivityStateListener(this.subchannelStateListener), A.addHealthStateWatcher(this.pickedSubchannelHealthListener), this.currentPick = A, clearTimeout(this.connectionDelayTimeout), this.calculateAndReportNewState()
    }
    updateState(A, B, Q) {
      Er(V7.ConnectivityState[this.currentState] + " -> " + V7.ConnectivityState[A]), this.currentState = A, this.channelControlHelper.updateState(A, B, Q)
    }
    resetSubchannelList() {
      for (let A of this.children) A.subchannel.removeConnectivityStateListener(this.subchannelStateListener), A.subchannel.unref(), this.channelControlHelper.removeChannelzChild(A.subchannel.getChannelzRef());
      this.currentSubchannelIndex = 0, this.children = []
    }
    connectToAddressList(A, B) {
      Er("connectToAddressList([" + A.map((I) => Yf0.subchannelAddressToString(I)) + "])");
      let Q = A.map((I) => ({
        subchannel: this.channelControlHelper.createSubchannel(I, B),
        hasReportedTransientFailure: !1
      }));
      for (let {
          subchannel: I
        }
        of Q)
        if (I.getConnectivityState() === V7.ConnectivityState.READY) {
          this.pickSubchannel(I);
          return
        } for (let {
          subchannel: I
        }
        of Q) I.ref(), this.channelControlHelper.addChannelzChild(I.getChannelzRef());
      this.resetSubchannelList(), this.children = Q;
      for (let {
          subchannel: I
        }
        of this.children) I.addConnectivityStateListener(this.subchannelStateListener);
      for (let I of this.children)
        if (I.subchannel.getConnectivityState() === V7.ConnectivityState.TRANSIENT_FAILURE) I.hasReportedTransientFailure = !0;
      this.startNextSubchannelConnecting(0), this.calculateAndReportNewState()
    }
    updateAddressList(A, B, Q) {
      if (!(B instanceof zh)) return;
      if (this.reportHealthStatus = Q[Vf0], B.getShuffleAddressList()) A = Xf0(A);
      let I = [].concat(...A.map((Z) => Z.addresses));
      if (Er("updateAddressList([" + I.map((Z) => Yf0.subchannelAddressToString(Z)) + "])"), I.length === 0) this.lastError = "No addresses resolved";
      let G = NZ6(I);
      this.latestAddressList = G, this.latestOptions = Q, this.connectToAddressList(G, Q)
    }
    exitIdle() {
      if (this.currentState === V7.ConnectivityState.IDLE && this.latestAddressList) this.connectToAddressList(this.latestAddressList, this.latestOptions)
    }
    resetBackoff() {}
    destroy() {
      this.resetSubchannelList(), this.removeCurrentPick()
    }
    getTypeName() {
      return Ur
    }
  }
  Kf0.PickFirstLoadBalancer = oD1;
  var $Z6 = new zh(!1);
  class Cf0 {
    constructor(A, B, Q) {
      this.endpoint = A, this.options = Q, this.latestState = V7.ConnectivityState.IDLE;
      let I = Kd1.createChildChannelControlHelper(B, {
        updateState: (G, Z, D) => {
          this.latestState = G, this.latestPicker = Z, B.updateState(G, Z, D)
        }
      });
      this.pickFirstBalancer = new oD1(I), this.latestPicker = new Gj.QueuePicker(this.pickFirstBalancer)
    }
    startConnecting() {
      this.pickFirstBalancer.updateAddressList([this.endpoint], $Z6, Object.assign(Object.assign({}, this.options), {
        [Vf0]: !0
      }))
    }
    updateEndpoint(A, B) {
      if (this.options = B, this.endpoint = A, this.latestState !== V7.ConnectivityState.IDLE) this.startConnecting()
    }
    getConnectivityState() {
      return this.latestState
    }
    getPicker() {
      return this.latestPicker
    }
    getEndpoint() {
      return this.endpoint
    }
    exitIdle() {
      this.pickFirstBalancer.exitIdle()
    }
    destroy() {
      this.pickFirstBalancer.destroy()
    }
  }
  Kf0.LeafLoadBalancer = Cf0;

  function qZ6() {
    Kd1.registerLoadBalancerType(Ur, oD1, zh), Kd1.registerDefaultLoadBalancerType(Ur)
  }
})
// @from(Start 5109284, End 5112925)
Uf0 = z((wf0) => {
  Object.defineProperty(wf0, "__esModule", {
    value: !0
  });
  wf0.FileWatcherCertificateProvider = void 0;
  var TZ6 = Z1("fs"),
    PZ6 = GB(),
    SZ6 = y6(),
    _Z6 = Z1("util"),
    jZ6 = "certificate_provider";

  function eD1(A) {
    PZ6.trace(SZ6.LogVerbosity.DEBUG, jZ6, A)
  }
  var Hd1 = _Z6.promisify(TZ6.readFile);
  class zf0 {
    constructor(A) {
      if (this.config = A, this.refreshTimer = null, this.fileResultPromise = null, this.latestCaUpdate = void 0, this.caListeners = new Set, this.latestIdentityUpdate = void 0, this.identityListeners = new Set, this.lastUpdateTime = null, A.certificateFile === void 0 !== (A.privateKeyFile === void 0)) throw new Error("certificateFile and privateKeyFile must be set or unset together");
      if (A.certificateFile === void 0 && A.caCertificateFile === void 0) throw new Error("At least one of certificateFile and caCertificateFile must be set");
      eD1("File watcher constructed with config " + JSON.stringify(A))
    }
    updateCertificates() {
      if (this.fileResultPromise) return;
      this.fileResultPromise = Promise.allSettled([this.config.certificateFile ? Hd1(this.config.certificateFile) : Promise.reject(), this.config.privateKeyFile ? Hd1(this.config.privateKeyFile) : Promise.reject(), this.config.caCertificateFile ? Hd1(this.config.caCertificateFile) : Promise.reject()]), this.fileResultPromise.then(([A, B, Q]) => {
        if (!this.refreshTimer) return;
        if (eD1("File watcher read certificates certificate " + A.status + ", privateKey " + B.status + ", CA certificate " + Q.status), this.lastUpdateTime = new Date, this.fileResultPromise = null, A.status === "fulfilled" && B.status === "fulfilled") this.latestIdentityUpdate = {
          certificate: A.value,
          privateKey: B.value
        };
        else this.latestIdentityUpdate = null;
        if (Q.status === "fulfilled") this.latestCaUpdate = {
          caCertificate: Q.value
        };
        else this.latestCaUpdate = null;
        for (let I of this.identityListeners) I(this.latestIdentityUpdate);
        for (let I of this.caListeners) I(this.latestCaUpdate)
      }), eD1("File watcher initiated certificate update")
    }
    maybeStartWatchingFiles() {
      if (!this.refreshTimer) {
        let A = this.lastUpdateTime ? new Date().getTime() - this.lastUpdateTime.getTime() : 1 / 0;
        if (A > this.config.refreshIntervalMs) this.updateCertificates();
        if (A > this.config.refreshIntervalMs * 2) this.latestCaUpdate = void 0, this.latestIdentityUpdate = void 0;
        this.refreshTimer = setInterval(() => this.updateCertificates(), this.config.refreshIntervalMs), eD1("File watcher started watching")
      }
    }
    maybeStopWatchingFiles() {
      if (this.caListeners.size === 0 && this.identityListeners.size === 0) {
        if (this.fileResultPromise = null, this.refreshTimer) clearInterval(this.refreshTimer), this.refreshTimer = null
      }
    }
    addCaCertificateListener(A) {
      if (this.caListeners.add(A), this.maybeStartWatchingFiles(), this.latestCaUpdate !== void 0) process.nextTick(A, this.latestCaUpdate)
    }
    removeCaCertificateListener(A) {
      this.caListeners.delete(A), this.maybeStopWatchingFiles()
    }
    addIdentityCertificateListener(A) {
      if (this.identityListeners.add(A), this.maybeStartWatchingFiles(), this.latestIdentityUpdate !== void 0) process.nextTick(A, this.latestIdentityUpdate)
    }
    removeIdentityCertificateListener(A) {
      this.identityListeners.delete(A), this.maybeStopWatchingFiles()
    }
  }
  wf0.FileWatcherCertificateProvider = zf0
})
// @from(Start 5112931, End 5118853)
wd1 = z((I5) => {
  Object.defineProperty(I5, "__esModule", {
    value: !0
  });
  I5.SUBCHANNEL_ARGS_EXCLUDE_KEY_PREFIX = I5.createCertificateProviderChannelCredentials = I5.FileWatcherCertificateProvider = I5.createCertificateProviderServerCredentials = I5.createServerCredentialsWithInterceptors = I5.BaseSubchannelWrapper = I5.registerAdminService = I5.FilterStackFactory = I5.BaseFilter = I5.PickResultType = I5.QueuePicker = I5.UnavailablePicker = I5.ChildLoadBalancerHandler = I5.EndpointMap = I5.endpointHasAddress = I5.endpointToString = I5.subchannelAddressToString = I5.LeafLoadBalancer = I5.isLoadBalancerNameRegistered = I5.parseLoadBalancingConfig = I5.selectLbConfigFromList = I5.registerLoadBalancerType = I5.createChildChannelControlHelper = I5.BackoffTimeout = I5.parseDuration = I5.durationToMs = I5.splitHostPort = I5.uriToString = I5.createResolver = I5.registerResolver = I5.log = I5.trace = void 0;
  var Nf0 = GB();
  Object.defineProperty(I5, "trace", {
    enumerable: !0,
    get: function() {
      return Nf0.trace
    }
  });
  Object.defineProperty(I5, "log", {
    enumerable: !0,
    get: function() {
      return Nf0.log
    }
  });
  var $f0 = Zw();
  Object.defineProperty(I5, "registerResolver", {
    enumerable: !0,
    get: function() {
      return $f0.registerResolver
    }
  });
  Object.defineProperty(I5, "createResolver", {
    enumerable: !0,
    get: function() {
      return $f0.createResolver
    }
  });
  var qf0 = uY();
  Object.defineProperty(I5, "uriToString", {
    enumerable: !0,
    get: function() {
      return qf0.uriToString
    }
  });
  Object.defineProperty(I5, "splitHostPort", {
    enumerable: !0,
    get: function() {
      return qf0.splitHostPort
    }
  });
  var Mf0 = Cd1();
  Object.defineProperty(I5, "durationToMs", {
    enumerable: !0,
    get: function() {
      return Mf0.durationToMs
    }
  });
  Object.defineProperty(I5, "parseDuration", {
    enumerable: !0,
    get: function() {
      return Mf0.parseDuration
    }
  });
  var yZ6 = cs();
  Object.defineProperty(I5, "BackoffTimeout", {
    enumerable: !0,
    get: function() {
      return yZ6.BackoffTimeout
    }
  });
  var Nr = a_();
  Object.defineProperty(I5, "createChildChannelControlHelper", {
    enumerable: !0,
    get: function() {
      return Nr.createChildChannelControlHelper
    }
  });
  Object.defineProperty(I5, "registerLoadBalancerType", {
    enumerable: !0,
    get: function() {
      return Nr.registerLoadBalancerType
    }
  });
  Object.defineProperty(I5, "selectLbConfigFromList", {
    enumerable: !0,
    get: function() {
      return Nr.selectLbConfigFromList
    }
  });
  Object.defineProperty(I5, "parseLoadBalancingConfig", {
    enumerable: !0,
    get: function() {
      return Nr.parseLoadBalancingConfig
    }
  });
  Object.defineProperty(I5, "isLoadBalancerNameRegistered", {
    enumerable: !0,
    get: function() {
      return Nr.isLoadBalancerNameRegistered
    }
  });
  var kZ6 = tD1();
  Object.defineProperty(I5, "LeafLoadBalancer", {
    enumerable: !0,
    get: function() {
      return kZ6.LeafLoadBalancer
    }
  });
  var AY1 = PX();
  Object.defineProperty(I5, "subchannelAddressToString", {
    enumerable: !0,
    get: function() {
      return AY1.subchannelAddressToString
    }
  });
  Object.defineProperty(I5, "endpointToString", {
    enumerable: !0,
    get: function() {
      return AY1.endpointToString
    }
  });
  Object.defineProperty(I5, "endpointHasAddress", {
    enumerable: !0,
    get: function() {
      return AY1.endpointHasAddress
    }
  });
  Object.defineProperty(I5, "EndpointMap", {
    enumerable: !0,
    get: function() {
      return AY1.EndpointMap
    }
  });
  var xZ6 = BD1();
  Object.defineProperty(I5, "ChildLoadBalancerHandler", {
    enumerable: !0,
    get: function() {
      return xZ6.ChildLoadBalancerHandler
    }
  });
  var zd1 = FR();
  Object.defineProperty(I5, "UnavailablePicker", {
    enumerable: !0,
    get: function() {
      return zd1.UnavailablePicker
    }
  });
  Object.defineProperty(I5, "QueuePicker", {
    enumerable: !0,
    get: function() {
      return zd1.QueuePicker
    }
  });
  Object.defineProperty(I5, "PickResultType", {
    enumerable: !0,
    get: function() {
      return zd1.PickResultType
    }
  });
  var fZ6 = pm1();
  Object.defineProperty(I5, "BaseFilter", {
    enumerable: !0,
    get: function() {
      return fZ6.BaseFilter
    }
  });
  var vZ6 = dm1();
  Object.defineProperty(I5, "FilterStackFactory", {
    enumerable: !0,
    get: function() {
      return vZ6.FilterStackFactory
    }
  });
  var bZ6 = ID1();
  Object.defineProperty(I5, "registerAdminService", {
    enumerable: !0,
    get: function() {
      return bZ6.registerAdminService
    }
  });
  var gZ6 = cD1();
  Object.defineProperty(I5, "BaseSubchannelWrapper", {
    enumerable: !0,
    get: function() {
      return gZ6.BaseSubchannelWrapper
    }
  });
  var Lf0 = aD1();
  Object.defineProperty(I5, "createServerCredentialsWithInterceptors", {
    enumerable: !0,
    get: function() {
      return Lf0.createServerCredentialsWithInterceptors
    }
  });
  Object.defineProperty(I5, "createCertificateProviderServerCredentials", {
    enumerable: !0,
    get: function() {
      return Lf0.createCertificateProviderServerCredentials
    }
  });
  var hZ6 = Uf0();
  Object.defineProperty(I5, "FileWatcherCertificateProvider", {
    enumerable: !0,
    get: function() {
      return hZ6.FileWatcherCertificateProvider
    }
  });
  var mZ6 = us();
  Object.defineProperty(I5, "createCertificateProviderChannelCredentials", {
    enumerable: !0,
    get: function() {
      return mZ6.createCertificateProviderChannelCredentials
    }
  });
  var dZ6 = rm1();
  Object.defineProperty(I5, "SUBCHANNEL_ARGS_EXCLUDE_KEY_PREFIX", {
    enumerable: !0,
    get: function() {
      return dZ6.SUBCHANNEL_ARGS_EXCLUDE_KEY_PREFIX
    }
  })
})
// @from(Start 5118859, End 5119651)
Tf0 = z((Of0) => {
  Object.defineProperty(Of0, "__esModule", {
    value: !0
  });
  Of0.setup = cZ6;
  var pZ6 = Zw();
  class Rf0 {
    constructor(A, B, Q) {
      this.listener = B, this.hasReturnedResult = !1, this.endpoints = [];
      let I;
      if (A.authority === "") I = "/" + A.path;
      else I = A.path;
      this.endpoints = [{
        addresses: [{
          path: I
        }]
      }]
    }
    updateResolution() {
      if (!this.hasReturnedResult) this.hasReturnedResult = !0, process.nextTick(this.listener.onSuccessfulResolution, this.endpoints, null, null, null, {})
    }
    destroy() {
      this.hasReturnedResult = !1
    }
    static getDefaultAuthority(A) {
      return "localhost"
    }
  }

  function cZ6() {
    pZ6.registerResolver("unix", Rf0)
  }
})
// @from(Start 5119657, End 5121895)
kf0 = z((yf0) => {
  Object.defineProperty(yf0, "__esModule", {
    value: !0
  });
  yf0.setup = sZ6;
  var Pf0 = Z1("net"),
    BY1 = y6(),
    Ed1 = SZ(),
    Sf0 = Zw(),
    _f0 = uY(),
    iZ6 = GB(),
    nZ6 = "ip_resolver";

  function jf0(A) {
    iZ6.trace(BY1.LogVerbosity.DEBUG, nZ6, A)
  }
  var Ud1 = "ipv4",
    Nd1 = "ipv6",
    aZ6 = 443;
  class $d1 {
    constructor(A, B, Q) {
      var I;
      this.listener = B, this.endpoints = [], this.error = null, this.hasReturnedResult = !1, jf0("Resolver constructed for target " + _f0.uriToString(A));
      let G = [];
      if (!(A.scheme === Ud1 || A.scheme === Nd1)) {
        this.error = {
          code: BY1.Status.UNAVAILABLE,
          details: `Unrecognized scheme ${A.scheme} in IP resolver`,
          metadata: new Ed1.Metadata
        };
        return
      }
      let Z = A.path.split(",");
      for (let D of Z) {
        let Y = _f0.splitHostPort(D);
        if (Y === null) {
          this.error = {
            code: BY1.Status.UNAVAILABLE,
            details: `Failed to parse ${A.scheme} address ${D}`,
            metadata: new Ed1.Metadata
          };
          return
        }
        if (A.scheme === Ud1 && !Pf0.isIPv4(Y.host) || A.scheme === Nd1 && !Pf0.isIPv6(Y.host)) {
          this.error = {
            code: BY1.Status.UNAVAILABLE,
            details: `Failed to parse ${A.scheme} address ${D}`,
            metadata: new Ed1.Metadata
          };
          return
        }
        G.push({
          host: Y.host,
          port: (I = Y.port) !== null && I !== void 0 ? I : aZ6
        })
      }
      this.endpoints = G.map((D) => ({
        addresses: [D]
      })), jf0("Parsed " + A.scheme + " address list " + G)
    }
    updateResolution() {
      if (!this.hasReturnedResult) this.hasReturnedResult = !0, process.nextTick(() => {
        if (this.error) this.listener.onError(this.error);
        else this.listener.onSuccessfulResolution(this.endpoints, null, null, null, {})
      })
    }
    destroy() {
      this.hasReturnedResult = !1
    }
    static getDefaultAuthority(A) {
      return A.path.split(",")[0]
    }
  }

  function sZ6() {
    Sf0.registerResolver(Ud1, $d1), Sf0.registerResolver(Nd1, $d1)
  }
})
// @from(Start 5121901, End 5125873)
mf0 = z((gf0) => {
  Object.defineProperty(gf0, "__esModule", {
    value: !0
  });
  gf0.RoundRobinLoadBalancer = void 0;
  gf0.setup = BD6;
  var vf0 = a_(),
    kD = TX(),
    qd1 = FR(),
    oZ6 = GB(),
    tZ6 = y6(),
    xf0 = PX(),
    eZ6 = tD1(),
    AD6 = "round_robin";

  function ff0(A) {
    oZ6.trace(tZ6.LogVerbosity.DEBUG, AD6, A)
  }
  var QY1 = "round_robin";
  class Md1 {
    getLoadBalancerName() {
      return QY1
    }
    constructor() {}
    toJsonObject() {
      return {
        [QY1]: {}
      }
    }
    static createFromJson(A) {
      return new Md1
    }
  }
  class bf0 {
    constructor(A, B = 0) {
      this.children = A, this.nextIndex = B
    }
    pick(A) {
      let B = this.children[this.nextIndex].picker;
      return this.nextIndex = (this.nextIndex + 1) % this.children.length, B.pick(A)
    }
    peekNextEndpoint() {
      return this.children[this.nextIndex].endpoint
    }
  }
  class Ld1 {
    constructor(A) {
      this.channelControlHelper = A, this.children = [], this.currentState = kD.ConnectivityState.IDLE, this.currentReadyPicker = null, this.updatesPaused = !1, this.lastError = null, this.childChannelControlHelper = vf0.createChildChannelControlHelper(A, {
        updateState: (B, Q, I) => {
          if (this.currentState === kD.ConnectivityState.READY && B !== kD.ConnectivityState.READY) this.channelControlHelper.requestReresolution();
          if (I) this.lastError = I;
          this.calculateAndUpdateState()
        }
      })
    }
    countChildrenWithState(A) {
      return this.children.filter((B) => B.getConnectivityState() === A).length
    }
    calculateAndUpdateState() {
      if (this.updatesPaused) return;
      if (this.countChildrenWithState(kD.ConnectivityState.READY) > 0) {
        let A = this.children.filter((Q) => Q.getConnectivityState() === kD.ConnectivityState.READY),
          B = 0;
        if (this.currentReadyPicker !== null) {
          let Q = this.currentReadyPicker.peekNextEndpoint();
          if (B = A.findIndex((I) => xf0.endpointEqual(I.getEndpoint(), Q)), B < 0) B = 0
        }
        this.updateState(kD.ConnectivityState.READY, new bf0(A.map((Q) => ({
          endpoint: Q.getEndpoint(),
          picker: Q.getPicker()
        })), B), null)
      } else if (this.countChildrenWithState(kD.ConnectivityState.CONNECTING) > 0) this.updateState(kD.ConnectivityState.CONNECTING, new qd1.QueuePicker(this), null);
      else if (this.countChildrenWithState(kD.ConnectivityState.TRANSIENT_FAILURE) > 0) {
        let A = `round_robin: No connection established. Last error: ${this.lastError}`;
        this.updateState(kD.ConnectivityState.TRANSIENT_FAILURE, new qd1.UnavailablePicker({
          details: A
        }), A)
      } else this.updateState(kD.ConnectivityState.IDLE, new qd1.QueuePicker(this), null);
      for (let A of this.children)
        if (A.getConnectivityState() === kD.ConnectivityState.IDLE) A.exitIdle()
    }
    updateState(A, B, Q) {
      if (ff0(kD.ConnectivityState[this.currentState] + " -> " + kD.ConnectivityState[A]), A === kD.ConnectivityState.READY) this.currentReadyPicker = B;
      else this.currentReadyPicker = null;
      this.currentState = A, this.channelControlHelper.updateState(A, B, Q)
    }
    resetSubchannelList() {
      for (let A of this.children) A.destroy()
    }
    updateAddressList(A, B, Q) {
      this.resetSubchannelList(), ff0("Connect to endpoint list " + A.map(xf0.endpointToString)), this.updatesPaused = !0, this.children = A.map((I) => new eZ6.LeafLoadBalancer(I, this.childChannelControlHelper, Q));
      for (let I of this.children) I.startConnecting();
      this.updatesPaused = !1, this.calculateAndUpdateState()
    }
    exitIdle() {}
    resetBackoff() {}
    destroy() {
      this.resetSubchannelList()
    }
    getTypeName() {
      return QY1
    }
  }
  gf0.RoundRobinLoadBalancer = Ld1;

  function BD6() {
    vf0.registerLoadBalancerType(QY1, Ld1, Md1)
  }
})
// @from(Start 5125879, End 5140879)
af0 = z((if0) => {
  var Rd1;
  Object.defineProperty(if0, "__esModule", {
    value: !0
  });
  if0.OutlierDetectionLoadBalancer = if0.OutlierDetectionLoadBalancingConfig = void 0;
  if0.setup = CD6;
  var ID6 = TX(),
    df0 = y6(),
    Zj = Cd1(),
    uf0 = wd1(),
    GD6 = a_(),
    ZD6 = BD1(),
    DD6 = FR(),
    Od1 = PX(),
    YD6 = cD1(),
    WD6 = GB(),
    JD6 = "outlier_detection";

  function OI(A) {
    WD6.trace(df0.LogVerbosity.DEBUG, JD6, A)
  }
  var Sd1 = "outlier_detection",
    FD6 = ((Rd1 = process.env.GRPC_EXPERIMENTAL_ENABLE_OUTLIER_DETECTION) !== null && Rd1 !== void 0 ? Rd1 : "true") === "true",
    XD6 = {
      stdev_factor: 1900,
      enforcement_percentage: 100,
      minimum_hosts: 5,
      request_volume: 100
    },
    VD6 = {
      threshold: 85,
      enforcement_percentage: 100,
      minimum_hosts: 5,
      request_volume: 50
    };

  function wh(A, B, Q, I) {
    if (B in A && A[B] !== void 0 && typeof A[B] !== Q) {
      let G = I ? `${I}.${B}` : B;
      throw new Error(`outlier detection config ${G} parse error: expected ${Q}, got ${typeof A[B]}`)
    }
  }

  function Td1(A, B, Q) {
    let I = Q ? `${Q}.${B}` : B;
    if (B in A && A[B] !== void 0) {
      if (!Zj.isDuration(A[B])) throw new Error(`outlier detection config ${I} parse error: expected Duration, got ${typeof A[B]}`);
      if (!(A[B].seconds >= 0 && A[B].seconds <= 315576000000 && A[B].nanos >= 0 && A[B].nanos <= 999999999)) throw new Error(`outlier detection config ${I} parse error: values out of range for non-negative Duaration`)
    }
  }

  function IY1(A, B, Q) {
    let I = Q ? `${Q}.${B}` : B;
    if (wh(A, B, "number", Q), B in A && A[B] !== void 0 && !(A[B] >= 0 && A[B] <= 100)) throw new Error(`outlier detection config ${I} parse error: value out of range for percentage (0-100)`)
  }
  class $r {
    constructor(A, B, Q, I, G, Z, D) {
      if (this.childPolicy = D, D.getLoadBalancerName() === "pick_first") throw new Error("outlier_detection LB policy cannot have a pick_first child policy");
      this.intervalMs = A !== null && A !== void 0 ? A : 1e4, this.baseEjectionTimeMs = B !== null && B !== void 0 ? B : 30000, this.maxEjectionTimeMs = Q !== null && Q !== void 0 ? Q : 300000, this.maxEjectionPercent = I !== null && I !== void 0 ? I : 10, this.successRateEjection = G ? Object.assign(Object.assign({}, XD6), G) : null, this.failurePercentageEjection = Z ? Object.assign(Object.assign({}, VD6), Z) : null
    }
    getLoadBalancerName() {
      return Sd1
    }
    toJsonObject() {
      var A, B;
      return {
        outlier_detection: {
          interval: Zj.msToDuration(this.intervalMs),
          base_ejection_time: Zj.msToDuration(this.baseEjectionTimeMs),
          max_ejection_time: Zj.msToDuration(this.maxEjectionTimeMs),
          max_ejection_percent: this.maxEjectionPercent,
          success_rate_ejection: (A = this.successRateEjection) !== null && A !== void 0 ? A : void 0,
          failure_percentage_ejection: (B = this.failurePercentageEjection) !== null && B !== void 0 ? B : void 0,
          child_policy: [this.childPolicy.toJsonObject()]
        }
      }
    }
    getIntervalMs() {
      return this.intervalMs
    }
    getBaseEjectionTimeMs() {
      return this.baseEjectionTimeMs
    }
    getMaxEjectionTimeMs() {
      return this.maxEjectionTimeMs
    }
    getMaxEjectionPercent() {
      return this.maxEjectionPercent
    }
    getSuccessRateEjectionConfig() {
      return this.successRateEjection
    }
    getFailurePercentageEjectionConfig() {
      return this.failurePercentageEjection
    }
    getChildPolicy() {
      return this.childPolicy
    }
    static createFromJson(A) {
      var B;
      if (Td1(A, "interval"), Td1(A, "base_ejection_time"), Td1(A, "max_ejection_time"), IY1(A, "max_ejection_percent"), "success_rate_ejection" in A && A.success_rate_ejection !== void 0) {
        if (typeof A.success_rate_ejection !== "object") throw new Error("outlier detection config success_rate_ejection must be an object");
        wh(A.success_rate_ejection, "stdev_factor", "number", "success_rate_ejection"), IY1(A.success_rate_ejection, "enforcement_percentage", "success_rate_ejection"), wh(A.success_rate_ejection, "minimum_hosts", "number", "success_rate_ejection"), wh(A.success_rate_ejection, "request_volume", "number", "success_rate_ejection")
      }
      if ("failure_percentage_ejection" in A && A.failure_percentage_ejection !== void 0) {
        if (typeof A.failure_percentage_ejection !== "object") throw new Error("outlier detection config failure_percentage_ejection must be an object");
        IY1(A.failure_percentage_ejection, "threshold", "failure_percentage_ejection"), IY1(A.failure_percentage_ejection, "enforcement_percentage", "failure_percentage_ejection"), wh(A.failure_percentage_ejection, "minimum_hosts", "number", "failure_percentage_ejection"), wh(A.failure_percentage_ejection, "request_volume", "number", "failure_percentage_ejection")
      }
      if (!("child_policy" in A) || !Array.isArray(A.child_policy)) throw new Error("outlier detection config child_policy must be an array");
      let Q = GD6.selectLbConfigFromList(A.child_policy);
      if (!Q) throw new Error("outlier detection config child_policy: no valid recognized policy found");
      return new $r(A.interval ? Zj.durationToMs(A.interval) : null, A.base_ejection_time ? Zj.durationToMs(A.base_ejection_time) : null, A.max_ejection_time ? Zj.durationToMs(A.max_ejection_time) : null, (B = A.max_ejection_percent) !== null && B !== void 0 ? B : null, A.success_rate_ejection, A.failure_percentage_ejection, Q)
    }
  }
  if0.OutlierDetectionLoadBalancingConfig = $r;
  class pf0 extends YD6.BaseSubchannelWrapper {
    constructor(A, B) {
      super(A);
      this.mapEntry = B, this.refCount = 0
    }
    ref() {
      this.child.ref(), this.refCount += 1
    }
    unref() {
      if (this.child.unref(), this.refCount -= 1, this.refCount <= 0) {
        if (this.mapEntry) {
          let A = this.mapEntry.subchannelWrappers.indexOf(this);
          if (A >= 0) this.mapEntry.subchannelWrappers.splice(A, 1)
        }
      }
    }
    eject() {
      this.setHealthy(!1)
    }
    uneject() {
      this.setHealthy(!0)
    }
    getMapEntry() {
      return this.mapEntry
    }
    getWrappedSubchannel() {
      return this.child
    }
  }

  function Pd1() {
    return {
      success: 0,
      failure: 0
    }
  }
  class cf0 {
    constructor() {
      this.activeBucket = Pd1(), this.inactiveBucket = Pd1()
    }
    addSuccess() {
      this.activeBucket.success += 1
    }
    addFailure() {
      this.activeBucket.failure += 1
    }
    switchBuckets() {
      this.inactiveBucket = this.activeBucket, this.activeBucket = Pd1()
    }
    getLastSuccesses() {
      return this.inactiveBucket.success
    }
    getLastFailures() {
      return this.inactiveBucket.failure
    }
  }
  class lf0 {
    constructor(A, B) {
      this.wrappedPicker = A, this.countCalls = B
    }
    pick(A) {
      let B = this.wrappedPicker.pick(A);
      if (B.pickResultType === DD6.PickResultType.COMPLETE) {
        let Q = B.subchannel,
          I = Q.getMapEntry();
        if (I) {
          let G = B.onCallEnded;
          if (this.countCalls) G = (Z) => {
            var D;
            if (Z === df0.Status.OK) I.counter.addSuccess();
            else I.counter.addFailure();
            (D = B.onCallEnded) === null || D === void 0 || D.call(B, Z)
          };
          return Object.assign(Object.assign({}, B), {
            subchannel: Q.getWrappedSubchannel(),
            onCallEnded: G
          })
        } else return Object.assign(Object.assign({}, B), {
          subchannel: Q.getWrappedSubchannel()
        })
      } else return B
    }
  }
  class _d1 {
    constructor(A) {
      this.entryMap = new Od1.EndpointMap, this.latestConfig = null, this.timerStartTime = null, this.childBalancer = new ZD6.ChildLoadBalancerHandler(uf0.createChildChannelControlHelper(A, {
        createSubchannel: (B, Q) => {
          let I = A.createSubchannel(B, Q),
            G = this.entryMap.getForSubchannelAddress(B),
            Z = new pf0(I, G);
          if ((G === null || G === void 0 ? void 0 : G.currentEjectionTimestamp) !== null) Z.eject();
          return G === null || G === void 0 || G.subchannelWrappers.push(Z), Z
        },
        updateState: (B, Q, I) => {
          if (B === ID6.ConnectivityState.READY) A.updateState(B, new lf0(Q, this.isCountingEnabled()), I);
          else A.updateState(B, Q, I)
        }
      })), this.ejectionTimer = setInterval(() => {}, 0), clearInterval(this.ejectionTimer)
    }
    isCountingEnabled() {
      return this.latestConfig !== null && (this.latestConfig.getSuccessRateEjectionConfig() !== null || this.latestConfig.getFailurePercentageEjectionConfig() !== null)
    }
    getCurrentEjectionPercent() {
      let A = 0;
      for (let B of this.entryMap.values())
        if (B.currentEjectionTimestamp !== null) A += 1;
      return A * 100 / this.entryMap.size
    }
    runSuccessRateCheck(A) {
      if (!this.latestConfig) return;
      let B = this.latestConfig.getSuccessRateEjectionConfig();
      if (!B) return;
      OI("Running success rate check");
      let Q = B.request_volume,
        I = 0,
        G = [];
      for (let [F, X] of this.entryMap.entries()) {
        let V = X.counter.getLastSuccesses(),
          C = X.counter.getLastFailures();
        if (OI("Stats for " + Od1.endpointToString(F) + ": successes=" + V + " failures=" + C + " targetRequestVolume=" + Q), V + C >= Q) I += 1, G.push(V / (V + C))
      }
      if (OI("Found " + I + " success rate candidates; currentEjectionPercent=" + this.getCurrentEjectionPercent() + " successRates=[" + G + "]"), I < B.minimum_hosts) return;
      let Z = G.reduce((F, X) => F + X) / G.length,
        D = 0;
      for (let F of G) {
        let X = F - Z;
        D += X * X
      }
      let Y = D / G.length,
        W = Math.sqrt(Y),
        J = Z - W * (B.stdev_factor / 1000);
      OI("stdev=" + W + " ejectionThreshold=" + J);
      for (let [F, X] of this.entryMap.entries()) {
        if (this.getCurrentEjectionPercent() >= this.latestConfig.getMaxEjectionPercent()) break;
        let V = X.counter.getLastSuccesses(),
          C = X.counter.getLastFailures();
        if (V + C < Q) continue;
        let K = V / (V + C);
        if (OI("Checking candidate " + F + " successRate=" + K), K < J) {
          let E = Math.random() * 100;
          if (OI("Candidate " + F + " randomNumber=" + E + " enforcement_percentage=" + B.enforcement_percentage), E < B.enforcement_percentage) OI("Ejecting candidate " + F), this.eject(X, A)
        }
      }
    }
    runFailurePercentageCheck(A) {
      if (!this.latestConfig) return;
      let B = this.latestConfig.getFailurePercentageEjectionConfig();
      if (!B) return;
      OI("Running failure percentage check. threshold=" + B.threshold + " request volume threshold=" + B.request_volume);
      let Q = 0;
      for (let I of this.entryMap.values()) {
        let G = I.counter.getLastSuccesses(),
          Z = I.counter.getLastFailures();
        if (G + Z >= B.request_volume) Q += 1
      }
      if (Q < B.minimum_hosts) return;
      for (let [I, G] of this.entryMap.entries()) {
        if (this.getCurrentEjectionPercent() >= this.latestConfig.getMaxEjectionPercent()) break;
        let Z = G.counter.getLastSuccesses(),
          D = G.counter.getLastFailures();
        if (OI("Candidate successes=" + Z + " failures=" + D), Z + D < B.request_volume) continue;
        if (D * 100 / (D + Z) > B.threshold) {
          let W = Math.random() * 100;
          if (OI("Candidate " + I + " randomNumber=" + W + " enforcement_percentage=" + B.enforcement_percentage), W < B.enforcement_percentage) OI("Ejecting candidate " + I), this.eject(G, A)
        }
      }
    }
    eject(A, B) {
      A.currentEjectionTimestamp = new Date, A.ejectionTimeMultiplier += 1;
      for (let Q of A.subchannelWrappers) Q.eject()
    }
    uneject(A) {
      A.currentEjectionTimestamp = null;
      for (let B of A.subchannelWrappers) B.uneject()
    }
    switchAllBuckets() {
      for (let A of this.entryMap.values()) A.counter.switchBuckets()
    }
    startTimer(A) {
      var B, Q;
      this.ejectionTimer = setTimeout(() => this.runChecks(), A), (Q = (B = this.ejectionTimer).unref) === null || Q === void 0 || Q.call(B)
    }
    runChecks() {
      let A = new Date;
      if (OI("Ejection timer running"), this.switchAllBuckets(), !this.latestConfig) return;
      this.timerStartTime = A, this.startTimer(this.latestConfig.getIntervalMs()), this.runSuccessRateCheck(A), this.runFailurePercentageCheck(A);
      for (let [B, Q] of this.entryMap.entries())
        if (Q.currentEjectionTimestamp === null) {
          if (Q.ejectionTimeMultiplier > 0) Q.ejectionTimeMultiplier -= 1
        } else {
          let I = this.latestConfig.getBaseEjectionTimeMs(),
            G = this.latestConfig.getMaxEjectionTimeMs(),
            Z = new Date(Q.currentEjectionTimestamp.getTime());
          if (Z.setMilliseconds(Z.getMilliseconds() + Math.min(I * Q.ejectionTimeMultiplier, Math.max(I, G))), Z < new Date) OI("Unejecting " + B), this.uneject(Q)
        }
    }
    updateAddressList(A, B, Q) {
      if (!(B instanceof $r)) return;
      OI("Received update with config: " + JSON.stringify(B.toJsonObject(), void 0, 2));
      for (let G of A)
        if (!this.entryMap.has(G)) OI("Adding map entry for " + Od1.endpointToString(G)), this.entryMap.set(G, {
          counter: new cf0,
          currentEjectionTimestamp: null,
          ejectionTimeMultiplier: 0,
          subchannelWrappers: []
        });
      this.entryMap.deleteMissing(A);
      let I = B.getChildPolicy();
      if (this.childBalancer.updateAddressList(A, I, Q), B.getSuccessRateEjectionConfig() || B.getFailurePercentageEjectionConfig())
        if (this.timerStartTime) {
          OI("Previous timer existed. Replacing timer"), clearTimeout(this.ejectionTimer);
          let G = B.getIntervalMs() - (new Date().getTime() - this.timerStartTime.getTime());
          this.startTimer(G)
        } else OI("Starting new timer"), this.timerStartTime = new Date, this.startTimer(B.getIntervalMs()), this.switchAllBuckets();
      else {
        OI("Counting disabled. Cancelling timer."), this.timerStartTime = null, clearTimeout(this.ejectionTimer);
        for (let G of this.entryMap.values()) this.uneject(G), G.ejectionTimeMultiplier = 0
      }
      this.latestConfig = B
    }
    exitIdle() {
      this.childBalancer.exitIdle()
    }
    resetBackoff() {
      this.childBalancer.resetBackoff()
    }
    destroy() {
      clearTimeout(this.ejectionTimer), this.childBalancer.destroy()
    }
    getTypeName() {
      return Sd1
    }
  }
  if0.OutlierDetectionLoadBalancer = _d1;

  function CD6() {
    if (FD6) uf0.registerLoadBalancerType(Sd1, _d1, $r)
  }
})
// @from(Start 5140885, End 5147278)
qr = z((M8) => {
  Object.defineProperty(M8, "__esModule", {
    value: !0
  });
  M8.experimental = M8.ServerInterceptingCall = M8.ResponderBuilder = M8.ServerListenerBuilder = M8.addAdminServicesToServer = M8.getChannelzHandlers = M8.getChannelzServiceDefinition = M8.InterceptorConfigurationError = M8.InterceptingCall = M8.RequesterBuilder = M8.ListenerBuilder = M8.StatusBuilder = M8.getClientChannel = M8.ServerCredentials = M8.Server = M8.setLogVerbosity = M8.setLogger = M8.load = M8.loadObject = M8.CallCredentials = M8.ChannelCredentials = M8.waitForClientReady = M8.closeClient = M8.Channel = M8.makeGenericClientConstructor = M8.makeClientConstructor = M8.loadPackageDefinition = M8.Client = M8.compressionAlgorithms = M8.propagate = M8.connectivityState = M8.status = M8.logVerbosity = M8.Metadata = M8.credentials = void 0;
  var GY1 = iZ1();
  Object.defineProperty(M8, "CallCredentials", {
    enumerable: !0,
    get: function() {
      return GY1.CallCredentials
    }
  });
  var zD6 = yh1();
  Object.defineProperty(M8, "Channel", {
    enumerable: !0,
    get: function() {
      return zD6.ChannelImplementation
    }
  });
  var wD6 = um1();
  Object.defineProperty(M8, "compressionAlgorithms", {
    enumerable: !0,
    get: function() {
      return wD6.CompressionAlgorithms
    }
  });
  var ED6 = TX();
  Object.defineProperty(M8, "connectivityState", {
    enumerable: !0,
    get: function() {
      return ED6.ConnectivityState
    }
  });
  var ZY1 = us();
  Object.defineProperty(M8, "ChannelCredentials", {
    enumerable: !0,
    get: function() {
      return ZY1.ChannelCredentials
    }
  });
  var sf0 = jh1();
  Object.defineProperty(M8, "Client", {
    enumerable: !0,
    get: function() {
      return sf0.Client
    }
  });
  var jd1 = y6();
  Object.defineProperty(M8, "logVerbosity", {
    enumerable: !0,
    get: function() {
      return jd1.LogVerbosity
    }
  });
  Object.defineProperty(M8, "status", {
    enumerable: !0,
    get: function() {
      return jd1.Status
    }
  });
  Object.defineProperty(M8, "propagate", {
    enumerable: !0,
    get: function() {
      return jd1.Propagate
    }
  });
  var rf0 = GB(),
    yd1 = xh1();
  Object.defineProperty(M8, "loadPackageDefinition", {
    enumerable: !0,
    get: function() {
      return yd1.loadPackageDefinition
    }
  });
  Object.defineProperty(M8, "makeClientConstructor", {
    enumerable: !0,
    get: function() {
      return yd1.makeClientConstructor
    }
  });
  Object.defineProperty(M8, "makeGenericClientConstructor", {
    enumerable: !0,
    get: function() {
      return yd1.makeClientConstructor
    }
  });
  var UD6 = SZ();
  Object.defineProperty(M8, "Metadata", {
    enumerable: !0,
    get: function() {
      return UD6.Metadata
    }
  });
  var ND6 = Bf0();
  Object.defineProperty(M8, "Server", {
    enumerable: !0,
    get: function() {
      return ND6.Server
    }
  });
  var $D6 = aD1();
  Object.defineProperty(M8, "ServerCredentials", {
    enumerable: !0,
    get: function() {
      return $D6.ServerCredentials
    }
  });
  var qD6 = Zf0();
  Object.defineProperty(M8, "StatusBuilder", {
    enumerable: !0,
    get: function() {
      return qD6.StatusBuilder
    }
  });
  M8.credentials = {
    combineChannelCredentials: (A, ...B) => {
      return B.reduce((Q, I) => Q.compose(I), A)
    },
    combineCallCredentials: (A, ...B) => {
      return B.reduce((Q, I) => Q.compose(I), A)
    },
    createInsecure: ZY1.ChannelCredentials.createInsecure,
    createSsl: ZY1.ChannelCredentials.createSsl,
    createFromSecureContext: ZY1.ChannelCredentials.createFromSecureContext,
    createFromMetadataGenerator: GY1.CallCredentials.createFromMetadataGenerator,
    createFromGoogleCredential: GY1.CallCredentials.createFromGoogleCredential,
    createEmpty: GY1.CallCredentials.createEmpty
  };
  var MD6 = (A) => A.close();
  M8.closeClient = MD6;
  var LD6 = (A, B, Q) => A.waitForReady(B, Q);
  M8.waitForClientReady = LD6;
  var RD6 = (A, B) => {
    throw new Error("Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead")
  };
  M8.loadObject = RD6;
  var OD6 = (A, B, Q) => {
    throw new Error("Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead")
  };
  M8.load = OD6;
  var TD6 = (A) => {
    rf0.setLogger(A)
  };
  M8.setLogger = TD6;
  var PD6 = (A) => {
    rf0.setLoggerVerbosity(A)
  };
  M8.setLogVerbosity = PD6;
  var SD6 = (A) => {
    return sf0.Client.prototype.getChannel.call(A)
  };
  M8.getClientChannel = SD6;
  var DY1 = Sh1();
  Object.defineProperty(M8, "ListenerBuilder", {
    enumerable: !0,
    get: function() {
      return DY1.ListenerBuilder
    }
  });
  Object.defineProperty(M8, "RequesterBuilder", {
    enumerable: !0,
    get: function() {
      return DY1.RequesterBuilder
    }
  });
  Object.defineProperty(M8, "InterceptingCall", {
    enumerable: !0,
    get: function() {
      return DY1.InterceptingCall
    }
  });
  Object.defineProperty(M8, "InterceptorConfigurationError", {
    enumerable: !0,
    get: function() {
      return DY1.InterceptorConfigurationError
    }
  });
  var of0 = Aj();
  Object.defineProperty(M8, "getChannelzServiceDefinition", {
    enumerable: !0,
    get: function() {
      return of0.getChannelzServiceDefinition
    }
  });
  Object.defineProperty(M8, "getChannelzHandlers", {
    enumerable: !0,
    get: function() {
      return of0.getChannelzHandlers
    }
  });
  var _D6 = ID1();
  Object.defineProperty(M8, "addAdminServicesToServer", {
    enumerable: !0,
    get: function() {
      return _D6.addAdminServicesToServer
    }
  });
  var kd1 = Jd1();
  Object.defineProperty(M8, "ServerListenerBuilder", {
    enumerable: !0,
    get: function() {
      return kd1.ServerListenerBuilder
    }
  });
  Object.defineProperty(M8, "ResponderBuilder", {
    enumerable: !0,
    get: function() {
      return kd1.ResponderBuilder
    }
  });
  Object.defineProperty(M8, "ServerInterceptingCall", {
    enumerable: !0,
    get: function() {
      return kd1.ServerInterceptingCall
    }
  });
  var jD6 = wd1();
  M8.experimental = jD6;
  var yD6 = ym1(),
    kD6 = Tf0(),
    xD6 = kf0(),
    fD6 = tD1(),
    vD6 = mf0(),
    bD6 = af0(),
    gD6 = Aj();
  (() => {
    yD6.setup(), kD6.setup(), xD6.setup(), fD6.setup(), vD6.setup(), bD6.setup(), gD6.setup()
  })()
})
// @from(Start 5147284, End 5147938)
Bv0 = z((ef0) => {
  Object.defineProperty(ef0, "__esModule", {
    value: !0
  });
  ef0.createServiceClientConstructor = void 0;
  var nD6 = qr();

  function aD6(A, B) {
    let Q = {
      export: {
        path: A,
        requestStream: !1,
        responseStream: !1,
        requestSerialize: (I) => {
          return I
        },
        requestDeserialize: (I) => {
          return I
        },
        responseSerialize: (I) => {
          return I
        },
        responseDeserialize: (I) => {
          return I
        }
      }
    };
    return nD6.makeGenericClientConstructor(Q, B)
  }
  ef0.createServiceClientConstructor = aD6
})
// @from(Start 5147944, End 5150235)
Mr = z((Qv0) => {
  Object.defineProperty(Qv0, "__esModule", {
    value: !0
  });
  Qv0.createOtlpGrpcExporterTransport = Qv0.GrpcExporterTransport = Qv0.createEmptyMetadata = Qv0.createSslCredentials = Qv0.createInsecureCredentials = void 0;
  var sD6 = 0,
    rD6 = 2;

  function oD6(A) {
    return A === "gzip" ? rD6 : sD6
  }

  function tD6() {
    let {
      credentials: A
    } = qr();
    return A.createInsecure()
  }
  Qv0.createInsecureCredentials = tD6;

  function eD6(A, B, Q) {
    let {
      credentials: I
    } = qr();
    return I.createSsl(A, B, Q)
  }
  Qv0.createSslCredentials = eD6;

  function AY6() {
    let {
      Metadata: A
    } = qr();
    return new A
  }
  Qv0.createEmptyMetadata = AY6;
  class xd1 {
    _parameters;
    _client;
    _metadata;
    constructor(A) {
      this._parameters = A
    }
    shutdown() {
      this._client?.close()
    }
    send(A, B) {
      let Q = Buffer.from(A);
      if (this._client == null) {
        let {
          createServiceClientConstructor: I
        } = Bv0();
        try {
          this._metadata = this._parameters.metadata()
        } catch (Z) {
          return Promise.resolve({
            status: "failure",
            error: Z
          })
        }
        let G = I(this._parameters.grpcPath, this._parameters.grpcName);
        try {
          this._client = new G(this._parameters.address, this._parameters.credentials(), {
            "grpc.default_compression_algorithm": oD6(this._parameters.compression)
          })
        } catch (Z) {
          return Promise.resolve({
            status: "failure",
            error: Z
          })
        }
      }
      return new Promise((I) => {
        let G = Date.now() + B;
        if (this._metadata == null) return I({
          error: new Error("metadata was null"),
          status: "failure"
        });
        this._client.export(Q, this._metadata, {
          deadline: G
        }, (Z, D) => {
          if (Z) I({
            status: "failure",
            error: Z
          });
          else I({
            data: D,
            status: "success"
          })
        })
      })
    }
  }
  Qv0.GrpcExporterTransport = xd1;

  function BY6(A) {
    return new xd1(A)
  }
  Qv0.createOtlpGrpcExporterTransport = BY6
})
// @from(Start 5150241, End 5150377)
Dv0 = z((Gv0) => {
  Object.defineProperty(Gv0, "__esModule", {
    value: !0
  });
  Gv0.VERSION = void 0;
  Gv0.VERSION = "0.200.0"
})
// @from(Start 5150383, End 5152292)
Cv0 = z((Xv0) => {
  Object.defineProperty(Xv0, "__esModule", {
    value: !0
  });
  Xv0.getOtlpGrpcDefaultConfiguration = Xv0.mergeOtlpGrpcConfigurationWithDefaults = Xv0.validateAndNormalizeUrl = void 0;
  var Jv0 = p_(),
    Lr = Mr(),
    DY6 = Dv0(),
    YY6 = Z1("url"),
    Yv0 = s9();

  function Fv0(A) {
    if (A = A.trim(), !A.match(/^([\w]{1,8}):\/\//)) A = `https://${A}`;
    let Q = new YY6.URL(A);
    if (Q.protocol === "unix:") return A;
    if (Q.pathname && Q.pathname !== "/") Yv0.diag.warn("URL path should not be set when using grpc, the path part of the URL will be ignored.");
    if (Q.protocol !== "" && !Q.protocol?.match(/^(http)s?:$/)) Yv0.diag.warn("URL protocol should be http(s)://. Using http://.");
    return Q.host
  }
  Xv0.validateAndNormalizeUrl = Fv0;

  function Wv0(A, B) {
    for (let [Q, I] of Object.entries(B.getMap()))
      if (A.get(Q).length < 1) A.set(Q, I)
  }

  function WY6(A, B, Q) {
    let I = A.url ?? B.url ?? Q.url;
    return {
      ...Jv0.mergeOtlpSharedConfigurationWithDefaults(A, B, Q),
      metadata: () => {
        let G = Q.metadata();
        return Wv0(G, A.metadata?.().clone() ?? Lr.createEmptyMetadata()), Wv0(G, B.metadata?.() ?? Lr.createEmptyMetadata()), G
      },
      url: Fv0(I),
      credentials: A.credentials ?? B.credentials?.(I) ?? Q.credentials(I)
    }
  }
  Xv0.mergeOtlpGrpcConfigurationWithDefaults = WY6;

  function JY6() {
    return {
      ...Jv0.getSharedConfigurationDefaults(),
      metadata: () => {
        let A = Lr.createEmptyMetadata();
        return A.set("User-Agent", `OTel-OTLP-Exporter-JavaScript/${DY6.VERSION}`), A
      },
      url: "http://localhost:4317",
      credentials: (A) => {
        if (A.startsWith("http://")) return () => Lr.createInsecureCredentials();
        else return () => Lr.createSslCredentials()
      }
    }
  }
  Xv0.getOtlpGrpcDefaultConfiguration = JY6
})
// @from(Start 5152298, End 5155319)
Nv0 = z((Ev0) => {
  Object.defineProperty(Ev0, "__esModule", {
    value: !0
  });
  Ev0.getOtlpGrpcConfigurationFromEnv = void 0;
  var Kv0 = p8(),
    Rr = Mr(),
    VY6 = ug(),
    CY6 = Z1("fs"),
    KY6 = Z1("path"),
    zv0 = s9();

  function fd1(A, B) {
    if (A != null && A !== "") return A;
    if (B != null && B !== "") return B;
    return
  }

  function HY6(A) {
    let B = process.env[`OTEL_EXPORTER_OTLP_${A}_HEADERS`]?.trim(),
      Q = process.env.OTEL_EXPORTER_OTLP_HEADERS?.trim(),
      I = Kv0.parseKeyPairsIntoRecord(B),
      G = Kv0.parseKeyPairsIntoRecord(Q);
    if (Object.keys(I).length === 0 && Object.keys(G).length === 0) return;
    let Z = Object.assign({}, G, I),
      D = Rr.createEmptyMetadata();
    for (let [Y, W] of Object.entries(Z)) D.set(Y, W);
    return D
  }

  function zY6(A) {
    let B = HY6(A);
    if (B == null) return;
    return () => B
  }

  function wY6(A) {
    let B = process.env[`OTEL_EXPORTER_OTLP_${A}_ENDPOINT`]?.trim(),
      Q = process.env.OTEL_EXPORTER_OTLP_ENDPOINT?.trim();
    return fd1(B, Q)
  }

  function EY6(A) {
    let B = process.env[`OTEL_EXPORTER_OTLP_${A}_INSECURE`]?.toLowerCase().trim(),
      Q = process.env.OTEL_EXPORTER_OTLP_INSECURE?.toLowerCase().trim();
    return fd1(B, Q) === "true"
  }

  function vd1(A, B, Q) {
    let I = process.env[A]?.trim(),
      G = process.env[B]?.trim(),
      Z = fd1(I, G);
    if (Z != null) try {
      return CY6.readFileSync(KY6.resolve(process.cwd(), Z))
    } catch {
      zv0.diag.warn(Q);
      return
    } else return
  }

  function UY6(A) {
    return vd1(`OTEL_EXPORTER_OTLP_${A}_CLIENT_CERTIFICATE`, "OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE", "Failed to read client certificate chain file")
  }

  function NY6(A) {
    return vd1(`OTEL_EXPORTER_OTLP_${A}_CLIENT_KEY`, "OTEL_EXPORTER_OTLP_CLIENT_KEY", "Failed to read client certificate private key file")
  }

  function Hv0(A) {
    return vd1(`OTEL_EXPORTER_OTLP_${A}_CERTIFICATE`, "OTEL_EXPORTER_OTLP_CERTIFICATE", "Failed to read root certificate file")
  }

  function wv0(A) {
    let B = NY6(A),
      Q = UY6(A),
      I = Hv0(A),
      G = B != null && Q != null;
    if (I != null && !G) return zv0.diag.warn("Client key and certificate must both be provided, but one was missing - attempting to create credentials from just the root certificate"), Rr.createSslCredentials(Hv0(A));
    return Rr.createSslCredentials(I, B, Q)
  }

  function $Y6(A) {
    if (EY6(A)) return Rr.createInsecureCredentials();
    return wv0(A)
  }

  function qY6(A) {
    return {
      ...VY6.getSharedConfigurationFromEnvironment(A),
      metadata: zY6(A),
      url: wY6(A),
      credentials: (B) => {
        if (B.startsWith("http://")) return () => {
          return Rr.createInsecureCredentials()
        };
        else if (B.startsWith("https://")) return () => {
          return wv0(A)
        };
        return () => {
          return $Y6(A)
        }
      }
    }
  }
  Ev0.getOtlpGrpcConfigurationFromEnv = qY6
})
// @from(Start 5155325, End 5156107)
Lv0 = z((qv0) => {
  Object.defineProperty(qv0, "__esModule", {
    value: !0
  });
  qv0.convertLegacyOtlpGrpcOptions = void 0;
  var MY6 = s9(),
    $v0 = Cv0(),
    LY6 = Mr(),
    RY6 = Nv0();

  function OY6(A, B) {
    if (A.headers) MY6.diag.warn("Headers cannot be set when using grpc");
    let Q = A.credentials;
    return $v0.mergeOtlpGrpcConfigurationWithDefaults({
      url: A.url,
      metadata: () => {
        return A.metadata ?? LY6.createEmptyMetadata()
      },
      compression: A.compression,
      timeoutMillis: A.timeoutMillis,
      concurrencyLimit: A.concurrencyLimit,
      credentials: Q != null ? () => Q : void 0
    }, RY6.getOtlpGrpcConfigurationFromEnv(B), $v0.getOtlpGrpcDefaultConfiguration())
  }
  qv0.convertLegacyOtlpGrpcOptions = OY6
})
// @from(Start 5156113, End 5156607)
Tv0 = z((Rv0) => {
  Object.defineProperty(Rv0, "__esModule", {
    value: !0
  });
  Rv0.createOtlpGrpcExportDelegate = void 0;
  var TY6 = p_(),
    PY6 = Mr();

  function SY6(A, B, Q, I) {
    return TY6.createOtlpNetworkExportDelegate(A, B, PY6.createOtlpGrpcExporterTransport({
      address: A.url,
      compression: A.compression,
      credentials: A.credentials,
      metadata: A.metadata,
      grpcName: Q,
      grpcPath: I
    }))
  }
  Rv0.createOtlpGrpcExportDelegate = SY6
})
// @from(Start 5156613, End 5157142)
bd1 = z((YY1) => {
  Object.defineProperty(YY1, "__esModule", {
    value: !0
  });
  YY1.createOtlpGrpcExportDelegate = YY1.convertLegacyOtlpGrpcOptions = void 0;
  var _Y6 = Lv0();
  Object.defineProperty(YY1, "convertLegacyOtlpGrpcOptions", {
    enumerable: !0,
    get: function() {
      return _Y6.convertLegacyOtlpGrpcOptions
    }
  });
  var jY6 = Tv0();
  Object.defineProperty(YY1, "createOtlpGrpcExportDelegate", {
    enumerable: !0,
    get: function() {
      return jY6.createOtlpGrpcExportDelegate
    }
  })
})
// @from(Start 5157148, End 5157657)
yv0 = z((_v0) => {
  Object.defineProperty(_v0, "__esModule", {
    value: !0
  });
  _v0.OTLPMetricExporter = void 0;
  var kY6 = dZ1(),
    Pv0 = bd1(),
    xY6 = i_();
  class Sv0 extends kY6.OTLPMetricExporterBase {
    constructor(A) {
      super(Pv0.createOtlpGrpcExportDelegate(Pv0.convertLegacyOtlpGrpcOptions(A ?? {}, "METRICS"), xY6.ProtobufMetricsSerializer, "MetricsExportService", "/opentelemetry.proto.collector.metrics.v1.MetricsService/Export"), A)
    }
  }
  _v0.OTLPMetricExporter = Sv0
})
// @from(Start 5157663, End 5157945)
kv0 = z((gd1) => {
  Object.defineProperty(gd1, "__esModule", {
    value: !0
  });
  gd1.OTLPMetricExporter = void 0;
  var fY6 = yv0();
  Object.defineProperty(gd1, "OTLPMetricExporter", {
    enumerable: !0,
    get: function() {
      return fY6.OTLPMetricExporter
    }
  })
})
// @from(Start 5157951, End 5162693)
dd1 = z((bv0) => {
  Object.defineProperty(bv0, "__esModule", {
    value: !0
  });
  bv0.PrometheusSerializer = void 0;
  var bY6 = s9(),
    Dj = QR(),
    xv0 = p8();

  function JY1(A) {
    return A.replace(/\\/g, "\\\\").replace(/\n/g, "\\n")
  }

  function fv0(A = "") {
    if (typeof A !== "string") A = JSON.stringify(A);
    return JY1(A).replace(/"/g, "\\\"")
  }
  var gY6 = /[^a-z0-9_]/gi,
    hY6 = /_{2,}/g;

  function md1(A) {
    return A.replace(gY6, "_").replace(hY6, "_")
  }

  function hd1(A, B) {
    if (!A.endsWith("_total") && B.dataPointType === Dj.DataPointType.SUM && B.isMonotonic) A = A + "_total";
    return A
  }

  function mY6(A) {
    if (A === 1 / 0) return "+Inf";
    else if (A === -1 / 0) return "-Inf";
    else return `${A}`
  }

  function dY6(A) {
    switch (A.dataPointType) {
      case Dj.DataPointType.SUM:
        if (A.isMonotonic) return "counter";
        return "gauge";
      case Dj.DataPointType.GAUGE:
        return "gauge";
      case Dj.DataPointType.HISTOGRAM:
        return "histogram";
      default:
        return "untyped"
    }
  }

  function WY1(A, B, Q, I, G) {
    let Z = !1,
      D = "";
    for (let [Y, W] of Object.entries(B)) {
      let J = md1(Y);
      Z = !0, D += `${D.length>0?",":""}${J}="${fv0(W)}"`
    }
    if (G)
      for (let [Y, W] of Object.entries(G)) {
        let J = md1(Y);
        Z = !0, D += `${D.length>0?",":""}${J}="${fv0(W)}"`
      }
    if (Z) A += `{${D}}`;
    return `${A} ${mY6(Q)}${I!==void 0?" "+String(I):""}
`
  }
  var uY6 = "# no registered metrics";
  class vv0 {
    _prefix;
    _appendTimestamp;
    _additionalAttributes;
    _withResourceConstantLabels;
    constructor(A, B = !1, Q) {
      if (A) this._prefix = A + "_";
      this._appendTimestamp = B, this._withResourceConstantLabels = Q
    }
    serialize(A) {
      let B = "";
      this._additionalAttributes = this._filterResourceConstantLabels(A.resource.attributes, this._withResourceConstantLabels);
      for (let Q of A.scopeMetrics) B += this._serializeScopeMetrics(Q);
      if (B === "") B += uY6;
      return this._serializeResource(A.resource) + B
    }
    _filterResourceConstantLabels(A, B) {
      if (B) {
        let Q = {};
        for (let [I, G] of Object.entries(A))
          if (I.match(B)) Q[I] = G;
        return Q
      }
      return
    }
    _serializeScopeMetrics(A) {
      let B = "";
      for (let Q of A.metrics) B += this._serializeMetricData(Q) + `
`;
      return B
    }
    _serializeMetricData(A) {
      let B = md1(JY1(A.descriptor.name));
      if (this._prefix) B = `${this._prefix}${B}`;
      let Q = A.dataPointType;
      B = hd1(B, A);
      let I = `# HELP ${B} ${JY1(A.descriptor.description||"description missing")}`,
        G = A.descriptor.unit ? `
# UNIT ${B} ${JY1(A.descriptor.unit)}` : "",
        Z = `# TYPE ${B} ${dY6(A)}`,
        D = "";
      switch (Q) {
        case Dj.DataPointType.SUM:
        case Dj.DataPointType.GAUGE: {
          D = A.dataPoints.map((Y) => this._serializeSingularDataPoint(B, A, Y)).join("");
          break
        }
        case Dj.DataPointType.HISTOGRAM: {
          D = A.dataPoints.map((Y) => this._serializeHistogramDataPoint(B, A, Y)).join("");
          break
        }
        default:
          bY6.diag.error(`Unrecognizable DataPointType: ${Q} for metric "${B}"`)
      }
      return `${I}${G}
${Z}
${D}`.trim()
    }
    _serializeSingularDataPoint(A, B, Q) {
      let I = "";
      A = hd1(A, B);
      let {
        value: G,
        attributes: Z
      } = Q, D = xv0.hrTimeToMilliseconds(Q.endTime);
      return I += WY1(A, Z, G, this._appendTimestamp ? D : void 0, this._additionalAttributes), I
    }
    _serializeHistogramDataPoint(A, B, Q) {
      let I = "";
      A = hd1(A, B);
      let {
        attributes: G,
        value: Z
      } = Q, D = xv0.hrTimeToMilliseconds(Q.endTime);
      for (let F of ["count", "sum"]) {
        let X = Z[F];
        if (X != null) I += WY1(A + "_" + F, G, X, this._appendTimestamp ? D : void 0, this._additionalAttributes)
      }
      let Y = 0,
        W = Z.buckets.counts.entries(),
        J = !1;
      for (let [F, X] of W) {
        Y += X;
        let V = Z.buckets.boundaries[F];
        if (V === void 0 && J) break;
        if (V === 1 / 0) J = !0;
        I += WY1(A + "_bucket", G, Y, this._appendTimestamp ? D : void 0, Object.assign({}, this._additionalAttributes ?? {}, {
          le: V === void 0 || V === 1 / 0 ? "+Inf" : String(V)
        }))
      }
      return I
    }
    _serializeResource(A) {
      return `# HELP target_info Target metadata
# TYPE target_info gauge
${WY1("target_info",A.attributes,1).trim()}
`
    }
  }
  bv0.PrometheusSerializer = vv0
})
// @from(Start 5162699, End 5166211)
dv0 = z((hv0) => {
  Object.defineProperty(hv0, "__esModule", {
    value: !0
  });
  hv0.PrometheusExporter = void 0;
  var Or = s9(),
    pY6 = p8(),
    ud1 = QR(),
    cY6 = Z1("http"),
    lY6 = dd1(),
    iY6 = Z1("url");
  class qR extends ud1.MetricReader {
    static DEFAULT_OPTIONS = {
      host: void 0,
      port: 9464,
      endpoint: "/metrics",
      prefix: "",
      appendTimestamp: !1,
      withResourceConstantLabels: void 0
    };
    _host;
    _port;
    _baseUrl;
    _endpoint;
    _server;
    _prefix;
    _appendTimestamp;
    _serializer;
    _startServerPromise;
    constructor(A = {}, B = () => {}) {
      super({
        aggregationSelector: (I) => {
          return {
            type: ud1.AggregationType.DEFAULT
          }
        },
        aggregationTemporalitySelector: (I) => ud1.AggregationTemporality.CUMULATIVE,
        metricProducers: A.metricProducers
      });
      this._host = A.host || process.env.OTEL_EXPORTER_PROMETHEUS_HOST || qR.DEFAULT_OPTIONS.host, this._port = A.port || Number(process.env.OTEL_EXPORTER_PROMETHEUS_PORT) || qR.DEFAULT_OPTIONS.port, this._prefix = A.prefix || qR.DEFAULT_OPTIONS.prefix, this._appendTimestamp = typeof A.appendTimestamp === "boolean" ? A.appendTimestamp : qR.DEFAULT_OPTIONS.appendTimestamp;
      let Q = A.withResourceConstantLabels || qR.DEFAULT_OPTIONS.withResourceConstantLabels;
      if (this._server = cY6.createServer(this._requestHandler).unref(), this._serializer = new lY6.PrometheusSerializer(this._prefix, this._appendTimestamp, Q), this._baseUrl = `http://${this._host}:${this._port}/`, this._endpoint = (A.endpoint || qR.DEFAULT_OPTIONS.endpoint).replace(/^([^/])/, "/$1"), A.preventServerStart !== !0) this.startServer().then(B, (I) => {
        Or.diag.error(I), B(I)
      });
      else if (B) queueMicrotask(B)
    }
    async onForceFlush() {}
    onShutdown() {
      return this.stopServer()
    }
    stopServer() {
      if (!this._server) return Or.diag.debug("Prometheus stopServer() was called but server was never started."), Promise.resolve();
      else return new Promise((A) => {
        this._server.close((B) => {
          if (!B) Or.diag.debug("Prometheus exporter was stopped");
          else if (B.code !== "ERR_SERVER_NOT_RUNNING") pY6.globalErrorHandler(B);
          A()
        })
      })
    }
    startServer() {
      return this._startServerPromise ??= new Promise((A, B) => {
        this._server.once("error", B), this._server.listen({
          port: this._port,
          host: this._host
        }, () => {
          Or.diag.debug(`Prometheus exporter server started: ${this._host}:${this._port}/${this._endpoint}`), A()
        })
      }), this._startServerPromise
    }
    getMetricsRequestHandler(A, B) {
      this._exportMetrics(B)
    }
    _requestHandler = (A, B) => {
      if (A.url != null && new iY6.URL(A.url, this._baseUrl).pathname === this._endpoint) this._exportMetrics(B);
      else this._notFound(B)
    };
    _exportMetrics = (A) => {
      A.statusCode = 200, A.setHeader("content-type", "text/plain"), this.collect().then((B) => {
        let {
          resourceMetrics: Q,
          errors: I
        } = B;
        if (I.length) Or.diag.error("PrometheusExporter: metrics collection errors", ...I);
        A.end(this._serializer.serialize(Q))
      }, (B) => {
        A.end(`# failed to export metrics: ${B}`)
      })
    };
    _notFound = (A) => {
      A.statusCode = 404, A.end()
    }
  }
  hv0.PrometheusExporter = qR
})
// @from(Start 5166217, End 5166692)
uv0 = z((FY1) => {
  Object.defineProperty(FY1, "__esModule", {
    value: !0
  });
  FY1.PrometheusSerializer = FY1.PrometheusExporter = void 0;
  var nY6 = dv0();
  Object.defineProperty(FY1, "PrometheusExporter", {
    enumerable: !0,
    get: function() {
      return nY6.PrometheusExporter
    }
  });
  var aY6 = dd1();
  Object.defineProperty(FY1, "PrometheusSerializer", {
    enumerable: !0,
    get: function() {
      return aY6.PrometheusSerializer
    }
  })
})
// @from(Start 5166698, End 5170263)
pd1 = z((cv0) => {
  Object.defineProperty(cv0, "__esModule", {
    value: !0
  });
  cv0.LogRecord = void 0;
  var rY6 = s9(),
    Eh = s9(),
    XY1 = p8();
  class pv0 {
    hrTime;
    hrTimeObserved;
    spanContext;
    resource;
    instrumentationScope;
    attributes = {};
    _severityText;
    _severityNumber;
    _body;
    totalAttributesCount = 0;
    _isReadonly = !1;
    _logRecordLimits;
    set severityText(A) {
      if (this._isLogRecordReadonly()) return;
      this._severityText = A
    }
    get severityText() {
      return this._severityText
    }
    set severityNumber(A) {
      if (this._isLogRecordReadonly()) return;
      this._severityNumber = A
    }
    get severityNumber() {
      return this._severityNumber
    }
    set body(A) {
      if (this._isLogRecordReadonly()) return;
      this._body = A
    }
    get body() {
      return this._body
    }
    get droppedAttributesCount() {
      return this.totalAttributesCount - Object.keys(this.attributes).length
    }
    constructor(A, B, Q) {
      let {
        timestamp: I,
        observedTimestamp: G,
        severityNumber: Z,
        severityText: D,
        body: Y,
        attributes: W = {},
        context: J
      } = Q, F = Date.now();
      if (this.hrTime = XY1.timeInputToHrTime(I ?? F), this.hrTimeObserved = XY1.timeInputToHrTime(G ?? F), J) {
        let X = Eh.trace.getSpanContext(J);
        if (X && Eh.isSpanContextValid(X)) this.spanContext = X
      }
      this.severityNumber = Z, this.severityText = D, this.body = Y, this.resource = A.resource, this.instrumentationScope = B, this._logRecordLimits = A.logRecordLimits, this.setAttributes(W)
    }
    setAttribute(A, B) {
      if (this._isLogRecordReadonly()) return this;
      if (B === null) return this;
      if (A.length === 0) return Eh.diag.warn(`Invalid attribute key: ${A}`), this;
      if (!XY1.isAttributeValue(B) && !(typeof B === "object" && !Array.isArray(B) && Object.keys(B).length > 0)) return Eh.diag.warn(`Invalid attribute value set for key: ${A}`), this;
      if (this.totalAttributesCount += 1, Object.keys(this.attributes).length >= this._logRecordLimits.attributeCountLimit && !Object.prototype.hasOwnProperty.call(this.attributes, A)) {
        if (this.droppedAttributesCount === 1) Eh.diag.warn("Dropping extra attributes.");
        return this
      }
      if (XY1.isAttributeValue(B)) this.attributes[A] = this._truncateToSize(B);
      else this.attributes[A] = B;
      return this
    }
    setAttributes(A) {
      for (let [B, Q] of Object.entries(A)) this.setAttribute(B, Q);
      return this
    }
    setBody(A) {
      return this.body = A, this
    }
    setSeverityNumber(A) {
      return this.severityNumber = A, this
    }
    setSeverityText(A) {
      return this.severityText = A, this
    }
    _makeReadonly() {
      this._isReadonly = !0
    }
    _truncateToSize(A) {
      let B = this._logRecordLimits.attributeValueLengthLimit;
      if (B <= 0) return Eh.diag.warn(`Attribute value limit must be positive, got ${B}`), A;
      if (typeof A === "string") return this._truncateToLimitUtil(A, B);
      if (Array.isArray(A)) return A.map((Q) => typeof Q === "string" ? this._truncateToLimitUtil(Q, B) : Q);
      return A
    }
    _truncateToLimitUtil(A, B) {
      if (A.length <= B) return A;
      return A.substring(0, B)
    }
    _isLogRecordReadonly() {
      if (this._isReadonly) rY6.diag.warn("Can not execute the operation on emitted log record");
      return this._isReadonly
    }
  }
  cv0.LogRecord = pv0
})
// @from(Start 5170269, End 5170851)
sv0 = z((nv0) => {
  Object.defineProperty(nv0, "__esModule", {
    value: !0
  });
  nv0.Logger = void 0;
  var oY6 = s9(),
    tY6 = pd1();
  class iv0 {
    instrumentationScope;
    _sharedState;
    constructor(A, B) {
      this.instrumentationScope = A, this._sharedState = B
    }
    emit(A) {
      let B = A.context || oY6.context.active(),
        Q = new tY6.LogRecord(this._sharedState, this.instrumentationScope, {
          context: B,
          ...A
        });
      this._sharedState.activeProcessor.onEmit(Q, B), Q._makeReadonly()
    }
  }
  nv0.Logger = iv0
})
// @from(Start 5170857, End 5171849)
tv0 = z((rv0) => {
  Object.defineProperty(rv0, "__esModule", {
    value: !0
  });
  rv0.reconfigureLimits = rv0.loadDefaultConfig = void 0;
  var Uh = p8();

  function eY6() {
    return {
      forceFlushTimeoutMillis: 30000,
      logRecordLimits: {
        attributeValueLengthLimit: Uh.getNumberFromEnv("OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT") ?? 1 / 0,
        attributeCountLimit: Uh.getNumberFromEnv("OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT") ?? 128
      },
      includeTraceContext: !0
    }
  }
  rv0.loadDefaultConfig = eY6;

  function AW6(A) {
    return {
      attributeCountLimit: A.attributeCountLimit ?? Uh.getNumberFromEnv("OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT") ?? Uh.getNumberFromEnv("OTEL_ATTRIBUTE_COUNT_LIMIT") ?? 128,
      attributeValueLengthLimit: A.attributeValueLengthLimit ?? Uh.getNumberFromEnv("OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT") ?? Uh.getNumberFromEnv("OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT") ?? 1 / 0
    }
  }
  rv0.reconfigureLimits = AW6
})
// @from(Start 5171855, End 5172528)
Qb0 = z((Ab0) => {
  Object.defineProperty(Ab0, "__esModule", {
    value: !0
  });
  Ab0.MultiLogRecordProcessor = void 0;
  var QW6 = p8();
  class ev0 {
    processors;
    forceFlushTimeoutMillis;
    constructor(A, B) {
      this.processors = A, this.forceFlushTimeoutMillis = B
    }
    async forceFlush() {
      let A = this.forceFlushTimeoutMillis;
      await Promise.all(this.processors.map((B) => QW6.callWithTimeout(B.forceFlush(), A)))
    }
    onEmit(A, B) {
      this.processors.forEach((Q) => Q.onEmit(A, B))
    }
    async shutdown() {
      await Promise.all(this.processors.map((A) => A.shutdown()))
    }
  }
  Ab0.MultiLogRecordProcessor = ev0
})
// @from(Start 5172534, End 5172842)
cd1 = z((Gb0) => {
  Object.defineProperty(Gb0, "__esModule", {
    value: !0
  });
  Gb0.NoopLogRecordProcessor = void 0;
  class Ib0 {
    forceFlush() {
      return Promise.resolve()
    }
    onEmit(A, B) {}
    shutdown() {
      return Promise.resolve()
    }
  }
  Gb0.NoopLogRecordProcessor = Ib0
})
// @from(Start 5172848, End 5173371)
Jb0 = z((Yb0) => {
  Object.defineProperty(Yb0, "__esModule", {
    value: !0
  });
  Yb0.LoggerProviderSharedState = void 0;
  var IW6 = cd1();
  class Db0 {
    resource;
    forceFlushTimeoutMillis;
    logRecordLimits;
    loggers = new Map;
    activeProcessor;
    registeredLogRecordProcessors = [];
    constructor(A, B, Q) {
      this.resource = A, this.forceFlushTimeoutMillis = B, this.logRecordLimits = Q, this.activeProcessor = new IW6.NoopLogRecordProcessor
    }
  }
  Yb0.LoggerProviderSharedState = Db0
})
// @from(Start 5173377, End 5175687)
zb0 = z((Cb0) => {
  Object.defineProperty(Cb0, "__esModule", {
    value: !0
  });
  Cb0.LoggerProvider = Cb0.DEFAULT_LOGGER_NAME = void 0;
  var Tr = s9(),
    GW6 = Hb1(),
    ZW6 = $Z1(),
    Fb0 = p8(),
    DW6 = sv0(),
    Xb0 = tv0(),
    YW6 = Qb0(),
    WW6 = Jb0();
  Cb0.DEFAULT_LOGGER_NAME = "unknown";
  class Vb0 {
    _shutdownOnce;
    _sharedState;
    constructor(A = {}) {
      let B = Fb0.merge({}, Xb0.loadDefaultConfig(), A),
        Q = A.resource ?? ZW6.defaultResource();
      this._sharedState = new WW6.LoggerProviderSharedState(Q, B.forceFlushTimeoutMillis, Xb0.reconfigureLimits(B.logRecordLimits)), this._shutdownOnce = new Fb0.BindOnceFuture(this._shutdown, this)
    }
    getLogger(A, B, Q) {
      if (this._shutdownOnce.isCalled) return Tr.diag.warn("A shutdown LoggerProvider cannot provide a Logger"), GW6.NOOP_LOGGER;
      if (!A) Tr.diag.warn("Logger requested without instrumentation scope name.");
      let I = A || Cb0.DEFAULT_LOGGER_NAME,
        G = `${I}@${B||""}:${Q?.schemaUrl||""}`;
      if (!this._sharedState.loggers.has(G)) this._sharedState.loggers.set(G, new DW6.Logger({
        name: I,
        version: B,
        schemaUrl: Q?.schemaUrl
      }, this._sharedState));
      return this._sharedState.loggers.get(G)
    }
    addLogRecordProcessor(A) {
      if (this._sharedState.registeredLogRecordProcessors.length === 0) this._sharedState.activeProcessor.shutdown().catch((B) => Tr.diag.error("Error while trying to shutdown current log record processor", B));
      this._sharedState.registeredLogRecordProcessors.push(A), this._sharedState.activeProcessor = new YW6.MultiLogRecordProcessor(this._sharedState.registeredLogRecordProcessors, this._sharedState.forceFlushTimeoutMillis)
    }
    forceFlush() {
      if (this._shutdownOnce.isCalled) return Tr.diag.warn("invalid attempt to force flush after LoggerProvider shutdown"), this._shutdownOnce.promise;
      return this._sharedState.activeProcessor.forceFlush()
    }
    shutdown() {
      if (this._shutdownOnce.isCalled) return Tr.diag.warn("shutdown may only be called once per LoggerProvider"), this._shutdownOnce.promise;
      return this._shutdownOnce.call()
    }
    _shutdown() {
      return this._sharedState.activeProcessor.shutdown()
    }
  }
  Cb0.LoggerProvider = Vb0
})
// @from(Start 5175693, End 5176701)
Nb0 = z((Eb0) => {
  Object.defineProperty(Eb0, "__esModule", {
    value: !0
  });
  Eb0.ConsoleLogRecordExporter = void 0;
  var JW6 = p8(),
    FW6 = p8();
  class wb0 {
    export (A, B) {
      this._sendLogRecords(A, B)
    }
    shutdown() {
      return Promise.resolve()
    }
    _exportInfo(A) {
      return {
        resource: {
          attributes: A.resource.attributes
        },
        instrumentationScope: A.instrumentationScope,
        timestamp: JW6.hrTimeToMicroseconds(A.hrTime),
        traceId: A.spanContext?.traceId,
        spanId: A.spanContext?.spanId,
        traceFlags: A.spanContext?.traceFlags,
        severityText: A.severityText,
        severityNumber: A.severityNumber,
        body: A.body,
        attributes: A.attributes
      }
    }
    _sendLogRecords(A, B) {
      for (let Q of A) console.dir(this._exportInfo(Q), {
        depth: 3
      });
      B?.({
        code: FW6.ExportResultCode.SUCCESS
      })
    }
  }
  Eb0.ConsoleLogRecordExporter = wb0
})
// @from(Start 5176707, End 5177957)
Lb0 = z((qb0) => {
  Object.defineProperty(qb0, "__esModule", {
    value: !0
  });
  qb0.SimpleLogRecordProcessor = void 0;
  var Nh = p8();
  class $b0 {
    _exporter;
    _shutdownOnce;
    _unresolvedExports;
    constructor(A) {
      this._exporter = A, this._shutdownOnce = new Nh.BindOnceFuture(this._shutdown, this), this._unresolvedExports = new Set
    }
    onEmit(A) {
      if (this._shutdownOnce.isCalled) return;
      let B = () => Nh.internal._export(this._exporter, [A]).then((Q) => {
        if (Q.code !== Nh.ExportResultCode.SUCCESS) Nh.globalErrorHandler(Q.error ?? new Error(`SimpleLogRecordProcessor: log record export failed (status ${Q})`))
      }).catch(Nh.globalErrorHandler);
      if (A.resource.asyncAttributesPending) {
        let Q = A.resource.waitForAsyncAttributes?.().then(() => {
          return this._unresolvedExports.delete(Q), B()
        }, Nh.globalErrorHandler);
        if (Q != null) this._unresolvedExports.add(Q)
      } else B()
    }
    async forceFlush() {
      await Promise.all(Array.from(this._unresolvedExports))
    }
    shutdown() {
      return this._shutdownOnce.call()
    }
    _shutdown() {
      return this._exporter.shutdown()
    }
  }
  qb0.SimpleLogRecordProcessor = $b0
})
// @from(Start 5177963, End 5178700)
Sb0 = z((Tb0) => {
  Object.defineProperty(Tb0, "__esModule", {
    value: !0
  });
  Tb0.InMemoryLogRecordExporter = void 0;
  var Rb0 = p8();
  class Ob0 {
    _finishedLogRecords = [];
    _stopped = !1;
    export (A, B) {
      if (this._stopped) return B({
        code: Rb0.ExportResultCode.FAILED,
        error: new Error("Exporter has been stopped")
      });
      this._finishedLogRecords.push(...A), B({
        code: Rb0.ExportResultCode.SUCCESS
      })
    }
    shutdown() {
      return this._stopped = !0, this.reset(), Promise.resolve()
    }
    getFinishedLogRecords() {
      return this._finishedLogRecords
    }
    reset() {
      this._finishedLogRecords = []
    }
  }
  Tb0.InMemoryLogRecordExporter = Ob0
})
// @from(Start 5178706, End 5182147)
kb0 = z((jb0) => {
  Object.defineProperty(jb0, "__esModule", {
    value: !0
  });
  jb0.BatchLogRecordProcessorBase = void 0;
  var VY1 = p8(),
    XW6 = s9(),
    fN = p8();
  class _b0 {
    _exporter;
    _maxExportBatchSize;
    _maxQueueSize;
    _scheduledDelayMillis;
    _exportTimeoutMillis;
    _finishedLogRecords = [];
    _timer;
    _shutdownOnce;
    constructor(A, B) {
      if (this._exporter = A, this._maxExportBatchSize = B?.maxExportBatchSize ?? VY1.getNumberFromEnv("OTEL_BLRP_MAX_EXPORT_BATCH_SIZE") ?? 512, this._maxQueueSize = B?.maxQueueSize ?? VY1.getNumberFromEnv("OTEL_BLRP_MAX_QUEUE_SIZE") ?? 2048, this._scheduledDelayMillis = B?.scheduledDelayMillis ?? VY1.getNumberFromEnv("OTEL_BLRP_SCHEDULE_DELAY") ?? 5000, this._exportTimeoutMillis = B?.exportTimeoutMillis ?? VY1.getNumberFromEnv("OTEL_BLRP_EXPORT_TIMEOUT") ?? 30000, this._shutdownOnce = new fN.BindOnceFuture(this._shutdown, this), this._maxExportBatchSize > this._maxQueueSize) XW6.diag.warn("BatchLogRecordProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize"), this._maxExportBatchSize = this._maxQueueSize
    }
    onEmit(A) {
      if (this._shutdownOnce.isCalled) return;
      this._addToBuffer(A)
    }
    forceFlush() {
      if (this._shutdownOnce.isCalled) return this._shutdownOnce.promise;
      return this._flushAll()
    }
    shutdown() {
      return this._shutdownOnce.call()
    }
    async _shutdown() {
      this.onShutdown(), await this._flushAll(), await this._exporter.shutdown()
    }
    _addToBuffer(A) {
      if (this._finishedLogRecords.length >= this._maxQueueSize) return;
      this._finishedLogRecords.push(A), this._maybeStartTimer()
    }
    _flushAll() {
      return new Promise((A, B) => {
        let Q = [],
          I = Math.ceil(this._finishedLogRecords.length / this._maxExportBatchSize);
        for (let G = 0; G < I; G++) Q.push(this._flushOneBatch());
        Promise.all(Q).then(() => {
          A()
        }).catch(B)
      })
    }
    _flushOneBatch() {
      if (this._clearTimer(), this._finishedLogRecords.length === 0) return Promise.resolve();
      return new Promise((A, B) => {
        fN.callWithTimeout(this._export(this._finishedLogRecords.splice(0, this._maxExportBatchSize)), this._exportTimeoutMillis).then(() => A()).catch(B)
      })
    }
    _maybeStartTimer() {
      if (this._timer !== void 0) return;
      this._timer = setTimeout(() => {
        this._flushOneBatch().then(() => {
          if (this._finishedLogRecords.length > 0) this._clearTimer(), this._maybeStartTimer()
        }).catch((A) => {
          fN.globalErrorHandler(A)
        })
      }, this._scheduledDelayMillis), fN.unrefTimer(this._timer)
    }
    _clearTimer() {
      if (this._timer !== void 0) clearTimeout(this._timer), this._timer = void 0
    }
    _export(A) {
      let B = () => fN.internal._export(this._exporter, A).then((I) => {
          if (I.code !== fN.ExportResultCode.SUCCESS) fN.globalErrorHandler(I.error ?? new Error(`BatchLogRecordProcessor: log record export failed (status ${I})`))
        }).catch(fN.globalErrorHandler),
        Q = A.map((I) => I.resource).filter((I) => I.asyncAttributesPending);
      if (Q.length === 0) return B();
      else return Promise.all(Q.map((I) => I.waitForAsyncAttributes?.())).then(B, fN.globalErrorHandler)
    }
  }
  jb0.BatchLogRecordProcessorBase = _b0
})
// @from(Start 5182153, End 5182412)
bb0 = z((fb0) => {
  Object.defineProperty(fb0, "__esModule", {
    value: !0
  });
  fb0.BatchLogRecordProcessor = void 0;
  var VW6 = kb0();
  class xb0 extends VW6.BatchLogRecordProcessorBase {
    onShutdown() {}
  }
  fb0.BatchLogRecordProcessor = xb0
})
// @from(Start 5182418, End 5182715)
gb0 = z((ld1) => {
  Object.defineProperty(ld1, "__esModule", {
    value: !0
  });
  ld1.BatchLogRecordProcessor = void 0;
  var CW6 = bb0();
  Object.defineProperty(ld1, "BatchLogRecordProcessor", {
    enumerable: !0,
    get: function() {
      return CW6.BatchLogRecordProcessor
    }
  })
})
// @from(Start 5182721, End 5183018)
hb0 = z((id1) => {
  Object.defineProperty(id1, "__esModule", {
    value: !0
  });
  id1.BatchLogRecordProcessor = void 0;
  var HW6 = gb0();
  Object.defineProperty(id1, "BatchLogRecordProcessor", {
    enumerable: !0,
    get: function() {
      return HW6.BatchLogRecordProcessor
    }
  })
})
// @from(Start 5183024, End 5184457)
mb0 = z((vN) => {
  Object.defineProperty(vN, "__esModule", {
    value: !0
  });
  vN.BatchLogRecordProcessor = vN.InMemoryLogRecordExporter = vN.SimpleLogRecordProcessor = vN.ConsoleLogRecordExporter = vN.NoopLogRecordProcessor = vN.LogRecord = vN.LoggerProvider = void 0;
  var wW6 = zb0();
  Object.defineProperty(vN, "LoggerProvider", {
    enumerable: !0,
    get: function() {
      return wW6.LoggerProvider
    }
  });
  var EW6 = pd1();
  Object.defineProperty(vN, "LogRecord", {
    enumerable: !0,
    get: function() {
      return EW6.LogRecord
    }
  });
  var UW6 = cd1();
  Object.defineProperty(vN, "NoopLogRecordProcessor", {
    enumerable: !0,
    get: function() {
      return UW6.NoopLogRecordProcessor
    }
  });
  var NW6 = Nb0();
  Object.defineProperty(vN, "ConsoleLogRecordExporter", {
    enumerable: !0,
    get: function() {
      return NW6.ConsoleLogRecordExporter
    }
  });
  var $W6 = Lb0();
  Object.defineProperty(vN, "SimpleLogRecordProcessor", {
    enumerable: !0,
    get: function() {
      return $W6.SimpleLogRecordProcessor
    }
  });
  var qW6 = Sb0();
  Object.defineProperty(vN, "InMemoryLogRecordExporter", {
    enumerable: !0,
    get: function() {
      return qW6.InMemoryLogRecordExporter
    }
  });
  var MW6 = hb0();
  Object.defineProperty(vN, "BatchLogRecordProcessor", {
    enumerable: !0,
    get: function() {
      return MW6.BatchLogRecordProcessor
    }
  })
})
// @from(Start 5184463, End 5184599)
pb0 = z((db0) => {
  Object.defineProperty(db0, "__esModule", {
    value: !0
  });
  db0.VERSION = void 0;
  db0.VERSION = "0.200.0"
})
// @from(Start 5184605, End 5185153)
ab0 = z((ib0) => {
  Object.defineProperty(ib0, "__esModule", {
    value: !0
  });
  ib0.OTLPLogExporter = void 0;
  var RW6 = p_(),
    OW6 = i_(),
    cb0 = ug(),
    TW6 = pb0();
  class lb0 extends RW6.OTLPExporterBase {
    constructor(A = {}) {
      super(cb0.createOtlpHttpExportDelegate(cb0.convertLegacyHttpOptions(A, "LOGS", "v1/logs", {
        "User-Agent": `OTel-OTLP-Exporter-JavaScript/${TW6.VERSION}`,
        "Content-Type": "application/x-protobuf"
      }), OW6.ProtobufLogsSerializer))
    }
  }
  ib0.OTLPLogExporter = lb0
})
// @from(Start 5185159, End 5185432)
sb0 = z((nd1) => {
  Object.defineProperty(nd1, "__esModule", {
    value: !0
  });
  nd1.OTLPLogExporter = void 0;
  var PW6 = ab0();
  Object.defineProperty(nd1, "OTLPLogExporter", {
    enumerable: !0,
    get: function() {
      return PW6.OTLPLogExporter
    }
  })
})
// @from(Start 5185438, End 5185711)
rb0 = z((ad1) => {
  Object.defineProperty(ad1, "__esModule", {
    value: !0
  });
  ad1.OTLPLogExporter = void 0;
  var _W6 = sb0();
  Object.defineProperty(ad1, "OTLPLogExporter", {
    enumerable: !0,
    get: function() {
      return _W6.OTLPLogExporter
    }
  })
})
// @from(Start 5185717, End 5185990)
ob0 = z((sd1) => {
  Object.defineProperty(sd1, "__esModule", {
    value: !0
  });
  sd1.OTLPLogExporter = void 0;
  var yW6 = rb0();
  Object.defineProperty(sd1, "OTLPLogExporter", {
    enumerable: !0,
    get: function() {
      return yW6.OTLPLogExporter
    }
  })
})
// @from(Start 5185996, End 5186473)
Qg0 = z((Ag0) => {
  Object.defineProperty(Ag0, "__esModule", {
    value: !0
  });
  Ag0.OTLPLogExporter = void 0;
  var tb0 = bd1(),
    xW6 = i_(),
    fW6 = p_();
  class eb0 extends fW6.OTLPExporterBase {
    constructor(A = {}) {
      super(tb0.createOtlpGrpcExportDelegate(tb0.convertLegacyOtlpGrpcOptions(A, "LOGS"), xW6.ProtobufLogsSerializer, "LogsExportService", "/opentelemetry.proto.collector.logs.v1.LogsService/Export"))
    }
  }
  Ag0.OTLPLogExporter = eb0
})
// @from(Start 5186479, End 5186752)
Ig0 = z((rd1) => {
  Object.defineProperty(rd1, "__esModule", {
    value: !0
  });
  rd1.OTLPLogExporter = void 0;
  var vW6 = Qg0();
  Object.defineProperty(rd1, "OTLPLogExporter", {
    enumerable: !0,
    get: function() {
      return vW6.OTLPLogExporter
    }
  })
})
// @from(Start 5186758, End 5186894)
Dg0 = z((Gg0) => {
  Object.defineProperty(Gg0, "__esModule", {
    value: !0
  });
  Gg0.VERSION = void 0;
  Gg0.VERSION = "0.200.0"
})
// @from(Start 5186900, End 5187438)
Xg0 = z((Jg0) => {
  Object.defineProperty(Jg0, "__esModule", {
    value: !0
  });
  Jg0.OTLPLogExporter = void 0;
  var gW6 = p_(),
    hW6 = i_(),
    mW6 = Dg0(),
    Yg0 = ug();
  class Wg0 extends gW6.OTLPExporterBase {
    constructor(A = {}) {
      super(Yg0.createOtlpHttpExportDelegate(Yg0.convertLegacyHttpOptions(A, "LOGS", "v1/logs", {
        "User-Agent": `OTel-OTLP-Exporter-JavaScript/${mW6.VERSION}`,
        "Content-Type": "application/json"
      }), hW6.JsonLogsSerializer))
    }
  }
  Jg0.OTLPLogExporter = Wg0
})
// @from(Start 5187444, End 5187717)
Vg0 = z((od1) => {
  Object.defineProperty(od1, "__esModule", {
    value: !0
  });
  od1.OTLPLogExporter = void 0;
  var dW6 = Xg0();
  Object.defineProperty(od1, "OTLPLogExporter", {
    enumerable: !0,
    get: function() {
      return dW6.OTLPLogExporter
    }
  })
})
// @from(Start 5187723, End 5187996)
Cg0 = z((td1) => {
  Object.defineProperty(td1, "__esModule", {
    value: !0
  });
  td1.OTLPLogExporter = void 0;
  var pW6 = Vg0();
  Object.defineProperty(td1, "OTLPLogExporter", {
    enumerable: !0,
    get: function() {
      return pW6.OTLPLogExporter
    }
  })
})
// @from(Start 5188002, End 5188275)
Kg0 = z((ed1) => {
  Object.defineProperty(ed1, "__esModule", {
    value: !0
  });
  ed1.OTLPLogExporter = void 0;
  var lW6 = Cg0();
  Object.defineProperty(ed1, "OTLPLogExporter", {
    enumerable: !0,
    get: function() {
      return lW6.OTLPLogExporter
    }
  })
})
// @from(Start 5188281, End 5190096)
Tg0 = z((iY) => {
  var BJ6 = iY && iY.__createBinding || (Object.create ? function(A, B, Q, I) {
      if (I === void 0) I = Q;
      var G = Object.getOwnPropertyDescriptor(B, Q);
      if (!G || ("get" in G ? !B.__esModule : G.writable || G.configurable)) G = {
        enumerable: !0,
        get: function() {
          return B[Q]
        }
      };
      Object.defineProperty(A, I, G)
    } : function(A, B, Q, I) {
      if (I === void 0) I = Q;
      A[I] = B[Q]
    }),
    QJ6 = iY && iY.__setModuleDefault || (Object.create ? function(A, B) {
      Object.defineProperty(A, "default", {
        enumerable: !0,
        value: B
      })
    } : function(A, B) {
      A.default = B
    }),
    Rg0 = iY && iY.__importStar || function(A) {
      if (A && A.__esModule) return A;
      var B = {};
      if (A != null) {
        for (var Q in A)
          if (Q !== "default" && Object.prototype.hasOwnProperty.call(A, Q)) BJ6(B, A, Q)
      }
      return QJ6(B, A), B
    };
  Object.defineProperty(iY, "__esModule", {
    value: !0
  });
  iY.req = iY.json = iY.toBuffer = void 0;
  var IJ6 = Rg0(Z1("http")),
    GJ6 = Rg0(Z1("https"));
  async function Og0(A) {
    let B = 0,
      Q = [];
    for await (let I of A) B += I.length, Q.push(I);
    return Buffer.concat(Q, B)
  }
  iY.toBuffer = Og0;
  async function ZJ6(A) {
    let Q = (await Og0(A)).toString("utf8");
    try {
      return JSON.parse(Q)
    } catch (I) {
      let G = I;
      throw G.message += ` (input: ${Q})`, G
    }
  }
  iY.json = ZJ6;

  function DJ6(A, B = {}) {
    let I = ((typeof A === "string" ? A : A.href).startsWith("https:") ? GJ6 : IJ6).request(A, B),
      G = new Promise((Z, D) => {
        I.once("response", Z).once("error", D).end()
      });
    return I.then = G.then.bind(G), I
  }
  iY.req = DJ6
})
// @from(Start 5190102, End 5193886)
yg0 = z((qJ) => {
  var Sg0 = qJ && qJ.__createBinding || (Object.create ? function(A, B, Q, I) {
      if (I === void 0) I = Q;
      var G = Object.getOwnPropertyDescriptor(B, Q);
      if (!G || ("get" in G ? !B.__esModule : G.writable || G.configurable)) G = {
        enumerable: !0,
        get: function() {
          return B[Q]
        }
      };
      Object.defineProperty(A, I, G)
    } : function(A, B, Q, I) {
      if (I === void 0) I = Q;
      A[I] = B[Q]
    }),
    YJ6 = qJ && qJ.__setModuleDefault || (Object.create ? function(A, B) {
      Object.defineProperty(A, "default", {
        enumerable: !0,
        value: B
      })
    } : function(A, B) {
      A.default = B
    }),
    _g0 = qJ && qJ.__importStar || function(A) {
      if (A && A.__esModule) return A;
      var B = {};
      if (A != null) {
        for (var Q in A)
          if (Q !== "default" && Object.prototype.hasOwnProperty.call(A, Q)) Sg0(B, A, Q)
      }
      return YJ6(B, A), B
    },
    WJ6 = qJ && qJ.__exportStar || function(A, B) {
      for (var Q in A)
        if (Q !== "default" && !Object.prototype.hasOwnProperty.call(B, Q)) Sg0(B, A, Q)
    };
  Object.defineProperty(qJ, "__esModule", {
    value: !0
  });
  qJ.Agent = void 0;
  var JJ6 = _g0(Z1("net")),
    Pg0 = _g0(Z1("http")),
    FJ6 = Z1("https");
  WJ6(Tg0(), qJ);
  var Ew = Symbol("AgentBaseInternalState");
  class jg0 extends Pg0.Agent {
    constructor(A) {
      super(A);
      this[Ew] = {}
    }
    isSecureEndpoint(A) {
      if (A) {
        if (typeof A.secureEndpoint === "boolean") return A.secureEndpoint;
        if (typeof A.protocol === "string") return A.protocol === "https:"
      }
      let {
        stack: B
      } = new Error;
      if (typeof B !== "string") return !1;
      return B.split(`
`).some((Q) => Q.indexOf("(https.js:") !== -1 || Q.indexOf("node:https:") !== -1)
    }
    incrementSockets(A) {
      if (this.maxSockets === 1 / 0 && this.maxTotalSockets === 1 / 0) return null;
      if (!this.sockets[A]) this.sockets[A] = [];
      let B = new JJ6.Socket({
        writable: !1
      });
      return this.sockets[A].push(B), this.totalSocketCount++, B
    }
    decrementSockets(A, B) {
      if (!this.sockets[A] || B === null) return;
      let Q = this.sockets[A],
        I = Q.indexOf(B);
      if (I !== -1) {
        if (Q.splice(I, 1), this.totalSocketCount--, Q.length === 0) delete this.sockets[A]
      }
    }
    getName(A) {
      if (typeof A.secureEndpoint === "boolean" ? A.secureEndpoint : this.isSecureEndpoint(A)) return FJ6.Agent.prototype.getName.call(this, A);
      return super.getName(A)
    }
    createSocket(A, B, Q) {
      let I = {
          ...B,
          secureEndpoint: this.isSecureEndpoint(B)
        },
        G = this.getName(I),
        Z = this.incrementSockets(G);
      Promise.resolve().then(() => this.connect(A, I)).then((D) => {
        if (this.decrementSockets(G, Z), D instanceof Pg0.Agent) try {
          return D.addRequest(A, I)
        } catch (Y) {
          return Q(Y)
        }
        this[Ew].currentSocket = D, super.createSocket(A, B, Q)
      }, (D) => {
        this.decrementSockets(G, Z), Q(D)
      })
    }
    createConnection() {
      let A = this[Ew].currentSocket;
      if (this[Ew].currentSocket = void 0, !A) throw new Error("No socket was returned in the `connect()` function");
      return A
    }
    get defaultPort() {
      return this[Ew].defaultPort ?? (this.protocol === "https:" ? 443 : 80)
    }
    set defaultPort(A) {
      if (this[Ew]) this[Ew].defaultPort = A
    }
    get protocol() {
      return this[Ew].protocol ?? (this.isSecureEndpoint() ? "https:" : "http:")
    }
    set protocol(A) {
      if (this[Ew]) this[Ew].protocol = A
    }
  }
  qJ.Agent = jg0
})
// @from(Start 5193892, End 5196036)
kg0 = z((qh) => {
  var XJ6 = qh && qh.__importDefault || function(A) {
    return A && A.__esModule ? A : {
      default: A
    }
  };
  Object.defineProperty(qh, "__esModule", {
    value: !0
  });
  qh.parseProxyResponse = void 0;
  var VJ6 = XJ6(_l()),
    EY1 = VJ6.default("https-proxy-agent:parse-proxy-response");

  function CJ6(A) {
    return new Promise((B, Q) => {
      let I = 0,
        G = [];

      function Z() {
        let F = A.read();
        if (F) J(F);
        else A.once("readable", Z)
      }

      function D() {
        A.removeListener("end", Y), A.removeListener("error", W), A.removeListener("readable", Z)
      }

      function Y() {
        D(), EY1("onend"), Q(new Error("Proxy connection ended before receiving CONNECT response"))
      }

      function W(F) {
        D(), EY1("onerror %o", F), Q(F)
      }

      function J(F) {
        G.push(F), I += F.length;
        let X = Buffer.concat(G, I),
          V = X.indexOf(`\r
\r
`);
        if (V === -1) {
          EY1("have not received end of HTTP headers yet..."), Z();
          return
        }
        let C = X.slice(0, V).toString("ascii").split(`\r
`),
          K = C.shift();
        if (!K) return A.destroy(), Q(new Error("No header received from proxy CONNECT response"));
        let E = K.split(" "),
          N = +E[1],
          q = E.slice(2).join(" "),
          O = {};
        for (let R of C) {
          if (!R) continue;
          let T = R.indexOf(":");
          if (T === -1) return A.destroy(), Q(new Error(`Invalid header from proxy CONNECT response: "${R}"`));
          let L = R.slice(0, T).toLowerCase(),
            _ = R.slice(T + 1).trimStart(),
            k = O[L];
          if (typeof k === "string") O[L] = [k, _];
          else if (Array.isArray(k)) k.push(_);
          else O[L] = _
        }
        EY1("got proxy server response: %o %o", K, O), D(), B({
          connect: {
            statusCode: N,
            statusText: q,
            headers: O
          },
          buffered: X
        })
      }
      A.on("error", W), A.on("end", Y), Z()
    })
  }
  qh.parseProxyResponse = CJ6
})
// @from(Start 5196042, End 5200210)
Du1 = z((xX) => {
  var KJ6 = xX && xX.__createBinding || (Object.create ? function(A, B, Q, I) {
      if (I === void 0) I = Q;
      var G = Object.getOwnPropertyDescriptor(B, Q);
      if (!G || ("get" in G ? !B.__esModule : G.writable || G.configurable)) G = {
        enumerable: !0,
        get: function() {
          return B[Q]
        }
      };
      Object.defineProperty(A, I, G)
    } : function(A, B, Q, I) {
      if (I === void 0) I = Q;
      A[I] = B[Q]
    }),
    HJ6 = xX && xX.__setModuleDefault || (Object.create ? function(A, B) {
      Object.defineProperty(A, "default", {
        enumerable: !0,
        value: B
      })
    } : function(A, B) {
      A.default = B
    }),
    bg0 = xX && xX.__importStar || function(A) {
      if (A && A.__esModule) return A;
      var B = {};
      if (A != null) {
        for (var Q in A)
          if (Q !== "default" && Object.prototype.hasOwnProperty.call(A, Q)) KJ6(B, A, Q)
      }
      return HJ6(B, A), B
    },
    gg0 = xX && xX.__importDefault || function(A) {
      return A && A.__esModule ? A : {
        default: A
      }
    };
  Object.defineProperty(xX, "__esModule", {
    value: !0
  });
  xX.HttpsProxyAgent = void 0;
  var UY1 = bg0(Z1("net")),
    xg0 = bg0(Z1("tls")),
    zJ6 = gg0(Z1("assert")),
    wJ6 = gg0(_l()),
    EJ6 = yg0(),
    UJ6 = Z1("url"),
    NJ6 = kg0(),
    _r = wJ6.default("https-proxy-agent"),
    fg0 = (A) => {
      if (A.servername === void 0 && A.host && !UY1.isIP(A.host)) return {
        ...A,
        servername: A.host
      };
      return A
    };
  class Zu1 extends EJ6.Agent {
    constructor(A, B) {
      super(B);
      this.options = {
        path: void 0
      }, this.proxy = typeof A === "string" ? new UJ6.URL(A) : A, this.proxyHeaders = B?.headers ?? {}, _r("Creating new HttpsProxyAgent instance: %o", this.proxy.href);
      let Q = (this.proxy.hostname || this.proxy.host).replace(/^\[|\]$/g, ""),
        I = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === "https:" ? 443 : 80;
      this.connectOpts = {
        ALPNProtocols: ["http/1.1"],
        ...B ? vg0(B, "headers") : null,
        host: Q,
        port: I
      }
    }
    async connect(A, B) {
      let {
        proxy: Q
      } = this;
      if (!B.host) throw new TypeError('No "host" provided');
      let I;
      if (Q.protocol === "https:") _r("Creating `tls.Socket`: %o", this.connectOpts), I = xg0.connect(fg0(this.connectOpts));
      else _r("Creating `net.Socket`: %o", this.connectOpts), I = UY1.connect(this.connectOpts);
      let G = typeof this.proxyHeaders === "function" ? this.proxyHeaders() : {
          ...this.proxyHeaders
        },
        Z = UY1.isIPv6(B.host) ? `[${B.host}]` : B.host,
        D = `CONNECT ${Z}:${B.port} HTTP/1.1\r
`;
      if (Q.username || Q.password) {
        let X = `${decodeURIComponent(Q.username)}:${decodeURIComponent(Q.password)}`;
        G["Proxy-Authorization"] = `Basic ${Buffer.from(X).toString("base64")}`
      }
      if (G.Host = `${Z}:${B.port}`, !G["Proxy-Connection"]) G["Proxy-Connection"] = this.keepAlive ? "Keep-Alive" : "close";
      for (let X of Object.keys(G)) D += `${X}: ${G[X]}\r
`;
      let Y = NJ6.parseProxyResponse(I);
      I.write(`${D}\r
`);
      let {
        connect: W,
        buffered: J
      } = await Y;
      if (A.emit("proxyConnect", W), this.emit("proxyConnect", W, A), W.statusCode === 200) {
        if (A.once("socket", $J6), B.secureEndpoint) return _r("Upgrading socket connection to TLS"), xg0.connect({
          ...vg0(fg0(B), "host", "path", "port"),
          socket: I
        });
        return I
      }
      I.destroy();
      let F = new UY1.Socket({
        writable: !1
      });
      return F.readable = !0, A.once("socket", (X) => {
        _r("Replaying proxy buffer for failed request"), zJ6.default(X.listenerCount("data") > 0), X.push(J), X.push(null)
      }), F
    }
  }
  Zu1.protocols = ["http", "https"];
  xX.HttpsProxyAgent = Zu1;

  function $J6(A) {
    A.resume()
  }

  function vg0(A, ...B) {
    let Q = {},
      I;
    for (I in A)
      if (!B.includes(I)) Q[I] = A[I];
    return Q
  }
})
// @from(Start 5200216, End 5202919)
A3 = z((HR8, hg0) => {
  hg0.exports = {
    kClose: Symbol("close"),
    kDestroy: Symbol("destroy"),
    kDispatch: Symbol("dispatch"),
    kUrl: Symbol("url"),
    kWriting: Symbol("writing"),
    kResuming: Symbol("resuming"),
    kQueue: Symbol("queue"),
    kConnect: Symbol("connect"),
    kConnecting: Symbol("connecting"),
    kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),
    kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),
    kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),
    kKeepAliveTimeoutValue: Symbol("keep alive timeout"),
    kKeepAlive: Symbol("keep alive"),
    kHeadersTimeout: Symbol("headers timeout"),
    kBodyTimeout: Symbol("body timeout"),
    kServerName: Symbol("server name"),
    kLocalAddress: Symbol("local address"),
    kHost: Symbol("host"),
    kNoRef: Symbol("no ref"),
    kBodyUsed: Symbol("used"),
    kBody: Symbol("abstracted request body"),
    kRunning: Symbol("running"),
    kBlocking: Symbol("blocking"),
    kPending: Symbol("pending"),
    kSize: Symbol("size"),
    kBusy: Symbol("busy"),
    kQueued: Symbol("queued"),
    kFree: Symbol("free"),
    kConnected: Symbol("connected"),
    kClosed: Symbol("closed"),
    kNeedDrain: Symbol("need drain"),
    kReset: Symbol("reset"),
    kDestroyed: Symbol.for("nodejs.stream.destroyed"),
    kResume: Symbol("resume"),
    kOnError: Symbol("on error"),
    kMaxHeadersSize: Symbol("max headers size"),
    kRunningIdx: Symbol("running index"),
    kPendingIdx: Symbol("pending index"),
    kError: Symbol("error"),
    kClients: Symbol("clients"),
    kClient: Symbol("client"),
    kParser: Symbol("parser"),
    kOnDestroyed: Symbol("destroy callbacks"),
    kPipelining: Symbol("pipelining"),
    kSocket: Symbol("socket"),
    kHostHeader: Symbol("host header"),
    kConnector: Symbol("connector"),
    kStrictContentLength: Symbol("strict content length"),
    kMaxRedirections: Symbol("maxRedirections"),
    kMaxRequests: Symbol("maxRequestsPerClient"),
    kProxy: Symbol("proxy agent options"),
    kCounter: Symbol("socket request counter"),
    kInterceptors: Symbol("dispatch interceptors"),
    kMaxResponseSize: Symbol("max response size"),
    kHTTP2Session: Symbol("http2Session"),
    kHTTP2SessionState: Symbol("http2Session state"),
    kRetryHandlerDefaultRetry: Symbol("retry agent default retry"),
    kConstruct: Symbol("constructable"),
    kListeners: Symbol("listeners"),
    kHTTPContext: Symbol("http context"),
    kMaxConcurrentStreams: Symbol("max concurrent streams"),
    kNoProxyAgent: Symbol("no proxy agent"),
    kHttpProxyAgent: Symbol("http proxy agent"),
    kHttpsProxyAgent: Symbol("https proxy agent")
  }
})
// @from(Start 5202925, End 5208542)
u5 = z((zR8, Yh0) => {
  class l3 extends Error {
    constructor(A) {
      super(A);
      this.name = "UndiciError", this.code = "UND_ERR"
    }
  }
  class mg0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "ConnectTimeoutError", this.message = A || "Connect Timeout Error", this.code = "UND_ERR_CONNECT_TIMEOUT"
    }
  }
  class dg0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "HeadersTimeoutError", this.message = A || "Headers Timeout Error", this.code = "UND_ERR_HEADERS_TIMEOUT"
    }
  }
  class ug0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "HeadersOverflowError", this.message = A || "Headers Overflow Error", this.code = "UND_ERR_HEADERS_OVERFLOW"
    }
  }
  class pg0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "BodyTimeoutError", this.message = A || "Body Timeout Error", this.code = "UND_ERR_BODY_TIMEOUT"
    }
  }
  class cg0 extends l3 {
    constructor(A, B, Q, I) {
      super(A);
      this.name = "ResponseStatusCodeError", this.message = A || "Response Status Code Error", this.code = "UND_ERR_RESPONSE_STATUS_CODE", this.body = I, this.status = B, this.statusCode = B, this.headers = Q
    }
  }
  class lg0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "InvalidArgumentError", this.message = A || "Invalid Argument Error", this.code = "UND_ERR_INVALID_ARG"
    }
  }
  class ig0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "InvalidReturnValueError", this.message = A || "Invalid Return Value Error", this.code = "UND_ERR_INVALID_RETURN_VALUE"
    }
  }
  class Yu1 extends l3 {
    constructor(A) {
      super(A);
      this.name = "AbortError", this.message = A || "The operation was aborted"
    }
  }
  class ng0 extends Yu1 {
    constructor(A) {
      super(A);
      this.name = "AbortError", this.message = A || "Request aborted", this.code = "UND_ERR_ABORTED"
    }
  }
  class ag0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "InformationalError", this.message = A || "Request information", this.code = "UND_ERR_INFO"
    }
  }
  class sg0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "RequestContentLengthMismatchError", this.message = A || "Request body length does not match content-length header", this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH"
    }
  }
  class rg0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "ResponseContentLengthMismatchError", this.message = A || "Response body length does not match content-length header", this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH"
    }
  }
  class og0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "ClientDestroyedError", this.message = A || "The client is destroyed", this.code = "UND_ERR_DESTROYED"
    }
  }
  class tg0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "ClientClosedError", this.message = A || "The client is closed", this.code = "UND_ERR_CLOSED"
    }
  }
  class eg0 extends l3 {
    constructor(A, B) {
      super(A);
      this.name = "SocketError", this.message = A || "Socket error", this.code = "UND_ERR_SOCKET", this.socket = B
    }
  }
  class Ah0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "NotSupportedError", this.message = A || "Not supported error", this.code = "UND_ERR_NOT_SUPPORTED"
    }
  }
  class Bh0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "MissingUpstreamError", this.message = A || "No upstream has been added to the BalancedPool", this.code = "UND_ERR_BPL_MISSING_UPSTREAM"
    }
  }
  class Qh0 extends Error {
    constructor(A, B, Q) {
      super(A);
      this.name = "HTTPParserError", this.code = B ? `HPE_${B}` : void 0, this.data = Q ? Q.toString() : void 0
    }
  }
  class Ih0 extends l3 {
    constructor(A) {
      super(A);
      this.name = "ResponseExceededMaxSizeError", this.message = A || "Response content exceeded max size", this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE"
    }
  }
  class Gh0 extends l3 {
    constructor(A, B, {
      headers: Q,
      data: I
    }) {
      super(A);
      this.name = "RequestRetryError", this.message = A || "Request retry error", this.code = "UND_ERR_REQ_RETRY", this.statusCode = B, this.data = I, this.headers = Q
    }
  }
  class Zh0 extends l3 {
    constructor(A, B, {
      headers: Q,
      data: I
    }) {
      super(A);
      this.name = "ResponseError", this.message = A || "Response error", this.code = "UND_ERR_RESPONSE", this.statusCode = B, this.data = I, this.headers = Q
    }
  }
  class Dh0 extends l3 {
    constructor(A, B, Q) {
      super(B, {
        cause: A,
        ...Q ?? {}
      });
      this.name = "SecureProxyConnectionError", this.message = B || "Secure Proxy Connection failed", this.code = "UND_ERR_PRX_TLS", this.cause = A
    }
  }
  Yh0.exports = {
    AbortError: Yu1,
    HTTPParserError: Qh0,
    UndiciError: l3,
    HeadersTimeoutError: dg0,
    HeadersOverflowError: ug0,
    BodyTimeoutError: pg0,
    RequestContentLengthMismatchError: sg0,
    ConnectTimeoutError: mg0,
    ResponseStatusCodeError: cg0,
    InvalidArgumentError: lg0,
    InvalidReturnValueError: ig0,
    RequestAbortedError: ng0,
    ClientDestroyedError: og0,
    ClientClosedError: tg0,
    InformationalError: ag0,
    SocketError: eg0,
    NotSupportedError: Ah0,
    ResponseContentLengthMismatchError: rg0,
    BalancedPoolMissingUpstreamError: Bh0,
    ResponseExceededMaxSizeError: Ih0,
    RequestRetryError: Gh0,
    ResponseError: Zh0,
    SecureProxyConnectionError: Dh0
  }
})
// @from(Start 5208548, End 5210610)
$Y1 = z((wR8, Wh0) => {
  var NY1 = {},
    Wu1 = ["Accept", "Accept-Encoding", "Accept-Language", "Accept-Ranges", "Access-Control-Allow-Credentials", "Access-Control-Allow-Headers", "Access-Control-Allow-Methods", "Access-Control-Allow-Origin", "Access-Control-Expose-Headers", "Access-Control-Max-Age", "Access-Control-Request-Headers", "Access-Control-Request-Method", "Age", "Allow", "Alt-Svc", "Alt-Used", "Authorization", "Cache-Control", "Clear-Site-Data", "Connection", "Content-Disposition", "Content-Encoding", "Content-Language", "Content-Length", "Content-Location", "Content-Range", "Content-Security-Policy", "Content-Security-Policy-Report-Only", "Content-Type", "Cookie", "Cross-Origin-Embedder-Policy", "Cross-Origin-Opener-Policy", "Cross-Origin-Resource-Policy", "Date", "Device-Memory", "Downlink", "ECT", "ETag", "Expect", "Expect-CT", "Expires", "Forwarded", "From", "Host", "If-Match", "If-Modified-Since", "If-None-Match", "If-Range", "If-Unmodified-Since", "Keep-Alive", "Last-Modified", "Link", "Location", "Max-Forwards", "Origin", "Permissions-Policy", "Pragma", "Proxy-Authenticate", "Proxy-Authorization", "RTT", "Range", "Referer", "Referrer-Policy", "Refresh", "Retry-After", "Sec-WebSocket-Accept", "Sec-WebSocket-Extensions", "Sec-WebSocket-Key", "Sec-WebSocket-Protocol", "Sec-WebSocket-Version", "Server", "Server-Timing", "Service-Worker-Allowed", "Service-Worker-Navigation-Preload", "Set-Cookie", "SourceMap", "Strict-Transport-Security", "Supports-Loading-Mode", "TE", "Timing-Allow-Origin", "Trailer", "Transfer-Encoding", "Upgrade", "Upgrade-Insecure-Requests", "User-Agent", "Vary", "Via", "WWW-Authenticate", "X-Content-Type-Options", "X-DNS-Prefetch-Control", "X-Frame-Options", "X-Permitted-Cross-Domain-Policies", "X-Powered-By", "X-Requested-With", "X-XSS-Protection"];
  for (let A = 0; A < Wu1.length; ++A) {
    let B = Wu1[A],
      Q = B.toLowerCase();
    NY1[B] = NY1[Q] = Q
  }
  Object.setPrototypeOf(NY1, null);
  Wh0.exports = {
    wellknownHeaderNames: Wu1,
    headerNameLowerCasedRecord: NY1
  }
})
// @from(Start 5210616, End 5212697)
Vh0 = z((ER8, Xh0) => {
  var {
    wellknownHeaderNames: Jh0,
    headerNameLowerCasedRecord: qJ6
  } = $Y1();
  class Mh {
    value = null;
    left = null;
    middle = null;
    right = null;
    code;
    constructor(A, B, Q) {
      if (Q === void 0 || Q >= A.length) throw new TypeError("Unreachable");
      if ((this.code = A.charCodeAt(Q)) > 127) throw new TypeError("key must be ascii string");
      if (A.length !== ++Q) this.middle = new Mh(A, B, Q);
      else this.value = B
    }
    add(A, B) {
      let Q = A.length;
      if (Q === 0) throw new TypeError("Unreachable");
      let I = 0,
        G = this;
      while (!0) {
        let Z = A.charCodeAt(I);
        if (Z > 127) throw new TypeError("key must be ascii string");
        if (G.code === Z)
          if (Q === ++I) {
            G.value = B;
            break
          } else if (G.middle !== null) G = G.middle;
        else {
          G.middle = new Mh(A, B, I);
          break
        } else if (G.code < Z)
          if (G.left !== null) G = G.left;
          else {
            G.left = new Mh(A, B, I);
            break
          }
        else if (G.right !== null) G = G.right;
        else {
          G.right = new Mh(A, B, I);
          break
        }
      }
    }
    search(A) {
      let B = A.length,
        Q = 0,
        I = this;
      while (I !== null && Q < B) {
        let G = A[Q];
        if (G <= 90 && G >= 65) G |= 32;
        while (I !== null) {
          if (G === I.code) {
            if (B === ++Q) return I;
            I = I.middle;
            break
          }
          I = I.code < G ? I.left : I.right
        }
      }
      return null
    }
  }
  class Ju1 {
    node = null;
    insert(A, B) {
      if (this.node === null) this.node = new Mh(A, B, 0);
      else this.node.add(A, B)
    }
    lookup(A) {
      return this.node?.search(A)?.value ?? null
    }
  }
  var Fh0 = new Ju1;
  for (let A = 0; A < Jh0.length; ++A) {
    let B = qJ6[Jh0[A]];
    Fh0.insert(B, B)
  }
  Xh0.exports = {
    TernarySearchTree: Ju1,
    tree: Fh0
  }
})
// @from(Start 5212703, End 5225649)
C6 = z((UR8, Ph0) => {
  var jr = Z1("node:assert"),
    {
      kDestroyed: Kh0,
      kBodyUsed: Lh,
      kListeners: Fu1,
      kBody: Ch0
    } = A3(),
    {
      IncomingMessage: MJ6
    } = Z1("node:http"),
    MY1 = Z1("node:stream"),
    LJ6 = Z1("node:net"),
    {
      Blob: RJ6
    } = Z1("node:buffer"),
    OJ6 = Z1("node:util"),
    {
      stringify: TJ6
    } = Z1("node:querystring"),
    {
      EventEmitter: PJ6
    } = Z1("node:events"),
    {
      InvalidArgumentError: TI
    } = u5(),
    {
      headerNameLowerCasedRecord: SJ6
    } = $Y1(),
    {
      tree: Hh0
    } = Vh0(),
    [_J6, jJ6] = process.versions.node.split(".").map((A) => Number(A));
  class Xu1 {
    constructor(A) {
      this[Ch0] = A, this[Lh] = !1
    }
    async * [Symbol.asyncIterator]() {
      jr(!this[Lh], "disturbed"), this[Lh] = !0, yield* this[Ch0]
    }
  }

  function yJ6(A) {
    if (LY1(A)) {
      if (Nh0(A) === 0) A.on("data", function() {
        jr(!1)
      });
      if (typeof A.readableDidRead !== "boolean") A[Lh] = !1, PJ6.prototype.on.call(A, "data", function() {
        this[Lh] = !0
      });
      return A
    } else if (A && typeof A.pipeTo === "function") return new Xu1(A);
    else if (A && typeof A !== "string" && !ArrayBuffer.isView(A) && Uh0(A)) return new Xu1(A);
    else return A
  }

  function kJ6() {}

  function LY1(A) {
    return A && typeof A === "object" && typeof A.pipe === "function" && typeof A.on === "function"
  }

  function zh0(A) {
    if (A === null) return !1;
    else if (A instanceof RJ6) return !0;
    else if (typeof A !== "object") return !1;
    else {
      let B = A[Symbol.toStringTag];
      return (B === "Blob" || B === "File") && (("stream" in A) && typeof A.stream === "function" || ("arrayBuffer" in A) && typeof A.arrayBuffer === "function")
    }
  }

  function xJ6(A, B) {
    if (A.includes("?") || A.includes("#")) throw new Error('Query params cannot be passed when url already contains "?" or "#".');
    let Q = TJ6(B);
    if (Q) A += "?" + Q;
    return A
  }

  function wh0(A) {
    let B = parseInt(A, 10);
    return B === Number(A) && B >= 0 && B <= 65535
  }

  function qY1(A) {
    return A != null && A[0] === "h" && A[1] === "t" && A[2] === "t" && A[3] === "p" && (A[4] === ":" || A[4] === "s" && A[5] === ":")
  }

  function Eh0(A) {
    if (typeof A === "string") {
      if (A = new URL(A), !qY1(A.origin || A.protocol)) throw new TI("Invalid URL protocol: the URL must start with `http:` or `https:`.");
      return A
    }
    if (!A || typeof A !== "object") throw new TI("Invalid URL: The URL argument must be a non-null object.");
    if (!(A instanceof URL)) {
      if (A.port != null && A.port !== "" && wh0(A.port) === !1) throw new TI("Invalid URL: port must be a valid integer or a string representation of an integer.");
      if (A.path != null && typeof A.path !== "string") throw new TI("Invalid URL path: the path must be a string or null/undefined.");
      if (A.pathname != null && typeof A.pathname !== "string") throw new TI("Invalid URL pathname: the pathname must be a string or null/undefined.");
      if (A.hostname != null && typeof A.hostname !== "string") throw new TI("Invalid URL hostname: the hostname must be a string or null/undefined.");
      if (A.origin != null && typeof A.origin !== "string") throw new TI("Invalid URL origin: the origin must be a string or null/undefined.");
      if (!qY1(A.origin || A.protocol)) throw new TI("Invalid URL protocol: the URL must start with `http:` or `https:`.");
      let B = A.port != null ? A.port : A.protocol === "https:" ? 443 : 80,
        Q = A.origin != null ? A.origin : `${A.protocol||""}//${A.hostname||""}:${B}`,
        I = A.path != null ? A.path : `${A.pathname||""}${A.search||""}`;
      if (Q[Q.length - 1] === "/") Q = Q.slice(0, Q.length - 1);
      if (I && I[0] !== "/") I = `/${I}`;
      return new URL(`${Q}${I}`)
    }
    if (!qY1(A.origin || A.protocol)) throw new TI("Invalid URL protocol: the URL must start with `http:` or `https:`.");
    return A
  }

  function fJ6(A) {
    if (A = Eh0(A), A.pathname !== "/" || A.search || A.hash) throw new TI("invalid url");
    return A
  }

  function vJ6(A) {
    if (A[0] === "[") {
      let Q = A.indexOf("]");
      return jr(Q !== -1), A.substring(1, Q)
    }
    let B = A.indexOf(":");
    if (B === -1) return A;
    return A.substring(0, B)
  }

  function bJ6(A) {
    if (!A) return null;
    jr(typeof A === "string");
    let B = vJ6(A);
    if (LJ6.isIP(B)) return "";
    return B
  }

  function gJ6(A) {
    return JSON.parse(JSON.stringify(A))
  }

  function hJ6(A) {
    return A != null && typeof A[Symbol.asyncIterator] === "function"
  }

  function Uh0(A) {
    return A != null && (typeof A[Symbol.iterator] === "function" || typeof A[Symbol.asyncIterator] === "function")
  }

  function Nh0(A) {
    if (A == null) return 0;
    else if (LY1(A)) {
      let B = A._readableState;
      return B && B.objectMode === !1 && B.ended === !0 && Number.isFinite(B.length) ? B.length : null
    } else if (zh0(A)) return A.size != null ? A.size : null;
    else if (Mh0(A)) return A.byteLength;
    return null
  }

  function $h0(A) {
    return A && !!(A.destroyed || A[Kh0] || MY1.isDestroyed?.(A))
  }

  function mJ6(A, B) {
    if (A == null || !LY1(A) || $h0(A)) return;
    if (typeof A.destroy === "function") {
      if (Object.getPrototypeOf(A).constructor === MJ6) A.socket = null;
      A.destroy(B)
    } else if (B) queueMicrotask(() => {
      A.emit("error", B)
    });
    if (A.destroyed !== !0) A[Kh0] = !0
  }
  var dJ6 = /timeout=(\d+)/;

  function uJ6(A) {
    let B = A.toString().match(dJ6);
    return B ? parseInt(B[1], 10) * 1000 : null
  }

  function qh0(A) {
    return typeof A === "string" ? SJ6[A] ?? A.toLowerCase() : Hh0.lookup(A) ?? A.toString("latin1").toLowerCase()
  }

  function pJ6(A) {
    return Hh0.lookup(A) ?? A.toString("latin1").toLowerCase()
  }

  function cJ6(A, B) {
    if (B === void 0) B = {};
    for (let Q = 0; Q < A.length; Q += 2) {
      let I = qh0(A[Q]),
        G = B[I];
      if (G) {
        if (typeof G === "string") G = [G], B[I] = G;
        G.push(A[Q + 1].toString("utf8"))
      } else {
        let Z = A[Q + 1];
        if (typeof Z === "string") B[I] = Z;
        else B[I] = Array.isArray(Z) ? Z.map((D) => D.toString("utf8")) : Z.toString("utf8")
      }
    }
    if ("content-length" in B && "content-disposition" in B) B["content-disposition"] = Buffer.from(B["content-disposition"]).toString("latin1");
    return B
  }

  function lJ6(A) {
    let B = A.length,
      Q = new Array(B),
      I = !1,
      G = -1,
      Z, D, Y = 0;
    for (let W = 0; W < A.length; W += 2) {
      if (Z = A[W], D = A[W + 1], typeof Z !== "string" && (Z = Z.toString()), typeof D !== "string" && (D = D.toString("utf8")), Y = Z.length, Y === 14 && Z[7] === "-" && (Z === "content-length" || Z.toLowerCase() === "content-length")) I = !0;
      else if (Y === 19 && Z[7] === "-" && (Z === "content-disposition" || Z.toLowerCase() === "content-disposition")) G = W + 1;
      Q[W] = Z, Q[W + 1] = D
    }
    if (I && G !== -1) Q[G] = Buffer.from(Q[G]).toString("latin1");
    return Q
  }

  function Mh0(A) {
    return A instanceof Uint8Array || Buffer.isBuffer(A)
  }

  function iJ6(A, B, Q) {
    if (!A || typeof A !== "object") throw new TI("handler must be an object");
    if (typeof A.onConnect !== "function") throw new TI("invalid onConnect method");
    if (typeof A.onError !== "function") throw new TI("invalid onError method");
    if (typeof A.onBodySent !== "function" && A.onBodySent !== void 0) throw new TI("invalid onBodySent method");
    if (Q || B === "CONNECT") {
      if (typeof A.onUpgrade !== "function") throw new TI("invalid onUpgrade method")
    } else {
      if (typeof A.onHeaders !== "function") throw new TI("invalid onHeaders method");
      if (typeof A.onData !== "function") throw new TI("invalid onData method");
      if (typeof A.onComplete !== "function") throw new TI("invalid onComplete method")
    }
  }

  function nJ6(A) {
    return !!(A && (MY1.isDisturbed(A) || A[Lh]))
  }

  function aJ6(A) {
    return !!(A && MY1.isErrored(A))
  }

  function sJ6(A) {
    return !!(A && MY1.isReadable(A))
  }

  function rJ6(A) {
    return {
      localAddress: A.localAddress,
      localPort: A.localPort,
      remoteAddress: A.remoteAddress,
      remotePort: A.remotePort,
      remoteFamily: A.remoteFamily,
      timeout: A.timeout,
      bytesWritten: A.bytesWritten,
      bytesRead: A.bytesRead
    }
  }

  function oJ6(A) {
    let B;
    return new ReadableStream({
      async start() {
        B = A[Symbol.asyncIterator]()
      },
      async pull(Q) {
        let {
          done: I,
          value: G
        } = await B.next();
        if (I) queueMicrotask(() => {
          Q.close(), Q.byobRequest?.respond(0)
        });
        else {
          let Z = Buffer.isBuffer(G) ? G : Buffer.from(G);
          if (Z.byteLength) Q.enqueue(new Uint8Array(Z))
        }
        return Q.desiredSize > 0
      },
      async cancel(Q) {
        await B.return()
      },
      type: "bytes"
    })
  }

  function tJ6(A) {
    return A && typeof A === "object" && typeof A.append === "function" && typeof A.delete === "function" && typeof A.get === "function" && typeof A.getAll === "function" && typeof A.has === "function" && typeof A.set === "function" && A[Symbol.toStringTag] === "FormData"
  }

  function eJ6(A, B) {
    if ("addEventListener" in A) return A.addEventListener("abort", B, {
      once: !0
    }), () => A.removeEventListener("abort", B);
    return A.addListener("abort", B), () => A.removeListener("abort", B)
  }
  var AF6 = typeof String.prototype.toWellFormed === "function",
    BF6 = typeof String.prototype.isWellFormed === "function";

  function Lh0(A) {
    return AF6 ? `${A}`.toWellFormed() : OJ6.toUSVString(A)
  }

  function QF6(A) {
    return BF6 ? `${A}`.isWellFormed() : Lh0(A) === `${A}`
  }

  function Rh0(A) {
    switch (A) {
      case 34:
      case 40:
      case 41:
      case 44:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 123:
      case 125:
        return !1;
      default:
        return A >= 33 && A <= 126
    }
  }

  function IF6(A) {
    if (A.length === 0) return !1;
    for (let B = 0; B < A.length; ++B)
      if (!Rh0(A.charCodeAt(B))) return !1;
    return !0
  }
  var GF6 = /[^\t\x20-\x7e\x80-\xff]/;

  function ZF6(A) {
    return !GF6.test(A)
  }

  function DF6(A) {
    if (A == null || A === "") return {
      start: 0,
      end: null,
      size: null
    };
    let B = A ? A.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null;
    return B ? {
      start: parseInt(B[1]),
      end: B[2] ? parseInt(B[2]) : null,
      size: B[3] ? parseInt(B[3]) : null
    } : null
  }

  function YF6(A, B, Q) {
    return (A[Fu1] ??= []).push([B, Q]), A.on(B, Q), A
  }

  function WF6(A) {
    for (let [B, Q] of A[Fu1] ?? []) A.removeListener(B, Q);
    A[Fu1] = null
  }

  function JF6(A, B, Q) {
    try {
      B.onError(Q), jr(B.aborted)
    } catch (I) {
      A.emit("error", I)
    }
  }
  var Oh0 = Object.create(null);
  Oh0.enumerable = !0;
  var Vu1 = {
      delete: "DELETE",
      DELETE: "DELETE",
      get: "GET",
      GET: "GET",
      head: "HEAD",
      HEAD: "HEAD",
      options: "OPTIONS",
      OPTIONS: "OPTIONS",
      post: "POST",
      POST: "POST",
      put: "PUT",
      PUT: "PUT"
    },
    Th0 = {
      ...Vu1,
      patch: "patch",
      PATCH: "PATCH"
    };
  Object.setPrototypeOf(Vu1, null);
  Object.setPrototypeOf(Th0, null);
  Ph0.exports = {
    kEnumerableProperty: Oh0,
    nop: kJ6,
    isDisturbed: nJ6,
    isErrored: aJ6,
    isReadable: sJ6,
    toUSVString: Lh0,
    isUSVString: QF6,
    isBlobLike: zh0,
    parseOrigin: fJ6,
    parseURL: Eh0,
    getServerName: bJ6,
    isStream: LY1,
    isIterable: Uh0,
    isAsyncIterable: hJ6,
    isDestroyed: $h0,
    headerNameToString: qh0,
    bufferToLowerCasedHeaderName: pJ6,
    addListener: YF6,
    removeAllListeners: WF6,
    errorRequest: JF6,
    parseRawHeaders: lJ6,
    parseHeaders: cJ6,
    parseKeepAliveTimeout: uJ6,
    destroy: mJ6,
    bodyLength: Nh0,
    deepClone: gJ6,
    ReadableStreamFrom: oJ6,
    isBuffer: Mh0,
    validateHandler: iJ6,
    getSocketInfo: rJ6,
    isFormDataLike: tJ6,
    buildURL: xJ6,
    addAbortListener: eJ6,
    isValidHTTPToken: IF6,
    isValidHeaderValue: ZF6,
    isTokenCharCode: Rh0,
    parseRangeHeader: DF6,
    normalizedMethodRecordsBase: Vu1,
    normalizedMethodRecords: Th0,
    isValidPort: wh0,
    isHttpOrHttpsPrefixed: qY1,
    nodeMajor: _J6,
    nodeMinor: jJ6,
    safeHTTPMethods: ["GET", "HEAD", "OPTIONS", "TRACE"],
    wrapRequestBody: yJ6
  }
})
// @from(Start 5225655, End 5230655)
Rh = z((NR8, _h0) => {
  var a5 = Z1("node:diagnostics_channel"),
    Ku1 = Z1("node:util"),
    RY1 = Ku1.debuglog("undici"),
    Cu1 = Ku1.debuglog("fetch"),
    Yj = Ku1.debuglog("websocket"),
    Sh0 = !1,
    FF6 = {
      beforeConnect: a5.channel("undici:client:beforeConnect"),
      connected: a5.channel("undici:client:connected"),
      connectError: a5.channel("undici:client:connectError"),
      sendHeaders: a5.channel("undici:client:sendHeaders"),
      create: a5.channel("undici:request:create"),
      bodySent: a5.channel("undici:request:bodySent"),
      headers: a5.channel("undici:request:headers"),
      trailers: a5.channel("undici:request:trailers"),
      error: a5.channel("undici:request:error"),
      open: a5.channel("undici:websocket:open"),
      close: a5.channel("undici:websocket:close"),
      socketError: a5.channel("undici:websocket:socket_error"),
      ping: a5.channel("undici:websocket:ping"),
      pong: a5.channel("undici:websocket:pong")
    };
  if (RY1.enabled || Cu1.enabled) {
    let A = Cu1.enabled ? Cu1 : RY1;
    a5.channel("undici:client:beforeConnect").subscribe((B) => {
      let {
        connectParams: {
          version: Q,
          protocol: I,
          port: G,
          host: Z
        }
      } = B;
      A("connecting to %s using %s%s", `${Z}${G?`:${G}`:""}`, I, Q)
    }), a5.channel("undici:client:connected").subscribe((B) => {
      let {
        connectParams: {
          version: Q,
          protocol: I,
          port: G,
          host: Z
        }
      } = B;
      A("connected to %s using %s%s", `${Z}${G?`:${G}`:""}`, I, Q)
    }), a5.channel("undici:client:connectError").subscribe((B) => {
      let {
        connectParams: {
          version: Q,
          protocol: I,
          port: G,
          host: Z
        },
        error: D
      } = B;
      A("connection to %s using %s%s errored - %s", `${Z}${G?`:${G}`:""}`, I, Q, D.message)
    }), a5.channel("undici:client:sendHeaders").subscribe((B) => {
      let {
        request: {
          method: Q,
          path: I,
          origin: G
        }
      } = B;
      A("sending request to %s %s/%s", Q, G, I)
    }), a5.channel("undici:request:headers").subscribe((B) => {
      let {
        request: {
          method: Q,
          path: I,
          origin: G
        },
        response: {
          statusCode: Z
        }
      } = B;
      A("received response to %s %s/%s - HTTP %d", Q, G, I, Z)
    }), a5.channel("undici:request:trailers").subscribe((B) => {
      let {
        request: {
          method: Q,
          path: I,
          origin: G
        }
      } = B;
      A("trailers received from %s %s/%s", Q, G, I)
    }), a5.channel("undici:request:error").subscribe((B) => {
      let {
        request: {
          method: Q,
          path: I,
          origin: G
        },
        error: Z
      } = B;
      A("request to %s %s/%s errored - %s", Q, G, I, Z.message)
    }), Sh0 = !0
  }
  if (Yj.enabled) {
    if (!Sh0) {
      let A = RY1.enabled ? RY1 : Yj;
      a5.channel("undici:client:beforeConnect").subscribe((B) => {
        let {
          connectParams: {
            version: Q,
            protocol: I,
            port: G,
            host: Z
          }
        } = B;
        A("connecting to %s%s using %s%s", Z, G ? `:${G}` : "", I, Q)
      }), a5.channel("undici:client:connected").subscribe((B) => {
        let {
          connectParams: {
            version: Q,
            protocol: I,
            port: G,
            host: Z
          }
        } = B;
        A("connected to %s%s using %s%s", Z, G ? `:${G}` : "", I, Q)
      }), a5.channel("undici:client:connectError").subscribe((B) => {
        let {
          connectParams: {
            version: Q,
            protocol: I,
            port: G,
            host: Z
          },
          error: D
        } = B;
        A("connection to %s%s using %s%s errored - %s", Z, G ? `:${G}` : "", I, Q, D.message)
      }), a5.channel("undici:client:sendHeaders").subscribe((B) => {
        let {
          request: {
            method: Q,
            path: I,
            origin: G
          }
        } = B;
        A("sending request to %s %s/%s", Q, G, I)
      })
    }
    a5.channel("undici:websocket:open").subscribe((A) => {
      let {
        address: {
          address: B,
          port: Q
        }
      } = A;
      Yj("connection opened %s%s", B, Q ? `:${Q}` : "")
    }), a5.channel("undici:websocket:close").subscribe((A) => {
      let {
        websocket: B,
        code: Q,
        reason: I
      } = A;
      Yj("closed connection to %s - %s %s", B.url, Q, I)
    }), a5.channel("undici:websocket:socket_error").subscribe((A) => {
      Yj("connection errored - %s", A.message)
    }), a5.channel("undici:websocket:ping").subscribe((A) => {
      Yj("ping received")
    }), a5.channel("undici:websocket:pong").subscribe((A) => {
      Yj("pong received")
    })
  }
  _h0.exports = {
    channels: FF6
  }
})
// @from(Start 5230661, End 5238533)
vh0 = z(($R8, fh0) => {
  var {
    InvalidArgumentError: q3,
    NotSupportedError: XF6
  } = u5(), bN = Z1("node:assert"), {
    isValidHTTPToken: kh0,
    isValidHeaderValue: jh0,
    isStream: VF6,
    destroy: CF6,
    isBuffer: KF6,
    isFormDataLike: HF6,
    isIterable: zF6,
    isBlobLike: wF6,
    buildURL: EF6,
    validateHandler: UF6,
    getServerName: NF6,
    normalizedMethodRecords: $F6
  } = C6(), {
    channels: Uw
  } = Rh(), {
    headerNameLowerCasedRecord: yh0
  } = $Y1(), qF6 = /[^\u0021-\u00ff]/, fX = Symbol("handler");
  class xh0 {
    constructor(A, {
      path: B,
      method: Q,
      body: I,
      headers: G,
      query: Z,
      idempotent: D,
      blocking: Y,
      upgrade: W,
      headersTimeout: J,
      bodyTimeout: F,
      reset: X,
      throwOnError: V,
      expectContinue: C,
      servername: K
    }, E) {
      if (typeof B !== "string") throw new q3("path must be a string");
      else if (B[0] !== "/" && !(B.startsWith("http://") || B.startsWith("https://")) && Q !== "CONNECT") throw new q3("path must be an absolute URL or start with a slash");
      else if (qF6.test(B)) throw new q3("invalid request path");
      if (typeof Q !== "string") throw new q3("method must be a string");
      else if ($F6[Q] === void 0 && !kh0(Q)) throw new q3("invalid request method");
      if (W && typeof W !== "string") throw new q3("upgrade must be a string");
      if (J != null && (!Number.isFinite(J) || J < 0)) throw new q3("invalid headersTimeout");
      if (F != null && (!Number.isFinite(F) || F < 0)) throw new q3("invalid bodyTimeout");
      if (X != null && typeof X !== "boolean") throw new q3("invalid reset");
      if (C != null && typeof C !== "boolean") throw new q3("invalid expectContinue");
      if (this.headersTimeout = J, this.bodyTimeout = F, this.throwOnError = V === !0, this.method = Q, this.abort = null, I == null) this.body = null;
      else if (VF6(I)) {
        this.body = I;
        let N = this.body._readableState;
        if (!N || !N.autoDestroy) this.endHandler = function q() {
          CF6(this)
        }, this.body.on("end", this.endHandler);
        this.errorHandler = (q) => {
          if (this.abort) this.abort(q);
          else this.error = q
        }, this.body.on("error", this.errorHandler)
      } else if (KF6(I)) this.body = I.byteLength ? I : null;
      else if (ArrayBuffer.isView(I)) this.body = I.buffer.byteLength ? Buffer.from(I.buffer, I.byteOffset, I.byteLength) : null;
      else if (I instanceof ArrayBuffer) this.body = I.byteLength ? Buffer.from(I) : null;
      else if (typeof I === "string") this.body = I.length ? Buffer.from(I) : null;
      else if (HF6(I) || zF6(I) || wF6(I)) this.body = I;
      else throw new q3("body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable");
      if (this.completed = !1, this.aborted = !1, this.upgrade = W || null, this.path = Z ? EF6(B, Z) : B, this.origin = A, this.idempotent = D == null ? Q === "HEAD" || Q === "GET" : D, this.blocking = Y == null ? !1 : Y, this.reset = X == null ? null : X, this.host = null, this.contentLength = null, this.contentType = null, this.headers = [], this.expectContinue = C != null ? C : !1, Array.isArray(G)) {
        if (G.length % 2 !== 0) throw new q3("headers array must be even");
        for (let N = 0; N < G.length; N += 2) OY1(this, G[N], G[N + 1])
      } else if (G && typeof G === "object")
        if (G[Symbol.iterator])
          for (let N of G) {
            if (!Array.isArray(N) || N.length !== 2) throw new q3("headers must be in key-value pair format");
            OY1(this, N[0], N[1])
          } else {
            let N = Object.keys(G);
            for (let q = 0; q < N.length; ++q) OY1(this, N[q], G[N[q]])
          } else if (G != null) throw new q3("headers must be an object or an array");
      if (UF6(E, Q, W), this.servername = K || NF6(this.host), this[fX] = E, Uw.create.hasSubscribers) Uw.create.publish({
        request: this
      })
    }
    onBodySent(A) {
      if (this[fX].onBodySent) try {
        return this[fX].onBodySent(A)
      } catch (B) {
        this.abort(B)
      }
    }
    onRequestSent() {
      if (Uw.bodySent.hasSubscribers) Uw.bodySent.publish({
        request: this
      });
      if (this[fX].onRequestSent) try {
        return this[fX].onRequestSent()
      } catch (A) {
        this.abort(A)
      }
    }
    onConnect(A) {
      if (bN(!this.aborted), bN(!this.completed), this.error) A(this.error);
      else return this.abort = A, this[fX].onConnect(A)
    }
    onResponseStarted() {
      return this[fX].onResponseStarted?.()
    }
    onHeaders(A, B, Q, I) {
      if (bN(!this.aborted), bN(!this.completed), Uw.headers.hasSubscribers) Uw.headers.publish({
        request: this,
        response: {
          statusCode: A,
          headers: B,
          statusText: I
        }
      });
      try {
        return this[fX].onHeaders(A, B, Q, I)
      } catch (G) {
        this.abort(G)
      }
    }
    onData(A) {
      bN(!this.aborted), bN(!this.completed);
      try {
        return this[fX].onData(A)
      } catch (B) {
        return this.abort(B), !1
      }
    }
    onUpgrade(A, B, Q) {
      return bN(!this.aborted), bN(!this.completed), this[fX].onUpgrade(A, B, Q)
    }
    onComplete(A) {
      if (this.onFinally(), bN(!this.aborted), this.completed = !0, Uw.trailers.hasSubscribers) Uw.trailers.publish({
        request: this,
        trailers: A
      });
      try {
        return this[fX].onComplete(A)
      } catch (B) {
        this.onError(B)
      }
    }
    onError(A) {
      if (this.onFinally(), Uw.error.hasSubscribers) Uw.error.publish({
        request: this,
        error: A
      });
      if (this.aborted) return;
      return this.aborted = !0, this[fX].onError(A)
    }
    onFinally() {
      if (this.errorHandler) this.body.off("error", this.errorHandler), this.errorHandler = null;
      if (this.endHandler) this.body.off("end", this.endHandler), this.endHandler = null
    }
    addHeader(A, B) {
      return OY1(this, A, B), this
    }
  }

  function OY1(A, B, Q) {
    if (Q && (typeof Q === "object" && !Array.isArray(Q))) throw new q3(`invalid ${B} header`);
    else if (Q === void 0) return;
    let I = yh0[B];
    if (I === void 0) {
      if (I = B.toLowerCase(), yh0[I] === void 0 && !kh0(I)) throw new q3("invalid header key")
    }
    if (Array.isArray(Q)) {
      let G = [];
      for (let Z = 0; Z < Q.length; Z++)
        if (typeof Q[Z] === "string") {
          if (!jh0(Q[Z])) throw new q3(`invalid ${B} header`);
          G.push(Q[Z])
        } else if (Q[Z] === null) G.push("");
      else if (typeof Q[Z] === "object") throw new q3(`invalid ${B} header`);
      else G.push(`${Q[Z]}`);
      Q = G
    } else if (typeof Q === "string") {
      if (!jh0(Q)) throw new q3(`invalid ${B} header`)
    } else if (Q === null) Q = "";
    else Q = `${Q}`;
    if (A.host === null && I === "host") {
      if (typeof Q !== "string") throw new q3("invalid host header");
      A.host = Q
    } else if (A.contentLength === null && I === "content-length") {
      if (A.contentLength = parseInt(Q, 10), !Number.isFinite(A.contentLength)) throw new q3("invalid content-length header")
    } else if (A.contentType === null && I === "content-type") A.contentType = Q, A.headers.push(B, Q);
    else if (I === "transfer-encoding" || I === "keep-alive" || I === "upgrade") throw new q3(`invalid ${I} header`);
    else if (I === "connection") {
      let G = typeof Q === "string" ? Q.toLowerCase() : null;
      if (G !== "close" && G !== "keep-alive") throw new q3("invalid connection header");
      if (G === "close") A.reset = !0
    } else if (I === "expect") throw new XF6("expect header not supported");
    else A.headers.push(B, Q)
  }
  fh0.exports = xh0
})
// @from(Start 5238539, End 5239582)
yr = z((qR8, gh0) => {
  var MF6 = Z1("node:events");
  class Hu1 extends MF6 {
    dispatch() {
      throw new Error("not implemented")
    }
    close() {
      throw new Error("not implemented")
    }
    destroy() {
      throw new Error("not implemented")
    }
    compose(...A) {
      let B = Array.isArray(A[0]) ? A[0] : A,
        Q = this.dispatch.bind(this);
      for (let I of B) {
        if (I == null) continue;
        if (typeof I !== "function") throw new TypeError(`invalid interceptor, expected function received ${typeof I}`);
        if (Q = I(Q), Q == null || typeof Q !== "function" || Q.length !== 2) throw new TypeError("invalid interceptor")
      }
      return new bh0(this, Q)
    }
  }
  class bh0 extends Hu1 {
    #A = null;
    #B = null;
    constructor(A, B) {
      super();
      this.#A = A, this.#B = B
    }
    dispatch(...A) {
      this.#B(...A)
    }
    close(...A) {
      return this.#A.close(...A)
    }
    destroy(...A) {
      return this.#A.destroy(...A)
    }
  }
  gh0.exports = Hu1
})
// @from(Start 5239588, End 5242706)
Sh = z((MR8, mh0) => {
  var LF6 = yr(),
    {
      ClientDestroyedError: zu1,
      ClientClosedError: RF6,
      InvalidArgumentError: Oh
    } = u5(),
    {
      kDestroy: OF6,
      kClose: TF6,
      kClosed: kr,
      kDestroyed: Th,
      kDispatch: wu1,
      kInterceptors: Wj
    } = A3(),
    gN = Symbol("onDestroyed"),
    Ph = Symbol("onClosed"),
    TY1 = Symbol("Intercepted Dispatch");
  class hh0 extends LF6 {
    constructor() {
      super();
      this[Th] = !1, this[gN] = null, this[kr] = !1, this[Ph] = []
    }
    get destroyed() {
      return this[Th]
    }
    get closed() {
      return this[kr]
    }
    get interceptors() {
      return this[Wj]
    }
    set interceptors(A) {
      if (A) {
        for (let B = A.length - 1; B >= 0; B--)
          if (typeof this[Wj][B] !== "function") throw new Oh("interceptor must be an function")
      }
      this[Wj] = A
    }
    close(A) {
      if (A === void 0) return new Promise((Q, I) => {
        this.close((G, Z) => {
          return G ? I(G) : Q(Z)
        })
      });
      if (typeof A !== "function") throw new Oh("invalid callback");
      if (this[Th]) {
        queueMicrotask(() => A(new zu1, null));
        return
      }
      if (this[kr]) {
        if (this[Ph]) this[Ph].push(A);
        else queueMicrotask(() => A(null, null));
        return
      }
      this[kr] = !0, this[Ph].push(A);
      let B = () => {
        let Q = this[Ph];
        this[Ph] = null;
        for (let I = 0; I < Q.length; I++) Q[I](null, null)
      };
      this[TF6]().then(() => this.destroy()).then(() => {
        queueMicrotask(B)
      })
    }
    destroy(A, B) {
      if (typeof A === "function") B = A, A = null;
      if (B === void 0) return new Promise((I, G) => {
        this.destroy(A, (Z, D) => {
          return Z ? G(Z) : I(D)
        })
      });
      if (typeof B !== "function") throw new Oh("invalid callback");
      if (this[Th]) {
        if (this[gN]) this[gN].push(B);
        else queueMicrotask(() => B(null, null));
        return
      }
      if (!A) A = new zu1;
      this[Th] = !0, this[gN] = this[gN] || [], this[gN].push(B);
      let Q = () => {
        let I = this[gN];
        this[gN] = null;
        for (let G = 0; G < I.length; G++) I[G](null, null)
      };
      this[OF6](A).then(() => {
        queueMicrotask(Q)
      })
    } [TY1](A, B) {
      if (!this[Wj] || this[Wj].length === 0) return this[TY1] = this[wu1], this[wu1](A, B);
      let Q = this[wu1].bind(this);
      for (let I = this[Wj].length - 1; I >= 0; I--) Q = this[Wj][I](Q);
      return this[TY1] = Q, Q(A, B)
    }
    dispatch(A, B) {
      if (!B || typeof B !== "object") throw new Oh("handler must be an object");
      try {
        if (!A || typeof A !== "object") throw new Oh("opts must be an object.");
        if (this[Th] || this[gN]) throw new zu1;
        if (this[kr]) throw new RF6;
        return this[TY1](A, B)
      } catch (Q) {
        if (typeof B.onError !== "function") throw new Oh("invalid onError method");
        return B.onError(Q), !1
      }
    }
  }
  mh0.exports = hh0
})
// @from(Start 5242712, End 5244456)
Ru1 = z((LR8, ch0) => {
  var _h = 0,
    Eu1 = 1000,
    Uu1 = (Eu1 >> 1) - 1,
    hN, Nu1 = Symbol("kFastTimer"),
    mN = [],
    $u1 = -2,
    qu1 = -1,
    uh0 = 0,
    dh0 = 1;

  function Mu1() {
    _h += Uu1;
    let A = 0,
      B = mN.length;
    while (A < B) {
      let Q = mN[A];
      if (Q._state === uh0) Q._idleStart = _h - Uu1, Q._state = dh0;
      else if (Q._state === dh0 && _h >= Q._idleStart + Q._idleTimeout) Q._state = qu1, Q._idleStart = -1, Q._onTimeout(Q._timerArg);
      if (Q._state === qu1) {
        if (Q._state = $u1, --B !== 0) mN[A] = mN[B]
      } else ++A
    }
    if (mN.length = B, mN.length !== 0) ph0()
  }

  function ph0() {
    if (hN) hN.refresh();
    else if (clearTimeout(hN), hN = setTimeout(Mu1, Uu1), hN.unref) hN.unref()
  }
  class Lu1 {
    [Nu1] = !0;
    _state = $u1;
    _idleTimeout = -1;
    _idleStart = -1;
    _onTimeout;
    _timerArg;
    constructor(A, B, Q) {
      this._onTimeout = A, this._idleTimeout = B, this._timerArg = Q, this.refresh()
    }
    refresh() {
      if (this._state === $u1) mN.push(this);
      if (!hN || mN.length === 1) ph0();
      this._state = uh0
    }
    clear() {
      this._state = qu1, this._idleStart = -1
    }
  }
  ch0.exports = {
    setTimeout(A, B, Q) {
      return B <= Eu1 ? setTimeout(A, B, Q) : new Lu1(A, B, Q)
    },
    clearTimeout(A) {
      if (A[Nu1]) A.clear();
      else clearTimeout(A)
    },
    setFastTimeout(A, B, Q) {
      return new Lu1(A, B, Q)
    },
    clearFastTimeout(A) {
      A.clear()
    },
    now() {
      return _h
    },
    tick(A = 0) {
      _h += A - Eu1 + 1, Mu1(), Mu1()
    },
    reset() {
      _h = 0, mN.length = 0, clearTimeout(hN), hN = null
    },
    kFastTimer: Nu1
  }
})
// @from(Start 5244462, End 5249018)
xr = z((RR8, sh0) => {
  var PF6 = Z1("node:net"),
    lh0 = Z1("node:assert"),
    ah0 = C6(),
    {
      InvalidArgumentError: SF6,
      ConnectTimeoutError: _F6
    } = u5(),
    PY1 = Ru1();

  function ih0() {}
  var Ou1, Tu1;
  if (global.FinalizationRegistry && !(process.env.NODE_V8_COVERAGE || process.env.UNDICI_NO_FG)) Tu1 = class A {
    constructor(B) {
      this._maxCachedSessions = B, this._sessionCache = new Map, this._sessionRegistry = new global.FinalizationRegistry((Q) => {
        if (this._sessionCache.size < this._maxCachedSessions) return;
        let I = this._sessionCache.get(Q);
        if (I !== void 0 && I.deref() === void 0) this._sessionCache.delete(Q)
      })
    }
    get(B) {
      let Q = this._sessionCache.get(B);
      return Q ? Q.deref() : null
    }
    set(B, Q) {
      if (this._maxCachedSessions === 0) return;
      this._sessionCache.set(B, new WeakRef(Q)), this._sessionRegistry.register(Q, B)
    }
  };
  else Tu1 = class A {
    constructor(B) {
      this._maxCachedSessions = B, this._sessionCache = new Map
    }
    get(B) {
      return this._sessionCache.get(B)
    }
    set(B, Q) {
      if (this._maxCachedSessions === 0) return;
      if (this._sessionCache.size >= this._maxCachedSessions) {
        let {
          value: I
        } = this._sessionCache.keys().next();
        this._sessionCache.delete(I)
      }
      this._sessionCache.set(B, Q)
    }
  };

  function jF6({
    allowH2: A,
    maxCachedSessions: B,
    socketPath: Q,
    timeout: I,
    session: G,
    ...Z
  }) {
    if (B != null && (!Number.isInteger(B) || B < 0)) throw new SF6("maxCachedSessions must be a positive integer or zero");
    let D = {
        path: Q,
        ...Z
      },
      Y = new Tu1(B == null ? 100 : B);
    return I = I == null ? 1e4 : I, A = A != null ? A : !1,
      function W({
        hostname: J,
        host: F,
        protocol: X,
        port: V,
        servername: C,
        localAddress: K,
        httpSocket: E
      }, N) {
        let q;
        if (X === "https:") {
          if (!Ou1) Ou1 = Z1("node:tls");
          C = C || D.servername || ah0.getServerName(F) || null;
          let R = C || J;
          lh0(R);
          let T = G || Y.get(R) || null;
          V = V || 443, q = Ou1.connect({
            highWaterMark: 16384,
            ...D,
            servername: C,
            session: T,
            localAddress: K,
            ALPNProtocols: A ? ["http/1.1", "h2"] : ["http/1.1"],
            socket: E,
            port: V,
            host: J
          }), q.on("session", function(L) {
            Y.set(R, L)
          })
        } else lh0(!E, "httpSocket can only be sent on TLS update"), V = V || 80, q = PF6.connect({
          highWaterMark: 65536,
          ...D,
          localAddress: K,
          port: V,
          host: J
        });
        if (D.keepAlive == null || D.keepAlive) {
          let R = D.keepAliveInitialDelay === void 0 ? 60000 : D.keepAliveInitialDelay;
          q.setKeepAlive(!0, R)
        }
        let O = yF6(new WeakRef(q), {
          timeout: I,
          hostname: J,
          port: V
        });
        return q.setNoDelay(!0).once(X === "https:" ? "secureConnect" : "connect", function() {
          if (queueMicrotask(O), N) {
            let R = N;
            N = null, R(null, this)
          }
        }).on("error", function(R) {
          if (queueMicrotask(O), N) {
            let T = N;
            N = null, T(R)
          }
        }), q
      }
  }
  var yF6 = process.platform === "win32" ? (A, B) => {
    if (!B.timeout) return ih0;
    let Q = null,
      I = null,
      G = PY1.setFastTimeout(() => {
        Q = setImmediate(() => {
          I = setImmediate(() => nh0(A.deref(), B))
        })
      }, B.timeout);
    return () => {
      PY1.clearFastTimeout(G), clearImmediate(Q), clearImmediate(I)
    }
  } : (A, B) => {
    if (!B.timeout) return ih0;
    let Q = null,
      I = PY1.setFastTimeout(() => {
        Q = setImmediate(() => {
          nh0(A.deref(), B)
        })
      }, B.timeout);
    return () => {
      PY1.clearFastTimeout(I), clearImmediate(Q)
    }
  };

  function nh0(A, B) {
    if (A == null) return;
    let Q = "Connect Timeout Error";
    if (Array.isArray(A.autoSelectFamilyAttemptedAddresses)) Q += ` (attempted addresses: ${A.autoSelectFamilyAttemptedAddresses.join(", ")},`;
    else Q += ` (attempted address: ${B.hostname}:${B.port},`;
    Q += ` timeout: ${B.timeout}ms)`, ah0.destroy(A, new _F6(Q))
  }
  sh0.exports = jF6
})
// @from(Start 5249024, End 5249314)
th0 = z((rh0) => {
  Object.defineProperty(rh0, "__esModule", {
    value: !0
  });
  rh0.enumToMap = void 0;

  function kF6(A) {
    let B = {};
    return Object.keys(A).forEach((Q) => {
      let I = A[Q];
      if (typeof I === "number") B[Q] = I
    }), B
  }
  rh0.enumToMap = kF6
})
// @from(Start 5249320, End 5256637)
Hm0 = z((Dm0) => {
  Object.defineProperty(Dm0, "__esModule", {
    value: !0
  });
  Dm0.SPECIAL_HEADERS = Dm0.HEADER_STATE = Dm0.MINOR = Dm0.MAJOR = Dm0.CONNECTION_TOKEN_CHARS = Dm0.HEADER_CHARS = Dm0.TOKEN = Dm0.STRICT_TOKEN = Dm0.HEX = Dm0.URL_CHAR = Dm0.STRICT_URL_CHAR = Dm0.USERINFO_CHARS = Dm0.MARK = Dm0.ALPHANUM = Dm0.NUM = Dm0.HEX_MAP = Dm0.NUM_MAP = Dm0.ALPHA = Dm0.FINISH = Dm0.H_METHOD_MAP = Dm0.METHOD_MAP = Dm0.METHODS_RTSP = Dm0.METHODS_ICE = Dm0.METHODS_HTTP = Dm0.METHODS = Dm0.LENIENT_FLAGS = Dm0.FLAGS = Dm0.TYPE = Dm0.ERROR = void 0;
  var xF6 = th0(),
    fF6;
  (function(A) {
    A[A.OK = 0] = "OK", A[A.INTERNAL = 1] = "INTERNAL", A[A.STRICT = 2] = "STRICT", A[A.LF_EXPECTED = 3] = "LF_EXPECTED", A[A.UNEXPECTED_CONTENT_LENGTH = 4] = "UNEXPECTED_CONTENT_LENGTH", A[A.CLOSED_CONNECTION = 5] = "CLOSED_CONNECTION", A[A.INVALID_METHOD = 6] = "INVALID_METHOD", A[A.INVALID_URL = 7] = "INVALID_URL", A[A.INVALID_CONSTANT = 8] = "INVALID_CONSTANT", A[A.INVALID_VERSION = 9] = "INVALID_VERSION", A[A.INVALID_HEADER_TOKEN = 10] = "INVALID_HEADER_TOKEN", A[A.INVALID_CONTENT_LENGTH = 11] = "INVALID_CONTENT_LENGTH", A[A.INVALID_CHUNK_SIZE = 12] = "INVALID_CHUNK_SIZE", A[A.INVALID_STATUS = 13] = "INVALID_STATUS", A[A.INVALID_EOF_STATE = 14] = "INVALID_EOF_STATE", A[A.INVALID_TRANSFER_ENCODING = 15] = "INVALID_TRANSFER_ENCODING", A[A.CB_MESSAGE_BEGIN = 16] = "CB_MESSAGE_BEGIN", A[A.CB_HEADERS_COMPLETE = 17] = "CB_HEADERS_COMPLETE", A[A.CB_MESSAGE_COMPLETE = 18] = "CB_MESSAGE_COMPLETE", A[A.CB_CHUNK_HEADER = 19] = "CB_CHUNK_HEADER", A[A.CB_CHUNK_COMPLETE = 20] = "CB_CHUNK_COMPLETE", A[A.PAUSED = 21] = "PAUSED", A[A.PAUSED_UPGRADE = 22] = "PAUSED_UPGRADE", A[A.PAUSED_H2_UPGRADE = 23] = "PAUSED_H2_UPGRADE", A[A.USER = 24] = "USER"
  })(fF6 = Dm0.ERROR || (Dm0.ERROR = {}));
  var vF6;
  (function(A) {
    A[A.BOTH = 0] = "BOTH", A[A.REQUEST = 1] = "REQUEST", A[A.RESPONSE = 2] = "RESPONSE"
  })(vF6 = Dm0.TYPE || (Dm0.TYPE = {}));
  var bF6;
  (function(A) {
    A[A.CONNECTION_KEEP_ALIVE = 1] = "CONNECTION_KEEP_ALIVE", A[A.CONNECTION_CLOSE = 2] = "CONNECTION_CLOSE", A[A.CONNECTION_UPGRADE = 4] = "CONNECTION_UPGRADE", A[A.CHUNKED = 8] = "CHUNKED", A[A.UPGRADE = 16] = "UPGRADE", A[A.CONTENT_LENGTH = 32] = "CONTENT_LENGTH", A[A.SKIPBODY = 64] = "SKIPBODY", A[A.TRAILING = 128] = "TRAILING", A[A.TRANSFER_ENCODING = 512] = "TRANSFER_ENCODING"
  })(bF6 = Dm0.FLAGS || (Dm0.FLAGS = {}));
  var gF6;
  (function(A) {
    A[A.HEADERS = 1] = "HEADERS", A[A.CHUNKED_LENGTH = 2] = "CHUNKED_LENGTH", A[A.KEEP_ALIVE = 4] = "KEEP_ALIVE"
  })(gF6 = Dm0.LENIENT_FLAGS || (Dm0.LENIENT_FLAGS = {}));
  var d9;
  (function(A) {
    A[A.DELETE = 0] = "DELETE", A[A.GET = 1] = "GET", A[A.HEAD = 2] = "HEAD", A[A.POST = 3] = "POST", A[A.PUT = 4] = "PUT", A[A.CONNECT = 5] = "CONNECT", A[A.OPTIONS = 6] = "OPTIONS", A[A.TRACE = 7] = "TRACE", A[A.COPY = 8] = "COPY", A[A.LOCK = 9] = "LOCK", A[A.MKCOL = 10] = "MKCOL", A[A.MOVE = 11] = "MOVE", A[A.PROPFIND = 12] = "PROPFIND", A[A.PROPPATCH = 13] = "PROPPATCH", A[A.SEARCH = 14] = "SEARCH", A[A.UNLOCK = 15] = "UNLOCK", A[A.BIND = 16] = "BIND", A[A.REBIND = 17] = "REBIND", A[A.UNBIND = 18] = "UNBIND", A[A.ACL = 19] = "ACL", A[A.REPORT = 20] = "REPORT", A[A.MKACTIVITY = 21] = "MKACTIVITY", A[A.CHECKOUT = 22] = "CHECKOUT", A[A.MERGE = 23] = "MERGE", A[A["M-SEARCH"] = 24] = "M-SEARCH", A[A.NOTIFY = 25] = "NOTIFY", A[A.SUBSCRIBE = 26] = "SUBSCRIBE", A[A.UNSUBSCRIBE = 27] = "UNSUBSCRIBE", A[A.PATCH = 28] = "PATCH", A[A.PURGE = 29] = "PURGE", A[A.MKCALENDAR = 30] = "MKCALENDAR", A[A.LINK = 31] = "LINK", A[A.UNLINK = 32] = "UNLINK", A[A.SOURCE = 33] = "SOURCE", A[A.PRI = 34] = "PRI", A[A.DESCRIBE = 35] = "DESCRIBE", A[A.ANNOUNCE = 36] = "ANNOUNCE", A[A.SETUP = 37] = "SETUP", A[A.PLAY = 38] = "PLAY", A[A.PAUSE = 39] = "PAUSE", A[A.TEARDOWN = 40] = "TEARDOWN", A[A.GET_PARAMETER = 41] = "GET_PARAMETER", A[A.SET_PARAMETER = 42] = "SET_PARAMETER", A[A.REDIRECT = 43] = "REDIRECT", A[A.RECORD = 44] = "RECORD", A[A.FLUSH = 45] = "FLUSH"
  })(d9 = Dm0.METHODS || (Dm0.METHODS = {}));
  Dm0.METHODS_HTTP = [d9.DELETE, d9.GET, d9.HEAD, d9.POST, d9.PUT, d9.CONNECT, d9.OPTIONS, d9.TRACE, d9.COPY, d9.LOCK, d9.MKCOL, d9.MOVE, d9.PROPFIND, d9.PROPPATCH, d9.SEARCH, d9.UNLOCK, d9.BIND, d9.REBIND, d9.UNBIND, d9.ACL, d9.REPORT, d9.MKACTIVITY, d9.CHECKOUT, d9.MERGE, d9["M-SEARCH"], d9.NOTIFY, d9.SUBSCRIBE, d9.UNSUBSCRIBE, d9.PATCH, d9.PURGE, d9.MKCALENDAR, d9.LINK, d9.UNLINK, d9.PRI, d9.SOURCE];
  Dm0.METHODS_ICE = [d9.SOURCE];
  Dm0.METHODS_RTSP = [d9.OPTIONS, d9.DESCRIBE, d9.ANNOUNCE, d9.SETUP, d9.PLAY, d9.PAUSE, d9.TEARDOWN, d9.GET_PARAMETER, d9.SET_PARAMETER, d9.REDIRECT, d9.RECORD, d9.FLUSH, d9.GET, d9.POST];
  Dm0.METHOD_MAP = xF6.enumToMap(d9);
  Dm0.H_METHOD_MAP = {};
  Object.keys(Dm0.METHOD_MAP).forEach((A) => {
    if (/^H/.test(A)) Dm0.H_METHOD_MAP[A] = Dm0.METHOD_MAP[A]
  });
  var hF6;
  (function(A) {
    A[A.SAFE = 0] = "SAFE", A[A.SAFE_WITH_CB = 1] = "SAFE_WITH_CB", A[A.UNSAFE = 2] = "UNSAFE"
  })(hF6 = Dm0.FINISH || (Dm0.FINISH = {}));
  Dm0.ALPHA = [];
  for (let A = 65; A <= 90; A++) Dm0.ALPHA.push(String.fromCharCode(A)), Dm0.ALPHA.push(String.fromCharCode(A + 32));
  Dm0.NUM_MAP = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9
  };
  Dm0.HEX_MAP = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15
  };
  Dm0.NUM = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
  Dm0.ALPHANUM = Dm0.ALPHA.concat(Dm0.NUM);
  Dm0.MARK = ["-", "_", ".", "!", "~", "*", "'", "(", ")"];
  Dm0.USERINFO_CHARS = Dm0.ALPHANUM.concat(Dm0.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]);
  Dm0.STRICT_URL_CHAR = ["!", '"', "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", ":", ";", "<", "=", ">", "@", "[", "\\", "]", "^", "_", "`", "{", "|", "}", "~"].concat(Dm0.ALPHANUM);
  Dm0.URL_CHAR = Dm0.STRICT_URL_CHAR.concat(["\t", "\f"]);
  for (let A = 128; A <= 255; A++) Dm0.URL_CHAR.push(A);
  Dm0.HEX = Dm0.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]);
  Dm0.STRICT_TOKEN = ["!", "#", "$", "%", "&", "'", "*", "+", "-", ".", "^", "_", "`", "|", "~"].concat(Dm0.ALPHANUM);
  Dm0.TOKEN = Dm0.STRICT_TOKEN.concat([" "]);
  Dm0.HEADER_CHARS = ["\t"];
  for (let A = 32; A <= 255; A++)
    if (A !== 127) Dm0.HEADER_CHARS.push(A);
  Dm0.CONNECTION_TOKEN_CHARS = Dm0.HEADER_CHARS.filter((A) => A !== 44);
  Dm0.MAJOR = Dm0.NUM_MAP;
  Dm0.MINOR = Dm0.MAJOR;
  var jh;
  (function(A) {
    A[A.GENERAL = 0] = "GENERAL", A[A.CONNECTION = 1] = "CONNECTION", A[A.CONTENT_LENGTH = 2] = "CONTENT_LENGTH", A[A.TRANSFER_ENCODING = 3] = "TRANSFER_ENCODING", A[A.UPGRADE = 4] = "UPGRADE", A[A.CONNECTION_KEEP_ALIVE = 5] = "CONNECTION_KEEP_ALIVE", A[A.CONNECTION_CLOSE = 6] = "CONNECTION_CLOSE", A[A.CONNECTION_UPGRADE = 7] = "CONNECTION_UPGRADE", A[A.TRANSFER_ENCODING_CHUNKED = 8] = "TRANSFER_ENCODING_CHUNKED"
  })(jh = Dm0.HEADER_STATE || (Dm0.HEADER_STATE = {}));
  Dm0.SPECIAL_HEADERS = {
    connection: jh.CONNECTION,
    "content-length": jh.CONTENT_LENGTH,
    "proxy-connection": jh.CONNECTION,
    "transfer-encoding": jh.TRANSFER_ENCODING,
    upgrade: jh.UPGRADE
  }
})
// @from(Start 5256643, End 5321577)
ju1 = z((PR8, zm0) => {
  var {
    Buffer: sF6
  } = Z1("node:buffer");
  zm0.exports = sF6.from("", "base64")
})
// @from(Start 5321583, End 5386557)
Em0 = z((SR8, wm0) => {
  var {
    Buffer: rF6
  } = Z1("node:buffer");
  wm0.exports = rF6.from("", "base64")
})
// @from(Start 5386563, End 5388766)
fr = z((_R8, Om0) => {
  var Um0 = ["GET", "HEAD", "POST"],
    oF6 = new Set(Um0),
    tF6 = [101, 204, 205, 304],
    Nm0 = [301, 302, 303, 307, 308],
    eF6 = new Set(Nm0),
    $m0 = ["1", "7", "9", "11", "13", "15", "17", "19", "20", "21", "22", "23", "25", "37", "42", "43", "53", "69", "77", "79", "87", "95", "101", "102", "103", "104", "109", "110", "111", "113", "115", "117", "119", "123", "135", "137", "139", "143", "161", "179", "389", "427", "465", "512", "513", "514", "515", "526", "530", "531", "532", "540", "548", "554", "556", "563", "587", "601", "636", "989", "990", "993", "995", "1719", "1720", "1723", "2049", "3659", "4045", "4190", "5060", "5061", "6000", "6566", "6665", "6666", "6667", "6668", "6669", "6679", "6697", "10080"],
    AX6 = new Set($m0),
    qm0 = ["", "no-referrer", "no-referrer-when-downgrade", "same-origin", "origin", "strict-origin", "origin-when-cross-origin", "strict-origin-when-cross-origin", "unsafe-url"],
    BX6 = new Set(qm0),
    QX6 = ["follow", "manual", "error"],
    Mm0 = ["GET", "HEAD", "OPTIONS", "TRACE"],
    IX6 = new Set(Mm0),
    GX6 = ["navigate", "same-origin", "no-cors", "cors"],
    ZX6 = ["omit", "same-origin", "include"],
    DX6 = ["default", "no-store", "reload", "no-cache", "force-cache", "only-if-cached"],
    YX6 = ["content-encoding", "content-language", "content-location", "content-type", "content-length"],
    WX6 = ["half"],
    Lm0 = ["CONNECT", "TRACE", "TRACK"],
    JX6 = new Set(Lm0),
    Rm0 = ["audio", "audioworklet", "font", "image", "manifest", "paintworklet", "script", "style", "track", "video", "xslt", ""],
    FX6 = new Set(Rm0);
  Om0.exports = {
    subresource: Rm0,
    forbiddenMethods: Lm0,
    requestBodyHeader: YX6,
    referrerPolicy: qm0,
    requestRedirect: QX6,
    requestMode: GX6,
    requestCredentials: ZX6,
    requestCache: DX6,
    redirectStatus: Nm0,
    corsSafeListedMethods: Um0,
    nullBodyStatus: tF6,
    safeMethods: Mm0,
    badPorts: $m0,
    requestDuplex: WX6,
    subresourceSet: FX6,
    badPortsSet: AX6,
    redirectStatusSet: eF6,
    corsSafeListedMethodsSet: oF6,
    safeMethodsSet: IX6,
    forbiddenMethodsSet: JX6,
    referrerPolicySet: BX6
  }
})
// @from(Start 5388772, End 5389489)
ku1 = z((jR8, Tm0) => {
  var yu1 = Symbol.for("undici.globalOrigin.1");

  function XX6() {
    return globalThis[yu1]
  }

  function VX6(A) {
    if (A === void 0) {
      Object.defineProperty(globalThis, yu1, {
        value: void 0,
        writable: !0,
        enumerable: !1,
        configurable: !1
      });
      return
    }
    let B = new URL(A);
    if (B.protocol !== "http:" && B.protocol !== "https:") throw new TypeError(`Only http & https urls are allowed, received ${B.protocol}`);
    Object.defineProperty(globalThis, yu1, {
      value: B,
      writable: !0,
      enumerable: !1,
      configurable: !1
    })
  }
  Tm0.exports = {
    getGlobalOrigin: XX6,
    setGlobalOrigin: VX6
  }
})
// @from(Start 5389495, End 5396341)
nY = z((yR8, xm0) => {
  var yY1 = Z1("node:assert"),
    CX6 = new TextEncoder,
    vr = /^[!#$%&'*+\-.^_|~A-Za-z0-9]+$/,
    KX6 = /[\u000A\u000D\u0009\u0020]/,
    HX6 = /[\u0009\u000A\u000C\u000D\u0020]/g,
    zX6 = /^[\u0009\u0020-\u007E\u0080-\u00FF]+$/;

  function wX6(A) {
    yY1(A.protocol === "data:");
    let B = _m0(A, !0);
    B = B.slice(5);
    let Q = {
        position: 0
      },
      I = yh(",", B, Q),
      G = I.length;
    if (I = MX6(I, !0, !0), Q.position >= B.length) return "failure";
    Q.position++;
    let Z = B.slice(G + 1),
      D = jm0(Z);
    if (/;(\u0020){0,}base64$/i.test(I)) {
      let W = km0(D);
      if (D = UX6(W), D === "failure") return "failure";
      I = I.slice(0, -6), I = I.replace(/(\u0020)+$/, ""), I = I.slice(0, -1)
    }
    if (I.startsWith(";")) I = "text/plain" + I;
    let Y = xu1(I);
    if (Y === "failure") Y = xu1("text/plain;charset=US-ASCII");
    return {
      mimeType: Y,
      body: D
    }
  }

  function _m0(A, B = !1) {
    if (!B) return A.href;
    let Q = A.href,
      I = A.hash.length,
      G = I === 0 ? Q : Q.substring(0, Q.length - I);
    if (!I && Q.endsWith("#")) return G.slice(0, -1);
    return G
  }

  function kY1(A, B, Q) {
    let I = "";
    while (Q.position < B.length && A(B[Q.position])) I += B[Q.position], Q.position++;
    return I
  }

  function yh(A, B, Q) {
    let I = B.indexOf(A, Q.position),
      G = Q.position;
    if (I === -1) return Q.position = B.length, B.slice(G);
    return Q.position = I, B.slice(G, Q.position)
  }

  function jm0(A) {
    let B = CX6.encode(A);
    return EX6(B)
  }

  function Pm0(A) {
    return A >= 48 && A <= 57 || A >= 65 && A <= 70 || A >= 97 && A <= 102
  }

  function Sm0(A) {
    return A >= 48 && A <= 57 ? A - 48 : (A & 223) - 55
  }

  function EX6(A) {
    let B = A.length,
      Q = new Uint8Array(B),
      I = 0;
    for (let G = 0; G < B; ++G) {
      let Z = A[G];
      if (Z !== 37) Q[I++] = Z;
      else if (Z === 37 && !(Pm0(A[G + 1]) && Pm0(A[G + 2]))) Q[I++] = 37;
      else Q[I++] = Sm0(A[G + 1]) << 4 | Sm0(A[G + 2]), G += 2
    }
    return B === I ? Q : Q.subarray(0, I)
  }

  function xu1(A) {
    A = jY1(A, !0, !0);
    let B = {
        position: 0
      },
      Q = yh("/", A, B);
    if (Q.length === 0 || !vr.test(Q)) return "failure";
    if (B.position > A.length) return "failure";
    B.position++;
    let I = yh(";", A, B);
    if (I = jY1(I, !1, !0), I.length === 0 || !vr.test(I)) return "failure";
    let G = Q.toLowerCase(),
      Z = I.toLowerCase(),
      D = {
        type: G,
        subtype: Z,
        parameters: new Map,
        essence: `${G}/${Z}`
      };
    while (B.position < A.length) {
      B.position++, kY1((J) => KX6.test(J), A, B);
      let Y = kY1((J) => J !== ";" && J !== "=", A, B);
      if (Y = Y.toLowerCase(), B.position < A.length) {
        if (A[B.position] === ";") continue;
        B.position++
      }
      if (B.position > A.length) break;
      let W = null;
      if (A[B.position] === '"') W = ym0(A, B, !0), yh(";", A, B);
      else if (W = yh(";", A, B), W = jY1(W, !1, !0), W.length === 0) continue;
      if (Y.length !== 0 && vr.test(Y) && (W.length === 0 || zX6.test(W)) && !D.parameters.has(Y)) D.parameters.set(Y, W)
    }
    return D
  }

  function UX6(A) {
    A = A.replace(HX6, "");
    let B = A.length;
    if (B % 4 === 0) {
      if (A.charCodeAt(B - 1) === 61) {
        if (--B, A.charCodeAt(B - 1) === 61) --B
      }
    }
    if (B % 4 === 1) return "failure";
    if (/[^+/0-9A-Za-z]/.test(A.length === B ? A : A.substring(0, B))) return "failure";
    let Q = Buffer.from(A, "base64");
    return new Uint8Array(Q.buffer, Q.byteOffset, Q.byteLength)
  }

  function ym0(A, B, Q) {
    let I = B.position,
      G = "";
    yY1(A[B.position] === '"'), B.position++;
    while (!0) {
      if (G += kY1((D) => D !== '"' && D !== "\\", A, B), B.position >= A.length) break;
      let Z = A[B.position];
      if (B.position++, Z === "\\") {
        if (B.position >= A.length) {
          G += "\\";
          break
        }
        G += A[B.position], B.position++
      } else {
        yY1(Z === '"');
        break
      }
    }
    if (Q) return G;
    return A.slice(I, B.position)
  }

  function NX6(A) {
    yY1(A !== "failure");
    let {
      parameters: B,
      essence: Q
    } = A, I = Q;
    for (let [G, Z] of B.entries()) {
      if (I += ";", I += G, I += "=", !vr.test(Z)) Z = Z.replace(/(\\|")/g, "\\$1"), Z = '"' + Z, Z += '"';
      I += Z
    }
    return I
  }

  function $X6(A) {
    return A === 13 || A === 10 || A === 9 || A === 32
  }

  function jY1(A, B = !0, Q = !0) {
    return fu1(A, B, Q, $X6)
  }

  function qX6(A) {
    return A === 13 || A === 10 || A === 9 || A === 12 || A === 32
  }

  function MX6(A, B = !0, Q = !0) {
    return fu1(A, B, Q, qX6)
  }

  function fu1(A, B, Q, I) {
    let G = 0,
      Z = A.length - 1;
    if (B)
      while (G < A.length && I(A.charCodeAt(G))) G++;
    if (Q)
      while (Z > 0 && I(A.charCodeAt(Z))) Z--;
    return G === 0 && Z === A.length - 1 ? A : A.slice(G, Z + 1)
  }

  function km0(A) {
    let B = A.length;
    if (65535 > B) return String.fromCharCode.apply(null, A);
    let Q = "",
      I = 0,
      G = 65535;
    while (I < B) {
      if (I + G > B) G = B - I;
      Q += String.fromCharCode.apply(null, A.subarray(I, I += G))
    }
    return Q
  }

  function LX6(A) {
    switch (A.essence) {
      case "application/ecmascript":
      case "application/javascript":
      case "application/x-ecmascript":
      case "application/x-javascript":
      case "text/ecmascript":
      case "text/javascript":
      case "text/javascript1.0":
      case "text/javascript1.1":
      case "text/javascript1.2":
      case "text/javascript1.3":
      case "text/javascript1.4":
      case "text/javascript1.5":
      case "text/jscript":
      case "text/livescript":
      case "text/x-ecmascript":
      case "text/x-javascript":
        return "text/javascript";
      case "application/json":
      case "text/json":
        return "application/json";
      case "image/svg+xml":
        return "image/svg+xml";
      case "text/xml":
      case "application/xml":
        return "application/xml"
    }
    if (A.subtype.endsWith("+json")) return "application/json";
    if (A.subtype.endsWith("+xml")) return "application/xml";
    return ""
  }
  xm0.exports = {
    dataURLProcessor: wX6,
    URLSerializer: _m0,
    collectASequenceOfCodePoints: kY1,
    collectASequenceOfCodePointsFast: yh,
    stringPercentDecode: jm0,
    parseMIMEType: xu1,
    collectAnHTTPQuotedString: ym0,
    serializeAMimeType: NX6,
    removeChars: fu1,
    removeHTTPWhitespace: jY1,
    minimizeSupportedMimeType: LX6,
    HTTP_TOKEN_CODEPOINTS: vr,
    isomorphicDecode: km0
  }
})
// @from(Start 5396347, End 5407105)
jG = z((kR8, fm0) => {
  var {
    types: Nw,
    inspect: RX6
  } = Z1("node:util"), {
    markAsUncloneable: OX6
  } = Z1("node:worker_threads"), {
    toUSVString: TX6
  } = C6(), P0 = {};
  P0.converters = {};
  P0.util = {};
  P0.errors = {};
  P0.errors.exception = function(A) {
    return new TypeError(`${A.header}: ${A.message}`)
  };
  P0.errors.conversionFailed = function(A) {
    let B = A.types.length === 1 ? "" : " one of",
      Q = `${A.argument} could not be converted to${B}: ${A.types.join(", ")}.`;
    return P0.errors.exception({
      header: A.prefix,
      message: Q
    })
  };
  P0.errors.invalidArgument = function(A) {
    return P0.errors.exception({
      header: A.prefix,
      message: `"${A.value}" is an invalid ${A.type}.`
    })
  };
  P0.brandCheck = function(A, B, Q) {
    if (Q?.strict !== !1) {
      if (!(A instanceof B)) {
        let I = new TypeError("Illegal invocation");
        throw I.code = "ERR_INVALID_THIS", I
      }
    } else if (A?.[Symbol.toStringTag] !== B.prototype[Symbol.toStringTag]) {
      let I = new TypeError("Illegal invocation");
      throw I.code = "ERR_INVALID_THIS", I
    }
  };
  P0.argumentLengthCheck = function({
    length: A
  }, B, Q) {
    if (A < B) throw P0.errors.exception({
      message: `${B} argument${B!==1?"s":""} required, but${A?" only":""} ${A} found.`,
      header: Q
    })
  };
  P0.illegalConstructor = function() {
    throw P0.errors.exception({
      header: "TypeError",
      message: "Illegal constructor"
    })
  };
  P0.util.Type = function(A) {
    switch (typeof A) {
      case "undefined":
        return "Undefined";
      case "boolean":
        return "Boolean";
      case "string":
        return "String";
      case "symbol":
        return "Symbol";
      case "number":
        return "Number";
      case "bigint":
        return "BigInt";
      case "function":
      case "object": {
        if (A === null) return "Null";
        return "Object"
      }
    }
  };
  P0.util.markAsUncloneable = OX6 || (() => {});
  P0.util.ConvertToInt = function(A, B, Q, I) {
    let G, Z;
    if (B === 64)
      if (G = Math.pow(2, 53) - 1, Q === "unsigned") Z = 0;
      else Z = Math.pow(-2, 53) + 1;
    else if (Q === "unsigned") Z = 0, G = Math.pow(2, B) - 1;
    else Z = Math.pow(-2, B) - 1, G = Math.pow(2, B - 1) - 1;
    let D = Number(A);
    if (D === 0) D = 0;
    if (I?.enforceRange === !0) {
      if (Number.isNaN(D) || D === Number.POSITIVE_INFINITY || D === Number.NEGATIVE_INFINITY) throw P0.errors.exception({
        header: "Integer conversion",
        message: `Could not convert ${P0.util.Stringify(A)} to an integer.`
      });
      if (D = P0.util.IntegerPart(D), D < Z || D > G) throw P0.errors.exception({
        header: "Integer conversion",
        message: `Value must be between ${Z}-${G}, got ${D}.`
      });
      return D
    }
    if (!Number.isNaN(D) && I?.clamp === !0) {
      if (D = Math.min(Math.max(D, Z), G), Math.floor(D) % 2 === 0) D = Math.floor(D);
      else D = Math.ceil(D);
      return D
    }
    if (Number.isNaN(D) || D === 0 && Object.is(0, D) || D === Number.POSITIVE_INFINITY || D === Number.NEGATIVE_INFINITY) return 0;
    if (D = P0.util.IntegerPart(D), D = D % Math.pow(2, B), Q === "signed" && D >= Math.pow(2, B) - 1) return D - Math.pow(2, B);
    return D
  };
  P0.util.IntegerPart = function(A) {
    let B = Math.floor(Math.abs(A));
    if (A < 0) return -1 * B;
    return B
  };
  P0.util.Stringify = function(A) {
    switch (P0.util.Type(A)) {
      case "Symbol":
        return `Symbol(${A.description})`;
      case "Object":
        return RX6(A);
      case "String":
        return `"${A}"`;
      default:
        return `${A}`
    }
  };
  P0.sequenceConverter = function(A) {
    return (B, Q, I, G) => {
      if (P0.util.Type(B) !== "Object") throw P0.errors.exception({
        header: Q,
        message: `${I} (${P0.util.Stringify(B)}) is not iterable.`
      });
      let Z = typeof G === "function" ? G() : B?.[Symbol.iterator]?.(),
        D = [],
        Y = 0;
      if (Z === void 0 || typeof Z.next !== "function") throw P0.errors.exception({
        header: Q,
        message: `${I} is not iterable.`
      });
      while (!0) {
        let {
          done: W,
          value: J
        } = Z.next();
        if (W) break;
        D.push(A(J, Q, `${I}[${Y++}]`))
      }
      return D
    }
  };
  P0.recordConverter = function(A, B) {
    return (Q, I, G) => {
      if (P0.util.Type(Q) !== "Object") throw P0.errors.exception({
        header: I,
        message: `${G} ("${P0.util.Type(Q)}") is not an Object.`
      });
      let Z = {};
      if (!Nw.isProxy(Q)) {
        let Y = [...Object.getOwnPropertyNames(Q), ...Object.getOwnPropertySymbols(Q)];
        for (let W of Y) {
          let J = A(W, I, G),
            F = B(Q[W], I, G);
          Z[J] = F
        }
        return Z
      }
      let D = Reflect.ownKeys(Q);
      for (let Y of D)
        if (Reflect.getOwnPropertyDescriptor(Q, Y)?.enumerable) {
          let J = A(Y, I, G),
            F = B(Q[Y], I, G);
          Z[J] = F
        } return Z
    }
  };
  P0.interfaceConverter = function(A) {
    return (B, Q, I, G) => {
      if (G?.strict !== !1 && !(B instanceof A)) throw P0.errors.exception({
        header: Q,
        message: `Expected ${I} ("${P0.util.Stringify(B)}") to be an instance of ${A.name}.`
      });
      return B
    }
  };
  P0.dictionaryConverter = function(A) {
    return (B, Q, I) => {
      let G = P0.util.Type(B),
        Z = {};
      if (G === "Null" || G === "Undefined") return Z;
      else if (G !== "Object") throw P0.errors.exception({
        header: Q,
        message: `Expected ${B} to be one of: Null, Undefined, Object.`
      });
      for (let D of A) {
        let {
          key: Y,
          defaultValue: W,
          required: J,
          converter: F
        } = D;
        if (J === !0) {
          if (!Object.hasOwn(B, Y)) throw P0.errors.exception({
            header: Q,
            message: `Missing required key "${Y}".`
          })
        }
        let X = B[Y],
          V = Object.hasOwn(D, "defaultValue");
        if (V && X !== null) X ??= W();
        if (J || V || X !== void 0) {
          if (X = F(X, Q, `${I}.${Y}`), D.allowedValues && !D.allowedValues.includes(X)) throw P0.errors.exception({
            header: Q,
            message: `${X} is not an accepted type. Expected one of ${D.allowedValues.join(", ")}.`
          });
          Z[Y] = X
        }
      }
      return Z
    }
  };
  P0.nullableConverter = function(A) {
    return (B, Q, I) => {
      if (B === null) return B;
      return A(B, Q, I)
    }
  };
  P0.converters.DOMString = function(A, B, Q, I) {
    if (A === null && I?.legacyNullToEmptyString) return "";
    if (typeof A === "symbol") throw P0.errors.exception({
      header: B,
      message: `${Q} is a symbol, which cannot be converted to a DOMString.`
    });
    return String(A)
  };
  P0.converters.ByteString = function(A, B, Q) {
    let I = P0.converters.DOMString(A, B, Q);
    for (let G = 0; G < I.length; G++)
      if (I.charCodeAt(G) > 255) throw new TypeError(`Cannot convert argument to a ByteString because the character at index ${G} has a value of ${I.charCodeAt(G)} which is greater than 255.`);
    return I
  };
  P0.converters.USVString = TX6;
  P0.converters.boolean = function(A) {
    return Boolean(A)
  };
  P0.converters.any = function(A) {
    return A
  };
  P0.converters["long long"] = function(A, B, Q) {
    return P0.util.ConvertToInt(A, 64, "signed", void 0, B, Q)
  };
  P0.converters["unsigned long long"] = function(A, B, Q) {
    return P0.util.ConvertToInt(A, 64, "unsigned", void 0, B, Q)
  };
  P0.converters["unsigned long"] = function(A, B, Q) {
    return P0.util.ConvertToInt(A, 32, "unsigned", void 0, B, Q)
  };
  P0.converters["unsigned short"] = function(A, B, Q, I) {
    return P0.util.ConvertToInt(A, 16, "unsigned", I, B, Q)
  };
  P0.converters.ArrayBuffer = function(A, B, Q, I) {
    if (P0.util.Type(A) !== "Object" || !Nw.isAnyArrayBuffer(A)) throw P0.errors.conversionFailed({
      prefix: B,
      argument: `${Q} ("${P0.util.Stringify(A)}")`,
      types: ["ArrayBuffer"]
    });
    if (I?.allowShared === !1 && Nw.isSharedArrayBuffer(A)) throw P0.errors.exception({
      header: "ArrayBuffer",
      message: "SharedArrayBuffer is not allowed."
    });
    if (A.resizable || A.growable) throw P0.errors.exception({
      header: "ArrayBuffer",
      message: "Received a resizable ArrayBuffer."
    });
    return A
  };
  P0.converters.TypedArray = function(A, B, Q, I, G) {
    if (P0.util.Type(A) !== "Object" || !Nw.isTypedArray(A) || A.constructor.name !== B.name) throw P0.errors.conversionFailed({
      prefix: Q,
      argument: `${I} ("${P0.util.Stringify(A)}")`,
      types: [B.name]
    });
    if (G?.allowShared === !1 && Nw.isSharedArrayBuffer(A.buffer)) throw P0.errors.exception({
      header: "ArrayBuffer",
      message: "SharedArrayBuffer is not allowed."
    });
    if (A.buffer.resizable || A.buffer.growable) throw P0.errors.exception({
      header: "ArrayBuffer",
      message: "Received a resizable ArrayBuffer."
    });
    return A
  };
  P0.converters.DataView = function(A, B, Q, I) {
    if (P0.util.Type(A) !== "Object" || !Nw.isDataView(A)) throw P0.errors.exception({
      header: B,
      message: `${Q} is not a DataView.`
    });
    if (I?.allowShared === !1 && Nw.isSharedArrayBuffer(A.buffer)) throw P0.errors.exception({
      header: "ArrayBuffer",
      message: "SharedArrayBuffer is not allowed."
    });
    if (A.buffer.resizable || A.buffer.growable) throw P0.errors.exception({
      header: "ArrayBuffer",
      message: "Received a resizable ArrayBuffer."
    });
    return A
  };
  P0.converters.BufferSource = function(A, B, Q, I) {
    if (Nw.isAnyArrayBuffer(A)) return P0.converters.ArrayBuffer(A, B, Q, {
      ...I,
      allowShared: !1
    });
    if (Nw.isTypedArray(A)) return P0.converters.TypedArray(A, A.constructor, B, Q, {
      ...I,
      allowShared: !1
    });
    if (Nw.isDataView(A)) return P0.converters.DataView(A, B, Q, {
      ...I,
      allowShared: !1
    });
    throw P0.errors.conversionFailed({
      prefix: B,
      argument: `${Q} ("${P0.util.Stringify(A)}")`,
      types: ["BufferSource"]
    })
  };
  P0.converters["sequence<ByteString>"] = P0.sequenceConverter(P0.converters.ByteString);
  P0.converters["sequence<sequence<ByteString>>"] = P0.sequenceConverter(P0.converters["sequence<ByteString>"]);
  P0.converters["record<ByteString, ByteString>"] = P0.recordConverter(P0.converters.ByteString, P0.converters.ByteString);
  fm0.exports = {
    webidl: P0
  }
})
// @from(Start 5407111, End 5425572)
MJ = z((xR8, tm0) => {
  var {
    Transform: PX6
  } = Z1("node:stream"), vm0 = Z1("node:zlib"), {
    redirectStatusSet: SX6,
    referrerPolicySet: _X6,
    badPortsSet: jX6
  } = fr(), {
    getGlobalOrigin: bm0
  } = ku1(), {
    collectASequenceOfCodePoints: Jj,
    collectAnHTTPQuotedString: yX6,
    removeChars: kX6,
    parseMIMEType: xX6
  } = nY(), {
    performance: fX6
  } = Z1("node:perf_hooks"), {
    isBlobLike: vX6,
    ReadableStreamFrom: bX6,
    isValidHTTPToken: gm0,
    normalizedMethodRecordsBase: gX6
  } = C6(), Fj = Z1("node:assert"), {
    isUint8Array: hX6
  } = Z1("node:util/types"), {
    webidl: br
  } = jG(), hm0 = [], fY1;
  try {
    fY1 = Z1("node:crypto");
    let A = ["sha256", "sha384", "sha512"];
    hm0 = fY1.getHashes().filter((B) => A.includes(B))
  } catch {}

  function mm0(A) {
    let B = A.urlList,
      Q = B.length;
    return Q === 0 ? null : B[Q - 1].toString()
  }

  function mX6(A, B) {
    if (!SX6.has(A.status)) return null;
    let Q = A.headersList.get("location", !0);
    if (Q !== null && um0(Q)) {
      if (!dm0(Q)) Q = dX6(Q);
      Q = new URL(Q, mm0(A))
    }
    if (Q && !Q.hash) Q.hash = B;
    return Q
  }

  function dm0(A) {
    for (let B = 0; B < A.length; ++B) {
      let Q = A.charCodeAt(B);
      if (Q > 126 || Q < 32) return !1
    }
    return !0
  }

  function dX6(A) {
    return Buffer.from(A, "binary").toString("utf8")
  }

  function hr(A) {
    return A.urlList[A.urlList.length - 1]
  }

  function uX6(A) {
    let B = hr(A);
    if (nm0(B) && jX6.has(B.port)) return "blocked";
    return "allowed"
  }

  function pX6(A) {
    return A instanceof Error || (A?.constructor?.name === "Error" || A?.constructor?.name === "DOMException")
  }

  function cX6(A) {
    for (let B = 0; B < A.length; ++B) {
      let Q = A.charCodeAt(B);
      if (!(Q === 9 || Q >= 32 && Q <= 126 || Q >= 128 && Q <= 255)) return !1
    }
    return !0
  }
  var lX6 = gm0;

  function um0(A) {
    return (A[0] === "\t" || A[0] === " " || A[A.length - 1] === "\t" || A[A.length - 1] === " " || A.includes(`
`) || A.includes("\r") || A.includes("\x00")) === !1
  }

  function iX6(A, B) {
    let {
      headersList: Q
    } = B, I = (Q.get("referrer-policy", !0) ?? "").split(","), G = "";
    if (I.length > 0)
      for (let Z = I.length; Z !== 0; Z--) {
        let D = I[Z - 1].trim();
        if (_X6.has(D)) {
          G = D;
          break
        }
      }
    if (G !== "") A.referrerPolicy = G
  }

  function nX6() {
    return "allowed"
  }

  function aX6() {
    return "success"
  }

  function sX6() {
    return "success"
  }

  function rX6(A) {
    let B = null;
    B = A.mode, A.headersList.set("sec-fetch-mode", B, !0)
  }

  function oX6(A) {
    let B = A.origin;
    if (B === "client" || B === void 0) return;
    if (A.responseTainting === "cors" || A.mode === "websocket") A.headersList.append("origin", B, !0);
    else if (A.method !== "GET" && A.method !== "HEAD") {
      switch (A.referrerPolicy) {
        case "no-referrer":
          B = null;
          break;
        case "no-referrer-when-downgrade":
        case "strict-origin":
        case "strict-origin-when-cross-origin":
          if (A.origin && bu1(A.origin) && !bu1(hr(A))) B = null;
          break;
        case "same-origin":
          if (!vY1(A, hr(A))) B = null;
          break;
        default:
      }
      A.headersList.append("origin", B, !0)
    }
  }

  function kh(A, B) {
    return A
  }

  function tX6(A, B, Q) {
    if (!A?.startTime || A.startTime < B) return {
      domainLookupStartTime: B,
      domainLookupEndTime: B,
      connectionStartTime: B,
      connectionEndTime: B,
      secureConnectionStartTime: B,
      ALPNNegotiatedProtocol: A?.ALPNNegotiatedProtocol
    };
    return {
      domainLookupStartTime: kh(A.domainLookupStartTime, Q),
      domainLookupEndTime: kh(A.domainLookupEndTime, Q),
      connectionStartTime: kh(A.connectionStartTime, Q),
      connectionEndTime: kh(A.connectionEndTime, Q),
      secureConnectionStartTime: kh(A.secureConnectionStartTime, Q),
      ALPNNegotiatedProtocol: A.ALPNNegotiatedProtocol
    }
  }

  function eX6(A) {
    return kh(fX6.now(), A)
  }

  function AV6(A) {
    return {
      startTime: A.startTime ?? 0,
      redirectStartTime: 0,
      redirectEndTime: 0,
      postRedirectStartTime: A.startTime ?? 0,
      finalServiceWorkerStartTime: 0,
      finalNetworkResponseStartTime: 0,
      finalNetworkRequestStartTime: 0,
      endTime: 0,
      encodedBodySize: 0,
      decodedBodySize: 0,
      finalConnectionTimingInfo: null
    }
  }

  function pm0() {
    return {
      referrerPolicy: "strict-origin-when-cross-origin"
    }
  }

  function BV6(A) {
    return {
      referrerPolicy: A.referrerPolicy
    }
  }

  function QV6(A) {
    let B = A.referrerPolicy;
    Fj(B);
    let Q = null;
    if (A.referrer === "client") {
      let Y = bm0();
      if (!Y || Y.origin === "null") return "no-referrer";
      Q = new URL(Y)
    } else if (A.referrer instanceof URL) Q = A.referrer;
    let I = vu1(Q),
      G = vu1(Q, !0);
    if (I.toString().length > 4096) I = G;
    let Z = vY1(A, I),
      D = gr(I) && !gr(A.url);
    switch (B) {
      case "origin":
        return G != null ? G : vu1(Q, !0);
      case "unsafe-url":
        return I;
      case "same-origin":
        return Z ? G : "no-referrer";
      case "origin-when-cross-origin":
        return Z ? I : G;
      case "strict-origin-when-cross-origin": {
        let Y = hr(A);
        if (vY1(I, Y)) return I;
        if (gr(I) && !gr(Y)) return "no-referrer";
        return G
      }
      case "strict-origin":
      case "no-referrer-when-downgrade":
      default:
        return D ? "no-referrer" : G
    }
  }

  function vu1(A, B) {
    if (Fj(A instanceof URL), A = new URL(A), A.protocol === "file:" || A.protocol === "about:" || A.protocol === "blank:") return "no-referrer";
    if (A.username = "", A.password = "", A.hash = "", B) A.pathname = "", A.search = "";
    return A
  }

  function gr(A) {
    if (!(A instanceof URL)) return !1;
    if (A.href === "about:blank" || A.href === "about:srcdoc") return !0;
    if (A.protocol === "data:") return !0;
    if (A.protocol === "file:") return !0;
    return B(A.origin);

    function B(Q) {
      if (Q == null || Q === "null") return !1;
      let I = new URL(Q);
      if (I.protocol === "https:" || I.protocol === "wss:") return !0;
      if (/^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(I.hostname) || (I.hostname === "localhost" || I.hostname.includes("localhost.")) || I.hostname.endsWith(".localhost")) return !0;
      return !1
    }
  }

  function IV6(A, B) {
    if (fY1 === void 0) return !0;
    let Q = cm0(B);
    if (Q === "no metadata") return !0;
    if (Q.length === 0) return !0;
    let I = ZV6(Q),
      G = DV6(Q, I);
    for (let Z of G) {
      let {
        algo: D,
        hash: Y
      } = Z, W = fY1.createHash(D).update(A).digest("base64");
      if (W[W.length - 1] === "=")
        if (W[W.length - 2] === "=") W = W.slice(0, -2);
        else W = W.slice(0, -1);
      if (YV6(W, Y)) return !0
    }
    return !1
  }
  var GV6 = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\s|$)( +[!-~]*)?)?/i;

  function cm0(A) {
    let B = [],
      Q = !0;
    for (let I of A.split(" ")) {
      Q = !1;
      let G = GV6.exec(I);
      if (G === null || G.groups === void 0 || G.groups.algo === void 0) continue;
      let Z = G.groups.algo.toLowerCase();
      if (hm0.includes(Z)) B.push(G.groups)
    }
    if (Q === !0) return "no metadata";
    return B
  }

  function ZV6(A) {
    let B = A[0].algo;
    if (B[3] === "5") return B;
    for (let Q = 1; Q < A.length; ++Q) {
      let I = A[Q];
      if (I.algo[3] === "5") {
        B = "sha512";
        break
      } else if (B[3] === "3") continue;
      else if (I.algo[3] === "3") B = "sha384"
    }
    return B
  }

  function DV6(A, B) {
    if (A.length === 1) return A;
    let Q = 0;
    for (let I = 0; I < A.length; ++I)
      if (A[I].algo === B) A[Q++] = A[I];
    return A.length = Q, A
  }

  function YV6(A, B) {
    if (A.length !== B.length) return !1;
    for (let Q = 0; Q < A.length; ++Q)
      if (A[Q] !== B[Q]) {
        if (A[Q] === "+" && B[Q] === "-" || A[Q] === "/" && B[Q] === "_") continue;
        return !1
      } return !0
  }

  function WV6(A) {}

  function vY1(A, B) {
    if (A.origin === B.origin && A.origin === "null") return !0;
    if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) return !0;
    return !1
  }

  function JV6() {
    let A, B;
    return {
      promise: new Promise((I, G) => {
        A = I, B = G
      }),
      resolve: A,
      reject: B
    }
  }

  function FV6(A) {
    return A.controller.state === "aborted"
  }

  function XV6(A) {
    return A.controller.state === "aborted" || A.controller.state === "terminated"
  }

  function VV6(A) {
    return gX6[A.toLowerCase()] ?? A
  }

  function CV6(A) {
    let B = JSON.stringify(A);
    if (B === void 0) throw new TypeError("Value is not JSON serializable");
    return Fj(typeof B === "string"), B
  }
  var KV6 = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));

  function lm0(A, B, Q = 0, I = 1) {
    class G {
      #A;
      #B;
      #Q;
      constructor(Z, D) {
        this.#A = Z, this.#B = D, this.#Q = 0
      }
      next() {
        if (typeof this !== "object" || this === null || !(#A in this)) throw new TypeError(`'next' called on an object that does not implement interface ${A} Iterator.`);
        let Z = this.#Q,
          D = this.#A[B],
          Y = D.length;
        if (Z >= Y) return {
          value: void 0,
          done: !0
        };
        let {
          [Q]: W, [I]: J
        } = D[Z];
        this.#Q = Z + 1;
        let F;
        switch (this.#B) {
          case "key":
            F = W;
            break;
          case "value":
            F = J;
            break;
          case "key+value":
            F = [W, J];
            break
        }
        return {
          value: F,
          done: !1
        }
      }
    }
    return delete G.prototype.constructor, Object.setPrototypeOf(G.prototype, KV6), Object.defineProperties(G.prototype, {
        [Symbol.toStringTag]: {
          writable: !1,
          enumerable: !1,
          configurable: !0,
          value: `${A} Iterator`
        },
        next: {
          writable: !0,
          enumerable: !0,
          configurable: !0
        }
      }),
      function(Z, D) {
        return new G(Z, D)
      }
  }

  function HV6(A, B, Q, I = 0, G = 1) {
    let Z = lm0(A, Q, I, G),
      D = {
        keys: {
          writable: !0,
          enumerable: !0,
          configurable: !0,
          value: function Y() {
            return br.brandCheck(this, B), Z(this, "key")
          }
        },
        values: {
          writable: !0,
          enumerable: !0,
          configurable: !0,
          value: function Y() {
            return br.brandCheck(this, B), Z(this, "value")
          }
        },
        entries: {
          writable: !0,
          enumerable: !0,
          configurable: !0,
          value: function Y() {
            return br.brandCheck(this, B), Z(this, "key+value")
          }
        },
        forEach: {
          writable: !0,
          enumerable: !0,
          configurable: !0,
          value: function Y(W, J = globalThis) {
            if (br.brandCheck(this, B), br.argumentLengthCheck(arguments, 1, `${A}.forEach`), typeof W !== "function") throw new TypeError(`Failed to execute 'forEach' on '${A}': parameter 1 is not of type 'Function'.`);
            for (let {
                0: F,
                1: X
              }
              of Z(this, "key+value")) W.call(J, X, F, this)
          }
        }
      };
    return Object.defineProperties(B.prototype, {
      ...D,
      [Symbol.iterator]: {
        writable: !0,
        enumerable: !1,
        configurable: !0,
        value: D.entries.value
      }
    })
  }
  async function zV6(A, B, Q) {
    let I = B,
      G = Q,
      Z;
    try {
      Z = A.stream.getReader()
    } catch (D) {
      G(D);
      return
    }
    try {
      I(await im0(Z))
    } catch (D) {
      G(D)
    }
  }

  function wV6(A) {
    return A instanceof ReadableStream || A[Symbol.toStringTag] === "ReadableStream" && typeof A.tee === "function"
  }

  function EV6(A) {
    try {
      A.close(), A.byobRequest?.respond(0)
    } catch (B) {
      if (!B.message.includes("Controller is already closed") && !B.message.includes("ReadableStream is already closed")) throw B
    }
  }
  var UV6 = /[^\x00-\xFF]/;

  function xY1(A) {
    return Fj(!UV6.test(A)), A
  }
  async function im0(A) {
    let B = [],
      Q = 0;
    while (!0) {
      let {
        done: I,
        value: G
      } = await A.read();
      if (I) return Buffer.concat(B, Q);
      if (!hX6(G)) throw new TypeError("Received non-Uint8Array chunk");
      B.push(G), Q += G.length
    }
  }

  function NV6(A) {
    Fj("protocol" in A);
    let B = A.protocol;
    return B === "about:" || B === "blob:" || B === "data:"
  }

  function bu1(A) {
    return typeof A === "string" && A[5] === ":" && A[0] === "h" && A[1] === "t" && A[2] === "t" && A[3] === "p" && A[4] === "s" || A.protocol === "https:"
  }

  function nm0(A) {
    Fj("protocol" in A);
    let B = A.protocol;
    return B === "http:" || B === "https:"
  }

  function $V6(A, B) {
    let Q = A;
    if (!Q.startsWith("bytes")) return "failure";
    let I = {
      position: 5
    };
    if (B) Jj((W) => W === "\t" || W === " ", Q, I);
    if (Q.charCodeAt(I.position) !== 61) return "failure";
    if (I.position++, B) Jj((W) => W === "\t" || W === " ", Q, I);
    let G = Jj((W) => {
        let J = W.charCodeAt(0);
        return J >= 48 && J <= 57
      }, Q, I),
      Z = G.length ? Number(G) : null;
    if (B) Jj((W) => W === "\t" || W === " ", Q, I);
    if (Q.charCodeAt(I.position) !== 45) return "failure";
    if (I.position++, B) Jj((W) => W === "\t" || W === " ", Q, I);
    let D = Jj((W) => {
        let J = W.charCodeAt(0);
        return J >= 48 && J <= 57
      }, Q, I),
      Y = D.length ? Number(D) : null;
    if (I.position < Q.length) return "failure";
    if (Y === null && Z === null) return "failure";
    if (Z > Y) return "failure";
    return {
      rangeStartValue: Z,
      rangeEndValue: Y
    }
  }

  function qV6(A, B, Q) {
    let I = "bytes ";
    return I += xY1(`${A}`), I += "-", I += xY1(`${B}`), I += "/", I += xY1(`${Q}`), I
  }
  class am0 extends PX6 {
    #A;
    constructor(A) {
      super();
      this.#A = A
    }
    _transform(A, B, Q) {
      if (!this._inflateStream) {
        if (A.length === 0) {
          Q();
          return
        }
        this._inflateStream = (A[0] & 15) === 8 ? vm0.createInflate(this.#A) : vm0.createInflateRaw(this.#A), this._inflateStream.on("data", this.push.bind(this)), this._inflateStream.on("end", () => this.push(null)), this._inflateStream.on("error", (I) => this.destroy(I))
      }
      this._inflateStream.write(A, B, Q)
    }
    _final(A) {
      if (this._inflateStream) this._inflateStream.end(), this._inflateStream = null;
      A()
    }
  }

  function MV6(A) {
    return new am0(A)
  }

  function LV6(A) {
    let B = null,
      Q = null,
      I = null,
      G = sm0("content-type", A);
    if (G === null) return "failure";
    for (let Z of G) {
      let D = xX6(Z);
      if (D === "failure" || D.essence === "*/*") continue;
      if (I = D, I.essence !== Q) {
        if (B = null, I.parameters.has("charset")) B = I.parameters.get("charset");
        Q = I.essence
      } else if (!I.parameters.has("charset") && B !== null) I.parameters.set("charset", B)
    }
    if (I == null) return "failure";
    return I
  }

  function RV6(A) {
    let B = A,
      Q = {
        position: 0
      },
      I = [],
      G = "";
    while (Q.position < B.length) {
      if (G += Jj((Z) => Z !== '"' && Z !== ",", B, Q), Q.position < B.length)
        if (B.charCodeAt(Q.position) === 34) {
          if (G += yX6(B, Q), Q.position < B.length) continue
        } else Fj(B.charCodeAt(Q.position) === 44), Q.position++;
      G = kX6(G, !0, !0, (Z) => Z === 9 || Z === 32), I.push(G), G = ""
    }
    return I
  }

  function sm0(A, B) {
    let Q = B.get(A, !0);
    if (Q === null) return null;
    return RV6(Q)
  }
  var OV6 = new TextDecoder;

  function TV6(A) {
    if (A.length === 0) return "";
    if (A[0] === 239 && A[1] === 187 && A[2] === 191) A = A.subarray(3);
    return OV6.decode(A)
  }
  class rm0 {
    get baseUrl() {
      return bm0()
    }
    get origin() {
      return this.baseUrl?.origin
    }
    policyContainer = pm0()
  }
  class om0 {
    settingsObject = new rm0
  }
  var PV6 = new om0;
  tm0.exports = {
    isAborted: FV6,
    isCancelled: XV6,
    isValidEncodedURL: dm0,
    createDeferredPromise: JV6,
    ReadableStreamFrom: bX6,
    tryUpgradeRequestToAPotentiallyTrustworthyURL: WV6,
    clampAndCoarsenConnectionTimingInfo: tX6,
    coarsenedSharedCurrentTime: eX6,
    determineRequestsReferrer: QV6,
    makePolicyContainer: pm0,
    clonePolicyContainer: BV6,
    appendFetchMetadata: rX6,
    appendRequestOriginHeader: oX6,
    TAOCheck: sX6,
    corsCheck: aX6,
    crossOriginResourcePolicyCheck: nX6,
    createOpaqueTimingInfo: AV6,
    setRequestReferrerPolicyOnRedirect: iX6,
    isValidHTTPToken: gm0,
    requestBadPort: uX6,
    requestCurrentURL: hr,
    responseURL: mm0,
    responseLocationURL: mX6,
    isBlobLike: vX6,
    isURLPotentiallyTrustworthy: gr,
    isValidReasonPhrase: cX6,
    sameOrigin: vY1,
    normalizeMethod: VV6,
    serializeJavascriptValueToJSONString: CV6,
    iteratorMixin: HV6,
    createIterator: lm0,
    isValidHeaderName: lX6,
    isValidHeaderValue: um0,
    isErrorLike: pX6,
    fullyReadBody: zV6,
    bytesMatch: IV6,
    isReadableStreamLike: wV6,
    readableStreamClose: EV6,
    isomorphicEncode: xY1,
    urlIsLocal: NV6,
    urlHasHttpsScheme: bu1,
    urlIsHttpHttpsScheme: nm0,
    readAllBytes: im0,
    simpleRangeHeaderValue: $V6,
    buildContentRange: qV6,
    parseMetadata: cm0,
    createInflate: MV6,
    extractMimeType: LV6,
    getDecodeSplit: sm0,
    utf8DecodeBytes: TV6,
    environmentSettingsObject: PV6
  }
})
// @from(Start 5425578, End 5425781)
LR = z((fR8, em0) => {
  em0.exports = {
    kUrl: Symbol("url"),
    kHeaders: Symbol("headers"),
    kSignal: Symbol("signal"),
    kState: Symbol("state"),
    kDispatcher: Symbol("dispatcher")
  }
})
// @from(Start 5425787, End 5427225)
gu1 = z((vR8, Ad0) => {
  var {
    Blob: SV6,
    File: _V6
  } = Z1("node:buffer"), {
    kState: dN
  } = LR(), {
    webidl: $w
  } = jG();
  class qw {
    constructor(A, B, Q = {}) {
      let I = B,
        G = Q.type,
        Z = Q.lastModified ?? Date.now();
      this[dN] = {
        blobLike: A,
        name: I,
        type: G,
        lastModified: Z
      }
    }
    stream(...A) {
      return $w.brandCheck(this, qw), this[dN].blobLike.stream(...A)
    }
    arrayBuffer(...A) {
      return $w.brandCheck(this, qw), this[dN].blobLike.arrayBuffer(...A)
    }
    slice(...A) {
      return $w.brandCheck(this, qw), this[dN].blobLike.slice(...A)
    }
    text(...A) {
      return $w.brandCheck(this, qw), this[dN].blobLike.text(...A)
    }
    get size() {
      return $w.brandCheck(this, qw), this[dN].blobLike.size
    }
    get type() {
      return $w.brandCheck(this, qw), this[dN].blobLike.type
    }
    get name() {
      return $w.brandCheck(this, qw), this[dN].name
    }
    get lastModified() {
      return $w.brandCheck(this, qw), this[dN].lastModified
    }
    get[Symbol.toStringTag]() {
      return "File"
    }
  }
  $w.converters.Blob = $w.interfaceConverter(SV6);

  function jV6(A) {
    return A instanceof _V6 || A && (typeof A.stream === "function" || typeof A.arrayBuffer === "function") && A[Symbol.toStringTag] === "File"
  }
  Ad0.exports = {
    FileLike: qw,
    isFileLike: jV6
  }
})
// @from(Start 5427231, End 5431382)
mr = z((bR8, Zd0) => {
  var {
    isBlobLike: bY1,
    iteratorMixin: yV6
  } = MJ(), {
    kState: xD
  } = LR(), {
    kEnumerableProperty: xh
  } = C6(), {
    FileLike: Bd0,
    isFileLike: kV6
  } = gu1(), {
    webidl: DB
  } = jG(), {
    File: Gd0
  } = Z1("node:buffer"), Qd0 = Z1("node:util"), Id0 = globalThis.File ?? Gd0;
  class Mw {
    constructor(A) {
      if (DB.util.markAsUncloneable(this), A !== void 0) throw DB.errors.conversionFailed({
        prefix: "FormData constructor",
        argument: "Argument 1",
        types: ["undefined"]
      });
      this[xD] = []
    }
    append(A, B, Q = void 0) {
      DB.brandCheck(this, Mw);
      let I = "FormData.append";
      if (DB.argumentLengthCheck(arguments, 2, I), arguments.length === 3 && !bY1(B)) throw new TypeError("Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'");
      A = DB.converters.USVString(A, I, "name"), B = bY1(B) ? DB.converters.Blob(B, I, "value", {
        strict: !1
      }) : DB.converters.USVString(B, I, "value"), Q = arguments.length === 3 ? DB.converters.USVString(Q, I, "filename") : void 0;
      let G = hu1(A, B, Q);
      this[xD].push(G)
    }
    delete(A) {
      DB.brandCheck(this, Mw);
      let B = "FormData.delete";
      DB.argumentLengthCheck(arguments, 1, B), A = DB.converters.USVString(A, B, "name"), this[xD] = this[xD].filter((Q) => Q.name !== A)
    }
    get(A) {
      DB.brandCheck(this, Mw);
      let B = "FormData.get";
      DB.argumentLengthCheck(arguments, 1, B), A = DB.converters.USVString(A, B, "name");
      let Q = this[xD].findIndex((I) => I.name === A);
      if (Q === -1) return null;
      return this[xD][Q].value
    }
    getAll(A) {
      DB.brandCheck(this, Mw);
      let B = "FormData.getAll";
      return DB.argumentLengthCheck(arguments, 1, B), A = DB.converters.USVString(A, B, "name"), this[xD].filter((Q) => Q.name === A).map((Q) => Q.value)
    }
    has(A) {
      DB.brandCheck(this, Mw);
      let B = "FormData.has";
      return DB.argumentLengthCheck(arguments, 1, B), A = DB.converters.USVString(A, B, "name"), this[xD].findIndex((Q) => Q.name === A) !== -1
    }
    set(A, B, Q = void 0) {
      DB.brandCheck(this, Mw);
      let I = "FormData.set";
      if (DB.argumentLengthCheck(arguments, 2, I), arguments.length === 3 && !bY1(B)) throw new TypeError("Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'");
      A = DB.converters.USVString(A, I, "name"), B = bY1(B) ? DB.converters.Blob(B, I, "name", {
        strict: !1
      }) : DB.converters.USVString(B, I, "name"), Q = arguments.length === 3 ? DB.converters.USVString(Q, I, "name") : void 0;
      let G = hu1(A, B, Q),
        Z = this[xD].findIndex((D) => D.name === A);
      if (Z !== -1) this[xD] = [...this[xD].slice(0, Z), G, ...this[xD].slice(Z + 1).filter((D) => D.name !== A)];
      else this[xD].push(G)
    } [Qd0.inspect.custom](A, B) {
      let Q = this[xD].reduce((G, Z) => {
        if (G[Z.name])
          if (Array.isArray(G[Z.name])) G[Z.name].push(Z.value);
          else G[Z.name] = [G[Z.name], Z.value];
        else G[Z.name] = Z.value;
        return G
      }, {
        __proto__: null
      });
      B.depth ??= A, B.colors ??= !0;
      let I = Qd0.formatWithOptions(B, Q);
      return `FormData ${I.slice(I.indexOf("]")+2)}`
    }
  }
  yV6("FormData", Mw, xD, "name", "value");
  Object.defineProperties(Mw.prototype, {
    append: xh,
    delete: xh,
    get: xh,
    getAll: xh,
    has: xh,
    set: xh,
    [Symbol.toStringTag]: {
      value: "FormData",
      configurable: !0
    }
  });

  function hu1(A, B, Q) {
    if (typeof B === "string");
    else {
      if (!kV6(B)) B = B instanceof Blob ? new Id0([B], "blob", {
        type: B.type
      }) : new Bd0(B, "blob", {
        type: B.type
      });
      if (Q !== void 0) {
        let I = {
          type: B.type,
          lastModified: B.lastModified
        };
        B = B instanceof Gd0 ? new Id0([B], Q, I) : new Bd0(B, Q, I)
      }
    }
    return {
      name: A,
      value: B
    }
  }
  Zd0.exports = {
    FormData: Mw,
    makeEntry: hu1
  }
})
// @from(Start 5431388, End 5436614)
Xd0 = z((gR8, Fd0) => {
  var {
    isUSVString: Dd0,
    bufferToLowerCasedHeaderName: xV6
  } = C6(), {
    utf8DecodeBytes: fV6
  } = MJ(), {
    HTTP_TOKEN_CODEPOINTS: vV6,
    isomorphicDecode: Yd0
  } = nY(), {
    isFileLike: bV6
  } = gu1(), {
    makeEntry: gV6
  } = mr(), gY1 = Z1("node:assert"), {
    File: hV6
  } = Z1("node:buffer"), mV6 = globalThis.File ?? hV6, dV6 = Buffer.from('form-data; name="'), Wd0 = Buffer.from("; filename"), uV6 = Buffer.from("--"), pV6 = Buffer.from(`--\r
`);

  function cV6(A) {
    for (let B = 0; B < A.length; ++B)
      if ((A.charCodeAt(B) & -128) !== 0) return !1;
    return !0
  }

  function lV6(A) {
    let B = A.length;
    if (B < 27 || B > 70) return !1;
    for (let Q = 0; Q < B; ++Q) {
      let I = A.charCodeAt(Q);
      if (!(I >= 48 && I <= 57 || I >= 65 && I <= 90 || I >= 97 && I <= 122 || I === 39 || I === 45 || I === 95)) return !1
    }
    return !0
  }

  function iV6(A, B) {
    gY1(B !== "failure" && B.essence === "multipart/form-data");
    let Q = B.parameters.get("boundary");
    if (Q === void 0) return "failure";
    let I = Buffer.from(`--${Q}`, "utf8"),
      G = [],
      Z = {
        position: 0
      };
    while (A[Z.position] === 13 && A[Z.position + 1] === 10) Z.position += 2;
    let D = A.length;
    while (A[D - 1] === 10 && A[D - 2] === 13) D -= 2;
    if (D !== A.length) A = A.subarray(0, D);
    while (!0) {
      if (A.subarray(Z.position, Z.position + I.length).equals(I)) Z.position += I.length;
      else return "failure";
      if (Z.position === A.length - 2 && hY1(A, uV6, Z) || Z.position === A.length - 4 && hY1(A, pV6, Z)) return G;
      if (A[Z.position] !== 13 || A[Z.position + 1] !== 10) return "failure";
      Z.position += 2;
      let Y = nV6(A, Z);
      if (Y === "failure") return "failure";
      let {
        name: W,
        filename: J,
        contentType: F,
        encoding: X
      } = Y;
      Z.position += 2;
      let V;
      {
        let K = A.indexOf(I.subarray(2), Z.position);
        if (K === -1) return "failure";
        if (V = A.subarray(Z.position, K - 4), Z.position += V.length, X === "base64") V = Buffer.from(V.toString(), "base64")
      }
      if (A[Z.position] !== 13 || A[Z.position + 1] !== 10) return "failure";
      else Z.position += 2;
      let C;
      if (J !== null) {
        if (F ??= "text/plain", !cV6(F)) F = "";
        C = new mV6([V], J, {
          type: F
        })
      } else C = fV6(Buffer.from(V));
      gY1(Dd0(W)), gY1(typeof C === "string" && Dd0(C) || bV6(C)), G.push(gV6(W, C, J))
    }
  }

  function nV6(A, B) {
    let Q = null,
      I = null,
      G = null,
      Z = null;
    while (!0) {
      if (A[B.position] === 13 && A[B.position + 1] === 10) {
        if (Q === null) return "failure";
        return {
          name: Q,
          filename: I,
          contentType: G,
          encoding: Z
        }
      }
      let D = fh((Y) => Y !== 10 && Y !== 13 && Y !== 58, A, B);
      if (D = mu1(D, !0, !0, (Y) => Y === 9 || Y === 32), !vV6.test(D.toString())) return "failure";
      if (A[B.position] !== 58) return "failure";
      switch (B.position++, fh((Y) => Y === 32 || Y === 9, A, B), xV6(D)) {
        case "content-disposition": {
          if (Q = I = null, !hY1(A, dV6, B)) return "failure";
          if (B.position += 17, Q = Jd0(A, B), Q === null) return "failure";
          if (hY1(A, Wd0, B)) {
            let Y = B.position + Wd0.length;
            if (A[Y] === 42) B.position += 1, Y += 1;
            if (A[Y] !== 61 || A[Y + 1] !== 34) return "failure";
            if (B.position += 12, I = Jd0(A, B), I === null) return "failure"
          }
          break
        }
        case "content-type": {
          let Y = fh((W) => W !== 10 && W !== 13, A, B);
          Y = mu1(Y, !1, !0, (W) => W === 9 || W === 32), G = Yd0(Y);
          break
        }
        case "content-transfer-encoding": {
          let Y = fh((W) => W !== 10 && W !== 13, A, B);
          Y = mu1(Y, !1, !0, (W) => W === 9 || W === 32), Z = Yd0(Y);
          break
        }
        default:
          fh((Y) => Y !== 10 && Y !== 13, A, B)
      }
      if (A[B.position] !== 13 && A[B.position + 1] !== 10) return "failure";
      else B.position += 2
    }
  }

  function Jd0(A, B) {
    gY1(A[B.position - 1] === 34);
    let Q = fh((I) => I !== 10 && I !== 13 && I !== 34, A, B);
    if (A[B.position] !== 34) return null;
    else B.position++;
    return Q = new TextDecoder().decode(Q).replace(/%0A/ig, `
`).replace(/%0D/ig, "\r").replace(/%22/g, '"'), Q
  }

  function fh(A, B, Q) {
    let I = Q.position;
    while (I < B.length && A(B[I])) ++I;
    return B.subarray(Q.position, Q.position = I)
  }

  function mu1(A, B, Q, I) {
    let G = 0,
      Z = A.length - 1;
    if (B)
      while (G < A.length && I(A[G])) G++;
    if (Q)
      while (Z > 0 && I(A[Z])) Z--;
    return G === 0 && Z === A.length - 1 ? A : A.subarray(G, Z + 1)
  }

  function hY1(A, B, Q) {
    if (A.length < B.length) return !1;
    for (let I = 0; I < B.length; I++)
      if (B[I] !== A[Q.position + I]) return !1;
    return !0
  }
  Fd0.exports = {
    multipartFormDataParser: iV6,
    validateBoundary: lV6
  }
})
// @from(Start 5436620, End 5443925)
gh = z((hR8, Ud0) => {
  var dr = C6(),
    {
      ReadableStreamFrom: aV6,
      isBlobLike: Vd0,
      isReadableStreamLike: sV6,
      readableStreamClose: rV6,
      createDeferredPromise: oV6,
      fullyReadBody: tV6,
      extractMimeType: eV6,
      utf8DecodeBytes: Hd0
    } = MJ(),
    {
      FormData: Cd0
    } = mr(),
    {
      kState: bh
    } = LR(),
    {
      webidl: AC6
    } = jG(),
    {
      Blob: BC6
    } = Z1("node:buffer"),
    du1 = Z1("node:assert"),
    {
      isErrored: zd0,
      isDisturbed: QC6
    } = Z1("node:stream"),
    {
      isArrayBuffer: IC6
    } = Z1("node:util/types"),
    {
      serializeAMimeType: GC6
    } = nY(),
    {
      multipartFormDataParser: ZC6
    } = Xd0(),
    uu1;
  try {
    let A = Z1("node:crypto");
    uu1 = (B) => A.randomInt(0, B)
  } catch {
    uu1 = (A) => Math.floor(Math.random(A))
  }
  var mY1 = new TextEncoder;

  function DC6() {}
  var pu1 = globalThis.FinalizationRegistry && process.version.indexOf("v18") !== 0,
    cu1;
  if (pu1) cu1 = new FinalizationRegistry((A) => {
    let B = A.deref();
    if (B && !B.locked && !QC6(B) && !zd0(B)) B.cancel("Response object has been garbage collected").catch(DC6)
  });

  function wd0(A, B = !1) {
    let Q = null;
    if (A instanceof ReadableStream) Q = A;
    else if (Vd0(A)) Q = A.stream();
    else Q = new ReadableStream({
      async pull(W) {
        let J = typeof G === "string" ? mY1.encode(G) : G;
        if (J.byteLength) W.enqueue(J);
        queueMicrotask(() => rV6(W))
      },
      start() {},
      type: "bytes"
    });
    du1(sV6(Q));
    let I = null,
      G = null,
      Z = null,
      D = null;
    if (typeof A === "string") G = A, D = "text/plain;charset=UTF-8";
    else if (A instanceof URLSearchParams) G = A.toString(), D = "application/x-www-form-urlencoded;charset=UTF-8";
    else if (IC6(A)) G = new Uint8Array(A.slice());
    else if (ArrayBuffer.isView(A)) G = new Uint8Array(A.buffer.slice(A.byteOffset, A.byteOffset + A.byteLength));
    else if (dr.isFormDataLike(A)) {
      let W = `----formdata-undici-0${`${uu1(100000000000)}`.padStart(11,"0")}`,
        J = `--${W}\r
Content-Disposition: form-data`; /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
      let F = (N) => N.replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22"),
        X = (N) => N.replace(/\r?\n|\r/g, `\r
`),
        V = [],
        C = new Uint8Array([13, 10]);
      Z = 0;
      let K = !1;
      for (let [N, q] of A)
        if (typeof q === "string") {
          let O = mY1.encode(J + `; name="${F(X(N))}"\r
\r
${X(q)}\r
`);
          V.push(O), Z += O.byteLength
        } else {
          let O = mY1.encode(`${J}; name="${F(X(N))}"` + (q.name ? `; filename="${F(q.name)}"` : "") + `\r
Content-Type: ${q.type||"application/octet-stream"}\r
\r
`);
          if (V.push(O, q, C), typeof q.size === "number") Z += O.byteLength + q.size + C.byteLength;
          else K = !0
        } let E = mY1.encode(`--${W}--`);
      if (V.push(E), Z += E.byteLength, K) Z = null;
      G = A, I = async function*() {
        for (let N of V)
          if (N.stream) yield* N.stream();
          else yield N
      }, D = `multipart/form-data; boundary=${W}`
    } else if (Vd0(A)) {
      if (G = A, Z = A.size, A.type) D = A.type
    } else if (typeof A[Symbol.asyncIterator] === "function") {
      if (B) throw new TypeError("keepalive");
      if (dr.isDisturbed(A) || A.locked) throw new TypeError("Response body object should not be disturbed or locked");
      Q = A instanceof ReadableStream ? A : aV6(A)
    }
    if (typeof G === "string" || dr.isBuffer(G)) Z = Buffer.byteLength(G);
    if (I != null) {
      let W;
      Q = new ReadableStream({
        async start() {
          W = I(A)[Symbol.asyncIterator]()
        },
        async pull(J) {
          let {
            value: F,
            done: X
          } = await W.next();
          if (X) queueMicrotask(() => {
            J.close(), J.byobRequest?.respond(0)
          });
          else if (!zd0(Q)) {
            let V = new Uint8Array(F);
            if (V.byteLength) J.enqueue(V)
          }
          return J.desiredSize > 0
        },
        async cancel(J) {
          await W.return()
        },
        type: "bytes"
      })
    }
    return [{
      stream: Q,
      source: G,
      length: Z
    }, D]
  }

  function YC6(A, B = !1) {
    if (A instanceof ReadableStream) du1(!dr.isDisturbed(A), "The body has already been consumed."), du1(!A.locked, "The stream is locked.");
    return wd0(A, B)
  }

  function WC6(A, B) {
    let [Q, I] = B.stream.tee();
    if (pu1) cu1.register(A, new WeakRef(Q));
    return B.stream = Q, {
      stream: I,
      length: B.length,
      source: B.source
    }
  }

  function JC6(A) {
    if (A.aborted) throw new DOMException("The operation was aborted.", "AbortError")
  }

  function FC6(A) {
    return {
      blob() {
        return vh(this, (Q) => {
          let I = Kd0(this);
          if (I === null) I = "";
          else if (I) I = GC6(I);
          return new BC6([Q], {
            type: I
          })
        }, A)
      },
      arrayBuffer() {
        return vh(this, (Q) => {
          return new Uint8Array(Q).buffer
        }, A)
      },
      text() {
        return vh(this, Hd0, A)
      },
      json() {
        return vh(this, VC6, A)
      },
      formData() {
        return vh(this, (Q) => {
          let I = Kd0(this);
          if (I !== null) switch (I.essence) {
            case "multipart/form-data": {
              let G = ZC6(Q, I);
              if (G === "failure") throw new TypeError("Failed to parse body as FormData.");
              let Z = new Cd0;
              return Z[bh] = G, Z
            }
            case "application/x-www-form-urlencoded": {
              let G = new URLSearchParams(Q.toString()),
                Z = new Cd0;
              for (let [D, Y] of G) Z.append(D, Y);
              return Z
            }
          }
          throw new TypeError('Content-Type was not one of "multipart/form-data" or "application/x-www-form-urlencoded".')
        }, A)
      },
      bytes() {
        return vh(this, (Q) => {
          return new Uint8Array(Q)
        }, A)
      }
    }
  }

  function XC6(A) {
    Object.assign(A.prototype, FC6(A))
  }
  async function vh(A, B, Q) {
    if (AC6.brandCheck(A, Q), Ed0(A)) throw new TypeError("Body is unusable: Body has already been read");
    JC6(A[bh]);
    let I = oV6(),
      G = (D) => I.reject(D),
      Z = (D) => {
        try {
          I.resolve(B(D))
        } catch (Y) {
          G(Y)
        }
      };
    if (A[bh].body == null) return Z(Buffer.allocUnsafe(0)), I.promise;
    return await tV6(A[bh].body, Z, G), I.promise
  }

  function Ed0(A) {
    let B = A[bh].body;
    return B != null && (B.stream.locked || dr.isDisturbed(B.stream))
  }

  function VC6(A) {
    return JSON.parse(Hd0(A))
  }

  function Kd0(A) {
    let B = A[bh].headersList,
      Q = eV6(B);
    if (Q === "failure") return null;
    return Q
  }
  Ud0.exports = {
    extractBody: wd0,
    safelyExtractBody: YC6,
    cloneBody: WC6,
    mixinBody: XC6,
    streamRegistry: cu1,
    hasFinalizationRegistry: pu1,
    bodyUnusable: Ed0
  }
})
// @from(Start 5443931, End 5466893)
jd0 = z((mR8, _d0) => {
  var r9 = Z1("node:assert"),
    $4 = C6(),
    {
      channels: Nd0
    } = Rh(),
    lu1 = Ru1(),
    {
      RequestContentLengthMismatchError: Xj,
      ResponseContentLengthMismatchError: CC6,
      RequestAbortedError: Od0,
      HeadersTimeoutError: KC6,
      HeadersOverflowError: HC6,
      SocketError: iY1,
      InformationalError: hh,
      BodyTimeoutError: zC6,
      HTTPParserError: wC6,
      ResponseExceededMaxSizeError: EC6
    } = u5(),
    {
      kUrl: Td0,
      kReset: aY,
      kClient: su1,
      kParser: i3,
      kBlocking: cr,
      kRunning: jZ,
      kPending: UC6,
      kSize: $d0,
      kWriting: OR,
      kQueue: aC,
      kNoRef: ur,
      kKeepAliveDefaultTimeout: NC6,
      kHostHeader: $C6,
      kPendingIdx: qC6,
      kRunningIdx: vX,
      kError: bX,
      kPipelining: cY1,
      kSocket: mh,
      kKeepAliveTimeoutValue: nY1,
      kMaxHeadersSize: iu1,
      kKeepAliveMaxTimeout: MC6,
      kKeepAliveTimeoutThreshold: LC6,
      kHeadersTimeout: RC6,
      kBodyTimeout: OC6,
      kStrictContentLength: ru1,
      kMaxRequests: qd0,
      kCounter: TC6,
      kMaxResponseSize: PC6,
      kOnError: SC6,
      kResume: RR,
      kHTTPContext: Pd0
    } = A3(),
    Lw = Hm0(),
    _C6 = Buffer.alloc(0),
    dY1 = Buffer[Symbol.species],
    uY1 = $4.addListener,
    jC6 = $4.removeAllListeners,
    nu1;
  async function yC6() {
    let A = process.env.JEST_WORKER_ID ? ju1() : void 0,
      B;
    try {
      B = await WebAssembly.compile(Em0())
    } catch (Q) {
      B = await WebAssembly.compile(A || ju1())
    }
    return await WebAssembly.instantiate(B, {
      env: {
        wasm_on_url: (Q, I, G) => {
          return 0
        },
        wasm_on_status: (Q, I, G) => {
          r9(u7.ptr === Q);
          let Z = I - Ow + Rw.byteOffset;
          return u7.onStatus(new dY1(Rw.buffer, Z, G)) || 0
        },
        wasm_on_message_begin: (Q) => {
          return r9(u7.ptr === Q), u7.onMessageBegin() || 0
        },
        wasm_on_header_field: (Q, I, G) => {
          r9(u7.ptr === Q);
          let Z = I - Ow + Rw.byteOffset;
          return u7.onHeaderField(new dY1(Rw.buffer, Z, G)) || 0
        },
        wasm_on_header_value: (Q, I, G) => {
          r9(u7.ptr === Q);
          let Z = I - Ow + Rw.byteOffset;
          return u7.onHeaderValue(new dY1(Rw.buffer, Z, G)) || 0
        },
        wasm_on_headers_complete: (Q, I, G, Z) => {
          return r9(u7.ptr === Q), u7.onHeadersComplete(I, Boolean(G), Boolean(Z)) || 0
        },
        wasm_on_body: (Q, I, G) => {
          r9(u7.ptr === Q);
          let Z = I - Ow + Rw.byteOffset;
          return u7.onBody(new dY1(Rw.buffer, Z, G)) || 0
        },
        wasm_on_message_complete: (Q) => {
          return r9(u7.ptr === Q), u7.onMessageComplete() || 0
        }
      }
    })
  }
  var au1 = null,
    ou1 = yC6();
  ou1.catch();
  var u7 = null,
    Rw = null,
    pY1 = 0,
    Ow = null,
    kC6 = 0,
    pr = 1,
    dh = 2 | pr,
    lY1 = 4 | pr,
    tu1 = 8 | kC6;
  class Sd0 {
    constructor(A, B, {
      exports: Q
    }) {
      r9(Number.isFinite(A[iu1]) && A[iu1] > 0), this.llhttp = Q, this.ptr = this.llhttp.llhttp_alloc(Lw.TYPE.RESPONSE), this.client = A, this.socket = B, this.timeout = null, this.timeoutValue = null, this.timeoutType = null, this.statusCode = null, this.statusText = "", this.upgrade = !1, this.headers = [], this.headersSize = 0, this.headersMaxSize = A[iu1], this.shouldKeepAlive = !1, this.paused = !1, this.resume = this.resume.bind(this), this.bytesRead = 0, this.keepAlive = "", this.contentLength = "", this.connection = "", this.maxResponseSize = A[PC6]
    }
    setTimeout(A, B) {
      if (A !== this.timeoutValue || B & pr ^ this.timeoutType & pr) {
        if (this.timeout) lu1.clearTimeout(this.timeout), this.timeout = null;
        if (A)
          if (B & pr) this.timeout = lu1.setFastTimeout(Md0, A, new WeakRef(this));
          else this.timeout = setTimeout(Md0, A, new WeakRef(this)), this.timeout.unref();
        this.timeoutValue = A
      } else if (this.timeout) {
        if (this.timeout.refresh) this.timeout.refresh()
      }
      this.timeoutType = B
    }
    resume() {
      if (this.socket.destroyed || !this.paused) return;
      if (r9(this.ptr != null), r9(u7 == null), this.llhttp.llhttp_resume(this.ptr), r9(this.timeoutType === lY1), this.timeout) {
        if (this.timeout.refresh) this.timeout.refresh()
      }
      this.paused = !1, this.execute(this.socket.read() || _C6), this.readMore()
    }
    readMore() {
      while (!this.paused && this.ptr) {
        let A = this.socket.read();
        if (A === null) break;
        this.execute(A)
      }
    }
    execute(A) {
      r9(this.ptr != null), r9(u7 == null), r9(!this.paused);
      let {
        socket: B,
        llhttp: Q
      } = this;
      if (A.length > pY1) {
        if (Ow) Q.free(Ow);
        pY1 = Math.ceil(A.length / 4096) * 4096, Ow = Q.malloc(pY1)
      }
      new Uint8Array(Q.memory.buffer, Ow, pY1).set(A);
      try {
        let I;
        try {
          Rw = A, u7 = this, I = Q.llhttp_execute(this.ptr, Ow, A.length)
        } catch (Z) {
          throw Z
        } finally {
          u7 = null, Rw = null
        }
        let G = Q.llhttp_get_error_pos(this.ptr) - Ow;
        if (I === Lw.ERROR.PAUSED_UPGRADE) this.onUpgrade(A.slice(G));
        else if (I === Lw.ERROR.PAUSED) this.paused = !0, B.unshift(A.slice(G));
        else if (I !== Lw.ERROR.OK) {
          let Z = Q.llhttp_get_error_reason(this.ptr),
            D = "";
          if (Z) {
            let Y = new Uint8Array(Q.memory.buffer, Z).indexOf(0);
            D = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(Q.memory.buffer, Z, Y).toString() + ")"
          }
          throw new wC6(D, Lw.ERROR[I], A.slice(G))
        }
      } catch (I) {
        $4.destroy(B, I)
      }
    }
    destroy() {
      r9(this.ptr != null), r9(u7 == null), this.llhttp.llhttp_free(this.ptr), this.ptr = null, this.timeout && lu1.clearTimeout(this.timeout), this.timeout = null, this.timeoutValue = null, this.timeoutType = null, this.paused = !1
    }
    onStatus(A) {
      this.statusText = A.toString()
    }
    onMessageBegin() {
      let {
        socket: A,
        client: B
      } = this;
      if (A.destroyed) return -1;
      let Q = B[aC][B[vX]];
      if (!Q) return -1;
      Q.onResponseStarted()
    }
    onHeaderField(A) {
      let B = this.headers.length;
      if ((B & 1) === 0) this.headers.push(A);
      else this.headers[B - 1] = Buffer.concat([this.headers[B - 1], A]);
      this.trackHeader(A.length)
    }
    onHeaderValue(A) {
      let B = this.headers.length;
      if ((B & 1) === 1) this.headers.push(A), B += 1;
      else this.headers[B - 1] = Buffer.concat([this.headers[B - 1], A]);
      let Q = this.headers[B - 2];
      if (Q.length === 10) {
        let I = $4.bufferToLowerCasedHeaderName(Q);
        if (I === "keep-alive") this.keepAlive += A.toString();
        else if (I === "connection") this.connection += A.toString()
      } else if (Q.length === 14 && $4.bufferToLowerCasedHeaderName(Q) === "content-length") this.contentLength += A.toString();
      this.trackHeader(A.length)
    }
    trackHeader(A) {
      if (this.headersSize += A, this.headersSize >= this.headersMaxSize) $4.destroy(this.socket, new HC6)
    }
    onUpgrade(A) {
      let {
        upgrade: B,
        client: Q,
        socket: I,
        headers: G,
        statusCode: Z
      } = this;
      r9(B), r9(Q[mh] === I), r9(!I.destroyed), r9(!this.paused), r9((G.length & 1) === 0);
      let D = Q[aC][Q[vX]];
      r9(D), r9(D.upgrade || D.method === "CONNECT"), this.statusCode = null, this.statusText = "", this.shouldKeepAlive = null, this.headers = [], this.headersSize = 0, I.unshift(A), I[i3].destroy(), I[i3] = null, I[su1] = null, I[bX] = null, jC6(I), Q[mh] = null, Q[Pd0] = null, Q[aC][Q[vX]++] = null, Q.emit("disconnect", Q[Td0], [Q], new hh("upgrade"));
      try {
        D.onUpgrade(Z, G, I)
      } catch (Y) {
        $4.destroy(I, Y)
      }
      Q[RR]()
    }
    onHeadersComplete(A, B, Q) {
      let {
        client: I,
        socket: G,
        headers: Z,
        statusText: D
      } = this;
      if (G.destroyed) return -1;
      let Y = I[aC][I[vX]];
      if (!Y) return -1;
      if (r9(!this.upgrade), r9(this.statusCode < 200), A === 100) return $4.destroy(G, new iY1("bad response", $4.getSocketInfo(G))), -1;
      if (B && !Y.upgrade) return $4.destroy(G, new iY1("bad upgrade", $4.getSocketInfo(G))), -1;
      if (r9(this.timeoutType === dh), this.statusCode = A, this.shouldKeepAlive = Q || Y.method === "HEAD" && !G[aY] && this.connection.toLowerCase() === "keep-alive", this.statusCode >= 200) {
        let J = Y.bodyTimeout != null ? Y.bodyTimeout : I[OC6];
        this.setTimeout(J, lY1)
      } else if (this.timeout) {
        if (this.timeout.refresh) this.timeout.refresh()
      }
      if (Y.method === "CONNECT") return r9(I[jZ] === 1), this.upgrade = !0, 2;
      if (B) return r9(I[jZ] === 1), this.upgrade = !0, 2;
      if (r9((this.headers.length & 1) === 0), this.headers = [], this.headersSize = 0, this.shouldKeepAlive && I[cY1]) {
        let J = this.keepAlive ? $4.parseKeepAliveTimeout(this.keepAlive) : null;
        if (J != null) {
          let F = Math.min(J - I[LC6], I[MC6]);
          if (F <= 0) G[aY] = !0;
          else I[nY1] = F
        } else I[nY1] = I[NC6]
      } else G[aY] = !0;
      let W = Y.onHeaders(A, Z, this.resume, D) === !1;
      if (Y.aborted) return -1;
      if (Y.method === "HEAD") return 1;
      if (A < 200) return 1;
      if (G[cr]) G[cr] = !1, I[RR]();
      return W ? Lw.ERROR.PAUSED : 0
    }
    onBody(A) {
      let {
        client: B,
        socket: Q,
        statusCode: I,
        maxResponseSize: G
      } = this;
      if (Q.destroyed) return -1;
      let Z = B[aC][B[vX]];
      if (r9(Z), r9(this.timeoutType === lY1), this.timeout) {
        if (this.timeout.refresh) this.timeout.refresh()
      }
      if (r9(I >= 200), G > -1 && this.bytesRead + A.length > G) return $4.destroy(Q, new EC6), -1;
      if (this.bytesRead += A.length, Z.onData(A) === !1) return Lw.ERROR.PAUSED
    }
    onMessageComplete() {
      let {
        client: A,
        socket: B,
        statusCode: Q,
        upgrade: I,
        headers: G,
        contentLength: Z,
        bytesRead: D,
        shouldKeepAlive: Y
      } = this;
      if (B.destroyed && (!Q || Y)) return -1;
      if (I) return;
      r9(Q >= 100), r9((this.headers.length & 1) === 0);
      let W = A[aC][A[vX]];
      if (r9(W), this.statusCode = null, this.statusText = "", this.bytesRead = 0, this.contentLength = "", this.keepAlive = "", this.connection = "", this.headers = [], this.headersSize = 0, Q < 200) return;
      if (W.method !== "HEAD" && Z && D !== parseInt(Z, 10)) return $4.destroy(B, new CC6), -1;
      if (W.onComplete(G), A[aC][A[vX]++] = null, B[OR]) return r9(A[jZ] === 0), $4.destroy(B, new hh("reset")), Lw.ERROR.PAUSED;
      else if (!Y) return $4.destroy(B, new hh("reset")), Lw.ERROR.PAUSED;
      else if (B[aY] && A[jZ] === 0) return $4.destroy(B, new hh("reset")), Lw.ERROR.PAUSED;
      else if (A[cY1] == null || A[cY1] === 1) setImmediate(() => A[RR]());
      else A[RR]()
    }
  }

  function Md0(A) {
    let {
      socket: B,
      timeoutType: Q,
      client: I,
      paused: G
    } = A.deref();
    if (Q === dh) {
      if (!B[OR] || B.writableNeedDrain || I[jZ] > 1) r9(!G, "cannot be paused while waiting for headers"), $4.destroy(B, new KC6)
    } else if (Q === lY1) {
      if (!G) $4.destroy(B, new zC6)
    } else if (Q === tu1) r9(I[jZ] === 0 && I[nY1]), $4.destroy(B, new hh("socket idle timeout"))
  }
  async function xC6(A, B) {
    if (A[mh] = B, !au1) au1 = await ou1, ou1 = null;
    B[ur] = !1, B[OR] = !1, B[aY] = !1, B[cr] = !1, B[i3] = new Sd0(A, B, au1), uY1(B, "error", function(I) {
      r9(I.code !== "ERR_TLS_CERT_ALTNAME_INVALID");
      let G = this[i3];
      if (I.code === "ECONNRESET" && G.statusCode && !G.shouldKeepAlive) {
        G.onMessageComplete();
        return
      }
      this[bX] = I, this[su1][SC6](I)
    }), uY1(B, "readable", function() {
      let I = this[i3];
      if (I) I.readMore()
    }), uY1(B, "end", function() {
      let I = this[i3];
      if (I.statusCode && !I.shouldKeepAlive) {
        I.onMessageComplete();
        return
      }
      $4.destroy(this, new iY1("other side closed", $4.getSocketInfo(this)))
    }), uY1(B, "close", function() {
      let I = this[su1],
        G = this[i3];
      if (G) {
        if (!this[bX] && G.statusCode && !G.shouldKeepAlive) G.onMessageComplete();
        this[i3].destroy(), this[i3] = null
      }
      let Z = this[bX] || new iY1("closed", $4.getSocketInfo(this));
      if (I[mh] = null, I[Pd0] = null, I.destroyed) {
        r9(I[UC6] === 0);
        let D = I[aC].splice(I[vX]);
        for (let Y = 0; Y < D.length; Y++) {
          let W = D[Y];
          $4.errorRequest(I, W, Z)
        }
      } else if (I[jZ] > 0 && Z.code !== "UND_ERR_INFO") {
        let D = I[aC][I[vX]];
        I[aC][I[vX]++] = null, $4.errorRequest(I, D, Z)
      }
      I[qC6] = I[vX], r9(I[jZ] === 0), I.emit("disconnect", I[Td0], [I], Z), I[RR]()
    });
    let Q = !1;
    return B.on("close", () => {
      Q = !0
    }), {
      version: "h1",
      defaultPipelining: 1,
      write(...I) {
        return bC6(A, ...I)
      },
      resume() {
        fC6(A)
      },
      destroy(I, G) {
        if (Q) queueMicrotask(G);
        else B.destroy(I).on("close", G)
      },
      get destroyed() {
        return B.destroyed
      },
      busy(I) {
        if (B[OR] || B[aY] || B[cr]) return !0;
        if (I) {
          if (A[jZ] > 0 && !I.idempotent) return !0;
          if (A[jZ] > 0 && (I.upgrade || I.method === "CONNECT")) return !0;
          if (A[jZ] > 0 && $4.bodyLength(I.body) !== 0 && ($4.isStream(I.body) || $4.isAsyncIterable(I.body) || $4.isFormDataLike(I.body))) return !0
        }
        return !1
      }
    }
  }

  function fC6(A) {
    let B = A[mh];
    if (B && !B.destroyed) {
      if (A[$d0] === 0) {
        if (!B[ur] && B.unref) B.unref(), B[ur] = !0
      } else if (B[ur] && B.ref) B.ref(), B[ur] = !1;
      if (A[$d0] === 0) {
        if (B[i3].timeoutType !== tu1) B[i3].setTimeout(A[nY1], tu1)
      } else if (A[jZ] > 0 && B[i3].statusCode < 200) {
        if (B[i3].timeoutType !== dh) {
          let Q = A[aC][A[vX]],
            I = Q.headersTimeout != null ? Q.headersTimeout : A[RC6];
          B[i3].setTimeout(I, dh)
        }
      }
    }
  }

  function vC6(A) {
    return A !== "GET" && A !== "HEAD" && A !== "OPTIONS" && A !== "TRACE" && A !== "CONNECT"
  }

  function bC6(A, B) {
    let {
      method: Q,
      path: I,
      host: G,
      upgrade: Z,
      blocking: D,
      reset: Y
    } = B, {
      body: W,
      headers: J,
      contentLength: F
    } = B, X = Q === "PUT" || Q === "POST" || Q === "PATCH" || Q === "QUERY" || Q === "PROPFIND" || Q === "PROPPATCH";
    if ($4.isFormDataLike(W)) {
      if (!nu1) nu1 = gh().extractBody;
      let [N, q] = nu1(W);
      if (B.contentType == null) J.push("content-type", q);
      W = N.stream, F = N.length
    } else if ($4.isBlobLike(W) && B.contentType == null && W.type) J.push("content-type", W.type);
    if (W && typeof W.read === "function") W.read(0);
    let V = $4.bodyLength(W);
    if (F = V ?? F, F === null) F = B.contentLength;
    if (F === 0 && !X) F = null;
    if (vC6(Q) && F > 0 && B.contentLength !== null && B.contentLength !== F) {
      if (A[ru1]) return $4.errorRequest(A, B, new Xj), !1;
      process.emitWarning(new Xj)
    }
    let C = A[mh],
      K = (N) => {
        if (B.aborted || B.completed) return;
        $4.errorRequest(A, B, N || new Od0), $4.destroy(W), $4.destroy(C, new hh("aborted"))
      };
    try {
      B.onConnect(K)
    } catch (N) {
      $4.errorRequest(A, B, N)
    }
    if (B.aborted) return !1;
    if (Q === "HEAD") C[aY] = !0;
    if (Z || Q === "CONNECT") C[aY] = !0;
    if (Y != null) C[aY] = Y;
    if (A[qd0] && C[TC6]++ >= A[qd0]) C[aY] = !0;
    if (D) C[cr] = !0;
    let E = `${Q} ${I} HTTP/1.1\r
`;
    if (typeof G === "string") E += `host: ${G}\r
`;
    else E += A[$C6];
    if (Z) E += `connection: upgrade\r
upgrade: ${Z}\r
`;
    else if (A[cY1] && !C[aY]) E += `connection: keep-alive\r
`;
    else E += `connection: close\r
`;
    if (Array.isArray(J))
      for (let N = 0; N < J.length; N += 2) {
        let q = J[N + 0],
          O = J[N + 1];
        if (Array.isArray(O))
          for (let R = 0; R < O.length; R++) E += `${q}: ${O[R]}\r
`;
        else E += `${q}: ${O}\r
`
      }
    if (Nd0.sendHeaders.hasSubscribers) Nd0.sendHeaders.publish({
      request: B,
      headers: E,
      socket: C
    });
    if (!W || V === 0) Ld0(K, null, A, B, C, F, E, X);
    else if ($4.isBuffer(W)) Ld0(K, W, A, B, C, F, E, X);
    else if ($4.isBlobLike(W))
      if (typeof W.stream === "function") Rd0(K, W.stream(), A, B, C, F, E, X);
      else hC6(K, W, A, B, C, F, E, X);
    else if ($4.isStream(W)) gC6(K, W, A, B, C, F, E, X);
    else if ($4.isIterable(W)) Rd0(K, W, A, B, C, F, E, X);
    else r9(!1);
    return !0
  }

  function gC6(A, B, Q, I, G, Z, D, Y) {
    r9(Z !== 0 || Q[jZ] === 0, "stream body cannot be pipelined");
    let W = !1,
      J = new eu1({
        abort: A,
        socket: G,
        request: I,
        contentLength: Z,
        client: Q,
        expectsPayload: Y,
        header: D
      }),
      F = function(K) {
        if (W) return;
        try {
          if (!J.write(K) && this.pause) this.pause()
        } catch (E) {
          $4.destroy(this, E)
        }
      },
      X = function() {
        if (W) return;
        if (B.resume) B.resume()
      },
      V = function() {
        if (queueMicrotask(() => {
            B.removeListener("error", C)
          }), !W) {
          let K = new Od0;
          queueMicrotask(() => C(K))
        }
      },
      C = function(K) {
        if (W) return;
        if (W = !0, r9(G.destroyed || G[OR] && Q[jZ] <= 1), G.off("drain", X).off("error", C), B.removeListener("data", F).removeListener("end", C).removeListener("close", V), !K) try {
          J.end()
        } catch (E) {
          K = E
        }
        if (J.destroy(K), K && (K.code !== "UND_ERR_INFO" || K.message !== "reset")) $4.destroy(B, K);
        else $4.destroy(B)
      };
    if (B.on("data", F).on("end", C).on("error", C).on("close", V), B.resume) B.resume();
    if (G.on("drain", X).on("error", C), B.errorEmitted ?? B.errored) setImmediate(() => C(B.errored));
    else if (B.endEmitted ?? B.readableEnded) setImmediate(() => C(null));
    if (B.closeEmitted ?? B.closed) setImmediate(V)
  }

  function Ld0(A, B, Q, I, G, Z, D, Y) {
    try {
      if (!B)
        if (Z === 0) G.write(`${D}content-length: 0\r
\r
`, "latin1");
        else r9(Z === null, "no body must not have content length"), G.write(`${D}\r
`, "latin1");
      else if ($4.isBuffer(B)) {
        if (r9(Z === B.byteLength, "buffer body must have content length"), G.cork(), G.write(`${D}content-length: ${Z}\r
\r
`, "latin1"), G.write(B), G.uncork(), I.onBodySent(B), !Y && I.reset !== !1) G[aY] = !0
      }
      I.onRequestSent(), Q[RR]()
    } catch (W) {
      A(W)
    }
  }
  async function hC6(A, B, Q, I, G, Z, D, Y) {
    r9(Z === B.size, "blob body must have content length");
    try {
      if (Z != null && Z !== B.size) throw new Xj;
      let W = Buffer.from(await B.arrayBuffer());
      if (G.cork(), G.write(`${D}content-length: ${Z}\r
\r
`, "latin1"), G.write(W), G.uncork(), I.onBodySent(W), I.onRequestSent(), !Y && I.reset !== !1) G[aY] = !0;
      Q[RR]()
    } catch (W) {
      A(W)
    }
  }
  async function Rd0(A, B, Q, I, G, Z, D, Y) {
    r9(Z !== 0 || Q[jZ] === 0, "iterator body cannot be pipelined");
    let W = null;

    function J() {
      if (W) {
        let V = W;
        W = null, V()
      }
    }
    let F = () => new Promise((V, C) => {
      if (r9(W === null), G[bX]) C(G[bX]);
      else W = V
    });
    G.on("close", J).on("drain", J);
    let X = new eu1({
      abort: A,
      socket: G,
      request: I,
      contentLength: Z,
      client: Q,
      expectsPayload: Y,
      header: D
    });
    try {
      for await (let V of B) {
        if (G[bX]) throw G[bX];
        if (!X.write(V)) await F()
      }
      X.end()
    } catch (V) {
      X.destroy(V)
    } finally {
      G.off("close", J).off("drain", J)
    }
  }
  class eu1 {
    constructor({
      abort: A,
      socket: B,
      request: Q,
      contentLength: I,
      client: G,
      expectsPayload: Z,
      header: D
    }) {
      this.socket = B, this.request = Q, this.contentLength = I, this.client = G, this.bytesWritten = 0, this.expectsPayload = Z, this.header = D, this.abort = A, B[OR] = !0
    }
    write(A) {
      let {
        socket: B,
        request: Q,
        contentLength: I,
        client: G,
        bytesWritten: Z,
        expectsPayload: D,
        header: Y
      } = this;
      if (B[bX]) throw B[bX];
      if (B.destroyed) return !1;
      let W = Buffer.byteLength(A);
      if (!W) return !0;
      if (I !== null && Z + W > I) {
        if (G[ru1]) throw new Xj;
        process.emitWarning(new Xj)
      }
      if (B.cork(), Z === 0) {
        if (!D && Q.reset !== !1) B[aY] = !0;
        if (I === null) B.write(`${Y}transfer-encoding: chunked\r
`, "latin1");
        else B.write(`${Y}content-length: ${I}\r
\r
`, "latin1")
      }
      if (I === null) B.write(`\r
${W.toString(16)}\r
`, "latin1");
      this.bytesWritten += W;
      let J = B.write(A);
      if (B.uncork(), Q.onBodySent(A), !J) {
        if (B[i3].timeout && B[i3].timeoutType === dh) {
          if (B[i3].timeout.refresh) B[i3].timeout.refresh()
        }
      }
      return J
    }
    end() {
      let {
        socket: A,
        contentLength: B,
        client: Q,
        bytesWritten: I,
        expectsPayload: G,
        header: Z,
        request: D
      } = this;
      if (D.onRequestSent(), A[OR] = !1, A[bX]) throw A[bX];
      if (A.destroyed) return;
      if (I === 0)
        if (G) A.write(`${Z}content-length: 0\r
\r
`, "latin1");
        else A.write(`${Z}\r
`, "latin1");
      else if (B === null) A.write(`\r
0\r
\r
`, "latin1");
      if (B !== null && I !== B)
        if (Q[ru1]) throw new Xj;
        else process.emitWarning(new Xj);
      if (A[i3].timeout && A[i3].timeoutType === dh) {
        if (A[i3].timeout.refresh) A[i3].timeout.refresh()
      }
      Q[RR]()
    }
    destroy(A) {
      let {
        socket: B,
        client: Q,
        abort: I
      } = this;
      if (B[OR] = !1, A) r9(Q[jZ] <= 1, "pipeline should only contain this request"), I(A)
    }
  }
  _d0.exports = xC6
})
// @from(Start 5466899, End 5476838)
hd0 = z((dR8, gd0) => {
  var gX = Z1("node:assert"),
    {
      pipeline: mC6
    } = Z1("node:stream"),
    k6 = C6(),
    {
      RequestContentLengthMismatchError: Ap1,
      RequestAbortedError: yd0,
      SocketError: lr,
      InformationalError: Bp1
    } = u5(),
    {
      kUrl: aY1,
      kReset: rY1,
      kClient: uh,
      kRunning: oY1,
      kPending: dC6,
      kQueue: TR,
      kPendingIdx: Qp1,
      kRunningIdx: sC,
      kError: oC,
      kSocket: PI,
      kStrictContentLength: uC6,
      kOnError: Ip1,
      kMaxConcurrentStreams: bd0,
      kHTTP2Session: rC,
      kResume: PR,
      kSize: pC6,
      kHTTPContext: cC6
    } = A3(),
    uN = Symbol("open streams"),
    kd0, xd0 = !1,
    sY1;
  try {
    sY1 = Z1("node:http2")
  } catch {
    sY1 = {
      constants: {}
    }
  }
  var {
    constants: {
      HTTP2_HEADER_AUTHORITY: lC6,
      HTTP2_HEADER_METHOD: iC6,
      HTTP2_HEADER_PATH: nC6,
      HTTP2_HEADER_SCHEME: aC6,
      HTTP2_HEADER_CONTENT_LENGTH: sC6,
      HTTP2_HEADER_EXPECT: rC6,
      HTTP2_HEADER_STATUS: oC6
    }
  } = sY1;

  function tC6(A) {
    let B = [];
    for (let [Q, I] of Object.entries(A))
      if (Array.isArray(I))
        for (let G of I) B.push(Buffer.from(Q), Buffer.from(G));
      else B.push(Buffer.from(Q), Buffer.from(I));
    return B
  }
  async function eC6(A, B) {
    if (A[PI] = B, !xd0) xd0 = !0, process.emitWarning("H2 support is experimental, expect them to change at any time.", {
      code: "UNDICI-H2"
    });
    let Q = sY1.connect(A[aY1], {
      createConnection: () => B,
      peerMaxConcurrentStreams: A[bd0]
    });
    Q[uN] = 0, Q[uh] = A, Q[PI] = B, k6.addListener(Q, "error", BK6), k6.addListener(Q, "frameError", QK6), k6.addListener(Q, "end", IK6), k6.addListener(Q, "goaway", GK6), k6.addListener(Q, "close", function() {
      let {
        [uh]: G
      } = this, {
        [PI]: Z
      } = G, D = this[PI][oC] || this[oC] || new lr("closed", k6.getSocketInfo(Z));
      if (G[rC] = null, G.destroyed) {
        gX(G[dC6] === 0);
        let Y = G[TR].splice(G[sC]);
        for (let W = 0; W < Y.length; W++) {
          let J = Y[W];
          k6.errorRequest(G, J, D)
        }
      }
    }), Q.unref(), A[rC] = Q, B[rC] = Q, k6.addListener(B, "error", function(G) {
      gX(G.code !== "ERR_TLS_CERT_ALTNAME_INVALID"), this[oC] = G, this[uh][Ip1](G)
    }), k6.addListener(B, "end", function() {
      k6.destroy(this, new lr("other side closed", k6.getSocketInfo(this)))
    }), k6.addListener(B, "close", function() {
      let G = this[oC] || new lr("closed", k6.getSocketInfo(this));
      if (A[PI] = null, this[rC] != null) this[rC].destroy(G);
      A[Qp1] = A[sC], gX(A[oY1] === 0), A.emit("disconnect", A[aY1], [A], G), A[PR]()
    });
    let I = !1;
    return B.on("close", () => {
      I = !0
    }), {
      version: "h2",
      defaultPipelining: 1 / 0,
      write(...G) {
        return DK6(A, ...G)
      },
      resume() {
        AK6(A)
      },
      destroy(G, Z) {
        if (I) queueMicrotask(Z);
        else B.destroy(G).on("close", Z)
      },
      get destroyed() {
        return B.destroyed
      },
      busy() {
        return !1
      }
    }
  }

  function AK6(A) {
    let B = A[PI];
    if (B?.destroyed === !1)
      if (A[pC6] === 0 && A[bd0] === 0) B.unref(), A[rC].unref();
      else B.ref(), A[rC].ref()
  }

  function BK6(A) {
    gX(A.code !== "ERR_TLS_CERT_ALTNAME_INVALID"), this[PI][oC] = A, this[uh][Ip1](A)
  }

  function QK6(A, B, Q) {
    if (Q === 0) {
      let I = new Bp1(`HTTP/2: "frameError" received - type ${A}, code ${B}`);
      this[PI][oC] = I, this[uh][Ip1](I)
    }
  }

  function IK6() {
    let A = new lr("other side closed", k6.getSocketInfo(this[PI]));
    this.destroy(A), k6.destroy(this[PI], A)
  }

  function GK6(A) {
    let B = this[oC] || new lr(`HTTP/2: "GOAWAY" frame received with code ${A}`, k6.getSocketInfo(this)),
      Q = this[uh];
    if (Q[PI] = null, Q[cC6] = null, this[rC] != null) this[rC].destroy(B), this[rC] = null;
    if (k6.destroy(this[PI], B), Q[sC] < Q[TR].length) {
      let I = Q[TR][Q[sC]];
      Q[TR][Q[sC]++] = null, k6.errorRequest(Q, I, B), Q[Qp1] = Q[sC]
    }
    gX(Q[oY1] === 0), Q.emit("disconnect", Q[aY1], [Q], B), Q[PR]()
  }

  function ZK6(A) {
    return A !== "GET" && A !== "HEAD" && A !== "OPTIONS" && A !== "TRACE" && A !== "CONNECT"
  }

  function DK6(A, B) {
    let Q = A[rC],
      {
        method: I,
        path: G,
        host: Z,
        upgrade: D,
        expectContinue: Y,
        signal: W,
        headers: J
      } = B,
      {
        body: F
      } = B;
    if (D) return k6.errorRequest(A, B, new Error("Upgrade not supported for H2")), !1;
    let X = {};
    for (let T = 0; T < J.length; T += 2) {
      let L = J[T + 0],
        _ = J[T + 1];
      if (Array.isArray(_))
        for (let k = 0; k < _.length; k++)
          if (X[L]) X[L] += `,${_[k]}`;
          else X[L] = _[k];
      else X[L] = _
    }
    let V, {
      hostname: C,
      port: K
    } = A[aY1];
    X[lC6] = Z || `${C}${K?`:${K}`:""}`, X[iC6] = I;
    let E = (T) => {
      if (B.aborted || B.completed) return;
      if (T = T || new yd0, k6.errorRequest(A, B, T), V != null) k6.destroy(V, T);
      k6.destroy(F, T), A[TR][A[sC]++] = null, A[PR]()
    };
    try {
      B.onConnect(E)
    } catch (T) {
      k6.errorRequest(A, B, T)
    }
    if (B.aborted) return !1;
    if (I === "CONNECT") {
      if (Q.ref(), V = Q.request(X, {
          endStream: !1,
          signal: W
        }), V.id && !V.pending) B.onUpgrade(null, null, V), ++Q[uN], A[TR][A[sC]++] = null;
      else V.once("ready", () => {
        B.onUpgrade(null, null, V), ++Q[uN], A[TR][A[sC]++] = null
      });
      return V.once("close", () => {
        if (Q[uN] -= 1, Q[uN] === 0) Q.unref()
      }), !0
    }
    X[nC6] = G, X[aC6] = "https";
    let N = I === "PUT" || I === "POST" || I === "PATCH";
    if (F && typeof F.read === "function") F.read(0);
    let q = k6.bodyLength(F);
    if (k6.isFormDataLike(F)) {
      kd0 ??= gh().extractBody;
      let [T, L] = kd0(F);
      X["content-type"] = L, F = T.stream, q = T.length
    }
    if (q == null) q = B.contentLength;
    if (q === 0 || !N) q = null;
    if (ZK6(I) && q > 0 && B.contentLength != null && B.contentLength !== q) {
      if (A[uC6]) return k6.errorRequest(A, B, new Ap1), !1;
      process.emitWarning(new Ap1)
    }
    if (q != null) gX(F, "no body must not have content length"), X[sC6] = `${q}`;
    Q.ref();
    let O = I === "GET" || I === "HEAD" || F === null;
    if (Y) X[rC6] = "100-continue", V = Q.request(X, {
      endStream: O,
      signal: W
    }), V.once("continue", R);
    else V = Q.request(X, {
      endStream: O,
      signal: W
    }), R();
    return ++Q[uN], V.once("response", (T) => {
      let {
        [oC6]: L, ..._
      } = T;
      if (B.onResponseStarted(), B.aborted) {
        let k = new yd0;
        k6.errorRequest(A, B, k), k6.destroy(V, k);
        return
      }
      if (B.onHeaders(Number(L), tC6(_), V.resume.bind(V), "") === !1) V.pause();
      V.on("data", (k) => {
        if (B.onData(k) === !1) V.pause()
      })
    }), V.once("end", () => {
      if (V.state?.state == null || V.state.state < 6) B.onComplete([]);
      if (Q[uN] === 0) Q.unref();
      E(new Bp1("HTTP/2: stream half-closed (remote)")), A[TR][A[sC]++] = null, A[Qp1] = A[sC], A[PR]()
    }), V.once("close", () => {
      if (Q[uN] -= 1, Q[uN] === 0) Q.unref()
    }), V.once("error", function(T) {
      E(T)
    }), V.once("frameError", (T, L) => {
      E(new Bp1(`HTTP/2: "frameError" received - type ${T}, code ${L}`))
    }), !0;

    function R() {
      if (!F || q === 0) fd0(E, V, null, A, B, A[PI], q, N);
      else if (k6.isBuffer(F)) fd0(E, V, F, A, B, A[PI], q, N);
      else if (k6.isBlobLike(F))
        if (typeof F.stream === "function") vd0(E, V, F.stream(), A, B, A[PI], q, N);
        else WK6(E, V, F, A, B, A[PI], q, N);
      else if (k6.isStream(F)) YK6(E, A[PI], N, V, F, A, B, q);
      else if (k6.isIterable(F)) vd0(E, V, F, A, B, A[PI], q, N);
      else gX(!1)
    }
  }

  function fd0(A, B, Q, I, G, Z, D, Y) {
    try {
      if (Q != null && k6.isBuffer(Q)) gX(D === Q.byteLength, "buffer body must have content length"), B.cork(), B.write(Q), B.uncork(), B.end(), G.onBodySent(Q);
      if (!Y) Z[rY1] = !0;
      G.onRequestSent(), I[PR]()
    } catch (W) {
      A(W)
    }
  }

  function YK6(A, B, Q, I, G, Z, D, Y) {
    gX(Y !== 0 || Z[oY1] === 0, "stream body cannot be pipelined");
    let W = mC6(G, I, (F) => {
      if (F) k6.destroy(W, F), A(F);
      else {
        if (k6.removeAllListeners(W), D.onRequestSent(), !Q) B[rY1] = !0;
        Z[PR]()
      }
    });
    k6.addListener(W, "data", J);

    function J(F) {
      D.onBodySent(F)
    }
  }
  async function WK6(A, B, Q, I, G, Z, D, Y) {
    gX(D === Q.size, "blob body must have content length");
    try {
      if (D != null && D !== Q.size) throw new Ap1;
      let W = Buffer.from(await Q.arrayBuffer());
      if (B.cork(), B.write(W), B.uncork(), B.end(), G.onBodySent(W), G.onRequestSent(), !Y) Z[rY1] = !0;
      I[PR]()
    } catch (W) {
      A(W)
    }
  }
  async function vd0(A, B, Q, I, G, Z, D, Y) {
    gX(D !== 0 || I[oY1] === 0, "iterator body cannot be pipelined");
    let W = null;

    function J() {
      if (W) {
        let X = W;
        W = null, X()
      }
    }
    let F = () => new Promise((X, V) => {
      if (gX(W === null), Z[oC]) V(Z[oC]);
      else W = X
    });
    B.on("close", J).on("drain", J);
    try {
      for await (let X of Q) {
        if (Z[oC]) throw Z[oC];
        let V = B.write(X);
        if (G.onBodySent(X), !V) await F()
      }
      if (B.end(), G.onRequestSent(), !Y) Z[rY1] = !0;
      I[PR]()
    } catch (X) {
      A(X)
    } finally {
      B.off("close", J).off("drain", J)
    }
  }
  gd0.exports = eC6
})
// @from(Start 5476844, End 5481006)
tY1 = z((uR8, pd0) => {
  var Tw = C6(),
    {
      kBodyUsed: ir
    } = A3(),
    Zp1 = Z1("node:assert"),
    {
      InvalidArgumentError: JK6
    } = u5(),
    FK6 = Z1("node:events"),
    XK6 = [300, 301, 302, 303, 307, 308],
    md0 = Symbol("body");
  class Gp1 {
    constructor(A) {
      this[md0] = A, this[ir] = !1
    }
    async * [Symbol.asyncIterator]() {
      Zp1(!this[ir], "disturbed"), this[ir] = !0, yield* this[md0]
    }
  }
  class ud0 {
    constructor(A, B, Q, I) {
      if (B != null && (!Number.isInteger(B) || B < 0)) throw new JK6("maxRedirections must be a positive number");
      if (Tw.validateHandler(I, Q.method, Q.upgrade), this.dispatch = A, this.location = null, this.abort = null, this.opts = {
          ...Q,
          maxRedirections: 0
        }, this.maxRedirections = B, this.handler = I, this.history = [], this.redirectionLimitReached = !1, Tw.isStream(this.opts.body)) {
        if (Tw.bodyLength(this.opts.body) === 0) this.opts.body.on("data", function() {
          Zp1(!1)
        });
        if (typeof this.opts.body.readableDidRead !== "boolean") this.opts.body[ir] = !1, FK6.prototype.on.call(this.opts.body, "data", function() {
          this[ir] = !0
        })
      } else if (this.opts.body && typeof this.opts.body.pipeTo === "function") this.opts.body = new Gp1(this.opts.body);
      else if (this.opts.body && typeof this.opts.body !== "string" && !ArrayBuffer.isView(this.opts.body) && Tw.isIterable(this.opts.body)) this.opts.body = new Gp1(this.opts.body)
    }
    onConnect(A) {
      this.abort = A, this.handler.onConnect(A, {
        history: this.history
      })
    }
    onUpgrade(A, B, Q) {
      this.handler.onUpgrade(A, B, Q)
    }
    onError(A) {
      this.handler.onError(A)
    }
    onHeaders(A, B, Q, I) {
      if (this.location = this.history.length >= this.maxRedirections || Tw.isDisturbed(this.opts.body) ? null : VK6(A, B), this.opts.throwOnMaxRedirect && this.history.length >= this.maxRedirections) {
        if (this.request) this.request.abort(new Error("max redirects"));
        this.redirectionLimitReached = !0, this.abort(new Error("max redirects"));
        return
      }
      if (this.opts.origin) this.history.push(new URL(this.opts.path, this.opts.origin));
      if (!this.location) return this.handler.onHeaders(A, B, Q, I);
      let {
        origin: G,
        pathname: Z,
        search: D
      } = Tw.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin))), Y = D ? `${Z}${D}` : Z;
      if (this.opts.headers = CK6(this.opts.headers, A === 303, this.opts.origin !== G), this.opts.path = Y, this.opts.origin = G, this.opts.maxRedirections = 0, this.opts.query = null, A === 303 && this.opts.method !== "HEAD") this.opts.method = "GET", this.opts.body = null
    }
    onData(A) {
      if (this.location);
      else return this.handler.onData(A)
    }
    onComplete(A) {
      if (this.location) this.location = null, this.abort = null, this.dispatch(this.opts, this);
      else this.handler.onComplete(A)
    }
    onBodySent(A) {
      if (this.handler.onBodySent) this.handler.onBodySent(A)
    }
  }

  function VK6(A, B) {
    if (XK6.indexOf(A) === -1) return null;
    for (let Q = 0; Q < B.length; Q += 2)
      if (B[Q].length === 8 && Tw.headerNameToString(B[Q]) === "location") return B[Q + 1]
  }

  function dd0(A, B, Q) {
    if (A.length === 4) return Tw.headerNameToString(A) === "host";
    if (B && Tw.headerNameToString(A).startsWith("content-")) return !0;
    if (Q && (A.length === 13 || A.length === 6 || A.length === 19)) {
      let I = Tw.headerNameToString(A);
      return I === "authorization" || I === "cookie" || I === "proxy-authorization"
    }
    return !1
  }

  function CK6(A, B, Q) {
    let I = [];
    if (Array.isArray(A)) {
      for (let G = 0; G < A.length; G += 2)
        if (!dd0(A[G], B, Q)) I.push(A[G], A[G + 1])
    } else if (A && typeof A === "object") {
      for (let G of Object.keys(A))
        if (!dd0(G, B, Q)) I.push(G, A[G])
    } else Zp1(A == null, "headers must be an object or an array");
    return I
  }
  pd0.exports = ud0
})
// @from(Start 5481012, End 5481411)
eY1 = z((pR8, cd0) => {
  var KK6 = tY1();

  function HK6({
    maxRedirections: A
  }) {
    return (B) => {
      return function Q(I, G) {
        let {
          maxRedirections: Z = A
        } = I;
        if (!Z) return B(I, G);
        let D = new KK6(B, Z, I, G);
        return I = {
          ...I,
          maxRedirections: 0
        }, B(I, D)
      }
    }
  }
  cd0.exports = HK6
})
// @from(Start 5481417, End 5492692)
er = z((cR8, Bu0) => {
  var pN = Z1("node:assert"),
    rd0 = Z1("node:net"),
    zK6 = Z1("node:http"),
    Vj = C6(),
    {
      channels: ph
    } = Rh(),
    wK6 = vh0(),
    EK6 = Sh(),
    {
      InvalidArgumentError: jQ,
      InformationalError: UK6,
      ClientDestroyedError: NK6
    } = u5(),
    $K6 = xr(),
    {
      kUrl: Pw,
      kServerName: SR,
      kClient: qK6,
      kBusy: Dp1,
      kConnect: MK6,
      kResuming: Cj,
      kRunning: or,
      kPending: tr,
      kSize: rr,
      kQueue: tC,
      kConnected: LK6,
      kConnecting: ch,
      kNeedDrain: jR,
      kKeepAliveDefaultTimeout: ld0,
      kHostHeader: RK6,
      kPendingIdx: eC,
      kRunningIdx: cN,
      kError: OK6,
      kPipelining: AW1,
      kKeepAliveTimeoutValue: TK6,
      kMaxHeadersSize: PK6,
      kKeepAliveMaxTimeout: SK6,
      kKeepAliveTimeoutThreshold: _K6,
      kHeadersTimeout: jK6,
      kBodyTimeout: yK6,
      kStrictContentLength: kK6,
      kConnector: nr,
      kMaxRedirections: xK6,
      kMaxRequests: Yp1,
      kCounter: fK6,
      kClose: vK6,
      kDestroy: bK6,
      kDispatch: gK6,
      kInterceptors: id0,
      kLocalAddress: ar,
      kMaxResponseSize: hK6,
      kOnError: mK6,
      kHTTPContext: yQ,
      kMaxConcurrentStreams: dK6,
      kResume: sr
    } = A3(),
    uK6 = jd0(),
    pK6 = hd0(),
    nd0 = !1,
    _R = Symbol("kClosedResolve"),
    ad0 = () => {};

  function od0(A) {
    return A[AW1] ?? A[yQ]?.defaultPipelining ?? 1
  }
  class td0 extends EK6 {
    constructor(A, {
      interceptors: B,
      maxHeaderSize: Q,
      headersTimeout: I,
      socketTimeout: G,
      requestTimeout: Z,
      connectTimeout: D,
      bodyTimeout: Y,
      idleTimeout: W,
      keepAlive: J,
      keepAliveTimeout: F,
      maxKeepAliveTimeout: X,
      keepAliveMaxTimeout: V,
      keepAliveTimeoutThreshold: C,
      socketPath: K,
      pipelining: E,
      tls: N,
      strictContentLength: q,
      maxCachedSessions: O,
      maxRedirections: R,
      connect: T,
      maxRequestsPerClient: L,
      localAddress: _,
      maxResponseSize: k,
      autoSelectFamily: i,
      autoSelectFamilyAttemptTimeout: x,
      maxConcurrentStreams: s,
      allowH2: d
    } = {}) {
      super();
      if (J !== void 0) throw new jQ("unsupported keepAlive, use pipelining=0 instead");
      if (G !== void 0) throw new jQ("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");
      if (Z !== void 0) throw new jQ("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");
      if (W !== void 0) throw new jQ("unsupported idleTimeout, use keepAliveTimeout instead");
      if (X !== void 0) throw new jQ("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");
      if (Q != null && !Number.isFinite(Q)) throw new jQ("invalid maxHeaderSize");
      if (K != null && typeof K !== "string") throw new jQ("invalid socketPath");
      if (D != null && (!Number.isFinite(D) || D < 0)) throw new jQ("invalid connectTimeout");
      if (F != null && (!Number.isFinite(F) || F <= 0)) throw new jQ("invalid keepAliveTimeout");
      if (V != null && (!Number.isFinite(V) || V <= 0)) throw new jQ("invalid keepAliveMaxTimeout");
      if (C != null && !Number.isFinite(C)) throw new jQ("invalid keepAliveTimeoutThreshold");
      if (I != null && (!Number.isInteger(I) || I < 0)) throw new jQ("headersTimeout must be a positive integer or zero");
      if (Y != null && (!Number.isInteger(Y) || Y < 0)) throw new jQ("bodyTimeout must be a positive integer or zero");
      if (T != null && typeof T !== "function" && typeof T !== "object") throw new jQ("connect must be a function or an object");
      if (R != null && (!Number.isInteger(R) || R < 0)) throw new jQ("maxRedirections must be a positive number");
      if (L != null && (!Number.isInteger(L) || L < 0)) throw new jQ("maxRequestsPerClient must be a positive number");
      if (_ != null && (typeof _ !== "string" || rd0.isIP(_) === 0)) throw new jQ("localAddress must be valid string IP address");
      if (k != null && (!Number.isInteger(k) || k < -1)) throw new jQ("maxResponseSize must be a positive number");
      if (x != null && (!Number.isInteger(x) || x < -1)) throw new jQ("autoSelectFamilyAttemptTimeout must be a positive number");
      if (d != null && typeof d !== "boolean") throw new jQ("allowH2 must be a valid boolean value");
      if (s != null && (typeof s !== "number" || s < 1)) throw new jQ("maxConcurrentStreams must be a positive integer, greater than 0");
      if (typeof T !== "function") T = $K6({
        ...N,
        maxCachedSessions: O,
        allowH2: d,
        socketPath: K,
        timeout: D,
        ...i ? {
          autoSelectFamily: i,
          autoSelectFamilyAttemptTimeout: x
        } : void 0,
        ...T
      });
      if (B?.Client && Array.isArray(B.Client)) {
        if (this[id0] = B.Client, !nd0) nd0 = !0, process.emitWarning("Client.Options#interceptor is deprecated. Use Dispatcher#compose instead.", {
          code: "UNDICI-CLIENT-INTERCEPTOR-DEPRECATED"
        })
      } else this[id0] = [cK6({
        maxRedirections: R
      })];
      this[Pw] = Vj.parseOrigin(A), this[nr] = T, this[AW1] = E != null ? E : 1, this[PK6] = Q || zK6.maxHeaderSize, this[ld0] = F == null ? 4000 : F, this[SK6] = V == null ? 600000 : V, this[_K6] = C == null ? 2000 : C, this[TK6] = this[ld0], this[SR] = null, this[ar] = _ != null ? _ : null, this[Cj] = 0, this[jR] = 0, this[RK6] = `host: ${this[Pw].hostname}${this[Pw].port?`:${this[Pw].port}`:""}\r
`, this[yK6] = Y != null ? Y : 300000, this[jK6] = I != null ? I : 300000, this[kK6] = q == null ? !0 : q, this[xK6] = R, this[Yp1] = L, this[_R] = null, this[hK6] = k > -1 ? k : -1, this[dK6] = s != null ? s : 100, this[yQ] = null, this[tC] = [], this[cN] = 0, this[eC] = 0, this[sr] = (F1) => Wp1(this, F1), this[mK6] = (F1) => ed0(this, F1)
    }
    get pipelining() {
      return this[AW1]
    }
    set pipelining(A) {
      this[AW1] = A, this[sr](!0)
    }
    get[tr]() {
      return this[tC].length - this[eC]
    }
    get[or]() {
      return this[eC] - this[cN]
    }
    get[rr]() {
      return this[tC].length - this[cN]
    }
    get[LK6]() {
      return !!this[yQ] && !this[ch] && !this[yQ].destroyed
    }
    get[Dp1]() {
      return Boolean(this[yQ]?.busy(null) || this[rr] >= (od0(this) || 1) || this[tr] > 0)
    } [MK6](A) {
      Au0(this), this.once("connect", A)
    } [gK6](A, B) {
      let Q = A.origin || this[Pw].origin,
        I = new wK6(Q, A, B);
      if (this[tC].push(I), this[Cj]);
      else if (Vj.bodyLength(I.body) == null && Vj.isIterable(I.body)) this[Cj] = 1, queueMicrotask(() => Wp1(this));
      else this[sr](!0);
      if (this[Cj] && this[jR] !== 2 && this[Dp1]) this[jR] = 2;
      return this[jR] < 2
    }
    async [vK6]() {
      return new Promise((A) => {
        if (this[rr]) this[_R] = A;
        else A(null)
      })
    }
    async [bK6](A) {
      return new Promise((B) => {
        let Q = this[tC].splice(this[eC]);
        for (let G = 0; G < Q.length; G++) {
          let Z = Q[G];
          Vj.errorRequest(this, Z, A)
        }
        let I = () => {
          if (this[_R]) this[_R](), this[_R] = null;
          B(null)
        };
        if (this[yQ]) this[yQ].destroy(A, I), this[yQ] = null;
        else queueMicrotask(I);
        this[sr]()
      })
    }
  }
  var cK6 = eY1();

  function ed0(A, B) {
    if (A[or] === 0 && B.code !== "UND_ERR_INFO" && B.code !== "UND_ERR_SOCKET") {
      pN(A[eC] === A[cN]);
      let Q = A[tC].splice(A[cN]);
      for (let I = 0; I < Q.length; I++) {
        let G = Q[I];
        Vj.errorRequest(A, G, B)
      }
      pN(A[rr] === 0)
    }
  }
  async function Au0(A) {
    pN(!A[ch]), pN(!A[yQ]);
    let {
      host: B,
      hostname: Q,
      protocol: I,
      port: G
    } = A[Pw];
    if (Q[0] === "[") {
      let Z = Q.indexOf("]");
      pN(Z !== -1);
      let D = Q.substring(1, Z);
      pN(rd0.isIP(D)), Q = D
    }
    if (A[ch] = !0, ph.beforeConnect.hasSubscribers) ph.beforeConnect.publish({
      connectParams: {
        host: B,
        hostname: Q,
        protocol: I,
        port: G,
        version: A[yQ]?.version,
        servername: A[SR],
        localAddress: A[ar]
      },
      connector: A[nr]
    });
    try {
      let Z = await new Promise((D, Y) => {
        A[nr]({
          host: B,
          hostname: Q,
          protocol: I,
          port: G,
          servername: A[SR],
          localAddress: A[ar]
        }, (W, J) => {
          if (W) Y(W);
          else D(J)
        })
      });
      if (A.destroyed) {
        Vj.destroy(Z.on("error", ad0), new NK6);
        return
      }
      pN(Z);
      try {
        A[yQ] = Z.alpnProtocol === "h2" ? await pK6(A, Z) : await uK6(A, Z)
      } catch (D) {
        throw Z.destroy().on("error", ad0), D
      }
      if (A[ch] = !1, Z[fK6] = 0, Z[Yp1] = A[Yp1], Z[qK6] = A, Z[OK6] = null, ph.connected.hasSubscribers) ph.connected.publish({
        connectParams: {
          host: B,
          hostname: Q,
          protocol: I,
          port: G,
          version: A[yQ]?.version,
          servername: A[SR],
          localAddress: A[ar]
        },
        connector: A[nr],
        socket: Z
      });
      A.emit("connect", A[Pw], [A])
    } catch (Z) {
      if (A.destroyed) return;
      if (A[ch] = !1, ph.connectError.hasSubscribers) ph.connectError.publish({
        connectParams: {
          host: B,
          hostname: Q,
          protocol: I,
          port: G,
          version: A[yQ]?.version,
          servername: A[SR],
          localAddress: A[ar]
        },
        connector: A[nr],
        error: Z
      });
      if (Z.code === "ERR_TLS_CERT_ALTNAME_INVALID") {
        pN(A[or] === 0);
        while (A[tr] > 0 && A[tC][A[eC]].servername === A[SR]) {
          let D = A[tC][A[eC]++];
          Vj.errorRequest(A, D, Z)
        }
      } else ed0(A, Z);
      A.emit("connectionError", A[Pw], [A], Z)
    }
    A[sr]()
  }

  function sd0(A) {
    A[jR] = 0, A.emit("drain", A[Pw], [A])
  }

  function Wp1(A, B) {
    if (A[Cj] === 2) return;
    if (A[Cj] = 2, lK6(A, B), A[Cj] = 0, A[cN] > 256) A[tC].splice(0, A[cN]), A[eC] -= A[cN], A[cN] = 0
  }

  function lK6(A, B) {
    while (!0) {
      if (A.destroyed) {
        pN(A[tr] === 0);
        return
      }
      if (A[_R] && !A[rr]) {
        A[_R](), A[_R] = null;
        return
      }
      if (A[yQ]) A[yQ].resume();
      if (A[Dp1]) A[jR] = 2;
      else if (A[jR] === 2) {
        if (B) A[jR] = 1, queueMicrotask(() => sd0(A));
        else sd0(A);
        continue
      }
      if (A[tr] === 0) return;
      if (A[or] >= (od0(A) || 1)) return;
      let Q = A[tC][A[eC]];
      if (A[Pw].protocol === "https:" && A[SR] !== Q.servername) {
        if (A[or] > 0) return;
        A[SR] = Q.servername, A[yQ]?.destroy(new UK6("servername changed"), () => {
          A[yQ] = null, Wp1(A)
        })
      }
      if (A[ch]) return;
      if (!A[yQ]) {
        Au0(A);
        return
      }
      if (A[yQ].destroyed) return;
      if (A[yQ].busy(Q)) return;
      if (!Q.aborted && A[yQ].write(Q)) A[eC]++;
      else A[tC].splice(A[eC], 1)
    }
  }
  Bu0.exports = td0
})
// @from(Start 5492698, End 5493652)
Fp1 = z((lR8, Qu0) => {
  class Jp1 {
    constructor() {
      this.bottom = 0, this.top = 0, this.list = new Array(2048), this.next = null
    }
    isEmpty() {
      return this.top === this.bottom
    }
    isFull() {
      return (this.top + 1 & 2047) === this.bottom
    }
    push(A) {
      this.list[this.top] = A, this.top = this.top + 1 & 2047
    }
    shift() {
      let A = this.list[this.bottom];
      if (A === void 0) return null;
      return this.list[this.bottom] = void 0, this.bottom = this.bottom + 1 & 2047, A
    }
  }
  Qu0.exports = class A {
    constructor() {
      this.head = this.tail = new Jp1
    }
    isEmpty() {
      return this.head.isEmpty()
    }
    push(B) {
      if (this.head.isFull()) this.head = this.head.next = new Jp1;
      this.head.push(B)
    }
    shift() {
      let B = this.tail,
        Q = B.shift();
      if (B.isEmpty() && B.next !== null) this.tail = B.next;
      return Q
    }
  }
})
// @from(Start 5493658, End 5494230)
Zu0 = z((iR8, Gu0) => {
  var {
    kFree: iK6,
    kConnected: nK6,
    kPending: aK6,
    kQueued: sK6,
    kRunning: rK6,
    kSize: oK6
  } = A3(), Kj = Symbol("pool");
  class Iu0 {
    constructor(A) {
      this[Kj] = A
    }
    get connected() {
      return this[Kj][nK6]
    }
    get free() {
      return this[Kj][iK6]
    }
    get pending() {
      return this[Kj][aK6]
    }
    get queued() {
      return this[Kj][sK6]
    }
    get running() {
      return this[Kj][rK6]
    }
    get size() {
      return this[Kj][oK6]
    }
  }
  Gu0.exports = Iu0
})
// @from(Start 5494236, End 5497655)
Hp1 = z((nR8, zu0) => {
  var tK6 = Sh(),
    eK6 = Fp1(),
    {
      kConnected: Xp1,
      kSize: Du0,
      kRunning: Yu0,
      kPending: Wu0,
      kQueued: Ao,
      kBusy: AH6,
      kFree: BH6,
      kUrl: QH6,
      kClose: IH6,
      kDestroy: GH6,
      kDispatch: ZH6
    } = A3(),
    DH6 = Zu0(),
    sY = Symbol("clients"),
    fD = Symbol("needDrain"),
    Bo = Symbol("queue"),
    Vp1 = Symbol("closed resolve"),
    Cp1 = Symbol("onDrain"),
    Ju0 = Symbol("onConnect"),
    Fu0 = Symbol("onDisconnect"),
    Xu0 = Symbol("onConnectionError"),
    Kp1 = Symbol("get dispatcher"),
    Cu0 = Symbol("add client"),
    Ku0 = Symbol("remove client"),
    Vu0 = Symbol("stats");
  class Hu0 extends tK6 {
    constructor() {
      super();
      this[Bo] = new eK6, this[sY] = [], this[Ao] = 0;
      let A = this;
      this[Cp1] = function B(Q, I) {
        let G = A[Bo],
          Z = !1;
        while (!Z) {
          let D = G.shift();
          if (!D) break;
          A[Ao]--, Z = !this.dispatch(D.opts, D.handler)
        }
        if (this[fD] = Z, !this[fD] && A[fD]) A[fD] = !1, A.emit("drain", Q, [A, ...I]);
        if (A[Vp1] && G.isEmpty()) Promise.all(A[sY].map((D) => D.close())).then(A[Vp1])
      }, this[Ju0] = (B, Q) => {
        A.emit("connect", B, [A, ...Q])
      }, this[Fu0] = (B, Q, I) => {
        A.emit("disconnect", B, [A, ...Q], I)
      }, this[Xu0] = (B, Q, I) => {
        A.emit("connectionError", B, [A, ...Q], I)
      }, this[Vu0] = new DH6(this)
    }
    get[AH6]() {
      return this[fD]
    }
    get[Xp1]() {
      return this[sY].filter((A) => A[Xp1]).length
    }
    get[BH6]() {
      return this[sY].filter((A) => A[Xp1] && !A[fD]).length
    }
    get[Wu0]() {
      let A = this[Ao];
      for (let {
          [Wu0]: B
        }
        of this[sY]) A += B;
      return A
    }
    get[Yu0]() {
      let A = 0;
      for (let {
          [Yu0]: B
        }
        of this[sY]) A += B;
      return A
    }
    get[Du0]() {
      let A = this[Ao];
      for (let {
          [Du0]: B
        }
        of this[sY]) A += B;
      return A
    }
    get stats() {
      return this[Vu0]
    }
    async [IH6]() {
      if (this[Bo].isEmpty()) await Promise.all(this[sY].map((A) => A.close()));
      else await new Promise((A) => {
        this[Vp1] = A
      })
    }
    async [GH6](A) {
      while (!0) {
        let B = this[Bo].shift();
        if (!B) break;
        B.handler.onError(A)
      }
      await Promise.all(this[sY].map((B) => B.destroy(A)))
    } [ZH6](A, B) {
      let Q = this[Kp1]();
      if (!Q) this[fD] = !0, this[Bo].push({
        opts: A,
        handler: B
      }), this[Ao]++;
      else if (!Q.dispatch(A, B)) Q[fD] = !0, this[fD] = !this[Kp1]();
      return !this[fD]
    } [Cu0](A) {
      if (A.on("drain", this[Cp1]).on("connect", this[Ju0]).on("disconnect", this[Fu0]).on("connectionError", this[Xu0]), this[sY].push(A), this[fD]) queueMicrotask(() => {
        if (this[fD]) this[Cp1](A[QH6], [this, A])
      });
      return this
    } [Ku0](A) {
      A.close(() => {
        let B = this[sY].indexOf(A);
        if (B !== -1) this[sY].splice(B, 1)
      }), this[fD] = this[sY].some((B) => !B[fD] && B.closed !== !0 && B.destroyed !== !0)
    }
  }
  zu0.exports = {
    PoolBase: Hu0,
    kClients: sY,
    kNeedDrain: fD,
    kAddClient: Cu0,
    kRemoveClient: Ku0,
    kGetDispatcher: Kp1
  }
})
// @from(Start 5497661, End 5499597)
lh = z((aR8, qu0) => {
  var {
    PoolBase: YH6,
    kClients: wu0,
    kNeedDrain: WH6,
    kAddClient: JH6,
    kGetDispatcher: FH6
  } = Hp1(), XH6 = er(), {
    InvalidArgumentError: zp1
  } = u5(), Eu0 = C6(), {
    kUrl: Uu0,
    kInterceptors: VH6
  } = A3(), CH6 = xr(), wp1 = Symbol("options"), Ep1 = Symbol("connections"), Nu0 = Symbol("factory");

  function KH6(A, B) {
    return new XH6(A, B)
  }
  class $u0 extends YH6 {
    constructor(A, {
      connections: B,
      factory: Q = KH6,
      connect: I,
      connectTimeout: G,
      tls: Z,
      maxCachedSessions: D,
      socketPath: Y,
      autoSelectFamily: W,
      autoSelectFamilyAttemptTimeout: J,
      allowH2: F,
      ...X
    } = {}) {
      super();
      if (B != null && (!Number.isFinite(B) || B < 0)) throw new zp1("invalid connections");
      if (typeof Q !== "function") throw new zp1("factory must be a function.");
      if (I != null && typeof I !== "function" && typeof I !== "object") throw new zp1("connect must be a function or an object");
      if (typeof I !== "function") I = CH6({
        ...Z,
        maxCachedSessions: D,
        allowH2: F,
        socketPath: Y,
        timeout: G,
        ...W ? {
          autoSelectFamily: W,
          autoSelectFamilyAttemptTimeout: J
        } : void 0,
        ...I
      });
      this[VH6] = X.interceptors?.Pool && Array.isArray(X.interceptors.Pool) ? X.interceptors.Pool : [], this[Ep1] = B || null, this[Uu0] = Eu0.parseOrigin(A), this[wp1] = {
        ...Eu0.deepClone(X),
        connect: I,
        allowH2: F
      }, this[wp1].interceptors = X.interceptors ? {
        ...X.interceptors
      } : void 0, this[Nu0] = Q
    } [FH6]() {
      for (let A of this[wu0])
        if (!A[WH6]) return A;
      if (!this[Ep1] || this[wu0].length < this[Ep1]) {
        let A = this[Nu0](this[Uu0], this[wp1]);
        return this[JH6](A), A
      }
    }
  }
  qu0.exports = $u0
})
// @from(Start 5499603, End 5502957)
Pu0 = z((sR8, Tu0) => {
  var {
    BalancedPoolMissingUpstreamError: HH6,
    InvalidArgumentError: zH6
  } = u5(), {
    PoolBase: wH6,
    kClients: yZ,
    kNeedDrain: Qo,
    kAddClient: EH6,
    kRemoveClient: UH6,
    kGetDispatcher: NH6
  } = Hp1(), $H6 = lh(), {
    kUrl: Up1,
    kInterceptors: qH6
  } = A3(), {
    parseOrigin: Mu0
  } = C6(), Lu0 = Symbol("factory"), BW1 = Symbol("options"), Ru0 = Symbol("kGreatestCommonDivisor"), Hj = Symbol("kCurrentWeight"), zj = Symbol("kIndex"), hX = Symbol("kWeight"), QW1 = Symbol("kMaxWeightPerServer"), IW1 = Symbol("kErrorPenalty");

  function MH6(A, B) {
    if (A === 0) return B;
    while (B !== 0) {
      let Q = B;
      B = A % B, A = Q
    }
    return A
  }

  function LH6(A, B) {
    return new $H6(A, B)
  }
  class Ou0 extends wH6 {
    constructor(A = [], {
      factory: B = LH6,
      ...Q
    } = {}) {
      super();
      if (this[BW1] = Q, this[zj] = -1, this[Hj] = 0, this[QW1] = this[BW1].maxWeightPerServer || 100, this[IW1] = this[BW1].errorPenalty || 15, !Array.isArray(A)) A = [A];
      if (typeof B !== "function") throw new zH6("factory must be a function.");
      this[qH6] = Q.interceptors?.BalancedPool && Array.isArray(Q.interceptors.BalancedPool) ? Q.interceptors.BalancedPool : [], this[Lu0] = B;
      for (let I of A) this.addUpstream(I);
      this._updateBalancedPoolStats()
    }
    addUpstream(A) {
      let B = Mu0(A).origin;
      if (this[yZ].find((I) => I[Up1].origin === B && I.closed !== !0 && I.destroyed !== !0)) return this;
      let Q = this[Lu0](B, Object.assign({}, this[BW1]));
      this[EH6](Q), Q.on("connect", () => {
        Q[hX] = Math.min(this[QW1], Q[hX] + this[IW1])
      }), Q.on("connectionError", () => {
        Q[hX] = Math.max(1, Q[hX] - this[IW1]), this._updateBalancedPoolStats()
      }), Q.on("disconnect", (...I) => {
        let G = I[2];
        if (G && G.code === "UND_ERR_SOCKET") Q[hX] = Math.max(1, Q[hX] - this[IW1]), this._updateBalancedPoolStats()
      });
      for (let I of this[yZ]) I[hX] = this[QW1];
      return this._updateBalancedPoolStats(), this
    }
    _updateBalancedPoolStats() {
      let A = 0;
      for (let B = 0; B < this[yZ].length; B++) A = MH6(this[yZ][B][hX], A);
      this[Ru0] = A
    }
    removeUpstream(A) {
      let B = Mu0(A).origin,
        Q = this[yZ].find((I) => I[Up1].origin === B && I.closed !== !0 && I.destroyed !== !0);
      if (Q) this[UH6](Q);
      return this
    }
    get upstreams() {
      return this[yZ].filter((A) => A.closed !== !0 && A.destroyed !== !0).map((A) => A[Up1].origin)
    } [NH6]() {
      if (this[yZ].length === 0) throw new HH6;
      if (!this[yZ].find((G) => !G[Qo] && G.closed !== !0 && G.destroyed !== !0)) return;
      if (this[yZ].map((G) => G[Qo]).reduce((G, Z) => G && Z, !0)) return;
      let Q = 0,
        I = this[yZ].findIndex((G) => !G[Qo]);
      while (Q++ < this[yZ].length) {
        this[zj] = (this[zj] + 1) % this[yZ].length;
        let G = this[yZ][this[zj]];
        if (G[hX] > this[yZ][I][hX] && !G[Qo]) I = this[zj];
        if (this[zj] === 0) {
          if (this[Hj] = this[Hj] - this[Ru0], this[Hj] <= 0) this[Hj] = this[QW1]
        }
        if (G[hX] >= this[Hj] && !G[Qo]) return G
      }
      return this[Hj] = this[yZ][I][hX], this[zj] = I, this[yZ][I]
    }
  }
  Tu0.exports = Ou0
})
// @from(Start 5502963, End 5505643)
ih = z((rR8, vu0) => {
  var {
    InvalidArgumentError: GW1
  } = u5(), {
    kClients: yR,
    kRunning: Su0,
    kClose: RH6,
    kDestroy: OH6,
    kDispatch: TH6,
    kInterceptors: PH6
  } = A3(), SH6 = Sh(), _H6 = lh(), jH6 = er(), yH6 = C6(), kH6 = eY1(), _u0 = Symbol("onConnect"), ju0 = Symbol("onDisconnect"), yu0 = Symbol("onConnectionError"), xH6 = Symbol("maxRedirections"), ku0 = Symbol("onDrain"), xu0 = Symbol("factory"), Np1 = Symbol("options");

  function fH6(A, B) {
    return B && B.connections === 1 ? new jH6(A, B) : new _H6(A, B)
  }
  class fu0 extends SH6 {
    constructor({
      factory: A = fH6,
      maxRedirections: B = 0,
      connect: Q,
      ...I
    } = {}) {
      super();
      if (typeof A !== "function") throw new GW1("factory must be a function.");
      if (Q != null && typeof Q !== "function" && typeof Q !== "object") throw new GW1("connect must be a function or an object");
      if (!Number.isInteger(B) || B < 0) throw new GW1("maxRedirections must be a positive number");
      if (Q && typeof Q !== "function") Q = {
        ...Q
      };
      this[PH6] = I.interceptors?.Agent && Array.isArray(I.interceptors.Agent) ? I.interceptors.Agent : [kH6({
        maxRedirections: B
      })], this[Np1] = {
        ...yH6.deepClone(I),
        connect: Q
      }, this[Np1].interceptors = I.interceptors ? {
        ...I.interceptors
      } : void 0, this[xH6] = B, this[xu0] = A, this[yR] = new Map, this[ku0] = (G, Z) => {
        this.emit("drain", G, [this, ...Z])
      }, this[_u0] = (G, Z) => {
        this.emit("connect", G, [this, ...Z])
      }, this[ju0] = (G, Z, D) => {
        this.emit("disconnect", G, [this, ...Z], D)
      }, this[yu0] = (G, Z, D) => {
        this.emit("connectionError", G, [this, ...Z], D)
      }
    }
    get[Su0]() {
      let A = 0;
      for (let B of this[yR].values()) A += B[Su0];
      return A
    } [TH6](A, B) {
      let Q;
      if (A.origin && (typeof A.origin === "string" || A.origin instanceof URL)) Q = String(A.origin);
      else throw new GW1("opts.origin must be a non-empty string or URL.");
      let I = this[yR].get(Q);
      if (!I) I = this[xu0](A.origin, this[Np1]).on("drain", this[ku0]).on("connect", this[_u0]).on("disconnect", this[ju0]).on("connectionError", this[yu0]), this[yR].set(Q, I);
      return I.dispatch(A, B)
    }
    async [RH6]() {
      let A = [];
      for (let B of this[yR].values()) A.push(B.close());
      this[yR].clear(), await Promise.all(A)
    }
    async [OH6](A) {
      let B = [];
      for (let Q of this[yR].values()) B.push(Q.destroy(A));
      this[yR].clear(), await Promise.all(B)
    }
  }
  vu0.exports = fu0
})
// @from(Start 5505649, End 5509786)
qp1 = z((oR8, du0) => {
  var {
    kProxy: vH6,
    kClose: bH6,
    kDestroy: gH6,
    kInterceptors: hH6
  } = A3(), {
    URL: Io
  } = Z1("node:url"), mH6 = ih(), dH6 = lh(), uH6 = Sh(), {
    InvalidArgumentError: YW1,
    RequestAbortedError: pH6,
    SecureProxyConnectionError: cH6
  } = u5(), bu0 = xr(), ZW1 = Symbol("proxy agent"), DW1 = Symbol("proxy client"), Go = Symbol("proxy headers"), $p1 = Symbol("request tls settings"), gu0 = Symbol("proxy tls settings"), hu0 = Symbol("connect endpoint function");

  function lH6(A) {
    return A === "https:" ? 443 : 80
  }

  function iH6(A, B) {
    return new dH6(A, B)
  }
  var nH6 = () => {};
  class mu0 extends uH6 {
    constructor(A) {
      super();
      if (!A || typeof A === "object" && !(A instanceof Io) && !A.uri) throw new YW1("Proxy uri is mandatory");
      let {
        clientFactory: B = iH6
      } = A;
      if (typeof B !== "function") throw new YW1("Proxy opts.clientFactory must be a function.");
      let Q = this.#A(A),
        {
          href: I,
          origin: G,
          port: Z,
          protocol: D,
          username: Y,
          password: W,
          hostname: J
        } = Q;
      if (this[vH6] = {
          uri: I,
          protocol: D
        }, this[hH6] = A.interceptors?.ProxyAgent && Array.isArray(A.interceptors.ProxyAgent) ? A.interceptors.ProxyAgent : [], this[$p1] = A.requestTls, this[gu0] = A.proxyTls, this[Go] = A.headers || {}, A.auth && A.token) throw new YW1("opts.auth cannot be used in combination with opts.token");
      else if (A.auth) this[Go]["proxy-authorization"] = `Basic ${A.auth}`;
      else if (A.token) this[Go]["proxy-authorization"] = A.token;
      else if (Y && W) this[Go]["proxy-authorization"] = `Basic ${Buffer.from(`${decodeURIComponent(Y)}:${decodeURIComponent(W)}`).toString("base64")}`;
      let F = bu0({
        ...A.proxyTls
      });
      this[hu0] = bu0({
        ...A.requestTls
      }), this[DW1] = B(Q, {
        connect: F
      }), this[ZW1] = new mH6({
        ...A,
        connect: async (X, V) => {
          let C = X.host;
          if (!X.port) C += `:${lH6(X.protocol)}`;
          try {
            let {
              socket: K,
              statusCode: E
            } = await this[DW1].connect({
              origin: G,
              port: Z,
              path: C,
              signal: X.signal,
              headers: {
                ...this[Go],
                host: X.host
              },
              servername: this[gu0]?.servername || J
            });
            if (E !== 200) K.on("error", nH6).destroy(), V(new pH6(`Proxy response (${E}) !== 200 when HTTP Tunneling`));
            if (X.protocol !== "https:") {
              V(null, K);
              return
            }
            let N;
            if (this[$p1]) N = this[$p1].servername;
            else N = X.servername;
            this[hu0]({
              ...X,
              servername: N,
              httpSocket: K
            }, V)
          } catch (K) {
            if (K.code === "ERR_TLS_CERT_ALTNAME_INVALID") V(new cH6(K));
            else V(K)
          }
        }
      })
    }
    dispatch(A, B) {
      let Q = aH6(A.headers);
      if (sH6(Q), Q && !("host" in Q) && !("Host" in Q)) {
        let {
          host: I
        } = new Io(A.origin);
        Q.host = I
      }
      return this[ZW1].dispatch({
        ...A,
        headers: Q
      }, B)
    }
    #A(A) {
      if (typeof A === "string") return new Io(A);
      else if (A instanceof Io) return A;
      else return new Io(A.uri)
    }
    async [bH6]() {
      await this[ZW1].close(), await this[DW1].close()
    }
    async [gH6]() {
      await this[ZW1].destroy(), await this[DW1].destroy()
    }
  }

  function aH6(A) {
    if (Array.isArray(A)) {
      let B = {};
      for (let Q = 0; Q < A.length; Q += 2) B[A[Q]] = A[Q + 1];
      return B
    }
    return A
  }

  function sH6(A) {
    if (A && Object.keys(A).find((Q) => Q.toLowerCase() === "proxy-authorization")) throw new YW1("Proxy-Authorization should be sent in ProxyAgent constructor")
  }
  du0.exports = mu0
})
// @from(Start 5509792, End 5512673)
au0 = z((tR8, nu0) => {
  var rH6 = Sh(),
    {
      kClose: oH6,
      kDestroy: tH6,
      kClosed: uu0,
      kDestroyed: pu0,
      kDispatch: eH6,
      kNoProxyAgent: Zo,
      kHttpProxyAgent: kR,
      kHttpsProxyAgent: wj
    } = A3(),
    cu0 = qp1(),
    Az6 = ih(),
    Bz6 = {
      "http:": 80,
      "https:": 443
    },
    lu0 = !1;
  class iu0 extends rH6 {
    #A = null;
    #B = null;
    #Q = null;
    constructor(A = {}) {
      super();
      if (this.#Q = A, !lu0) lu0 = !0, process.emitWarning("EnvHttpProxyAgent is experimental, expect them to change at any time.", {
        code: "UNDICI-EHPA"
      });
      let {
        httpProxy: B,
        httpsProxy: Q,
        noProxy: I,
        ...G
      } = A;
      this[Zo] = new Az6(G);
      let Z = B ?? process.env.http_proxy ?? process.env.HTTP_PROXY;
      if (Z) this[kR] = new cu0({
        ...G,
        uri: Z
      });
      else this[kR] = this[Zo];
      let D = Q ?? process.env.https_proxy ?? process.env.HTTPS_PROXY;
      if (D) this[wj] = new cu0({
        ...G,
        uri: D
      });
      else this[wj] = this[kR];
      this.#W()
    } [eH6](A, B) {
      let Q = new URL(A.origin);
      return this.#I(Q).dispatch(A, B)
    }
    async [oH6]() {
      if (await this[Zo].close(), !this[kR][uu0]) await this[kR].close();
      if (!this[wj][uu0]) await this[wj].close()
    }
    async [tH6](A) {
      if (await this[Zo].destroy(A), !this[kR][pu0]) await this[kR].destroy(A);
      if (!this[wj][pu0]) await this[wj].destroy(A)
    }
    #I(A) {
      let {
        protocol: B,
        host: Q,
        port: I
      } = A;
      if (Q = Q.replace(/:\d*$/, "").toLowerCase(), I = Number.parseInt(I, 10) || Bz6[B] || 0, !this.#G(Q, I)) return this[Zo];
      if (B === "https:") return this[wj];
      return this[kR]
    }
    #G(A, B) {
      if (this.#Z) this.#W();
      if (this.#B.length === 0) return !0;
      if (this.#A === "*") return !1;
      for (let Q = 0; Q < this.#B.length; Q++) {
        let I = this.#B[Q];
        if (I.port && I.port !== B) continue;
        if (!/^[.*]/.test(I.hostname)) {
          if (A === I.hostname) return !1
        } else if (A.endsWith(I.hostname.replace(/^\*/, ""))) return !1
      }
      return !0
    }
    #W() {
      let A = this.#Q.noProxy ?? this.#F,
        B = A.split(/[,\s]/),
        Q = [];
      for (let I = 0; I < B.length; I++) {
        let G = B[I];
        if (!G) continue;
        let Z = G.match(/^(.+):(\d+)$/);
        Q.push({
          hostname: (Z ? Z[1] : G).toLowerCase(),
          port: Z ? Number.parseInt(Z[2], 10) : 0
        })
      }
      this.#A = A, this.#B = Q
    }
    get #Z() {
      if (this.#Q.noProxy !== void 0) return !1;
      return this.#A !== this.#F
    }
    get #F() {
      return process.env.no_proxy ?? process.env.NO_PROXY ?? ""
    }
  }
  nu0.exports = iu0
})
// @from(Start 5512679, End 5519367)
WW1 = z((eR8, tu0) => {
  var nh = Z1("node:assert"),
    {
      kRetryHandlerDefaultRetry: su0
    } = A3(),
    {
      RequestRetryError: Do
    } = u5(),
    {
      isDisturbed: ru0,
      parseHeaders: Qz6,
      parseRangeHeader: ou0,
      wrapRequestBody: Iz6
    } = C6();

  function Gz6(A) {
    let B = Date.now();
    return new Date(A).getTime() - B
  }
  class Mp1 {
    constructor(A, B) {
      let {
        retryOptions: Q,
        ...I
      } = A, {
        retry: G,
        maxRetries: Z,
        maxTimeout: D,
        minTimeout: Y,
        timeoutFactor: W,
        methods: J,
        errorCodes: F,
        retryAfter: X,
        statusCodes: V
      } = Q ?? {};
      this.dispatch = B.dispatch, this.handler = B.handler, this.opts = {
        ...I,
        body: Iz6(A.body)
      }, this.abort = null, this.aborted = !1, this.retryOpts = {
        retry: G ?? Mp1[su0],
        retryAfter: X ?? !0,
        maxTimeout: D ?? 30000,
        minTimeout: Y ?? 500,
        timeoutFactor: W ?? 2,
        maxRetries: Z ?? 5,
        methods: J ?? ["GET", "HEAD", "OPTIONS", "PUT", "DELETE", "TRACE"],
        statusCodes: V ?? [500, 502, 503, 504, 429],
        errorCodes: F ?? ["ECONNRESET", "ECONNREFUSED", "ENOTFOUND", "ENETDOWN", "ENETUNREACH", "EHOSTDOWN", "EHOSTUNREACH", "EPIPE", "UND_ERR_SOCKET"]
      }, this.retryCount = 0, this.retryCountCheckpoint = 0, this.start = 0, this.end = null, this.etag = null, this.resume = null, this.handler.onConnect((C) => {
        if (this.aborted = !0, this.abort) this.abort(C);
        else this.reason = C
      })
    }
    onRequestSent() {
      if (this.handler.onRequestSent) this.handler.onRequestSent()
    }
    onUpgrade(A, B, Q) {
      if (this.handler.onUpgrade) this.handler.onUpgrade(A, B, Q)
    }
    onConnect(A) {
      if (this.aborted) A(this.reason);
      else this.abort = A
    }
    onBodySent(A) {
      if (this.handler.onBodySent) return this.handler.onBodySent(A)
    }
    static[su0](A, {
      state: B,
      opts: Q
    }, I) {
      let {
        statusCode: G,
        code: Z,
        headers: D
      } = A, {
        method: Y,
        retryOptions: W
      } = Q, {
        maxRetries: J,
        minTimeout: F,
        maxTimeout: X,
        timeoutFactor: V,
        statusCodes: C,
        errorCodes: K,
        methods: E
      } = W, {
        counter: N
      } = B;
      if (Z && Z !== "UND_ERR_REQ_RETRY" && !K.includes(Z)) {
        I(A);
        return
      }
      if (Array.isArray(E) && !E.includes(Y)) {
        I(A);
        return
      }
      if (G != null && Array.isArray(C) && !C.includes(G)) {
        I(A);
        return
      }
      if (N > J) {
        I(A);
        return
      }
      let q = D?.["retry-after"];
      if (q) q = Number(q), q = Number.isNaN(q) ? Gz6(q) : q * 1000;
      let O = q > 0 ? Math.min(q, X) : Math.min(F * V ** (N - 1), X);
      setTimeout(() => I(null), O)
    }
    onHeaders(A, B, Q, I) {
      let G = Qz6(B);
      if (this.retryCount += 1, A >= 300)
        if (this.retryOpts.statusCodes.includes(A) === !1) return this.handler.onHeaders(A, B, Q, I);
        else return this.abort(new Do("Request failed", A, {
          headers: G,
          data: {
            count: this.retryCount
          }
        })), !1;
      if (this.resume != null) {
        if (this.resume = null, A !== 206 && (this.start > 0 || A !== 200)) return this.abort(new Do("server does not support the range header and the payload was partially consumed", A, {
          headers: G,
          data: {
            count: this.retryCount
          }
        })), !1;
        let D = ou0(G["content-range"]);
        if (!D) return this.abort(new Do("Content-Range mismatch", A, {
          headers: G,
          data: {
            count: this.retryCount
          }
        })), !1;
        if (this.etag != null && this.etag !== G.etag) return this.abort(new Do("ETag mismatch", A, {
          headers: G,
          data: {
            count: this.retryCount
          }
        })), !1;
        let {
          start: Y,
          size: W,
          end: J = W - 1
        } = D;
        return nh(this.start === Y, "content-range mismatch"), nh(this.end == null || this.end === J, "content-range mismatch"), this.resume = Q, !0
      }
      if (this.end == null) {
        if (A === 206) {
          let D = ou0(G["content-range"]);
          if (D == null) return this.handler.onHeaders(A, B, Q, I);
          let {
            start: Y,
            size: W,
            end: J = W - 1
          } = D;
          nh(Y != null && Number.isFinite(Y), "content-range mismatch"), nh(J != null && Number.isFinite(J), "invalid content-length"), this.start = Y, this.end = J
        }
        if (this.end == null) {
          let D = G["content-length"];
          this.end = D != null ? Number(D) - 1 : null
        }
        if (nh(Number.isFinite(this.start)), nh(this.end == null || Number.isFinite(this.end), "invalid content-length"), this.resume = Q, this.etag = G.etag != null ? G.etag : null, this.etag != null && this.etag.startsWith("W/")) this.etag = null;
        return this.handler.onHeaders(A, B, Q, I)
      }
      let Z = new Do("Request failed", A, {
        headers: G,
        data: {
          count: this.retryCount
        }
      });
      return this.abort(Z), !1
    }
    onData(A) {
      return this.start += A.length, this.handler.onData(A)
    }
    onComplete(A) {
      return this.retryCount = 0, this.handler.onComplete(A)
    }
    onError(A) {
      if (this.aborted || ru0(this.opts.body)) return this.handler.onError(A);
      if (this.retryCount - this.retryCountCheckpoint > 0) this.retryCount = this.retryCountCheckpoint + (this.retryCount - this.retryCountCheckpoint);
      else this.retryCount += 1;
      this.retryOpts.retry(A, {
        state: {
          counter: this.retryCount
        },
        opts: {
          retryOptions: this.retryOpts,
          ...this.opts
        }
      }, B.bind(this));

      function B(Q) {
        if (Q != null || this.aborted || ru0(this.opts.body)) return this.handler.onError(Q);
        if (this.start !== 0) {
          let I = {
            range: `bytes=${this.start}-${this.end??""}`
          };
          if (this.etag != null) I["if-match"] = this.etag;
          this.opts = {
            ...this.opts,
            headers: {
              ...this.opts.headers,
              ...I
            }
          }
        }
        try {
          this.retryCountCheckpoint = this.retryCount, this.dispatch(this.opts, this)
        } catch (I) {
          this.handler.onError(I)
        }
      }
    }
  }
  tu0.exports = Mp1
})
// @from(Start 5519373, End 5519919)
Bp0 = z((AO8, Ap0) => {
  var Zz6 = yr(),
    Dz6 = WW1();
  class eu0 extends Zz6 {
    #A = null;
    #B = null;
    constructor(A, B = {}) {
      super(B);
      this.#A = A, this.#B = B
    }
    dispatch(A, B) {
      let Q = new Dz6({
        ...A,
        retryOptions: this.#B
      }, {
        dispatch: this.#A.dispatch.bind(this.#A),
        handler: B
      });
      return this.#A.dispatch(A, Q)
    }
    close() {
      return this.#A.close()
    }
    destroy() {
      return this.#A.destroy()
    }
  }
  Ap0.exports = eu0
})
// @from(Start 5519925, End 5525757)
Pp1 = z((BO8, Xp0) => {
  var Dp0 = Z1("node:assert"),
    {
      Readable: Yz6
    } = Z1("node:stream"),
    {
      RequestAbortedError: Yp0,
      NotSupportedError: Wz6,
      InvalidArgumentError: Jz6,
      AbortError: Lp1
    } = u5(),
    Wp0 = C6(),
    {
      ReadableStreamFrom: Fz6
    } = C6(),
    LJ = Symbol("kConsume"),
    Yo = Symbol("kReading"),
    xR = Symbol("kBody"),
    Qp0 = Symbol("kAbort"),
    Jp0 = Symbol("kContentType"),
    Ip0 = Symbol("kContentLength"),
    Xz6 = () => {};
  class Fp0 extends Yz6 {
    constructor({
      resume: A,
      abort: B,
      contentType: Q = "",
      contentLength: I,
      highWaterMark: G = 65536
    }) {
      super({
        autoDestroy: !0,
        read: A,
        highWaterMark: G
      });
      this._readableState.dataEmitted = !1, this[Qp0] = B, this[LJ] = null, this[xR] = null, this[Jp0] = Q, this[Ip0] = I, this[Yo] = !1
    }
    destroy(A) {
      if (!A && !this._readableState.endEmitted) A = new Yp0;
      if (A) this[Qp0]();
      return super.destroy(A)
    }
    _destroy(A, B) {
      if (!this[Yo]) setImmediate(() => {
        B(A)
      });
      else B(A)
    }
    on(A, ...B) {
      if (A === "data" || A === "readable") this[Yo] = !0;
      return super.on(A, ...B)
    }
    addListener(A, ...B) {
      return this.on(A, ...B)
    }
    off(A, ...B) {
      let Q = super.off(A, ...B);
      if (A === "data" || A === "readable") this[Yo] = this.listenerCount("data") > 0 || this.listenerCount("readable") > 0;
      return Q
    }
    removeListener(A, ...B) {
      return this.off(A, ...B)
    }
    push(A) {
      if (this[LJ] && A !== null) return Op1(this[LJ], A), this[Yo] ? super.push(A) : !0;
      return super.push(A)
    }
    async text() {
      return Wo(this, "text")
    }
    async json() {
      return Wo(this, "json")
    }
    async blob() {
      return Wo(this, "blob")
    }
    async bytes() {
      return Wo(this, "bytes")
    }
    async arrayBuffer() {
      return Wo(this, "arrayBuffer")
    }
    async formData() {
      throw new Wz6
    }
    get bodyUsed() {
      return Wp0.isDisturbed(this)
    }
    get body() {
      if (!this[xR]) {
        if (this[xR] = Fz6(this), this[LJ]) this[xR].getReader(), Dp0(this[xR].locked)
      }
      return this[xR]
    }
    async dump(A) {
      let B = Number.isFinite(A?.limit) ? A.limit : 131072,
        Q = A?.signal;
      if (Q != null && (typeof Q !== "object" || !("aborted" in Q))) throw new Jz6("signal must be an AbortSignal");
      if (Q?.throwIfAborted(), this._readableState.closeEmitted) return null;
      return await new Promise((I, G) => {
        if (this[Ip0] > B) this.destroy(new Lp1);
        let Z = () => {
          this.destroy(Q.reason ?? new Lp1)
        };
        Q?.addEventListener("abort", Z), this.on("close", function() {
          if (Q?.removeEventListener("abort", Z), Q?.aborted) G(Q.reason ?? new Lp1);
          else I(null)
        }).on("error", Xz6).on("data", function(D) {
          if (B -= D.length, B <= 0) this.destroy()
        }).resume()
      })
    }
  }

  function Vz6(A) {
    return A[xR] && A[xR].locked === !0 || A[LJ]
  }

  function Cz6(A) {
    return Wp0.isDisturbed(A) || Vz6(A)
  }
  async function Wo(A, B) {
    return Dp0(!A[LJ]), new Promise((Q, I) => {
      if (Cz6(A)) {
        let G = A._readableState;
        if (G.destroyed && G.closeEmitted === !1) A.on("error", (Z) => {
          I(Z)
        }).on("close", () => {
          I(new TypeError("unusable"))
        });
        else I(G.errored ?? new TypeError("unusable"))
      } else queueMicrotask(() => {
        A[LJ] = {
          type: B,
          stream: A,
          resolve: Q,
          reject: I,
          length: 0,
          body: []
        }, A.on("error", function(G) {
          Tp1(this[LJ], G)
        }).on("close", function() {
          if (this[LJ].body !== null) Tp1(this[LJ], new Yp0)
        }), Kz6(A[LJ])
      })
    })
  }

  function Kz6(A) {
    if (A.body === null) return;
    let {
      _readableState: B
    } = A.stream;
    if (B.bufferIndex) {
      let Q = B.bufferIndex,
        I = B.buffer.length;
      for (let G = Q; G < I; G++) Op1(A, B.buffer[G])
    } else
      for (let Q of B.buffer) Op1(A, Q);
    if (B.endEmitted) Zp0(this[LJ]);
    else A.stream.on("end", function() {
      Zp0(this[LJ])
    });
    A.stream.resume();
    while (A.stream.read() != null);
  }

  function Rp1(A, B) {
    if (A.length === 0 || B === 0) return "";
    let Q = A.length === 1 ? A[0] : Buffer.concat(A, B),
      I = Q.length,
      G = I > 2 && Q[0] === 239 && Q[1] === 187 && Q[2] === 191 ? 3 : 0;
    return Q.utf8Slice(G, I)
  }

  function Gp0(A, B) {
    if (A.length === 0 || B === 0) return new Uint8Array(0);
    if (A.length === 1) return new Uint8Array(A[0]);
    let Q = new Uint8Array(Buffer.allocUnsafeSlow(B).buffer),
      I = 0;
    for (let G = 0; G < A.length; ++G) {
      let Z = A[G];
      Q.set(Z, I), I += Z.length
    }
    return Q
  }

  function Zp0(A) {
    let {
      type: B,
      body: Q,
      resolve: I,
      stream: G,
      length: Z
    } = A;
    try {
      if (B === "text") I(Rp1(Q, Z));
      else if (B === "json") I(JSON.parse(Rp1(Q, Z)));
      else if (B === "arrayBuffer") I(Gp0(Q, Z).buffer);
      else if (B === "blob") I(new Blob(Q, {
        type: G[Jp0]
      }));
      else if (B === "bytes") I(Gp0(Q, Z));
      Tp1(A)
    } catch (D) {
      G.destroy(D)
    }
  }

  function Op1(A, B) {
    A.length += B.length, A.body.push(B)
  }

  function Tp1(A, B) {
    if (A.body === null) return;
    if (B) A.reject(B);
    else A.resolve();
    A.type = null, A.stream = null, A.resolve = null, A.reject = null, A.length = 0, A.body = null
  }
  Xp0.exports = {
    Readable: Fp0,
    chunksDecode: Rp1
  }
})
// @from(Start 5525763, End 5527283)
Sp1 = z((QO8, zp0) => {
  var Hz6 = Z1("node:assert"),
    {
      ResponseStatusCodeError: Vp0
    } = u5(),
    {
      chunksDecode: Cp0
    } = Pp1();
  async function zz6({
    callback: A,
    body: B,
    contentType: Q,
    statusCode: I,
    statusMessage: G,
    headers: Z
  }) {
    Hz6(B);
    let D = [],
      Y = 0;
    try {
      for await (let X of B) if (D.push(X), Y += X.length, Y > 131072) {
        D = [], Y = 0;
        break
      }
    } catch {
      D = [], Y = 0
    }
    let W = `Response status code ${I}${G?`: ${G}`:""}`;
    if (I === 204 || !Q || !Y) {
      queueMicrotask(() => A(new Vp0(W, I, Z)));
      return
    }
    let J = Error.stackTraceLimit;
    Error.stackTraceLimit = 0;
    let F;
    try {
      if (Kp0(Q)) F = JSON.parse(Cp0(D, Y));
      else if (Hp0(Q)) F = Cp0(D, Y)
    } catch {} finally {
      Error.stackTraceLimit = J
    }
    queueMicrotask(() => A(new Vp0(W, I, Z, F)))
  }
  var Kp0 = (A) => {
      return A.length > 15 && A[11] === "/" && A[0] === "a" && A[1] === "p" && A[2] === "p" && A[3] === "l" && A[4] === "i" && A[5] === "c" && A[6] === "a" && A[7] === "t" && A[8] === "i" && A[9] === "o" && A[10] === "n" && A[12] === "j" && A[13] === "s" && A[14] === "o" && A[15] === "n"
    },
    Hp0 = (A) => {
      return A.length > 4 && A[4] === "/" && A[0] === "t" && A[1] === "e" && A[2] === "x" && A[3] === "t"
    };
  zp0.exports = {
    getResolveErrorBodyCallback: zz6,
    isContentTypeApplicationJson: Kp0,
    isContentTypeText: Hp0
  }
})
// @from(Start 5527289, End 5532026)
Up0 = z((IO8, jp1) => {
  var wz6 = Z1("node:assert"),
    {
      Readable: Ez6
    } = Pp1(),
    {
      InvalidArgumentError: ah,
      RequestAbortedError: wp0
    } = u5(),
    RJ = C6(),
    {
      getResolveErrorBodyCallback: Uz6
    } = Sp1(),
    {
      AsyncResource: Nz6
    } = Z1("node:async_hooks");
  class _p1 extends Nz6 {
    constructor(A, B) {
      if (!A || typeof A !== "object") throw new ah("invalid opts");
      let {
        signal: Q,
        method: I,
        opaque: G,
        body: Z,
        onInfo: D,
        responseHeaders: Y,
        throwOnError: W,
        highWaterMark: J
      } = A;
      try {
        if (typeof B !== "function") throw new ah("invalid callback");
        if (J && (typeof J !== "number" || J < 0)) throw new ah("invalid highWaterMark");
        if (Q && typeof Q.on !== "function" && typeof Q.addEventListener !== "function") throw new ah("signal must be an EventEmitter or EventTarget");
        if (I === "CONNECT") throw new ah("invalid method");
        if (D && typeof D !== "function") throw new ah("invalid onInfo callback");
        super("UNDICI_REQUEST")
      } catch (F) {
        if (RJ.isStream(Z)) RJ.destroy(Z.on("error", RJ.nop), F);
        throw F
      }
      if (this.method = I, this.responseHeaders = Y || null, this.opaque = G || null, this.callback = B, this.res = null, this.abort = null, this.body = Z, this.trailers = {}, this.context = null, this.onInfo = D || null, this.throwOnError = W, this.highWaterMark = J, this.signal = Q, this.reason = null, this.removeAbortListener = null, RJ.isStream(Z)) Z.on("error", (F) => {
        this.onError(F)
      });
      if (this.signal)
        if (this.signal.aborted) this.reason = this.signal.reason ?? new wp0;
        else this.removeAbortListener = RJ.addAbortListener(this.signal, () => {
          if (this.reason = this.signal.reason ?? new wp0, this.res) RJ.destroy(this.res.on("error", RJ.nop), this.reason);
          else if (this.abort) this.abort(this.reason);
          if (this.removeAbortListener) this.res?.off("close", this.removeAbortListener), this.removeAbortListener(), this.removeAbortListener = null
        })
    }
    onConnect(A, B) {
      if (this.reason) {
        A(this.reason);
        return
      }
      wz6(this.callback), this.abort = A, this.context = B
    }
    onHeaders(A, B, Q, I) {
      let {
        callback: G,
        opaque: Z,
        abort: D,
        context: Y,
        responseHeaders: W,
        highWaterMark: J
      } = this, F = W === "raw" ? RJ.parseRawHeaders(B) : RJ.parseHeaders(B);
      if (A < 200) {
        if (this.onInfo) this.onInfo({
          statusCode: A,
          headers: F
        });
        return
      }
      let X = W === "raw" ? RJ.parseHeaders(B) : F,
        V = X["content-type"],
        C = X["content-length"],
        K = new Ez6({
          resume: Q,
          abort: D,
          contentType: V,
          contentLength: this.method !== "HEAD" && C ? Number(C) : null,
          highWaterMark: J
        });
      if (this.removeAbortListener) K.on("close", this.removeAbortListener);
      if (this.callback = null, this.res = K, G !== null)
        if (this.throwOnError && A >= 400) this.runInAsyncScope(Uz6, null, {
          callback: G,
          body: K,
          contentType: V,
          statusCode: A,
          statusMessage: I,
          headers: F
        });
        else this.runInAsyncScope(G, null, null, {
          statusCode: A,
          headers: F,
          trailers: this.trailers,
          opaque: Z,
          body: K,
          context: Y
        })
    }
    onData(A) {
      return this.res.push(A)
    }
    onComplete(A) {
      RJ.parseHeaders(A, this.trailers), this.res.push(null)
    }
    onError(A) {
      let {
        res: B,
        callback: Q,
        body: I,
        opaque: G
      } = this;
      if (Q) this.callback = null, queueMicrotask(() => {
        this.runInAsyncScope(Q, null, A, {
          opaque: G
        })
      });
      if (B) this.res = null, queueMicrotask(() => {
        RJ.destroy(B, A)
      });
      if (I) this.body = null, RJ.destroy(I, A);
      if (this.removeAbortListener) B?.off("close", this.removeAbortListener), this.removeAbortListener(), this.removeAbortListener = null
    }
  }

  function Ep0(A, B) {
    if (B === void 0) return new Promise((Q, I) => {
      Ep0.call(this, A, (G, Z) => {
        return G ? I(G) : Q(Z)
      })
    });
    try {
      this.dispatch(A, new _p1(A, B))
    } catch (Q) {
      if (typeof B !== "function") throw Q;
      let I = A?.opaque;
      queueMicrotask(() => B(Q, {
        opaque: I
      }))
    }
  }
  jp1.exports = Ep0;
  jp1.exports.RequestHandler = _p1
})
// @from(Start 5532032, End 5532809)
Jo = z((GO8, qp0) => {
  var {
    addAbortListener: $z6
  } = C6(), {
    RequestAbortedError: qz6
  } = u5(), sh = Symbol("kListener"), Sw = Symbol("kSignal");

  function Np0(A) {
    if (A.abort) A.abort(A[Sw]?.reason);
    else A.reason = A[Sw]?.reason ?? new qz6;
    $p0(A)
  }

  function Mz6(A, B) {
    if (A.reason = null, A[Sw] = null, A[sh] = null, !B) return;
    if (B.aborted) {
      Np0(A);
      return
    }
    A[Sw] = B, A[sh] = () => {
      Np0(A)
    }, $z6(A[Sw], A[sh])
  }

  function $p0(A) {
    if (!A[Sw]) return;
    if ("removeEventListener" in A[Sw]) A[Sw].removeEventListener("abort", A[sh]);
    else A[Sw].removeListener("abort", A[sh]);
    A[Sw] = null, A[sh] = null
  }
  qp0.exports = {
    addSignal: Mz6,
    removeSignal: $p0
  }
})
// @from(Start 5532815, End 5537365)
Tp0 = z((ZO8, Op0) => {
  var Lz6 = Z1("node:assert"),
    {
      finished: Rz6,
      PassThrough: Oz6
    } = Z1("node:stream"),
    {
      InvalidArgumentError: rh,
      InvalidReturnValueError: Tz6
    } = u5(),
    AK = C6(),
    {
      getResolveErrorBodyCallback: Pz6
    } = Sp1(),
    {
      AsyncResource: Sz6
    } = Z1("node:async_hooks"),
    {
      addSignal: _z6,
      removeSignal: Mp0
    } = Jo();
  class Lp0 extends Sz6 {
    constructor(A, B, Q) {
      if (!A || typeof A !== "object") throw new rh("invalid opts");
      let {
        signal: I,
        method: G,
        opaque: Z,
        body: D,
        onInfo: Y,
        responseHeaders: W,
        throwOnError: J
      } = A;
      try {
        if (typeof Q !== "function") throw new rh("invalid callback");
        if (typeof B !== "function") throw new rh("invalid factory");
        if (I && typeof I.on !== "function" && typeof I.addEventListener !== "function") throw new rh("signal must be an EventEmitter or EventTarget");
        if (G === "CONNECT") throw new rh("invalid method");
        if (Y && typeof Y !== "function") throw new rh("invalid onInfo callback");
        super("UNDICI_STREAM")
      } catch (F) {
        if (AK.isStream(D)) AK.destroy(D.on("error", AK.nop), F);
        throw F
      }
      if (this.responseHeaders = W || null, this.opaque = Z || null, this.factory = B, this.callback = Q, this.res = null, this.abort = null, this.context = null, this.trailers = null, this.body = D, this.onInfo = Y || null, this.throwOnError = J || !1, AK.isStream(D)) D.on("error", (F) => {
        this.onError(F)
      });
      _z6(this, I)
    }
    onConnect(A, B) {
      if (this.reason) {
        A(this.reason);
        return
      }
      Lz6(this.callback), this.abort = A, this.context = B
    }
    onHeaders(A, B, Q, I) {
      let {
        factory: G,
        opaque: Z,
        context: D,
        callback: Y,
        responseHeaders: W
      } = this, J = W === "raw" ? AK.parseRawHeaders(B) : AK.parseHeaders(B);
      if (A < 200) {
        if (this.onInfo) this.onInfo({
          statusCode: A,
          headers: J
        });
        return
      }
      this.factory = null;
      let F;
      if (this.throwOnError && A >= 400) {
        let C = (W === "raw" ? AK.parseHeaders(B) : J)["content-type"];
        F = new Oz6, this.callback = null, this.runInAsyncScope(Pz6, null, {
          callback: Y,
          body: F,
          contentType: C,
          statusCode: A,
          statusMessage: I,
          headers: J
        })
      } else {
        if (G === null) return;
        if (F = this.runInAsyncScope(G, null, {
            statusCode: A,
            headers: J,
            opaque: Z,
            context: D
          }), !F || typeof F.write !== "function" || typeof F.end !== "function" || typeof F.on !== "function") throw new Tz6("expected Writable");
        Rz6(F, {
          readable: !1
        }, (V) => {
          let {
            callback: C,
            res: K,
            opaque: E,
            trailers: N,
            abort: q
          } = this;
          if (this.res = null, V || !K.readable) AK.destroy(K, V);
          if (this.callback = null, this.runInAsyncScope(C, null, V || null, {
              opaque: E,
              trailers: N
            }), V) q()
        })
      }
      return F.on("drain", Q), this.res = F, (F.writableNeedDrain !== void 0 ? F.writableNeedDrain : F._writableState?.needDrain) !== !0
    }
    onData(A) {
      let {
        res: B
      } = this;
      return B ? B.write(A) : !0
    }
    onComplete(A) {
      let {
        res: B
      } = this;
      if (Mp0(this), !B) return;
      this.trailers = AK.parseHeaders(A), B.end()
    }
    onError(A) {
      let {
        res: B,
        callback: Q,
        opaque: I,
        body: G
      } = this;
      if (Mp0(this), this.factory = null, B) this.res = null, AK.destroy(B, A);
      else if (Q) this.callback = null, queueMicrotask(() => {
        this.runInAsyncScope(Q, null, A, {
          opaque: I
        })
      });
      if (G) this.body = null, AK.destroy(G, A)
    }
  }

  function Rp0(A, B, Q) {
    if (Q === void 0) return new Promise((I, G) => {
      Rp0.call(this, A, B, (Z, D) => {
        return Z ? G(Z) : I(D)
      })
    });
    try {
      this.dispatch(A, new Lp0(A, B, Q))
    } catch (I) {
      if (typeof Q !== "function") throw I;
      let G = A?.opaque;
      queueMicrotask(() => Q(I, {
        opaque: G
      }))
    }
  }
  Op0.exports = Rp0
})
// @from(Start 5537371, End 5542178)
xp0 = z((DO8, kp0) => {
  var {
    Readable: Sp0,
    Duplex: jz6,
    PassThrough: yz6
  } = Z1("node:stream"), {
    InvalidArgumentError: Fo,
    InvalidReturnValueError: kz6,
    RequestAbortedError: yp1
  } = u5(), mX = C6(), {
    AsyncResource: xz6
  } = Z1("node:async_hooks"), {
    addSignal: fz6,
    removeSignal: vz6
  } = Jo(), Pp0 = Z1("node:assert"), oh = Symbol("resume");
  class _p0 extends Sp0 {
    constructor() {
      super({
        autoDestroy: !0
      });
      this[oh] = null
    }
    _read() {
      let {
        [oh]: A
      } = this;
      if (A) this[oh] = null, A()
    }
    _destroy(A, B) {
      this._read(), B(A)
    }
  }
  class jp0 extends Sp0 {
    constructor(A) {
      super({
        autoDestroy: !0
      });
      this[oh] = A
    }
    _read() {
      this[oh]()
    }
    _destroy(A, B) {
      if (!A && !this._readableState.endEmitted) A = new yp1;
      B(A)
    }
  }
  class yp0 extends xz6 {
    constructor(A, B) {
      if (!A || typeof A !== "object") throw new Fo("invalid opts");
      if (typeof B !== "function") throw new Fo("invalid handler");
      let {
        signal: Q,
        method: I,
        opaque: G,
        onInfo: Z,
        responseHeaders: D
      } = A;
      if (Q && typeof Q.on !== "function" && typeof Q.addEventListener !== "function") throw new Fo("signal must be an EventEmitter or EventTarget");
      if (I === "CONNECT") throw new Fo("invalid method");
      if (Z && typeof Z !== "function") throw new Fo("invalid onInfo callback");
      super("UNDICI_PIPELINE");
      this.opaque = G || null, this.responseHeaders = D || null, this.handler = B, this.abort = null, this.context = null, this.onInfo = Z || null, this.req = new _p0().on("error", mX.nop), this.ret = new jz6({
        readableObjectMode: A.objectMode,
        autoDestroy: !0,
        read: () => {
          let {
            body: Y
          } = this;
          if (Y?.resume) Y.resume()
        },
        write: (Y, W, J) => {
          let {
            req: F
          } = this;
          if (F.push(Y, W) || F._readableState.destroyed) J();
          else F[oh] = J
        },
        destroy: (Y, W) => {
          let {
            body: J,
            req: F,
            res: X,
            ret: V,
            abort: C
          } = this;
          if (!Y && !V._readableState.endEmitted) Y = new yp1;
          if (C && Y) C();
          mX.destroy(J, Y), mX.destroy(F, Y), mX.destroy(X, Y), vz6(this), W(Y)
        }
      }).on("prefinish", () => {
        let {
          req: Y
        } = this;
        Y.push(null)
      }), this.res = null, fz6(this, Q)
    }
    onConnect(A, B) {
      let {
        ret: Q,
        res: I
      } = this;
      if (this.reason) {
        A(this.reason);
        return
      }
      Pp0(!I, "pipeline cannot be retried"), Pp0(!Q.destroyed), this.abort = A, this.context = B
    }
    onHeaders(A, B, Q) {
      let {
        opaque: I,
        handler: G,
        context: Z
      } = this;
      if (A < 200) {
        if (this.onInfo) {
          let Y = this.responseHeaders === "raw" ? mX.parseRawHeaders(B) : mX.parseHeaders(B);
          this.onInfo({
            statusCode: A,
            headers: Y
          })
        }
        return
      }
      this.res = new jp0(Q);
      let D;
      try {
        this.handler = null;
        let Y = this.responseHeaders === "raw" ? mX.parseRawHeaders(B) : mX.parseHeaders(B);
        D = this.runInAsyncScope(G, null, {
          statusCode: A,
          headers: Y,
          opaque: I,
          body: this.res,
          context: Z
        })
      } catch (Y) {
        throw this.res.on("error", mX.nop), Y
      }
      if (!D || typeof D.on !== "function") throw new kz6("expected Readable");
      D.on("data", (Y) => {
        let {
          ret: W,
          body: J
        } = this;
        if (!W.push(Y) && J.pause) J.pause()
      }).on("error", (Y) => {
        let {
          ret: W
        } = this;
        mX.destroy(W, Y)
      }).on("end", () => {
        let {
          ret: Y
        } = this;
        Y.push(null)
      }).on("close", () => {
        let {
          ret: Y
        } = this;
        if (!Y._readableState.ended) mX.destroy(Y, new yp1)
      }), this.body = D
    }
    onData(A) {
      let {
        res: B
      } = this;
      return B.push(A)
    }
    onComplete(A) {
      let {
        res: B
      } = this;
      B.push(null)
    }
    onError(A) {
      let {
        ret: B
      } = this;
      this.handler = null, mX.destroy(B, A)
    }
  }

  function bz6(A, B) {
    try {
      let Q = new yp0(A, B);
      return this.dispatch({
        ...A,
        body: Q.req
      }, Q), Q.ret
    } catch (Q) {
      return new yz6().destroy(Q)
    }
  }
  kp0.exports = bz6
})
// @from(Start 5542184, End 5544415)
dp0 = z((YO8, mp0) => {
  var {
    InvalidArgumentError: kp1,
    SocketError: gz6
  } = u5(), {
    AsyncResource: hz6
  } = Z1("node:async_hooks"), fp0 = C6(), {
    addSignal: mz6,
    removeSignal: vp0
  } = Jo(), bp0 = Z1("node:assert");
  class gp0 extends hz6 {
    constructor(A, B) {
      if (!A || typeof A !== "object") throw new kp1("invalid opts");
      if (typeof B !== "function") throw new kp1("invalid callback");
      let {
        signal: Q,
        opaque: I,
        responseHeaders: G
      } = A;
      if (Q && typeof Q.on !== "function" && typeof Q.addEventListener !== "function") throw new kp1("signal must be an EventEmitter or EventTarget");
      super("UNDICI_UPGRADE");
      this.responseHeaders = G || null, this.opaque = I || null, this.callback = B, this.abort = null, this.context = null, mz6(this, Q)
    }
    onConnect(A, B) {
      if (this.reason) {
        A(this.reason);
        return
      }
      bp0(this.callback), this.abort = A, this.context = null
    }
    onHeaders() {
      throw new gz6("bad upgrade", null)
    }
    onUpgrade(A, B, Q) {
      bp0(A === 101);
      let {
        callback: I,
        opaque: G,
        context: Z
      } = this;
      vp0(this), this.callback = null;
      let D = this.responseHeaders === "raw" ? fp0.parseRawHeaders(B) : fp0.parseHeaders(B);
      this.runInAsyncScope(I, null, null, {
        headers: D,
        socket: Q,
        opaque: G,
        context: Z
      })
    }
    onError(A) {
      let {
        callback: B,
        opaque: Q
      } = this;
      if (vp0(this), B) this.callback = null, queueMicrotask(() => {
        this.runInAsyncScope(B, null, A, {
          opaque: Q
        })
      })
    }
  }

  function hp0(A, B) {
    if (B === void 0) return new Promise((Q, I) => {
      hp0.call(this, A, (G, Z) => {
        return G ? I(G) : Q(Z)
      })
    });
    try {
      let Q = new gp0(A, B);
      this.dispatch({
        ...A,
        method: A.method || "GET",
        upgrade: A.protocol || "Websocket"
      }, Q)
    } catch (Q) {
      if (typeof B !== "function") throw Q;
      let I = A?.opaque;
      queueMicrotask(() => B(Q, {
        opaque: I
      }))
    }
  }
  mp0.exports = hp0
})
// @from(Start 5544421, End 5546637)
np0 = z((WO8, ip0) => {
  var dz6 = Z1("node:assert"),
    {
      AsyncResource: uz6
    } = Z1("node:async_hooks"),
    {
      InvalidArgumentError: xp1,
      SocketError: pz6
    } = u5(),
    up0 = C6(),
    {
      addSignal: cz6,
      removeSignal: pp0
    } = Jo();
  class cp0 extends uz6 {
    constructor(A, B) {
      if (!A || typeof A !== "object") throw new xp1("invalid opts");
      if (typeof B !== "function") throw new xp1("invalid callback");
      let {
        signal: Q,
        opaque: I,
        responseHeaders: G
      } = A;
      if (Q && typeof Q.on !== "function" && typeof Q.addEventListener !== "function") throw new xp1("signal must be an EventEmitter or EventTarget");
      super("UNDICI_CONNECT");
      this.opaque = I || null, this.responseHeaders = G || null, this.callback = B, this.abort = null, cz6(this, Q)
    }
    onConnect(A, B) {
      if (this.reason) {
        A(this.reason);
        return
      }
      dz6(this.callback), this.abort = A, this.context = B
    }
    onHeaders() {
      throw new pz6("bad connect", null)
    }
    onUpgrade(A, B, Q) {
      let {
        callback: I,
        opaque: G,
        context: Z
      } = this;
      pp0(this), this.callback = null;
      let D = B;
      if (D != null) D = this.responseHeaders === "raw" ? up0.parseRawHeaders(B) : up0.parseHeaders(B);
      this.runInAsyncScope(I, null, null, {
        statusCode: A,
        headers: D,
        socket: Q,
        opaque: G,
        context: Z
      })
    }
    onError(A) {
      let {
        callback: B,
        opaque: Q
      } = this;
      if (pp0(this), B) this.callback = null, queueMicrotask(() => {
        this.runInAsyncScope(B, null, A, {
          opaque: Q
        })
      })
    }
  }

  function lp0(A, B) {
    if (B === void 0) return new Promise((Q, I) => {
      lp0.call(this, A, (G, Z) => {
        return G ? I(G) : Q(Z)
      })
    });
    try {
      let Q = new cp0(A, B);
      this.dispatch({
        ...A,
        method: "CONNECT"
      }, Q)
    } catch (Q) {
      if (typeof B !== "function") throw Q;
      let I = A?.opaque;
      queueMicrotask(() => B(Q, {
        opaque: I
      }))
    }
  }
  ip0.exports = lp0
})
// @from(Start 5546643, End 5546782)
ap0 = z((lz6, th) => {
  lz6.request = Up0();
  lz6.stream = Tp0();
  lz6.pipeline = xp0();
  lz6.upgrade = dp0();
  lz6.connect = np0()
})
// @from(Start 5546788, End 5547181)
vp1 = z((JO8, sp0) => {
  var {
    UndiciError: oz6
  } = u5();
  class fp1 extends oz6 {
    constructor(A) {
      super(A);
      Error.captureStackTrace(this, fp1), this.name = "MockNotMatchedError", this.message = A || "The request does not match any registered mock dispatches", this.code = "UND_MOCK_ERR_MOCK_NOT_MATCHED"
    }
  }
  sp0.exports = {
    MockNotMatchedError: fp1
  }
})
// @from(Start 5547187, End 5548006)
eh = z((FO8, rp0) => {
  rp0.exports = {
    kAgent: Symbol("agent"),
    kOptions: Symbol("options"),
    kFactory: Symbol("factory"),
    kDispatches: Symbol("dispatches"),
    kDispatchKey: Symbol("dispatch key"),
    kDefaultHeaders: Symbol("default headers"),
    kDefaultTrailers: Symbol("default trailers"),
    kContentLength: Symbol("content length"),
    kMockAgent: Symbol("mock agent"),
    kMockAgentSet: Symbol("mock agent set"),
    kMockAgentGet: Symbol("mock agent get"),
    kMockDispatch: Symbol("mock dispatch"),
    kClose: Symbol("close"),
    kOriginalClose: Symbol("original agent close"),
    kOrigin: Symbol("origin"),
    kIsMockActive: Symbol("is mock active"),
    kNetConnect: Symbol("net connect"),
    kGetNetConnect: Symbol("get net connect"),
    kConnected: Symbol("connected")
  }
})
// @from(Start 5548012, End 5554990)
Xo = z((XO8, Yc0) => {
  var {
    MockNotMatchedError: Ej
  } = vp1(), {
    kDispatches: JW1,
    kMockAgent: tz6,
    kOriginalDispatch: ez6,
    kOrigin: Aw6,
    kGetNetConnect: Bw6
  } = eh(), {
    buildURL: Qw6
  } = C6(), {
    STATUS_CODES: Iw6
  } = Z1("node:http"), {
    types: {
      isPromise: Gw6
    }
  } = Z1("node:util");

  function lN(A, B) {
    if (typeof A === "string") return A === B;
    if (A instanceof RegExp) return A.test(B);
    if (typeof A === "function") return A(B) === !0;
    return !1
  }

  function tp0(A) {
    return Object.fromEntries(Object.entries(A).map(([B, Q]) => {
      return [B.toLocaleLowerCase(), Q]
    }))
  }

  function ep0(A, B) {
    if (Array.isArray(A)) {
      for (let Q = 0; Q < A.length; Q += 2)
        if (A[Q].toLocaleLowerCase() === B.toLocaleLowerCase()) return A[Q + 1];
      return
    } else if (typeof A.get === "function") return A.get(B);
    else return tp0(A)[B.toLocaleLowerCase()]
  }

  function hp1(A) {
    let B = A.slice(),
      Q = [];
    for (let I = 0; I < B.length; I += 2) Q.push([B[I], B[I + 1]]);
    return Object.fromEntries(Q)
  }

  function Ac0(A, B) {
    if (typeof A.headers === "function") {
      if (Array.isArray(B)) B = hp1(B);
      return A.headers(B ? tp0(B) : {})
    }
    if (typeof A.headers === "undefined") return !0;
    if (typeof B !== "object" || typeof A.headers !== "object") return !1;
    for (let [Q, I] of Object.entries(A.headers)) {
      let G = ep0(B, Q);
      if (!lN(I, G)) return !1
    }
    return !0
  }

  function op0(A) {
    if (typeof A !== "string") return A;
    let B = A.split("?");
    if (B.length !== 2) return A;
    let Q = new URLSearchParams(B.pop());
    return Q.sort(), [...B, Q.toString()].join("?")
  }

  function Zw6(A, {
    path: B,
    method: Q,
    body: I,
    headers: G
  }) {
    let Z = lN(A.path, B),
      D = lN(A.method, Q),
      Y = typeof A.body !== "undefined" ? lN(A.body, I) : !0,
      W = Ac0(A, G);
    return Z && D && Y && W
  }

  function Bc0(A) {
    if (Buffer.isBuffer(A)) return A;
    else if (A instanceof Uint8Array) return A;
    else if (A instanceof ArrayBuffer) return A;
    else if (typeof A === "object") return JSON.stringify(A);
    else return A.toString()
  }

  function Qc0(A, B) {
    let Q = B.query ? Qw6(B.path, B.query) : B.path,
      I = typeof Q === "string" ? op0(Q) : Q,
      G = A.filter(({
        consumed: Z
      }) => !Z).filter(({
        path: Z
      }) => lN(op0(Z), I));
    if (G.length === 0) throw new Ej(`Mock dispatch not matched for path '${I}'`);
    if (G = G.filter(({
        method: Z
      }) => lN(Z, B.method)), G.length === 0) throw new Ej(`Mock dispatch not matched for method '${B.method}' on path '${I}'`);
    if (G = G.filter(({
        body: Z
      }) => typeof Z !== "undefined" ? lN(Z, B.body) : !0), G.length === 0) throw new Ej(`Mock dispatch not matched for body '${B.body}' on path '${I}'`);
    if (G = G.filter((Z) => Ac0(Z, B.headers)), G.length === 0) {
      let Z = typeof B.headers === "object" ? JSON.stringify(B.headers) : B.headers;
      throw new Ej(`Mock dispatch not matched for headers '${Z}' on path '${I}'`)
    }
    return G[0]
  }

  function Dw6(A, B, Q) {
    let I = {
        timesInvoked: 0,
        times: 1,
        persist: !1,
        consumed: !1
      },
      G = typeof Q === "function" ? {
        callback: Q
      } : {
        ...Q
      },
      Z = {
        ...I,
        ...B,
        pending: !0,
        data: {
          error: null,
          ...G
        }
      };
    return A.push(Z), Z
  }

  function bp1(A, B) {
    let Q = A.findIndex((I) => {
      if (!I.consumed) return !1;
      return Zw6(I, B)
    });
    if (Q !== -1) A.splice(Q, 1)
  }

  function Ic0(A) {
    let {
      path: B,
      method: Q,
      body: I,
      headers: G,
      query: Z
    } = A;
    return {
      path: B,
      method: Q,
      body: I,
      headers: G,
      query: Z
    }
  }

  function gp1(A) {
    let B = Object.keys(A),
      Q = [];
    for (let I = 0; I < B.length; ++I) {
      let G = B[I],
        Z = A[G],
        D = Buffer.from(`${G}`);
      if (Array.isArray(Z))
        for (let Y = 0; Y < Z.length; ++Y) Q.push(D, Buffer.from(`${Z[Y]}`));
      else Q.push(D, Buffer.from(`${Z}`))
    }
    return Q
  }

  function Gc0(A) {
    return Iw6[A] || "unknown"
  }
  async function Yw6(A) {
    let B = [];
    for await (let Q of A) B.push(Q);
    return Buffer.concat(B).toString("utf8")
  }

  function Zc0(A, B) {
    let Q = Ic0(A),
      I = Qc0(this[JW1], Q);
    if (I.timesInvoked++, I.data.callback) I.data = {
      ...I.data,
      ...I.data.callback(A)
    };
    let {
      data: {
        statusCode: G,
        data: Z,
        headers: D,
        trailers: Y,
        error: W
      },
      delay: J,
      persist: F
    } = I, {
      timesInvoked: X,
      times: V
    } = I;
    if (I.consumed = !F && X >= V, I.pending = X < V, W !== null) return bp1(this[JW1], Q), B.onError(W), !0;
    if (typeof J === "number" && J > 0) setTimeout(() => {
      C(this[JW1])
    }, J);
    else C(this[JW1]);

    function C(E, N = Z) {
      let q = Array.isArray(A.headers) ? hp1(A.headers) : A.headers,
        O = typeof N === "function" ? N({
          ...A,
          headers: q
        }) : N;
      if (Gw6(O)) {
        O.then((_) => C(E, _));
        return
      }
      let R = Bc0(O),
        T = gp1(D),
        L = gp1(Y);
      B.onConnect?.((_) => B.onError(_), null), B.onHeaders?.(G, T, K, Gc0(G)), B.onData?.(Buffer.from(R)), B.onComplete?.(L), bp1(E, Q)
    }

    function K() {}
    return !0
  }

  function Ww6() {
    let A = this[tz6],
      B = this[Aw6],
      Q = this[ez6];
    return function I(G, Z) {
      if (A.isMockActive) try {
        Zc0.call(this, G, Z)
      } catch (D) {
        if (D instanceof Ej) {
          let Y = A[Bw6]();
          if (Y === !1) throw new Ej(`${D.message}: subsequent request to origin ${B} was not allowed (net.connect disabled)`);
          if (Dc0(Y, B)) Q.call(this, G, Z);
          else throw new Ej(`${D.message}: subsequent request to origin ${B} was not allowed (net.connect is not enabled for this origin)`)
        } else throw D
      } else Q.call(this, G, Z)
    }
  }

  function Dc0(A, B) {
    let Q = new URL(B);
    if (A === !0) return !0;
    else if (Array.isArray(A) && A.some((I) => lN(I, Q.host))) return !0;
    return !1
  }

  function Jw6(A) {
    if (A) {
      let {
        agent: B,
        ...Q
      } = A;
      return Q
    }
  }
  Yc0.exports = {
    getResponseData: Bc0,
    getMockDispatch: Qc0,
    addMockDispatch: Dw6,
    deleteMockDispatch: bp1,
    buildKey: Ic0,
    generateKeyValues: gp1,
    matchValue: lN,
    getResponse: Yw6,
    getStatusText: Gc0,
    mockDispatch: Zc0,
    buildMockDispatch: Ww6,
    checkNetConnect: Dc0,
    buildMockOptions: Jw6,
    getHeaderByName: ep0,
    buildHeadersFromArray: hp1
  }
})
// @from(Start 5554996, End 5558686)
lp1 = z((Cw6, cp1) => {
  var {
    getResponseData: Fw6,
    buildKey: Xw6,
    addMockDispatch: mp1
  } = Xo(), {
    kDispatches: FW1,
    kDispatchKey: XW1,
    kDefaultHeaders: dp1,
    kDefaultTrailers: up1,
    kContentLength: pp1,
    kMockDispatch: VW1
  } = eh(), {
    InvalidArgumentError: _w
  } = u5(), {
    buildURL: Vw6
  } = C6();
  class Vo {
    constructor(A) {
      this[VW1] = A
    }
    delay(A) {
      if (typeof A !== "number" || !Number.isInteger(A) || A <= 0) throw new _w("waitInMs must be a valid integer > 0");
      return this[VW1].delay = A, this
    }
    persist() {
      return this[VW1].persist = !0, this
    }
    times(A) {
      if (typeof A !== "number" || !Number.isInteger(A) || A <= 0) throw new _w("repeatTimes must be a valid integer > 0");
      return this[VW1].times = A, this
    }
  }
  class Wc0 {
    constructor(A, B) {
      if (typeof A !== "object") throw new _w("opts must be an object");
      if (typeof A.path === "undefined") throw new _w("opts.path must be defined");
      if (typeof A.method === "undefined") A.method = "GET";
      if (typeof A.path === "string")
        if (A.query) A.path = Vw6(A.path, A.query);
        else {
          let Q = new URL(A.path, "data://");
          A.path = Q.pathname + Q.search
        } if (typeof A.method === "string") A.method = A.method.toUpperCase();
      this[XW1] = Xw6(A), this[FW1] = B, this[dp1] = {}, this[up1] = {}, this[pp1] = !1
    }
    createMockScopeDispatchData({
      statusCode: A,
      data: B,
      responseOptions: Q
    }) {
      let I = Fw6(B),
        G = this[pp1] ? {
          "content-length": I.length
        } : {},
        Z = {
          ...this[dp1],
          ...G,
          ...Q.headers
        },
        D = {
          ...this[up1],
          ...Q.trailers
        };
      return {
        statusCode: A,
        data: B,
        headers: Z,
        trailers: D
      }
    }
    validateReplyParameters(A) {
      if (typeof A.statusCode === "undefined") throw new _w("statusCode must be defined");
      if (typeof A.responseOptions !== "object" || A.responseOptions === null) throw new _w("responseOptions must be an object")
    }
    reply(A) {
      if (typeof A === "function") {
        let G = (D) => {
            let Y = A(D);
            if (typeof Y !== "object" || Y === null) throw new _w("reply options callback must return an object");
            let W = {
              data: "",
              responseOptions: {},
              ...Y
            };
            return this.validateReplyParameters(W), {
              ...this.createMockScopeDispatchData(W)
            }
          },
          Z = mp1(this[FW1], this[XW1], G);
        return new Vo(Z)
      }
      let B = {
        statusCode: A,
        data: arguments[1] === void 0 ? "" : arguments[1],
        responseOptions: arguments[2] === void 0 ? {} : arguments[2]
      };
      this.validateReplyParameters(B);
      let Q = this.createMockScopeDispatchData(B),
        I = mp1(this[FW1], this[XW1], Q);
      return new Vo(I)
    }
    replyWithError(A) {
      if (typeof A === "undefined") throw new _w("error must be defined");
      let B = mp1(this[FW1], this[XW1], {
        error: A
      });
      return new Vo(B)
    }
    defaultReplyHeaders(A) {
      if (typeof A === "undefined") throw new _w("headers must be defined");
      return this[dp1] = A, this
    }
    defaultReplyTrailers(A) {
      if (typeof A === "undefined") throw new _w("trailers must be defined");
      return this[up1] = A, this
    }
    replyContentLength() {
      return this[pp1] = !0, this
    }
  }
  Cw6.MockInterceptor = Wc0;
  Cw6.MockScope = Vo
})
// @from(Start 5558692, End 5559728)
np1 = z((VO8, zc0) => {
  var {
    promisify: zw6
  } = Z1("node:util"), ww6 = er(), {
    buildMockDispatch: Ew6
  } = Xo(), {
    kDispatches: Jc0,
    kMockAgent: Fc0,
    kClose: Xc0,
    kOriginalClose: Vc0,
    kOrigin: Cc0,
    kOriginalDispatch: Uw6,
    kConnected: ip1
  } = eh(), {
    MockInterceptor: Nw6
  } = lp1(), Kc0 = A3(), {
    InvalidArgumentError: $w6
  } = u5();
  class Hc0 extends ww6 {
    constructor(A, B) {
      super(A, B);
      if (!B || !B.agent || typeof B.agent.dispatch !== "function") throw new $w6("Argument opts.agent must implement Agent");
      this[Fc0] = B.agent, this[Cc0] = A, this[Jc0] = [], this[ip1] = 1, this[Uw6] = this.dispatch, this[Vc0] = this.close.bind(this), this.dispatch = Ew6.call(this), this.close = this[Xc0]
    }
    get[Kc0.kConnected]() {
      return this[ip1]
    }
    intercept(A) {
      return new Nw6(A, this[Jc0])
    }
    async [Xc0]() {
      await zw6(this[Vc0])(), this[ip1] = 0, this[Fc0][Kc0.kClients].delete(this[Cc0])
    }
  }
  zc0.exports = Hc0
})
// @from(Start 5559734, End 5560770)
sp1 = z((CO8, Lc0) => {
  var {
    promisify: qw6
  } = Z1("node:util"), Mw6 = lh(), {
    buildMockDispatch: Lw6
  } = Xo(), {
    kDispatches: wc0,
    kMockAgent: Ec0,
    kClose: Uc0,
    kOriginalClose: Nc0,
    kOrigin: $c0,
    kOriginalDispatch: Rw6,
    kConnected: ap1
  } = eh(), {
    MockInterceptor: Ow6
  } = lp1(), qc0 = A3(), {
    InvalidArgumentError: Tw6
  } = u5();
  class Mc0 extends Mw6 {
    constructor(A, B) {
      super(A, B);
      if (!B || !B.agent || typeof B.agent.dispatch !== "function") throw new Tw6("Argument opts.agent must implement Agent");
      this[Ec0] = B.agent, this[$c0] = A, this[wc0] = [], this[ap1] = 1, this[Rw6] = this.dispatch, this[Nc0] = this.close.bind(this), this.dispatch = Lw6.call(this), this.close = this[Uc0]
    }
    get[qc0.kConnected]() {
      return this[ap1]
    }
    intercept(A) {
      return new Ow6(A, this[wc0])
    }
    async [Uc0]() {
      await qw6(this[Nc0])(), this[ap1] = 0, this[Ec0][qc0.kClients].delete(this[$c0])
    }
  }
  Lc0.exports = Mc0
})
// @from(Start 5560776, End 5561287)
Oc0 = z((KO8, Rc0) => {
  var Pw6 = {
      pronoun: "it",
      is: "is",
      was: "was",
      this: "this"
    },
    Sw6 = {
      pronoun: "they",
      is: "are",
      was: "were",
      this: "these"
    };
  Rc0.exports = class A {
    constructor(B, Q) {
      this.singular = B, this.plural = Q
    }
    pluralize(B) {
      let Q = B === 1,
        I = Q ? Pw6 : Sw6,
        G = Q ? this.singular : this.plural;
      return {
        ...I,
        count: B,
        noun: G
      }
    }
  }
})
// @from(Start 5561293, End 5562304)
Pc0 = z((HO8, Tc0) => {
  var {
    Transform: _w6
  } = Z1("node:stream"), {
    Console: jw6
  } = Z1("node:console"), yw6 = process.versions.icu ? "✅" : "Y ", kw6 = process.versions.icu ? "❌" : "N ";
  Tc0.exports = class A {
    constructor({
      disableColors: B
    } = {}) {
      this.transform = new _w6({
        transform(Q, I, G) {
          G(null, Q)
        }
      }), this.logger = new jw6({
        stdout: this.transform,
        inspectOptions: {
          colors: !B && !0
        }
      })
    }
    format(B) {
      let Q = B.map(({
        method: I,
        path: G,
        data: {
          statusCode: Z
        },
        persist: D,
        times: Y,
        timesInvoked: W,
        origin: J
      }) => ({
        Method: I,
        Origin: J,
        Path: G,
        "Status code": Z,
        Persistent: D ? yw6 : kw6,
        Invocations: W,
        Remaining: D ? 1 / 0 : Y - W
      }));
      return this.logger.table(Q), this.transform.read().toString()
    }
  }
})
// @from(Start 5562310, End 5565158)
kc0 = z((zO8, yc0) => {
  var {
    kClients: Uj
  } = A3(), xw6 = ih(), {
    kAgent: rp1,
    kMockAgentSet: CW1,
    kMockAgentGet: Sc0,
    kDispatches: op1,
    kIsMockActive: KW1,
    kNetConnect: Nj,
    kGetNetConnect: fw6,
    kOptions: HW1,
    kFactory: zW1
  } = eh(), vw6 = np1(), bw6 = sp1(), {
    matchValue: gw6,
    buildMockOptions: hw6
  } = Xo(), {
    InvalidArgumentError: _c0,
    UndiciError: mw6
  } = u5(), dw6 = yr(), uw6 = Oc0(), pw6 = Pc0();
  class jc0 extends dw6 {
    constructor(A) {
      super(A);
      if (this[Nj] = !0, this[KW1] = !0, A?.agent && typeof A.agent.dispatch !== "function") throw new _c0("Argument opts.agent must implement Agent");
      let B = A?.agent ? A.agent : new xw6(A);
      this[rp1] = B, this[Uj] = B[Uj], this[HW1] = hw6(A)
    }
    get(A) {
      let B = this[Sc0](A);
      if (!B) B = this[zW1](A), this[CW1](A, B);
      return B
    }
    dispatch(A, B) {
      return this.get(A.origin), this[rp1].dispatch(A, B)
    }
    async close() {
      await this[rp1].close(), this[Uj].clear()
    }
    deactivate() {
      this[KW1] = !1
    }
    activate() {
      this[KW1] = !0
    }
    enableNetConnect(A) {
      if (typeof A === "string" || typeof A === "function" || A instanceof RegExp)
        if (Array.isArray(this[Nj])) this[Nj].push(A);
        else this[Nj] = [A];
      else if (typeof A === "undefined") this[Nj] = !0;
      else throw new _c0("Unsupported matcher. Must be one of String|Function|RegExp.")
    }
    disableNetConnect() {
      this[Nj] = !1
    }
    get isMockActive() {
      return this[KW1]
    } [CW1](A, B) {
      this[Uj].set(A, B)
    } [zW1](A) {
      let B = Object.assign({
        agent: this
      }, this[HW1]);
      return this[HW1] && this[HW1].connections === 1 ? new vw6(A, B) : new bw6(A, B)
    } [Sc0](A) {
      let B = this[Uj].get(A);
      if (B) return B;
      if (typeof A !== "string") {
        let Q = this[zW1]("http://localhost:9999");
        return this[CW1](A, Q), Q
      }
      for (let [Q, I] of Array.from(this[Uj]))
        if (I && typeof Q !== "string" && gw6(Q, A)) {
          let G = this[zW1](A);
          return this[CW1](A, G), G[op1] = I[op1], G
        }
    } [fw6]() {
      return this[Nj]
    }
    pendingInterceptors() {
      let A = this[Uj];
      return Array.from(A.entries()).flatMap(([B, Q]) => Q[op1].map((I) => ({
        ...I,
        origin: B
      }))).filter(({
        pending: B
      }) => B)
    }
    assertNoPendingInterceptors({
      pendingInterceptorsFormatter: A = new pw6
    } = {}) {
      let B = this.pendingInterceptors();
      if (B.length === 0) return;
      let Q = new uw6("interceptor", "interceptors").pluralize(B.length);
      throw new mw6(`
${Q.count} ${Q.noun} ${Q.is} pending:

${A.format(B)}
`.trim())
    }
  }
  yc0.exports = jc0
})
// @from(Start 5565164, End 5565741)
wW1 = z((wO8, bc0) => {
  var xc0 = Symbol.for("undici.globalDispatcher.1"),
    {
      InvalidArgumentError: cw6
    } = u5(),
    lw6 = ih();
  if (vc0() === void 0) fc0(new lw6);

  function fc0(A) {
    if (!A || typeof A.dispatch !== "function") throw new cw6("Argument agent must implement Agent");
    Object.defineProperty(globalThis, xc0, {
      value: A,
      writable: !0,
      enumerable: !1,
      configurable: !1
    })
  }

  function vc0() {
    return globalThis[xc0]
  }
  bc0.exports = {
    setGlobalDispatcher: fc0,
    getGlobalDispatcher: vc0
  }
})
// @from(Start 5565747, End 5566499)
EW1 = z((EO8, gc0) => {
  gc0.exports = class A {
    #A;
    constructor(B) {
      if (typeof B !== "object" || B === null) throw new TypeError("handler must be an object");
      this.#A = B
    }
    onConnect(...B) {
      return this.#A.onConnect?.(...B)
    }
    onError(...B) {
      return this.#A.onError?.(...B)
    }
    onUpgrade(...B) {
      return this.#A.onUpgrade?.(...B)
    }
    onResponseStarted(...B) {
      return this.#A.onResponseStarted?.(...B)
    }
    onHeaders(...B) {
      return this.#A.onHeaders?.(...B)
    }
    onData(...B) {
      return this.#A.onData?.(...B)
    }
    onComplete(...B) {
      return this.#A.onComplete?.(...B)
    }
    onBodySent(...B) {
      return this.#A.onBodySent?.(...B)
    }
  }
})
// @from(Start 5566505, End 5566847)
mc0 = z((UO8, hc0) => {
  var iw6 = tY1();
  hc0.exports = (A) => {
    let B = A?.maxRedirections;
    return (Q) => {
      return function I(G, Z) {
        let {
          maxRedirections: D = B,
          ...Y
        } = G;
        if (!D) return Q(G, Z);
        let W = new iw6(Q, D, G, Z);
        return Q(Y, W)
      }
    }
  }
})
// @from(Start 5566853, End 5567194)
uc0 = z((NO8, dc0) => {
  var nw6 = WW1();
  dc0.exports = (A) => {
    return (B) => {
      return function Q(I, G) {
        return B(I, new nw6({
          ...I,
          retryOptions: {
            ...A,
            ...I.retryOptions
          }
        }, {
          handler: G,
          dispatch: B
        }))
      }
    }
  }
})
// @from(Start 5567200, End 5568842)
lc0 = z(($O8, cc0) => {
  var aw6 = C6(),
    {
      InvalidArgumentError: sw6,
      RequestAbortedError: rw6
    } = u5(),
    ow6 = EW1();
  class pc0 extends ow6 {
    #A = 1048576;
    #B = null;
    #Q = !1;
    #I = !1;
    #G = 0;
    #W = null;
    #Z = null;
    constructor({
      maxSize: A
    }, B) {
      super(B);
      if (A != null && (!Number.isFinite(A) || A < 1)) throw new sw6("maxSize must be a number greater than 0");
      this.#A = A ?? this.#A, this.#Z = B
    }
    onConnect(A) {
      this.#B = A, this.#Z.onConnect(this.#F.bind(this))
    }
    #F(A) {
      this.#I = !0, this.#W = A
    }
    onHeaders(A, B, Q, I) {
      let Z = aw6.parseHeaders(B)["content-length"];
      if (Z != null && Z > this.#A) throw new rw6(`Response size (${Z}) larger than maxSize (${this.#A})`);
      if (this.#I) return !0;
      return this.#Z.onHeaders(A, B, Q, I)
    }
    onError(A) {
      if (this.#Q) return;
      A = this.#W ?? A, this.#Z.onError(A)
    }
    onData(A) {
      if (this.#G = this.#G + A.length, this.#G >= this.#A)
        if (this.#Q = !0, this.#I) this.#Z.onError(this.#W);
        else this.#Z.onComplete([]);
      return !0
    }
    onComplete(A) {
      if (this.#Q) return;
      if (this.#I) {
        this.#Z.onError(this.reason);
        return
      }
      this.#Z.onComplete(A)
    }
  }

  function tw6({
    maxSize: A
  } = {
    maxSize: 1048576
  }) {
    return (B) => {
      return function Q(I, G) {
        let {
          dumpMaxSize: Z = A
        } = I, D = new pc0({
          maxSize: Z
        }, G);
        return B(I, D)
      }
    }
  }
  cc0.exports = tw6
})
// @from(Start 5568848, End 5575046)
rc0 = z((qO8, sc0) => {
  var {
    isIP: ew6
  } = Z1("node:net"), {
    lookup: AE6
  } = Z1("node:dns"), BE6 = EW1(), {
    InvalidArgumentError: Am,
    InformationalError: QE6
  } = u5(), ic0 = Math.pow(2, 31) - 1;
  class nc0 {
    #A = 0;
    #B = 0;
    #Q = new Map;
    dualStack = !0;
    affinity = null;
    lookup = null;
    pick = null;
    constructor(A) {
      this.#A = A.maxTTL, this.#B = A.maxItems, this.dualStack = A.dualStack, this.affinity = A.affinity, this.lookup = A.lookup ?? this.#I, this.pick = A.pick ?? this.#G
    }
    get full() {
      return this.#Q.size === this.#B
    }
    runLookup(A, B, Q) {
      let I = this.#Q.get(A.hostname);
      if (I == null && this.full) {
        Q(null, A.origin);
        return
      }
      let G = {
        affinity: this.affinity,
        dualStack: this.dualStack,
        lookup: this.lookup,
        pick: this.pick,
        ...B.dns,
        maxTTL: this.#A,
        maxItems: this.#B
      };
      if (I == null) this.lookup(A, G, (Z, D) => {
        if (Z || D == null || D.length === 0) {
          Q(Z ?? new QE6("No DNS entries found"));
          return
        }
        this.setRecords(A, D);
        let Y = this.#Q.get(A.hostname),
          W = this.pick(A, Y, G.affinity),
          J;
        if (typeof W.port === "number") J = `:${W.port}`;
        else if (A.port !== "") J = `:${A.port}`;
        else J = "";
        Q(null, `${A.protocol}//${W.family===6?`[${W.address}]`:W.address}${J}`)
      });
      else {
        let Z = this.pick(A, I, G.affinity);
        if (Z == null) {
          this.#Q.delete(A.hostname), this.runLookup(A, B, Q);
          return
        }
        let D;
        if (typeof Z.port === "number") D = `:${Z.port}`;
        else if (A.port !== "") D = `:${A.port}`;
        else D = "";
        Q(null, `${A.protocol}//${Z.family===6?`[${Z.address}]`:Z.address}${D}`)
      }
    }
    #I(A, B, Q) {
      AE6(A.hostname, {
        all: !0,
        family: this.dualStack === !1 ? this.affinity : 0,
        order: "ipv4first"
      }, (I, G) => {
        if (I) return Q(I);
        let Z = new Map;
        for (let D of G) Z.set(`${D.address}:${D.family}`, D);
        Q(null, Z.values())
      })
    }
    #G(A, B, Q) {
      let I = null,
        {
          records: G,
          offset: Z
        } = B,
        D;
      if (this.dualStack) {
        if (Q == null)
          if (Z == null || Z === ic0) B.offset = 0, Q = 4;
          else B.offset++, Q = (B.offset & 1) === 1 ? 6 : 4;
        if (G[Q] != null && G[Q].ips.length > 0) D = G[Q];
        else D = G[Q === 4 ? 6 : 4]
      } else D = G[Q];
      if (D == null || D.ips.length === 0) return I;
      if (D.offset == null || D.offset === ic0) D.offset = 0;
      else D.offset++;
      let Y = D.offset % D.ips.length;
      if (I = D.ips[Y] ?? null, I == null) return I;
      if (Date.now() - I.timestamp > I.ttl) return D.ips.splice(Y, 1), this.pick(A, B, Q);
      return I
    }
    setRecords(A, B) {
      let Q = Date.now(),
        I = {
          records: {
            4: null,
            6: null
          }
        };
      for (let G of B) {
        if (G.timestamp = Q, typeof G.ttl === "number") G.ttl = Math.min(G.ttl, this.#A);
        else G.ttl = this.#A;
        let Z = I.records[G.family] ?? {
          ips: []
        };
        Z.ips.push(G), I.records[G.family] = Z
      }
      this.#Q.set(A.hostname, I)
    }
    getHandler(A, B) {
      return new ac0(this, A, B)
    }
  }
  class ac0 extends BE6 {
    #A = null;
    #B = null;
    #Q = null;
    #I = null;
    #G = null;
    constructor(A, {
      origin: B,
      handler: Q,
      dispatch: I
    }, G) {
      super(Q);
      this.#G = B, this.#I = Q, this.#B = {
        ...G
      }, this.#A = A, this.#Q = I
    }
    onError(A) {
      switch (A.code) {
        case "ETIMEDOUT":
        case "ECONNREFUSED": {
          if (this.#A.dualStack) {
            this.#A.runLookup(this.#G, this.#B, (B, Q) => {
              if (B) return this.#I.onError(B);
              let I = {
                ...this.#B,
                origin: Q
              };
              this.#Q(I, this)
            });
            return
          }
          this.#I.onError(A);
          return
        }
        case "ENOTFOUND":
          this.#A.deleteRecord(this.#G);
        default:
          this.#I.onError(A);
          break
      }
    }
  }
  sc0.exports = (A) => {
    if (A?.maxTTL != null && (typeof A?.maxTTL !== "number" || A?.maxTTL < 0)) throw new Am("Invalid maxTTL. Must be a positive number");
    if (A?.maxItems != null && (typeof A?.maxItems !== "number" || A?.maxItems < 1)) throw new Am("Invalid maxItems. Must be a positive number and greater than zero");
    if (A?.affinity != null && A?.affinity !== 4 && A?.affinity !== 6) throw new Am("Invalid affinity. Must be either 4 or 6");
    if (A?.dualStack != null && typeof A?.dualStack !== "boolean") throw new Am("Invalid dualStack. Must be a boolean");
    if (A?.lookup != null && typeof A?.lookup !== "function") throw new Am("Invalid lookup. Must be a function");
    if (A?.pick != null && typeof A?.pick !== "function") throw new Am("Invalid pick. Must be a function");
    let B = A?.dualStack ?? !0,
      Q;
    if (B) Q = A?.affinity ?? null;
    else Q = A?.affinity ?? 4;
    let I = {
        maxTTL: A?.maxTTL ?? 1e4,
        lookup: A?.lookup ?? null,
        pick: A?.pick ?? null,
        dualStack: B,
        affinity: Q,
        maxItems: A?.maxItems ?? 1 / 0
      },
      G = new nc0(I);
    return (Z) => {
      return function D(Y, W) {
        let J = Y.origin.constructor === URL ? Y.origin : new URL(Y.origin);
        if (ew6(J.hostname) !== 0) return Z(Y, W);
        return G.runLookup(J, Y, (F, X) => {
          if (F) return W.onError(F);
          let V = null;
          V = {
            ...Y,
            servername: J.hostname,
            origin: X,
            headers: {
              host: J.hostname,
              ...Y.headers
            }
          }, Z(V, G.getHandler({
            origin: J,
            dispatch: Z,
            handler: W
          }, Y))
        }), !0
      }
    }
  }
})
// @from(Start 5575052, End 5584590)
$j = z((MO8, Il0) => {
  var {
    kConstruct: IE6
  } = A3(), {
    kEnumerableProperty: Bm
  } = C6(), {
    iteratorMixin: GE6,
    isValidHeaderName: Co,
    isValidHeaderValue: tc0
  } = MJ(), {
    webidl: G5
  } = jG(), tp1 = Z1("node:assert"), UW1 = Z1("node:util"), C7 = Symbol("headers map"), OJ = Symbol("headers map sorted");

  function oc0(A) {
    return A === 10 || A === 13 || A === 9 || A === 32
  }

  function ec0(A) {
    let B = 0,
      Q = A.length;
    while (Q > B && oc0(A.charCodeAt(Q - 1))) --Q;
    while (Q > B && oc0(A.charCodeAt(B))) ++B;
    return B === 0 && Q === A.length ? A : A.substring(B, Q)
  }

  function Al0(A, B) {
    if (Array.isArray(B))
      for (let Q = 0; Q < B.length; ++Q) {
        let I = B[Q];
        if (I.length !== 2) throw G5.errors.exception({
          header: "Headers constructor",
          message: `expected name/value pair to be length 2, found ${I.length}.`
        });
        ep1(A, I[0], I[1])
      } else if (typeof B === "object" && B !== null) {
        let Q = Object.keys(B);
        for (let I = 0; I < Q.length; ++I) ep1(A, Q[I], B[Q[I]])
      } else throw G5.errors.conversionFailed({
        prefix: "Headers constructor",
        argument: "Argument 1",
        types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
      })
  }

  function ep1(A, B, Q) {
    if (Q = ec0(Q), !Co(B)) throw G5.errors.invalidArgument({
      prefix: "Headers.append",
      value: B,
      type: "header name"
    });
    else if (!tc0(Q)) throw G5.errors.invalidArgument({
      prefix: "Headers.append",
      value: Q,
      type: "header value"
    });
    if (Ql0(A) === "immutable") throw new TypeError("immutable");
    return Ac1(A).append(B, Q, !1)
  }

  function Bl0(A, B) {
    return A[0] < B[0] ? -1 : 1
  }
  class NW1 {
    cookies = null;
    constructor(A) {
      if (A instanceof NW1) this[C7] = new Map(A[C7]), this[OJ] = A[OJ], this.cookies = A.cookies === null ? null : [...A.cookies];
      else this[C7] = new Map(A), this[OJ] = null
    }
    contains(A, B) {
      return this[C7].has(B ? A : A.toLowerCase())
    }
    clear() {
      this[C7].clear(), this[OJ] = null, this.cookies = null
    }
    append(A, B, Q) {
      this[OJ] = null;
      let I = Q ? A : A.toLowerCase(),
        G = this[C7].get(I);
      if (G) {
        let Z = I === "cookie" ? "; " : ", ";
        this[C7].set(I, {
          name: G.name,
          value: `${G.value}${Z}${B}`
        })
      } else this[C7].set(I, {
        name: A,
        value: B
      });
      if (I === "set-cookie")(this.cookies ??= []).push(B)
    }
    set(A, B, Q) {
      this[OJ] = null;
      let I = Q ? A : A.toLowerCase();
      if (I === "set-cookie") this.cookies = [B];
      this[C7].set(I, {
        name: A,
        value: B
      })
    }
    delete(A, B) {
      if (this[OJ] = null, !B) A = A.toLowerCase();
      if (A === "set-cookie") this.cookies = null;
      this[C7].delete(A)
    }
    get(A, B) {
      return this[C7].get(B ? A : A.toLowerCase())?.value ?? null
    }*[Symbol.iterator]() {
      for (let {
          0: A,
          1: {
            value: B
          }
        }
        of this[C7]) yield [A, B]
    }
    get entries() {
      let A = {};
      if (this[C7].size !== 0)
        for (let {
            name: B,
            value: Q
          }
          of this[C7].values()) A[B] = Q;
      return A
    }
    rawValues() {
      return this[C7].values()
    }
    get entriesList() {
      let A = [];
      if (this[C7].size !== 0)
        for (let {
            0: B,
            1: {
              name: Q,
              value: I
            }
          }
          of this[C7])
          if (B === "set-cookie")
            for (let G of this.cookies) A.push([Q, G]);
          else A.push([Q, I]);
      return A
    }
    toSortedArray() {
      let A = this[C7].size,
        B = new Array(A);
      if (A <= 32) {
        if (A === 0) return B;
        let Q = this[C7][Symbol.iterator](),
          I = Q.next().value;
        B[0] = [I[0], I[1].value], tp1(I[1].value !== null);
        for (let G = 1, Z = 0, D = 0, Y = 0, W = 0, J, F; G < A; ++G) {
          F = Q.next().value, J = B[G] = [F[0], F[1].value], tp1(J[1] !== null), Y = 0, D = G;
          while (Y < D)
            if (W = Y + (D - Y >> 1), B[W][0] <= J[0]) Y = W + 1;
            else D = W;
          if (G !== W) {
            Z = G;
            while (Z > Y) B[Z] = B[--Z];
            B[Y] = J
          }
        }
        if (!Q.next().done) throw new TypeError("Unreachable");
        return B
      } else {
        let Q = 0;
        for (let {
            0: I,
            1: {
              value: G
            }
          }
          of this[C7]) B[Q++] = [I, G], tp1(G !== null);
        return B.sort(Bl0)
      }
    }
  }
  class kZ {
    #A;
    #B;
    constructor(A = void 0) {
      if (G5.util.markAsUncloneable(this), A === IE6) return;
      if (this.#B = new NW1, this.#A = "none", A !== void 0) A = G5.converters.HeadersInit(A, "Headers contructor", "init"), Al0(this, A)
    }
    append(A, B) {
      G5.brandCheck(this, kZ), G5.argumentLengthCheck(arguments, 2, "Headers.append");
      let Q = "Headers.append";
      return A = G5.converters.ByteString(A, Q, "name"), B = G5.converters.ByteString(B, Q, "value"), ep1(this, A, B)
    }
    delete(A) {
      G5.brandCheck(this, kZ), G5.argumentLengthCheck(arguments, 1, "Headers.delete");
      let B = "Headers.delete";
      if (A = G5.converters.ByteString(A, B, "name"), !Co(A)) throw G5.errors.invalidArgument({
        prefix: "Headers.delete",
        value: A,
        type: "header name"
      });
      if (this.#A === "immutable") throw new TypeError("immutable");
      if (!this.#B.contains(A, !1)) return;
      this.#B.delete(A, !1)
    }
    get(A) {
      G5.brandCheck(this, kZ), G5.argumentLengthCheck(arguments, 1, "Headers.get");
      let B = "Headers.get";
      if (A = G5.converters.ByteString(A, B, "name"), !Co(A)) throw G5.errors.invalidArgument({
        prefix: B,
        value: A,
        type: "header name"
      });
      return this.#B.get(A, !1)
    }
    has(A) {
      G5.brandCheck(this, kZ), G5.argumentLengthCheck(arguments, 1, "Headers.has");
      let B = "Headers.has";
      if (A = G5.converters.ByteString(A, B, "name"), !Co(A)) throw G5.errors.invalidArgument({
        prefix: B,
        value: A,
        type: "header name"
      });
      return this.#B.contains(A, !1)
    }
    set(A, B) {
      G5.brandCheck(this, kZ), G5.argumentLengthCheck(arguments, 2, "Headers.set");
      let Q = "Headers.set";
      if (A = G5.converters.ByteString(A, Q, "name"), B = G5.converters.ByteString(B, Q, "value"), B = ec0(B), !Co(A)) throw G5.errors.invalidArgument({
        prefix: Q,
        value: A,
        type: "header name"
      });
      else if (!tc0(B)) throw G5.errors.invalidArgument({
        prefix: Q,
        value: B,
        type: "header value"
      });
      if (this.#A === "immutable") throw new TypeError("immutable");
      this.#B.set(A, B, !1)
    }
    getSetCookie() {
      G5.brandCheck(this, kZ);
      let A = this.#B.cookies;
      if (A) return [...A];
      return []
    }
    get[OJ]() {
      if (this.#B[OJ]) return this.#B[OJ];
      let A = [],
        B = this.#B.toSortedArray(),
        Q = this.#B.cookies;
      if (Q === null || Q.length === 1) return this.#B[OJ] = B;
      for (let I = 0; I < B.length; ++I) {
        let {
          0: G,
          1: Z
        } = B[I];
        if (G === "set-cookie")
          for (let D = 0; D < Q.length; ++D) A.push([G, Q[D]]);
        else A.push([G, Z])
      }
      return this.#B[OJ] = A
    } [UW1.inspect.custom](A, B) {
      return B.depth ??= A, `Headers ${UW1.formatWithOptions(B,this.#B.entries)}`
    }
    static getHeadersGuard(A) {
      return A.#A
    }
    static setHeadersGuard(A, B) {
      A.#A = B
    }
    static getHeadersList(A) {
      return A.#B
    }
    static setHeadersList(A, B) {
      A.#B = B
    }
  }
  var {
    getHeadersGuard: Ql0,
    setHeadersGuard: ZE6,
    getHeadersList: Ac1,
    setHeadersList: DE6
  } = kZ;
  Reflect.deleteProperty(kZ, "getHeadersGuard");
  Reflect.deleteProperty(kZ, "setHeadersGuard");
  Reflect.deleteProperty(kZ, "getHeadersList");
  Reflect.deleteProperty(kZ, "setHeadersList");
  GE6("Headers", kZ, OJ, 0, 1);
  Object.defineProperties(kZ.prototype, {
    append: Bm,
    delete: Bm,
    get: Bm,
    has: Bm,
    set: Bm,
    getSetCookie: Bm,
    [Symbol.toStringTag]: {
      value: "Headers",
      configurable: !0
    },
    [UW1.inspect.custom]: {
      enumerable: !1
    }
  });
  G5.converters.HeadersInit = function(A, B, Q) {
    if (G5.util.Type(A) === "Object") {
      let I = Reflect.get(A, Symbol.iterator);
      if (!UW1.types.isProxy(A) && I === kZ.prototype.entries) try {
        return Ac1(A).entriesList
      } catch {}
      if (typeof I === "function") return G5.converters["sequence<sequence<ByteString>>"](A, B, Q, I.bind(A));
      return G5.converters["record<ByteString, ByteString>"](A, B, Q)
    }
    throw G5.errors.conversionFailed({
      prefix: "Headers constructor",
      argument: "Argument 1",
      types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
    })
  };
  Il0.exports = {
    fill: Al0,
    compareHeaderName: Bl0,
    Headers: kZ,
    HeadersList: NW1,
    getHeadersGuard: Ql0,
    setHeadersGuard: ZE6,
    setHeadersList: DE6,
    getHeadersList: Ac1
  }
})
// @from(Start 5584596, End 5593665)
Ho = z((LO8, Cl0) => {
  var {
    Headers: Jl0,
    HeadersList: Gl0,
    fill: YE6,
    getHeadersGuard: WE6,
    setHeadersGuard: Fl0,
    setHeadersList: Xl0
  } = $j(), {
    extractBody: Zl0,
    cloneBody: JE6,
    mixinBody: FE6,
    hasFinalizationRegistry: XE6,
    streamRegistry: VE6,
    bodyUnusable: CE6
  } = gh(), Bc1 = C6(), Dl0 = Z1("node:util"), {
    kEnumerableProperty: TJ
  } = Bc1, {
    isValidReasonPhrase: KE6,
    isCancelled: HE6,
    isAborted: zE6,
    isBlobLike: wE6,
    serializeJavascriptValueToJSONString: EE6,
    isErrorLike: UE6,
    isomorphicEncode: NE6,
    environmentSettingsObject: $E6
  } = MJ(), {
    redirectStatusSet: qE6,
    nullBodyStatus: ME6
  } = fr(), {
    kState: n3,
    kHeaders: iN
  } = LR(), {
    webidl: a4
  } = jG(), {
    FormData: LE6
  } = mr(), {
    URLSerializer: Yl0
  } = nY(), {
    kConstruct: qW1
  } = A3(), Qc1 = Z1("node:assert"), {
    types: RE6
  } = Z1("node:util"), OE6 = new TextEncoder("utf-8");
  class xZ {
    static error() {
      return Ko(MW1(), "immutable")
    }
    static json(A, B = {}) {
      if (a4.argumentLengthCheck(arguments, 1, "Response.json"), B !== null) B = a4.converters.ResponseInit(B);
      let Q = OE6.encode(EE6(A)),
        I = Zl0(Q),
        G = Ko(Qm({}), "response");
      return Wl0(G, B, {
        body: I[0],
        type: "application/json"
      }), G
    }
    static redirect(A, B = 302) {
      a4.argumentLengthCheck(arguments, 1, "Response.redirect"), A = a4.converters.USVString(A), B = a4.converters["unsigned short"](B);
      let Q;
      try {
        Q = new URL(A, $E6.settingsObject.baseUrl)
      } catch (Z) {
        throw new TypeError(`Failed to parse URL from ${A}`, {
          cause: Z
        })
      }
      if (!qE6.has(B)) throw new RangeError(`Invalid status code ${B}`);
      let I = Ko(Qm({}), "immutable");
      I[n3].status = B;
      let G = NE6(Yl0(Q));
      return I[n3].headersList.append("location", G, !0), I
    }
    constructor(A = null, B = {}) {
      if (a4.util.markAsUncloneable(this), A === qW1) return;
      if (A !== null) A = a4.converters.BodyInit(A);
      B = a4.converters.ResponseInit(B), this[n3] = Qm({}), this[iN] = new Jl0(qW1), Fl0(this[iN], "response"), Xl0(this[iN], this[n3].headersList);
      let Q = null;
      if (A != null) {
        let [I, G] = Zl0(A);
        Q = {
          body: I,
          type: G
        }
      }
      Wl0(this, B, Q)
    }
    get type() {
      return a4.brandCheck(this, xZ), this[n3].type
    }
    get url() {
      a4.brandCheck(this, xZ);
      let A = this[n3].urlList,
        B = A[A.length - 1] ?? null;
      if (B === null) return "";
      return Yl0(B, !0)
    }
    get redirected() {
      return a4.brandCheck(this, xZ), this[n3].urlList.length > 1
    }
    get status() {
      return a4.brandCheck(this, xZ), this[n3].status
    }
    get ok() {
      return a4.brandCheck(this, xZ), this[n3].status >= 200 && this[n3].status <= 299
    }
    get statusText() {
      return a4.brandCheck(this, xZ), this[n3].statusText
    }
    get headers() {
      return a4.brandCheck(this, xZ), this[iN]
    }
    get body() {
      return a4.brandCheck(this, xZ), this[n3].body ? this[n3].body.stream : null
    }
    get bodyUsed() {
      return a4.brandCheck(this, xZ), !!this[n3].body && Bc1.isDisturbed(this[n3].body.stream)
    }
    clone() {
      if (a4.brandCheck(this, xZ), CE6(this)) throw a4.errors.exception({
        header: "Response.clone",
        message: "Body has already been consumed."
      });
      let A = Ic1(this[n3]);
      return Ko(A, WE6(this[iN]))
    } [Dl0.inspect.custom](A, B) {
      if (B.depth === null) B.depth = 2;
      B.colors ??= !0;
      let Q = {
        status: this.status,
        statusText: this.statusText,
        headers: this.headers,
        body: this.body,
        bodyUsed: this.bodyUsed,
        ok: this.ok,
        redirected: this.redirected,
        type: this.type,
        url: this.url
      };
      return `Response ${Dl0.formatWithOptions(B,Q)}`
    }
  }
  FE6(xZ);
  Object.defineProperties(xZ.prototype, {
    type: TJ,
    url: TJ,
    status: TJ,
    ok: TJ,
    redirected: TJ,
    statusText: TJ,
    headers: TJ,
    clone: TJ,
    body: TJ,
    bodyUsed: TJ,
    [Symbol.toStringTag]: {
      value: "Response",
      configurable: !0
    }
  });
  Object.defineProperties(xZ, {
    json: TJ,
    redirect: TJ,
    error: TJ
  });

  function Ic1(A) {
    if (A.internalResponse) return Vl0(Ic1(A.internalResponse), A.type);
    let B = Qm({
      ...A,
      body: null
    });
    if (A.body != null) B.body = JE6(B, A.body);
    return B
  }

  function Qm(A) {
    return {
      aborted: !1,
      rangeRequested: !1,
      timingAllowPassed: !1,
      requestIncludesCredentials: !1,
      type: "default",
      status: 200,
      timingInfo: null,
      cacheState: "",
      statusText: "",
      ...A,
      headersList: A?.headersList ? new Gl0(A?.headersList) : new Gl0,
      urlList: A?.urlList ? [...A.urlList] : []
    }
  }

  function MW1(A) {
    let B = UE6(A);
    return Qm({
      type: "error",
      status: 0,
      error: B ? A : new Error(A ? String(A) : A),
      aborted: A && A.name === "AbortError"
    })
  }

  function TE6(A) {
    return A.type === "error" && A.status === 0
  }

  function $W1(A, B) {
    return B = {
      internalResponse: A,
      ...B
    }, new Proxy(A, {
      get(Q, I) {
        return I in B ? B[I] : Q[I]
      },
      set(Q, I, G) {
        return Qc1(!(I in B)), Q[I] = G, !0
      }
    })
  }

  function Vl0(A, B) {
    if (B === "basic") return $W1(A, {
      type: "basic",
      headersList: A.headersList
    });
    else if (B === "cors") return $W1(A, {
      type: "cors",
      headersList: A.headersList
    });
    else if (B === "opaque") return $W1(A, {
      type: "opaque",
      urlList: Object.freeze([]),
      status: 0,
      statusText: "",
      body: null
    });
    else if (B === "opaqueredirect") return $W1(A, {
      type: "opaqueredirect",
      status: 0,
      statusText: "",
      headersList: [],
      body: null
    });
    else Qc1(!1)
  }

  function PE6(A, B = null) {
    return Qc1(HE6(A)), zE6(A) ? MW1(Object.assign(new DOMException("The operation was aborted.", "AbortError"), {
      cause: B
    })) : MW1(Object.assign(new DOMException("Request was cancelled."), {
      cause: B
    }))
  }

  function Wl0(A, B, Q) {
    if (B.status !== null && (B.status < 200 || B.status > 599)) throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.');
    if ("statusText" in B && B.statusText != null) {
      if (!KE6(String(B.statusText))) throw new TypeError("Invalid statusText")
    }
    if ("status" in B && B.status != null) A[n3].status = B.status;
    if ("statusText" in B && B.statusText != null) A[n3].statusText = B.statusText;
    if ("headers" in B && B.headers != null) YE6(A[iN], B.headers);
    if (Q) {
      if (ME6.includes(A.status)) throw a4.errors.exception({
        header: "Response constructor",
        message: `Invalid response status code ${A.status}`
      });
      if (A[n3].body = Q.body, Q.type != null && !A[n3].headersList.contains("content-type", !0)) A[n3].headersList.append("content-type", Q.type, !0)
    }
  }

  function Ko(A, B) {
    let Q = new xZ(qW1);
    if (Q[n3] = A, Q[iN] = new Jl0(qW1), Xl0(Q[iN], A.headersList), Fl0(Q[iN], B), XE6 && A.body?.stream) VE6.register(Q, new WeakRef(A.body.stream));
    return Q
  }
  a4.converters.ReadableStream = a4.interfaceConverter(ReadableStream);
  a4.converters.FormData = a4.interfaceConverter(LE6);
  a4.converters.URLSearchParams = a4.interfaceConverter(URLSearchParams);
  a4.converters.XMLHttpRequestBodyInit = function(A, B, Q) {
    if (typeof A === "string") return a4.converters.USVString(A, B, Q);
    if (wE6(A)) return a4.converters.Blob(A, B, Q, {
      strict: !1
    });
    if (ArrayBuffer.isView(A) || RE6.isArrayBuffer(A)) return a4.converters.BufferSource(A, B, Q);
    if (Bc1.isFormDataLike(A)) return a4.converters.FormData(A, B, Q, {
      strict: !1
    });
    if (A instanceof URLSearchParams) return a4.converters.URLSearchParams(A, B, Q);
    return a4.converters.DOMString(A, B, Q)
  };
  a4.converters.BodyInit = function(A, B, Q) {
    if (A instanceof ReadableStream) return a4.converters.ReadableStream(A, B, Q);
    if (A?.[Symbol.asyncIterator]) return A;
    return a4.converters.XMLHttpRequestBodyInit(A, B, Q)
  };
  a4.converters.ResponseInit = a4.dictionaryConverter([{
    key: "status",
    converter: a4.converters["unsigned short"],
    defaultValue: () => 200
  }, {
    key: "statusText",
    converter: a4.converters.ByteString,
    defaultValue: () => ""
  }, {
    key: "headers",
    converter: a4.converters.HeadersInit
  }]);
  Cl0.exports = {
    isNetworkError: TE6,
    makeNetworkError: MW1,
    makeResponse: Qm,
    makeAppropriateNetworkError: PE6,
    filterResponse: Vl0,
    Response: xZ,
    cloneResponse: Ic1,
    fromInnerResponse: Ko
  }
})
// @from(Start 5593671, End 5594463)
Ul0 = z((RO8, El0) => {
  var {
    kConnected: Kl0,
    kSize: Hl0
  } = A3();
  class zl0 {
    constructor(A) {
      this.value = A
    }
    deref() {
      return this.value[Kl0] === 0 && this.value[Hl0] === 0 ? void 0 : this.value
    }
  }
  class wl0 {
    constructor(A) {
      this.finalizer = A
    }
    register(A, B) {
      if (A.on) A.on("disconnect", () => {
        if (A[Kl0] === 0 && A[Hl0] === 0) this.finalizer(B)
      })
    }
    unregister(A) {}
  }
  El0.exports = function() {
    if (process.env.NODE_V8_COVERAGE && process.version.startsWith("v18")) return process._rawDebug("Using compatibility WeakRef and FinalizationRegistry"), {
      WeakRef: zl0,
      FinalizationRegistry: wl0
    };
    return {
      WeakRef,
      FinalizationRegistry
    }
  }
})
// @from(Start 5594469, End 5610175)
Im = z((OO8, xl0) => {
  var {
    extractBody: SE6,
    mixinBody: _E6,
    cloneBody: jE6,
    bodyUnusable: Nl0
  } = gh(), {
    Headers: Sl0,
    fill: yE6,
    HeadersList: TW1,
    setHeadersGuard: Zc1,
    getHeadersGuard: kE6,
    setHeadersList: _l0,
    getHeadersList: $l0
  } = $j(), {
    FinalizationRegistry: xE6
  } = Ul0()(), RW1 = C6(), ql0 = Z1("node:util"), {
    isValidHTTPToken: fE6,
    sameOrigin: Ml0,
    environmentSettingsObject: LW1
  } = MJ(), {
    forbiddenMethodsSet: vE6,
    corsSafeListedMethodsSet: bE6,
    referrerPolicy: gE6,
    requestRedirect: hE6,
    requestMode: mE6,
    requestCredentials: dE6,
    requestCache: uE6,
    requestDuplex: pE6
  } = fr(), {
    kEnumerableProperty: K7,
    normalizedMethodRecordsBase: cE6,
    normalizedMethodRecords: lE6
  } = RW1, {
    kHeaders: PJ,
    kSignal: OW1,
    kState: MB,
    kDispatcher: Gc1
  } = LR(), {
    webidl: o9
  } = jG(), {
    URLSerializer: iE6
  } = nY(), {
    kConstruct: PW1
  } = A3(), nE6 = Z1("node:assert"), {
    getMaxListeners: Ll0,
    setMaxListeners: Rl0,
    getEventListeners: aE6,
    defaultMaxListeners: Ol0
  } = Z1("node:events"), sE6 = Symbol("abortController"), jl0 = new xE6(({
    signal: A,
    abort: B
  }) => {
    A.removeEventListener("abort", B)
  }), SW1 = new WeakMap;

  function Tl0(A) {
    return B;

    function B() {
      let Q = A.deref();
      if (Q !== void 0) {
        jl0.unregister(B), this.removeEventListener("abort", B), Q.abort(this.reason);
        let I = SW1.get(Q.signal);
        if (I !== void 0) {
          if (I.size !== 0) {
            for (let G of I) {
              let Z = G.deref();
              if (Z !== void 0) Z.abort(this.reason)
            }
            I.clear()
          }
          SW1.delete(Q.signal)
        }
      }
    }
  }
  var Pl0 = !1;
  class c8 {
    constructor(A, B = {}) {
      if (o9.util.markAsUncloneable(this), A === PW1) return;
      let Q = "Request constructor";
      o9.argumentLengthCheck(arguments, 1, Q), A = o9.converters.RequestInfo(A, Q, "input"), B = o9.converters.RequestInit(B, Q, "init");
      let I = null,
        G = null,
        Z = LW1.settingsObject.baseUrl,
        D = null;
      if (typeof A === "string") {
        this[Gc1] = B.dispatcher;
        let N;
        try {
          N = new URL(A, Z)
        } catch (q) {
          throw new TypeError("Failed to parse URL from " + A, {
            cause: q
          })
        }
        if (N.username || N.password) throw new TypeError("Request cannot be constructed from a URL that includes credentials: " + A);
        I = _W1({
          urlList: [N]
        }), G = "cors"
      } else this[Gc1] = B.dispatcher || A[Gc1], nE6(A instanceof c8), I = A[MB], D = A[OW1];
      let Y = LW1.settingsObject.origin,
        W = "client";
      if (I.window?.constructor?.name === "EnvironmentSettingsObject" && Ml0(I.window, Y)) W = I.window;
      if (B.window != null) throw new TypeError(`'window' option '${W}' must be null`);
      if ("window" in B) W = "no-window";
      I = _W1({
        method: I.method,
        headersList: I.headersList,
        unsafeRequest: I.unsafeRequest,
        client: LW1.settingsObject,
        window: W,
        priority: I.priority,
        origin: I.origin,
        referrer: I.referrer,
        referrerPolicy: I.referrerPolicy,
        mode: I.mode,
        credentials: I.credentials,
        cache: I.cache,
        redirect: I.redirect,
        integrity: I.integrity,
        keepalive: I.keepalive,
        reloadNavigation: I.reloadNavigation,
        historyNavigation: I.historyNavigation,
        urlList: [...I.urlList]
      });
      let J = Object.keys(B).length !== 0;
      if (J) {
        if (I.mode === "navigate") I.mode = "same-origin";
        I.reloadNavigation = !1, I.historyNavigation = !1, I.origin = "client", I.referrer = "client", I.referrerPolicy = "", I.url = I.urlList[I.urlList.length - 1], I.urlList = [I.url]
      }
      if (B.referrer !== void 0) {
        let N = B.referrer;
        if (N === "") I.referrer = "no-referrer";
        else {
          let q;
          try {
            q = new URL(N, Z)
          } catch (O) {
            throw new TypeError(`Referrer "${N}" is not a valid URL.`, {
              cause: O
            })
          }
          if (q.protocol === "about:" && q.hostname === "client" || Y && !Ml0(q, LW1.settingsObject.baseUrl)) I.referrer = "client";
          else I.referrer = q
        }
      }
      if (B.referrerPolicy !== void 0) I.referrerPolicy = B.referrerPolicy;
      let F;
      if (B.mode !== void 0) F = B.mode;
      else F = G;
      if (F === "navigate") throw o9.errors.exception({
        header: "Request constructor",
        message: "invalid request mode navigate."
      });
      if (F != null) I.mode = F;
      if (B.credentials !== void 0) I.credentials = B.credentials;
      if (B.cache !== void 0) I.cache = B.cache;
      if (I.cache === "only-if-cached" && I.mode !== "same-origin") throw new TypeError("'only-if-cached' can be set only with 'same-origin' mode");
      if (B.redirect !== void 0) I.redirect = B.redirect;
      if (B.integrity != null) I.integrity = String(B.integrity);
      if (B.keepalive !== void 0) I.keepalive = Boolean(B.keepalive);
      if (B.method !== void 0) {
        let N = B.method,
          q = lE6[N];
        if (q !== void 0) I.method = q;
        else {
          if (!fE6(N)) throw new TypeError(`'${N}' is not a valid HTTP method.`);
          let O = N.toUpperCase();
          if (vE6.has(O)) throw new TypeError(`'${N}' HTTP method is unsupported.`);
          N = cE6[O] ?? N, I.method = N
        }
        if (!Pl0 && I.method === "patch") process.emitWarning("Using `patch` is highly likely to result in a `405 Method Not Allowed`. `PATCH` is much more likely to succeed.", {
          code: "UNDICI-FETCH-patch"
        }), Pl0 = !0
      }
      if (B.signal !== void 0) D = B.signal;
      this[MB] = I;
      let X = new AbortController;
      if (this[OW1] = X.signal, D != null) {
        if (!D || typeof D.aborted !== "boolean" || typeof D.addEventListener !== "function") throw new TypeError("Failed to construct 'Request': member signal is not of type AbortSignal.");
        if (D.aborted) X.abort(D.reason);
        else {
          this[sE6] = X;
          let N = new WeakRef(X),
            q = Tl0(N);
          try {
            if (typeof Ll0 === "function" && Ll0(D) === Ol0) Rl0(1500, D);
            else if (aE6(D, "abort").length >= Ol0) Rl0(1500, D)
          } catch {}
          RW1.addAbortListener(D, q), jl0.register(X, {
            signal: D,
            abort: q
          }, q)
        }
      }
      if (this[PJ] = new Sl0(PW1), _l0(this[PJ], I.headersList), Zc1(this[PJ], "request"), F === "no-cors") {
        if (!bE6.has(I.method)) throw new TypeError(`'${I.method} is unsupported in no-cors mode.`);
        Zc1(this[PJ], "request-no-cors")
      }
      if (J) {
        let N = $l0(this[PJ]),
          q = B.headers !== void 0 ? B.headers : new TW1(N);
        if (N.clear(), q instanceof TW1) {
          for (let {
              name: O,
              value: R
            }
            of q.rawValues()) N.append(O, R, !1);
          N.cookies = q.cookies
        } else yE6(this[PJ], q)
      }
      let V = A instanceof c8 ? A[MB].body : null;
      if ((B.body != null || V != null) && (I.method === "GET" || I.method === "HEAD")) throw new TypeError("Request with GET/HEAD method cannot have body.");
      let C = null;
      if (B.body != null) {
        let [N, q] = SE6(B.body, I.keepalive);
        if (C = N, q && !$l0(this[PJ]).contains("content-type", !0)) this[PJ].append("content-type", q)
      }
      let K = C ?? V;
      if (K != null && K.source == null) {
        if (C != null && B.duplex == null) throw new TypeError("RequestInit: duplex option is required when sending a body.");
        if (I.mode !== "same-origin" && I.mode !== "cors") throw new TypeError('If request is made from ReadableStream, mode should be "same-origin" or "cors"');
        I.useCORSPreflightFlag = !0
      }
      let E = K;
      if (C == null && V != null) {
        if (Nl0(A)) throw new TypeError("Cannot construct a Request with a Request object that has already been used.");
        let N = new TransformStream;
        V.stream.pipeThrough(N), E = {
          source: V.source,
          length: V.length,
          stream: N.readable
        }
      }
      this[MB].body = E
    }
    get method() {
      return o9.brandCheck(this, c8), this[MB].method
    }
    get url() {
      return o9.brandCheck(this, c8), iE6(this[MB].url)
    }
    get headers() {
      return o9.brandCheck(this, c8), this[PJ]
    }
    get destination() {
      return o9.brandCheck(this, c8), this[MB].destination
    }
    get referrer() {
      if (o9.brandCheck(this, c8), this[MB].referrer === "no-referrer") return "";
      if (this[MB].referrer === "client") return "about:client";
      return this[MB].referrer.toString()
    }
    get referrerPolicy() {
      return o9.brandCheck(this, c8), this[MB].referrerPolicy
    }
    get mode() {
      return o9.brandCheck(this, c8), this[MB].mode
    }
    get credentials() {
      return this[MB].credentials
    }
    get cache() {
      return o9.brandCheck(this, c8), this[MB].cache
    }
    get redirect() {
      return o9.brandCheck(this, c8), this[MB].redirect
    }
    get integrity() {
      return o9.brandCheck(this, c8), this[MB].integrity
    }
    get keepalive() {
      return o9.brandCheck(this, c8), this[MB].keepalive
    }
    get isReloadNavigation() {
      return o9.brandCheck(this, c8), this[MB].reloadNavigation
    }
    get isHistoryNavigation() {
      return o9.brandCheck(this, c8), this[MB].historyNavigation
    }
    get signal() {
      return o9.brandCheck(this, c8), this[OW1]
    }
    get body() {
      return o9.brandCheck(this, c8), this[MB].body ? this[MB].body.stream : null
    }
    get bodyUsed() {
      return o9.brandCheck(this, c8), !!this[MB].body && RW1.isDisturbed(this[MB].body.stream)
    }
    get duplex() {
      return o9.brandCheck(this, c8), "half"
    }
    clone() {
      if (o9.brandCheck(this, c8), Nl0(this)) throw new TypeError("unusable");
      let A = yl0(this[MB]),
        B = new AbortController;
      if (this.signal.aborted) B.abort(this.signal.reason);
      else {
        let Q = SW1.get(this.signal);
        if (Q === void 0) Q = new Set, SW1.set(this.signal, Q);
        let I = new WeakRef(B);
        Q.add(I), RW1.addAbortListener(B.signal, Tl0(I))
      }
      return kl0(A, B.signal, kE6(this[PJ]))
    } [ql0.inspect.custom](A, B) {
      if (B.depth === null) B.depth = 2;
      B.colors ??= !0;
      let Q = {
        method: this.method,
        url: this.url,
        headers: this.headers,
        destination: this.destination,
        referrer: this.referrer,
        referrerPolicy: this.referrerPolicy,
        mode: this.mode,
        credentials: this.credentials,
        cache: this.cache,
        redirect: this.redirect,
        integrity: this.integrity,
        keepalive: this.keepalive,
        isReloadNavigation: this.isReloadNavigation,
        isHistoryNavigation: this.isHistoryNavigation,
        signal: this.signal
      };
      return `Request ${ql0.formatWithOptions(B,Q)}`
    }
  }
  _E6(c8);

  function _W1(A) {
    return {
      method: A.method ?? "GET",
      localURLsOnly: A.localURLsOnly ?? !1,
      unsafeRequest: A.unsafeRequest ?? !1,
      body: A.body ?? null,
      client: A.client ?? null,
      reservedClient: A.reservedClient ?? null,
      replacesClientId: A.replacesClientId ?? "",
      window: A.window ?? "client",
      keepalive: A.keepalive ?? !1,
      serviceWorkers: A.serviceWorkers ?? "all",
      initiator: A.initiator ?? "",
      destination: A.destination ?? "",
      priority: A.priority ?? null,
      origin: A.origin ?? "client",
      policyContainer: A.policyContainer ?? "client",
      referrer: A.referrer ?? "client",
      referrerPolicy: A.referrerPolicy ?? "",
      mode: A.mode ?? "no-cors",
      useCORSPreflightFlag: A.useCORSPreflightFlag ?? !1,
      credentials: A.credentials ?? "same-origin",
      useCredentials: A.useCredentials ?? !1,
      cache: A.cache ?? "default",
      redirect: A.redirect ?? "follow",
      integrity: A.integrity ?? "",
      cryptoGraphicsNonceMetadata: A.cryptoGraphicsNonceMetadata ?? "",
      parserMetadata: A.parserMetadata ?? "",
      reloadNavigation: A.reloadNavigation ?? !1,
      historyNavigation: A.historyNavigation ?? !1,
      userActivation: A.userActivation ?? !1,
      taintedOrigin: A.taintedOrigin ?? !1,
      redirectCount: A.redirectCount ?? 0,
      responseTainting: A.responseTainting ?? "basic",
      preventNoCacheCacheControlHeaderModification: A.preventNoCacheCacheControlHeaderModification ?? !1,
      done: A.done ?? !1,
      timingAllowFailed: A.timingAllowFailed ?? !1,
      urlList: A.urlList,
      url: A.urlList[0],
      headersList: A.headersList ? new TW1(A.headersList) : new TW1
    }
  }

  function yl0(A) {
    let B = _W1({
      ...A,
      body: null
    });
    if (A.body != null) B.body = jE6(B, A.body);
    return B
  }

  function kl0(A, B, Q) {
    let I = new c8(PW1);
    return I[MB] = A, I[OW1] = B, I[PJ] = new Sl0(PW1), _l0(I[PJ], A.headersList), Zc1(I[PJ], Q), I
  }
  Object.defineProperties(c8.prototype, {
    method: K7,
    url: K7,
    headers: K7,
    redirect: K7,
    clone: K7,
    signal: K7,
    duplex: K7,
    destination: K7,
    body: K7,
    bodyUsed: K7,
    isHistoryNavigation: K7,
    isReloadNavigation: K7,
    keepalive: K7,
    integrity: K7,
    cache: K7,
    credentials: K7,
    attribute: K7,
    referrerPolicy: K7,
    referrer: K7,
    mode: K7,
    [Symbol.toStringTag]: {
      value: "Request",
      configurable: !0
    }
  });
  o9.converters.Request = o9.interfaceConverter(c8);
  o9.converters.RequestInfo = function(A, B, Q) {
    if (typeof A === "string") return o9.converters.USVString(A, B, Q);
    if (A instanceof c8) return o9.converters.Request(A, B, Q);
    return o9.converters.USVString(A, B, Q)
  };
  o9.converters.AbortSignal = o9.interfaceConverter(AbortSignal);
  o9.converters.RequestInit = o9.dictionaryConverter([{
    key: "method",
    converter: o9.converters.ByteString
  }, {
    key: "headers",
    converter: o9.converters.HeadersInit
  }, {
    key: "body",
    converter: o9.nullableConverter(o9.converters.BodyInit)
  }, {
    key: "referrer",
    converter: o9.converters.USVString
  }, {
    key: "referrerPolicy",
    converter: o9.converters.DOMString,
    allowedValues: gE6
  }, {
    key: "mode",
    converter: o9.converters.DOMString,
    allowedValues: mE6
  }, {
    key: "credentials",
    converter: o9.converters.DOMString,
    allowedValues: dE6
  }, {
    key: "cache",
    converter: o9.converters.DOMString,
    allowedValues: uE6
  }, {
    key: "redirect",
    converter: o9.converters.DOMString,
    allowedValues: hE6
  }, {
    key: "integrity",
    converter: o9.converters.DOMString
  }, {
    key: "keepalive",
    converter: o9.converters.boolean
  }, {
    key: "signal",
    converter: o9.nullableConverter((A) => o9.converters.AbortSignal(A, "RequestInit", "signal", {
      strict: !1
    }))
  }, {
    key: "window",
    converter: o9.converters.any
  }, {
    key: "duplex",
    converter: o9.converters.DOMString,
    allowedValues: pE6
  }, {
    key: "dispatcher",
    converter: o9.converters.any
  }]);
  xl0.exports = {
    Request: c8,
    makeRequest: _W1,
    fromInnerRequest: kl0,
    cloneRequest: yl0
  }
})
// @from(Start 5610181, End 5635423)
wo = z((TO8, sl0) => {
  var {
    makeNetworkError: W8,
    makeAppropriateNetworkError: jW1,
    filterResponse: Dc1,
    makeResponse: yW1,
    fromInnerResponse: rE6
  } = Ho(), {
    HeadersList: fl0
  } = $j(), {
    Request: oE6,
    cloneRequest: tE6
  } = Im(), fR = Z1("node:zlib"), {
    bytesMatch: eE6,
    makePolicyContainer: AU6,
    clonePolicyContainer: BU6,
    requestBadPort: QU6,
    TAOCheck: IU6,
    appendRequestOriginHeader: GU6,
    responseLocationURL: ZU6,
    requestCurrentURL: jw,
    setRequestReferrerPolicyOnRedirect: DU6,
    tryUpgradeRequestToAPotentiallyTrustworthyURL: YU6,
    createOpaqueTimingInfo: Xc1,
    appendFetchMetadata: WU6,
    corsCheck: JU6,
    crossOriginResourcePolicyCheck: FU6,
    determineRequestsReferrer: XU6,
    coarsenedSharedCurrentTime: zo,
    createDeferredPromise: VU6,
    isBlobLike: CU6,
    sameOrigin: Fc1,
    isCancelled: qj,
    isAborted: vl0,
    isErrorLike: KU6,
    fullyReadBody: HU6,
    readableStreamClose: zU6,
    isomorphicEncode: kW1,
    urlIsLocal: wU6,
    urlIsHttpHttpsScheme: Vc1,
    urlHasHttpsScheme: EU6,
    clampAndCoarsenConnectionTimingInfo: UU6,
    simpleRangeHeaderValue: NU6,
    buildContentRange: $U6,
    createInflate: qU6,
    extractMimeType: MU6
  } = MJ(), {
    kState: ml0,
    kDispatcher: LU6
  } = LR(), Mj = Z1("node:assert"), {
    safelyExtractBody: Cc1,
    extractBody: bl0
  } = gh(), {
    redirectStatusSet: dl0,
    nullBodyStatus: ul0,
    safeMethodsSet: RU6,
    requestBodyHeader: OU6,
    subresourceSet: TU6
  } = fr(), PU6 = Z1("node:events"), {
    Readable: SU6,
    pipeline: _U6,
    finished: jU6
  } = Z1("node:stream"), {
    addAbortListener: yU6,
    isErrored: kU6,
    isReadable: xW1,
    bufferToLowerCasedHeaderName: gl0
  } = C6(), {
    dataURLProcessor: xU6,
    serializeAMimeType: fU6,
    minimizeSupportedMimeType: vU6
  } = nY(), {
    getGlobalDispatcher: bU6
  } = wW1(), {
    webidl: gU6
  } = jG(), {
    STATUS_CODES: hU6
  } = Z1("node:http"), mU6 = ["GET", "HEAD"], dU6 = typeof __UNDICI_IS_NODE__ !== "undefined" || typeof esbuildDetection !== "undefined" ? "node" : "undici", Yc1;
  class Kc1 extends PU6 {
    constructor(A) {
      super();
      this.dispatcher = A, this.connection = null, this.dump = !1, this.state = "ongoing"
    }
    terminate(A) {
      if (this.state !== "ongoing") return;
      this.state = "terminated", this.connection?.destroy(A), this.emit("terminated", A)
    }
    abort(A) {
      if (this.state !== "ongoing") return;
      if (this.state = "aborted", !A) A = new DOMException("The operation was aborted.", "AbortError");
      this.serializedAbortReason = A, this.connection?.destroy(A), this.emit("terminated", A)
    }
  }

  function uU6(A) {
    pl0(A, "fetch")
  }

  function pU6(A, B = void 0) {
    gU6.argumentLengthCheck(arguments, 1, "globalThis.fetch");
    let Q = VU6(),
      I;
    try {
      I = new oE6(A, B)
    } catch (F) {
      return Q.reject(F), Q.promise
    }
    let G = I[ml0];
    if (I.signal.aborted) return Wc1(Q, G, null, I.signal.reason), Q.promise;
    if (G.client.globalObject?.constructor?.name === "ServiceWorkerGlobalScope") G.serviceWorkers = "none";
    let D = null,
      Y = !1,
      W = null;
    return yU6(I.signal, () => {
      Y = !0, Mj(W != null), W.abort(I.signal.reason);
      let F = D?.deref();
      Wc1(Q, G, F, I.signal.reason)
    }), W = ll0({
      request: G,
      processResponseEndOfBody: uU6,
      processResponse: (F) => {
        if (Y) return;
        if (F.aborted) {
          Wc1(Q, G, D, W.serializedAbortReason);
          return
        }
        if (F.type === "error") {
          Q.reject(new TypeError("fetch failed", {
            cause: F.error
          }));
          return
        }
        D = new WeakRef(rE6(F, "immutable")), Q.resolve(D.deref()), Q = null
      },
      dispatcher: I[LU6]
    }), Q.promise
  }

  function pl0(A, B = "other") {
    if (A.type === "error" && A.aborted) return;
    if (!A.urlList?.length) return;
    let Q = A.urlList[0],
      I = A.timingInfo,
      G = A.cacheState;
    if (!Vc1(Q)) return;
    if (I === null) return;
    if (!A.timingAllowPassed) I = Xc1({
      startTime: I.startTime
    }), G = "";
    I.endTime = zo(), A.timingInfo = I, cl0(I, Q.href, B, globalThis, G)
  }
  var cl0 = performance.markResourceTiming;

  function Wc1(A, B, Q, I) {
    if (A) A.reject(I);
    if (B.body != null && xW1(B.body?.stream)) B.body.stream.cancel(I).catch((Z) => {
      if (Z.code === "ERR_INVALID_STATE") return;
      throw Z
    });
    if (Q == null) return;
    let G = Q[ml0];
    if (G.body != null && xW1(G.body?.stream)) G.body.stream.cancel(I).catch((Z) => {
      if (Z.code === "ERR_INVALID_STATE") return;
      throw Z
    })
  }

  function ll0({
    request: A,
    processRequestBodyChunkLength: B,
    processRequestEndOfBody: Q,
    processResponse: I,
    processResponseEndOfBody: G,
    processResponseConsumeBody: Z,
    useParallelQueue: D = !1,
    dispatcher: Y = bU6()
  }) {
    Mj(Y);
    let W = null,
      J = !1;
    if (A.client != null) W = A.client.globalObject, J = A.client.crossOriginIsolatedCapability;
    let F = zo(J),
      X = Xc1({
        startTime: F
      }),
      V = {
        controller: new Kc1(Y),
        request: A,
        timingInfo: X,
        processRequestBodyChunkLength: B,
        processRequestEndOfBody: Q,
        processResponse: I,
        processResponseConsumeBody: Z,
        processResponseEndOfBody: G,
        taskDestination: W,
        crossOriginIsolatedCapability: J
      };
    if (Mj(!A.body || A.body.stream), A.window === "client") A.window = A.client?.globalObject?.constructor?.name === "Window" ? A.client : "no-window";
    if (A.origin === "client") A.origin = A.client.origin;
    if (A.policyContainer === "client")
      if (A.client != null) A.policyContainer = BU6(A.client.policyContainer);
      else A.policyContainer = AU6();
    if (!A.headersList.contains("accept", !0)) A.headersList.append("accept", "*/*", !0);
    if (!A.headersList.contains("accept-language", !0)) A.headersList.append("accept-language", "*", !0);
    if (A.priority === null);
    if (TU6.has(A.destination));
    return il0(V).catch((C) => {
      V.controller.terminate(C)
    }), V.controller
  }
  async function il0(A, B = !1) {
    let Q = A.request,
      I = null;
    if (Q.localURLsOnly && !wU6(jw(Q))) I = W8("local URLs only");
    if (YU6(Q), QU6(Q) === "blocked") I = W8("bad port");
    if (Q.referrerPolicy === "") Q.referrerPolicy = Q.policyContainer.referrerPolicy;
    if (Q.referrer !== "no-referrer") Q.referrer = XU6(Q);
    if (I === null) I = await (async () => {
      let Z = jw(Q);
      if (Fc1(Z, Q.url) && Q.responseTainting === "basic" || Z.protocol === "data:" || (Q.mode === "navigate" || Q.mode === "websocket")) return Q.responseTainting = "basic", await hl0(A);
      if (Q.mode === "same-origin") return W8('request mode cannot be "same-origin"');
      if (Q.mode === "no-cors") {
        if (Q.redirect !== "follow") return W8('redirect mode cannot be "follow" for "no-cors" request');
        return Q.responseTainting = "opaque", await hl0(A)
      }
      if (!Vc1(jw(Q))) return W8("URL scheme must be a HTTP(S) scheme");
      return Q.responseTainting = "cors", await nl0(A)
    })();
    if (B) return I;
    if (I.status !== 0 && !I.internalResponse) {
      if (Q.responseTainting === "cors");
      if (Q.responseTainting === "basic") I = Dc1(I, "basic");
      else if (Q.responseTainting === "cors") I = Dc1(I, "cors");
      else if (Q.responseTainting === "opaque") I = Dc1(I, "opaque");
      else Mj(!1)
    }
    let G = I.status === 0 ? I : I.internalResponse;
    if (G.urlList.length === 0) G.urlList.push(...Q.urlList);
    if (!Q.timingAllowFailed) I.timingAllowPassed = !0;
    if (I.type === "opaque" && G.status === 206 && G.rangeRequested && !Q.headers.contains("range", !0)) I = G = W8();
    if (I.status !== 0 && (Q.method === "HEAD" || Q.method === "CONNECT" || ul0.includes(G.status))) G.body = null, A.controller.dump = !0;
    if (Q.integrity) {
      let Z = (Y) => Jc1(A, W8(Y));
      if (Q.responseTainting === "opaque" || I.body == null) {
        Z(I.error);
        return
      }
      let D = (Y) => {
        if (!eE6(Y, Q.integrity)) {
          Z("integrity mismatch");
          return
        }
        I.body = Cc1(Y)[0], Jc1(A, I)
      };
      await HU6(I.body, D, Z)
    } else Jc1(A, I)
  }

  function hl0(A) {
    if (qj(A) && A.request.redirectCount === 0) return Promise.resolve(jW1(A));
    let {
      request: B
    } = A, {
      protocol: Q
    } = jw(B);
    switch (Q) {
      case "about:":
        return Promise.resolve(W8("about scheme is not supported"));
      case "blob:": {
        if (!Yc1) Yc1 = Z1("node:buffer").resolveObjectURL;
        let I = jw(B);
        if (I.search.length !== 0) return Promise.resolve(W8("NetworkError when attempting to fetch resource."));
        let G = Yc1(I.toString());
        if (B.method !== "GET" || !CU6(G)) return Promise.resolve(W8("invalid method"));
        let Z = yW1(),
          D = G.size,
          Y = kW1(`${D}`),
          W = G.type;
        if (!B.headersList.contains("range", !0)) {
          let J = bl0(G);
          Z.statusText = "OK", Z.body = J[0], Z.headersList.set("content-length", Y, !0), Z.headersList.set("content-type", W, !0)
        } else {
          Z.rangeRequested = !0;
          let J = B.headersList.get("range", !0),
            F = NU6(J, !0);
          if (F === "failure") return Promise.resolve(W8("failed to fetch the data URL"));
          let {
            rangeStartValue: X,
            rangeEndValue: V
          } = F;
          if (X === null) X = D - V, V = X + V - 1;
          else {
            if (X >= D) return Promise.resolve(W8("Range start is greater than the blob's size."));
            if (V === null || V >= D) V = D - 1
          }
          let C = G.slice(X, V, W),
            K = bl0(C);
          Z.body = K[0];
          let E = kW1(`${C.size}`),
            N = $U6(X, V, D);
          Z.status = 206, Z.statusText = "Partial Content", Z.headersList.set("content-length", E, !0), Z.headersList.set("content-type", W, !0), Z.headersList.set("content-range", N, !0)
        }
        return Promise.resolve(Z)
      }
      case "data:": {
        let I = jw(B),
          G = xU6(I);
        if (G === "failure") return Promise.resolve(W8("failed to fetch the data URL"));
        let Z = fU6(G.mimeType);
        return Promise.resolve(yW1({
          statusText: "OK",
          headersList: [
            ["content-type", {
              name: "Content-Type",
              value: Z
            }]
          ],
          body: Cc1(G.body)[0]
        }))
      }
      case "file:":
        return Promise.resolve(W8("not implemented... yet..."));
      case "http:":
      case "https:":
        return nl0(A).catch((I) => W8(I));
      default:
        return Promise.resolve(W8("unknown scheme"))
    }
  }

  function cU6(A, B) {
    if (A.request.done = !0, A.processResponseDone != null) queueMicrotask(() => A.processResponseDone(B))
  }

  function Jc1(A, B) {
    let Q = A.timingInfo,
      I = () => {
        let Z = Date.now();
        if (A.request.destination === "document") A.controller.fullTimingInfo = Q;
        A.controller.reportTimingSteps = () => {
          if (A.request.url.protocol !== "https:") return;
          Q.endTime = Z;
          let {
            cacheState: Y,
            bodyInfo: W
          } = B;
          if (!B.timingAllowPassed) Q = Xc1(Q), Y = "";
          let J = 0;
          if (A.request.mode !== "navigator" || !B.hasCrossOriginRedirects) {
            J = B.status;
            let F = MU6(B.headersList);
            if (F !== "failure") W.contentType = vU6(F)
          }
          if (A.request.initiatorType != null) cl0(Q, A.request.url.href, A.request.initiatorType, globalThis, Y, W, J)
        };
        let D = () => {
          if (A.request.done = !0, A.processResponseEndOfBody != null) queueMicrotask(() => A.processResponseEndOfBody(B));
          if (A.request.initiatorType != null) A.controller.reportTimingSteps()
        };
        queueMicrotask(() => D())
      };
    if (A.processResponse != null) queueMicrotask(() => {
      A.processResponse(B), A.processResponse = null
    });
    let G = B.type === "error" ? B : B.internalResponse ?? B;
    if (G.body == null) I();
    else jU6(G.body.stream, () => {
      I()
    })
  }
  async function nl0(A) {
    let B = A.request,
      Q = null,
      I = null,
      G = A.timingInfo;
    if (B.serviceWorkers === "all");
    if (Q === null) {
      if (B.redirect === "follow") B.serviceWorkers = "none";
      if (I = Q = await al0(A), B.responseTainting === "cors" && JU6(B, Q) === "failure") return W8("cors failure");
      if (IU6(B, Q) === "failure") B.timingAllowFailed = !0
    }
    if ((B.responseTainting === "opaque" || Q.type === "opaque") && FU6(B.origin, B.client, B.destination, I) === "blocked") return W8("blocked");
    if (dl0.has(I.status)) {
      if (B.redirect !== "manual") A.controller.connection.destroy(void 0, !1);
      if (B.redirect === "error") Q = W8("unexpected redirect");
      else if (B.redirect === "manual") Q = I;
      else if (B.redirect === "follow") Q = await lU6(A, Q);
      else Mj(!1)
    }
    return Q.timingInfo = G, Q
  }

  function lU6(A, B) {
    let Q = A.request,
      I = B.internalResponse ? B.internalResponse : B,
      G;
    try {
      if (G = ZU6(I, jw(Q).hash), G == null) return B
    } catch (D) {
      return Promise.resolve(W8(D))
    }
    if (!Vc1(G)) return Promise.resolve(W8("URL scheme must be a HTTP(S) scheme"));
    if (Q.redirectCount === 20) return Promise.resolve(W8("redirect count exceeded"));
    if (Q.redirectCount += 1, Q.mode === "cors" && (G.username || G.password) && !Fc1(Q, G)) return Promise.resolve(W8('cross origin not allowed for request mode "cors"'));
    if (Q.responseTainting === "cors" && (G.username || G.password)) return Promise.resolve(W8('URL cannot contain credentials for request mode "cors"'));
    if (I.status !== 303 && Q.body != null && Q.body.source == null) return Promise.resolve(W8());
    if ([301, 302].includes(I.status) && Q.method === "POST" || I.status === 303 && !mU6.includes(Q.method)) {
      Q.method = "GET", Q.body = null;
      for (let D of OU6) Q.headersList.delete(D)
    }
    if (!Fc1(jw(Q), G)) Q.headersList.delete("authorization", !0), Q.headersList.delete("proxy-authorization", !0), Q.headersList.delete("cookie", !0), Q.headersList.delete("host", !0);
    if (Q.body != null) Mj(Q.body.source != null), Q.body = Cc1(Q.body.source)[0];
    let Z = A.timingInfo;
    if (Z.redirectEndTime = Z.postRedirectStartTime = zo(A.crossOriginIsolatedCapability), Z.redirectStartTime === 0) Z.redirectStartTime = Z.startTime;
    return Q.urlList.push(G), DU6(Q, I), il0(A, !0)
  }
  async function al0(A, B = !1, Q = !1) {
    let I = A.request,
      G = null,
      Z = null,
      D = null,
      Y = null,
      W = !1;
    if (I.window === "no-window" && I.redirect === "error") G = A, Z = I;
    else Z = tE6(I), G = {
      ...A
    }, G.request = Z;
    let J = I.credentials === "include" || I.credentials === "same-origin" && I.responseTainting === "basic",
      F = Z.body ? Z.body.length : null,
      X = null;
    if (Z.body == null && ["POST", "PUT"].includes(Z.method)) X = "0";
    if (F != null) X = kW1(`${F}`);
    if (X != null) Z.headersList.append("content-length", X, !0);
    if (F != null && Z.keepalive);
    if (Z.referrer instanceof URL) Z.headersList.append("referer", kW1(Z.referrer.href), !0);
    if (GU6(Z), WU6(Z), !Z.headersList.contains("user-agent", !0)) Z.headersList.append("user-agent", dU6);
    if (Z.cache === "default" && (Z.headersList.contains("if-modified-since", !0) || Z.headersList.contains("if-none-match", !0) || Z.headersList.contains("if-unmodified-since", !0) || Z.headersList.contains("if-match", !0) || Z.headersList.contains("if-range", !0))) Z.cache = "no-store";
    if (Z.cache === "no-cache" && !Z.preventNoCacheCacheControlHeaderModification && !Z.headersList.contains("cache-control", !0)) Z.headersList.append("cache-control", "max-age=0", !0);
    if (Z.cache === "no-store" || Z.cache === "reload") {
      if (!Z.headersList.contains("pragma", !0)) Z.headersList.append("pragma", "no-cache", !0);
      if (!Z.headersList.contains("cache-control", !0)) Z.headersList.append("cache-control", "no-cache", !0)
    }
    if (Z.headersList.contains("range", !0)) Z.headersList.append("accept-encoding", "identity", !0);
    if (!Z.headersList.contains("accept-encoding", !0))
      if (EU6(jw(Z))) Z.headersList.append("accept-encoding", "br, gzip, deflate", !0);
      else Z.headersList.append("accept-encoding", "gzip, deflate", !0);
    if (Z.headersList.delete("host", !0), Y == null) Z.cache = "no-store";
    if (Z.cache !== "no-store" && Z.cache !== "reload");
    if (D == null) {
      if (Z.cache === "only-if-cached") return W8("only if cached");
      let V = await iU6(G, J, Q);
      if (!RU6.has(Z.method) && V.status >= 200 && V.status <= 399);
      if (W && V.status === 304);
      if (D == null) D = V
    }
    if (D.urlList = [...Z.urlList], Z.headersList.contains("range", !0)) D.rangeRequested = !0;
    if (D.requestIncludesCredentials = J, D.status === 407) {
      if (I.window === "no-window") return W8();
      if (qj(A)) return jW1(A);
      return W8("proxy authentication required")
    }
    if (D.status === 421 && !Q && (I.body == null || I.body.source != null)) {
      if (qj(A)) return jW1(A);
      A.controller.connection.destroy(), D = await al0(A, B, !0)
    }
    return D
  }
  async function iU6(A, B = !1, Q = !1) {
    Mj(!A.controller.connection || A.controller.connection.destroyed), A.controller.connection = {
      abort: null,
      destroyed: !1,
      destroy(K, E = !0) {
        if (!this.destroyed) {
          if (this.destroyed = !0, E) this.abort?.(K ?? new DOMException("The operation was aborted.", "AbortError"))
        }
      }
    };
    let I = A.request,
      G = null,
      Z = A.timingInfo;
    if (!0) I.cache = "no-store";
    let Y = Q ? "yes" : "no";
    if (I.mode === "websocket");
    let W = null;
    if (I.body == null && A.processRequestEndOfBody) queueMicrotask(() => A.processRequestEndOfBody());
    else if (I.body != null) {
      let K = async function*(q) {
        if (qj(A)) return;
        yield q, A.processRequestBodyChunkLength?.(q.byteLength)
      }, E = () => {
        if (qj(A)) return;
        if (A.processRequestEndOfBody) A.processRequestEndOfBody()
      }, N = (q) => {
        if (qj(A)) return;
        if (q.name === "AbortError") A.controller.abort();
        else A.controller.terminate(q)
      };
      W = async function*() {
        try {
          for await (let q of I.body.stream) yield* K(q);
          E()
        } catch (q) {
          N(q)
        }
      }()
    }
    try {
      let {
        body: K,
        status: E,
        statusText: N,
        headersList: q,
        socket: O
      } = await C({
        body: W
      });
      if (O) G = yW1({
        status: E,
        statusText: N,
        headersList: q,
        socket: O
      });
      else {
        let R = K[Symbol.asyncIterator]();
        A.controller.next = () => R.next(), G = yW1({
          status: E,
          statusText: N,
          headersList: q
        })
      }
    } catch (K) {
      if (K.name === "AbortError") return A.controller.connection.destroy(), jW1(A, K);
      return W8(K)
    }
    let J = async () => {
      await A.controller.resume()
    }, F = (K) => {
      if (!qj(A)) A.controller.abort(K)
    }, X = new ReadableStream({
      async start(K) {
        A.controller.controller = K
      },
      async pull(K) {
        await J(K)
      },
      async cancel(K) {
        await F(K)
      },
      type: "bytes"
    });
    G.body = {
      stream: X,
      source: null,
      length: null
    }, A.controller.onAborted = V, A.controller.on("terminated", V), A.controller.resume = async () => {
      while (!0) {
        let K, E;
        try {
          let {
            done: q,
            value: O
          } = await A.controller.next();
          if (vl0(A)) break;
          K = q ? void 0 : O
        } catch (q) {
          if (A.controller.ended && !Z.encodedBodySize) K = void 0;
          else K = q, E = !0
        }
        if (K === void 0) {
          zU6(A.controller.controller), cU6(A, G);
          return
        }
        if (Z.decodedBodySize += K?.byteLength ?? 0, E) {
          A.controller.terminate(K);
          return
        }
        let N = new Uint8Array(K);
        if (N.byteLength) A.controller.controller.enqueue(N);
        if (kU6(X)) {
          A.controller.terminate();
          return
        }
        if (A.controller.controller.desiredSize <= 0) return
      }
    };

    function V(K) {
      if (vl0(A)) {
        if (G.aborted = !0, xW1(X)) A.controller.controller.error(A.controller.serializedAbortReason)
      } else if (xW1(X)) A.controller.controller.error(new TypeError("terminated", {
        cause: KU6(K) ? K : void 0
      }));
      A.controller.connection.destroy()
    }
    return G;

    function C({
      body: K
    }) {
      let E = jw(I),
        N = A.controller.dispatcher;
      return new Promise((q, O) => N.dispatch({
        path: E.pathname + E.search,
        origin: E.origin,
        method: I.method,
        body: N.isMockActive ? I.body && (I.body.source || I.body.stream) : K,
        headers: I.headersList.entries,
        maxRedirections: 0,
        upgrade: I.mode === "websocket" ? "websocket" : void 0
      }, {
        body: null,
        abort: null,
        onConnect(R) {
          let {
            connection: T
          } = A.controller;
          if (Z.finalConnectionTimingInfo = UU6(void 0, Z.postRedirectStartTime, A.crossOriginIsolatedCapability), T.destroyed) R(new DOMException("The operation was aborted.", "AbortError"));
          else A.controller.on("terminated", R), this.abort = T.abort = R;
          Z.finalNetworkRequestStartTime = zo(A.crossOriginIsolatedCapability)
        },
        onResponseStarted() {
          Z.finalNetworkResponseStartTime = zo(A.crossOriginIsolatedCapability)
        },
        onHeaders(R, T, L, _) {
          if (R < 200) return;
          let k = [],
            i = "",
            x = new fl0;
          for (let v = 0; v < T.length; v += 2) x.append(gl0(T[v]), T[v + 1].toString("latin1"), !0);
          let s = x.get("content-encoding", !0);
          if (s) k = s.toLowerCase().split(",").map((v) => v.trim());
          i = x.get("location", !0), this.body = new SU6({
            read: L
          });
          let d = [],
            F1 = i && I.redirect === "follow" && dl0.has(R);
          if (k.length !== 0 && I.method !== "HEAD" && I.method !== "CONNECT" && !ul0.includes(R) && !F1)
            for (let v = k.length - 1; v >= 0; --v) {
              let D1 = k[v];
              if (D1 === "x-gzip" || D1 === "gzip") d.push(fR.createGunzip({
                flush: fR.constants.Z_SYNC_FLUSH,
                finishFlush: fR.constants.Z_SYNC_FLUSH
              }));
              else if (D1 === "deflate") d.push(qU6({
                flush: fR.constants.Z_SYNC_FLUSH,
                finishFlush: fR.constants.Z_SYNC_FLUSH
              }));
              else if (D1 === "br") d.push(fR.createBrotliDecompress({
                flush: fR.constants.BROTLI_OPERATION_FLUSH,
                finishFlush: fR.constants.BROTLI_OPERATION_FLUSH
              }));
              else {
                d.length = 0;
                break
              }
            }
          let X1 = this.onError.bind(this);
          return q({
            status: R,
            statusText: _,
            headersList: x,
            body: d.length ? _U6(this.body, ...d, (v) => {
              if (v) this.onError(v)
            }).on("error", X1) : this.body.on("error", X1)
          }), !0
        },
        onData(R) {
          if (A.controller.dump) return;
          let T = R;
          return Z.encodedBodySize += T.byteLength, this.body.push(T)
        },
        onComplete() {
          if (this.abort) A.controller.off("terminated", this.abort);
          if (A.controller.onAborted) A.controller.off("terminated", A.controller.onAborted);
          A.controller.ended = !0, this.body.push(null)
        },
        onError(R) {
          if (this.abort) A.controller.off("terminated", this.abort);
          this.body?.destroy(R), A.controller.terminate(R), O(R)
        },
        onUpgrade(R, T, L) {
          if (R !== 101) return;
          let _ = new fl0;
          for (let k = 0; k < T.length; k += 2) _.append(gl0(T[k]), T[k + 1].toString("latin1"), !0);
          return q({
            status: R,
            statusText: hU6[R],
            headersList: _,
            socket: L
          }), !0
        }
      }))
    }
  }
  sl0.exports = {
    fetch: pU6,
    Fetch: Kc1,
    fetching: ll0,
    finalizeAndReportTiming: pl0
  }
})
// @from(Start 5635429, End 5635771)
Hc1 = z((PO8, rl0) => {
  rl0.exports = {
    kState: Symbol("FileReader state"),
    kResult: Symbol("FileReader result"),
    kError: Symbol("FileReader error"),
    kLastProgressEventFired: Symbol("FileReader last progress event fired timestamp"),
    kEvents: Symbol("FileReader events"),
    kAborted: Symbol("FileReader aborted")
  }
})
// @from(Start 5635777, End 5637156)
tl0 = z((SO8, ol0) => {
  var {
    webidl: SJ
  } = jG(), fW1 = Symbol("ProgressEvent state");
  class Eo extends Event {
    constructor(A, B = {}) {
      A = SJ.converters.DOMString(A, "ProgressEvent constructor", "type"), B = SJ.converters.ProgressEventInit(B ?? {});
      super(A, B);
      this[fW1] = {
        lengthComputable: B.lengthComputable,
        loaded: B.loaded,
        total: B.total
      }
    }
    get lengthComputable() {
      return SJ.brandCheck(this, Eo), this[fW1].lengthComputable
    }
    get loaded() {
      return SJ.brandCheck(this, Eo), this[fW1].loaded
    }
    get total() {
      return SJ.brandCheck(this, Eo), this[fW1].total
    }
  }
  SJ.converters.ProgressEventInit = SJ.dictionaryConverter([{
    key: "lengthComputable",
    converter: SJ.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "loaded",
    converter: SJ.converters["unsigned long long"],
    defaultValue: () => 0
  }, {
    key: "total",
    converter: SJ.converters["unsigned long long"],
    defaultValue: () => 0
  }, {
    key: "bubbles",
    converter: SJ.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "cancelable",
    converter: SJ.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "composed",
    converter: SJ.converters.boolean,
    defaultValue: () => !1
  }]);
  ol0.exports = {
    ProgressEvent: Eo
  }
})
// @from(Start 5637162, End 5644004)
Ai0 = z((_O8, el0) => {
  function nU6(A) {
    if (!A) return "failure";
    switch (A.trim().toLowerCase()) {
      case "unicode-1-1-utf-8":
      case "unicode11utf8":
      case "unicode20utf8":
      case "utf-8":
      case "utf8":
      case "x-unicode20utf8":
        return "UTF-8";
      case "866":
      case "cp866":
      case "csibm866":
      case "ibm866":
        return "IBM866";
      case "csisolatin2":
      case "iso-8859-2":
      case "iso-ir-101":
      case "iso8859-2":
      case "iso88592":
      case "iso_8859-2":
      case "iso_8859-2:1987":
      case "l2":
      case "latin2":
        return "ISO-8859-2";
      case "csisolatin3":
      case "iso-8859-3":
      case "iso-ir-109":
      case "iso8859-3":
      case "iso88593":
      case "iso_8859-3":
      case "iso_8859-3:1988":
      case "l3":
      case "latin3":
        return "ISO-8859-3";
      case "csisolatin4":
      case "iso-8859-4":
      case "iso-ir-110":
      case "iso8859-4":
      case "iso88594":
      case "iso_8859-4":
      case "iso_8859-4:1988":
      case "l4":
      case "latin4":
        return "ISO-8859-4";
      case "csisolatincyrillic":
      case "cyrillic":
      case "iso-8859-5":
      case "iso-ir-144":
      case "iso8859-5":
      case "iso88595":
      case "iso_8859-5":
      case "iso_8859-5:1988":
        return "ISO-8859-5";
      case "arabic":
      case "asmo-708":
      case "csiso88596e":
      case "csiso88596i":
      case "csisolatinarabic":
      case "ecma-114":
      case "iso-8859-6":
      case "iso-8859-6-e":
      case "iso-8859-6-i":
      case "iso-ir-127":
      case "iso8859-6":
      case "iso88596":
      case "iso_8859-6":
      case "iso_8859-6:1987":
        return "ISO-8859-6";
      case "csisolatingreek":
      case "ecma-118":
      case "elot_928":
      case "greek":
      case "greek8":
      case "iso-8859-7":
      case "iso-ir-126":
      case "iso8859-7":
      case "iso88597":
      case "iso_8859-7":
      case "iso_8859-7:1987":
      case "sun_eu_greek":
        return "ISO-8859-7";
      case "csiso88598e":
      case "csisolatinhebrew":
      case "hebrew":
      case "iso-8859-8":
      case "iso-8859-8-e":
      case "iso-ir-138":
      case "iso8859-8":
      case "iso88598":
      case "iso_8859-8":
      case "iso_8859-8:1988":
      case "visual":
        return "ISO-8859-8";
      case "csiso88598i":
      case "iso-8859-8-i":
      case "logical":
        return "ISO-8859-8-I";
      case "csisolatin6":
      case "iso-8859-10":
      case "iso-ir-157":
      case "iso8859-10":
      case "iso885910":
      case "l6":
      case "latin6":
        return "ISO-8859-10";
      case "iso-8859-13":
      case "iso8859-13":
      case "iso885913":
        return "ISO-8859-13";
      case "iso-8859-14":
      case "iso8859-14":
      case "iso885914":
        return "ISO-8859-14";
      case "csisolatin9":
      case "iso-8859-15":
      case "iso8859-15":
      case "iso885915":
      case "iso_8859-15":
      case "l9":
        return "ISO-8859-15";
      case "iso-8859-16":
        return "ISO-8859-16";
      case "cskoi8r":
      case "koi":
      case "koi8":
      case "koi8-r":
      case "koi8_r":
        return "KOI8-R";
      case "koi8-ru":
      case "koi8-u":
        return "KOI8-U";
      case "csmacintosh":
      case "mac":
      case "macintosh":
      case "x-mac-roman":
        return "macintosh";
      case "iso-8859-11":
      case "iso8859-11":
      case "iso885911":
      case "tis-620":
      case "windows-874":
        return "windows-874";
      case "cp1250":
      case "windows-1250":
      case "x-cp1250":
        return "windows-1250";
      case "cp1251":
      case "windows-1251":
      case "x-cp1251":
        return "windows-1251";
      case "ansi_x3.4-1968":
      case "ascii":
      case "cp1252":
      case "cp819":
      case "csisolatin1":
      case "ibm819":
      case "iso-8859-1":
      case "iso-ir-100":
      case "iso8859-1":
      case "iso88591":
      case "iso_8859-1":
      case "iso_8859-1:1987":
      case "l1":
      case "latin1":
      case "us-ascii":
      case "windows-1252":
      case "x-cp1252":
        return "windows-1252";
      case "cp1253":
      case "windows-1253":
      case "x-cp1253":
        return "windows-1253";
      case "cp1254":
      case "csisolatin5":
      case "iso-8859-9":
      case "iso-ir-148":
      case "iso8859-9":
      case "iso88599":
      case "iso_8859-9":
      case "iso_8859-9:1989":
      case "l5":
      case "latin5":
      case "windows-1254":
      case "x-cp1254":
        return "windows-1254";
      case "cp1255":
      case "windows-1255":
      case "x-cp1255":
        return "windows-1255";
      case "cp1256":
      case "windows-1256":
      case "x-cp1256":
        return "windows-1256";
      case "cp1257":
      case "windows-1257":
      case "x-cp1257":
        return "windows-1257";
      case "cp1258":
      case "windows-1258":
      case "x-cp1258":
        return "windows-1258";
      case "x-mac-cyrillic":
      case "x-mac-ukrainian":
        return "x-mac-cyrillic";
      case "chinese":
      case "csgb2312":
      case "csiso58gb231280":
      case "gb2312":
      case "gb_2312":
      case "gb_2312-80":
      case "gbk":
      case "iso-ir-58":
      case "x-gbk":
        return "GBK";
      case "gb18030":
        return "gb18030";
      case "big5":
      case "big5-hkscs":
      case "cn-big5":
      case "csbig5":
      case "x-x-big5":
        return "Big5";
      case "cseucpkdfmtjapanese":
      case "euc-jp":
      case "x-euc-jp":
        return "EUC-JP";
      case "csiso2022jp":
      case "iso-2022-jp":
        return "ISO-2022-JP";
      case "csshiftjis":
      case "ms932":
      case "ms_kanji":
      case "shift-jis":
      case "shift_jis":
      case "sjis":
      case "windows-31j":
      case "x-sjis":
        return "Shift_JIS";
      case "cseuckr":
      case "csksc56011987":
      case "euc-kr":
      case "iso-ir-149":
      case "korean":
      case "ks_c_5601-1987":
      case "ks_c_5601-1989":
      case "ksc5601":
      case "ksc_5601":
      case "windows-949":
        return "EUC-KR";
      case "csiso2022kr":
      case "hz-gb-2312":
      case "iso-2022-cn":
      case "iso-2022-cn-ext":
      case "iso-2022-kr":
      case "replacement":
        return "replacement";
      case "unicodefffe":
      case "utf-16be":
        return "UTF-16BE";
      case "csunicode":
      case "iso-10646-ucs-2":
      case "ucs-2":
      case "unicode":
      case "unicodefeff":
      case "utf-16":
      case "utf-16le":
        return "UTF-16LE";
      case "x-user-defined":
        return "x-user-defined";
      default:
        return "failure"
    }
  }
  el0.exports = {
    getEncoding: nU6
  }
})
// @from(Start 5644010, End 5647579)
Wi0 = z((jO8, Yi0) => {
  var {
    kState: Gm,
    kError: zc1,
    kResult: Bi0,
    kAborted: Uo,
    kLastProgressEventFired: wc1
  } = Hc1(), {
    ProgressEvent: aU6
  } = tl0(), {
    getEncoding: Qi0
  } = Ai0(), {
    serializeAMimeType: sU6,
    parseMIMEType: Ii0
  } = nY(), {
    types: rU6
  } = Z1("node:util"), {
    StringDecoder: Gi0
  } = Z1("string_decoder"), {
    btoa: Zi0
  } = Z1("node:buffer"), oU6 = {
    enumerable: !0,
    writable: !1,
    configurable: !1
  };

  function tU6(A, B, Q, I) {
    if (A[Gm] === "loading") throw new DOMException("Invalid state", "InvalidStateError");
    A[Gm] = "loading", A[Bi0] = null, A[zc1] = null;
    let Z = B.stream().getReader(),
      D = [],
      Y = Z.read(),
      W = !0;
    (async () => {
      while (!A[Uo]) try {
        let {
          done: J,
          value: F
        } = await Y;
        if (W && !A[Uo]) queueMicrotask(() => {
          vR("loadstart", A)
        });
        if (W = !1, !J && rU6.isUint8Array(F)) {
          if (D.push(F), (A[wc1] === void 0 || Date.now() - A[wc1] >= 50) && !A[Uo]) A[wc1] = Date.now(), queueMicrotask(() => {
            vR("progress", A)
          });
          Y = Z.read()
        } else if (J) {
          queueMicrotask(() => {
            A[Gm] = "done";
            try {
              let X = eU6(D, Q, B.type, I);
              if (A[Uo]) return;
              A[Bi0] = X, vR("load", A)
            } catch (X) {
              A[zc1] = X, vR("error", A)
            }
            if (A[Gm] !== "loading") vR("loadend", A)
          });
          break
        }
      } catch (J) {
        if (A[Uo]) return;
        queueMicrotask(() => {
          if (A[Gm] = "done", A[zc1] = J, vR("error", A), A[Gm] !== "loading") vR("loadend", A)
        });
        break
      }
    })()
  }

  function vR(A, B) {
    let Q = new aU6(A, {
      bubbles: !1,
      cancelable: !1
    });
    B.dispatchEvent(Q)
  }

  function eU6(A, B, Q, I) {
    switch (B) {
      case "DataURL": {
        let G = "data:",
          Z = Ii0(Q || "application/octet-stream");
        if (Z !== "failure") G += sU6(Z);
        G += ";base64,";
        let D = new Gi0("latin1");
        for (let Y of A) G += Zi0(D.write(Y));
        return G += Zi0(D.end()), G
      }
      case "Text": {
        let G = "failure";
        if (I) G = Qi0(I);
        if (G === "failure" && Q) {
          let Z = Ii0(Q);
          if (Z !== "failure") G = Qi0(Z.parameters.get("charset"))
        }
        if (G === "failure") G = "UTF-8";
        return AN6(A, G)
      }
      case "ArrayBuffer":
        return Di0(A).buffer;
      case "BinaryString": {
        let G = "",
          Z = new Gi0("latin1");
        for (let D of A) G += Z.write(D);
        return G += Z.end(), G
      }
    }
  }

  function AN6(A, B) {
    let Q = Di0(A),
      I = BN6(Q),
      G = 0;
    if (I !== null) B = I, G = I === "UTF-8" ? 3 : 2;
    let Z = Q.slice(G);
    return new TextDecoder(B).decode(Z)
  }

  function BN6(A) {
    let [B, Q, I] = A;
    if (B === 239 && Q === 187 && I === 191) return "UTF-8";
    else if (B === 254 && Q === 255) return "UTF-16BE";
    else if (B === 255 && Q === 254) return "UTF-16LE";
    return null
  }

  function Di0(A) {
    let B = A.reduce((I, G) => {
        return I + G.byteLength
      }, 0),
      Q = 0;
    return A.reduce((I, G) => {
      return I.set(G, Q), Q += G.byteLength, I
    }, new Uint8Array(B))
  }
  Yi0.exports = {
    staticPropertyDescriptors: oU6,
    readOperation: tU6,
    fireAProgressEvent: vR
  }
})
// @from(Start 5647585, End 5652607)
Vi0 = z((yO8, Xi0) => {
  var {
    staticPropertyDescriptors: Zm,
    readOperation: vW1,
    fireAProgressEvent: Ji0
  } = Wi0(), {
    kState: Lj,
    kError: Fi0,
    kResult: bW1,
    kEvents: p5,
    kAborted: QN6
  } = Hc1(), {
    webidl: L8
  } = jG(), {
    kEnumerableProperty: rY
  } = C6();
  class J8 extends EventTarget {
    constructor() {
      super();
      this[Lj] = "empty", this[bW1] = null, this[Fi0] = null, this[p5] = {
        loadend: null,
        error: null,
        abort: null,
        load: null,
        progress: null,
        loadstart: null
      }
    }
    readAsArrayBuffer(A) {
      L8.brandCheck(this, J8), L8.argumentLengthCheck(arguments, 1, "FileReader.readAsArrayBuffer"), A = L8.converters.Blob(A, {
        strict: !1
      }), vW1(this, A, "ArrayBuffer")
    }
    readAsBinaryString(A) {
      L8.brandCheck(this, J8), L8.argumentLengthCheck(arguments, 1, "FileReader.readAsBinaryString"), A = L8.converters.Blob(A, {
        strict: !1
      }), vW1(this, A, "BinaryString")
    }
    readAsText(A, B = void 0) {
      if (L8.brandCheck(this, J8), L8.argumentLengthCheck(arguments, 1, "FileReader.readAsText"), A = L8.converters.Blob(A, {
          strict: !1
        }), B !== void 0) B = L8.converters.DOMString(B, "FileReader.readAsText", "encoding");
      vW1(this, A, "Text", B)
    }
    readAsDataURL(A) {
      L8.brandCheck(this, J8), L8.argumentLengthCheck(arguments, 1, "FileReader.readAsDataURL"), A = L8.converters.Blob(A, {
        strict: !1
      }), vW1(this, A, "DataURL")
    }
    abort() {
      if (this[Lj] === "empty" || this[Lj] === "done") {
        this[bW1] = null;
        return
      }
      if (this[Lj] === "loading") this[Lj] = "done", this[bW1] = null;
      if (this[QN6] = !0, Ji0("abort", this), this[Lj] !== "loading") Ji0("loadend", this)
    }
    get readyState() {
      switch (L8.brandCheck(this, J8), this[Lj]) {
        case "empty":
          return this.EMPTY;
        case "loading":
          return this.LOADING;
        case "done":
          return this.DONE
      }
    }
    get result() {
      return L8.brandCheck(this, J8), this[bW1]
    }
    get error() {
      return L8.brandCheck(this, J8), this[Fi0]
    }
    get onloadend() {
      return L8.brandCheck(this, J8), this[p5].loadend
    }
    set onloadend(A) {
      if (L8.brandCheck(this, J8), this[p5].loadend) this.removeEventListener("loadend", this[p5].loadend);
      if (typeof A === "function") this[p5].loadend = A, this.addEventListener("loadend", A);
      else this[p5].loadend = null
    }
    get onerror() {
      return L8.brandCheck(this, J8), this[p5].error
    }
    set onerror(A) {
      if (L8.brandCheck(this, J8), this[p5].error) this.removeEventListener("error", this[p5].error);
      if (typeof A === "function") this[p5].error = A, this.addEventListener("error", A);
      else this[p5].error = null
    }
    get onloadstart() {
      return L8.brandCheck(this, J8), this[p5].loadstart
    }
    set onloadstart(A) {
      if (L8.brandCheck(this, J8), this[p5].loadstart) this.removeEventListener("loadstart", this[p5].loadstart);
      if (typeof A === "function") this[p5].loadstart = A, this.addEventListener("loadstart", A);
      else this[p5].loadstart = null
    }
    get onprogress() {
      return L8.brandCheck(this, J8), this[p5].progress
    }
    set onprogress(A) {
      if (L8.brandCheck(this, J8), this[p5].progress) this.removeEventListener("progress", this[p5].progress);
      if (typeof A === "function") this[p5].progress = A, this.addEventListener("progress", A);
      else this[p5].progress = null
    }
    get onload() {
      return L8.brandCheck(this, J8), this[p5].load
    }
    set onload(A) {
      if (L8.brandCheck(this, J8), this[p5].load) this.removeEventListener("load", this[p5].load);
      if (typeof A === "function") this[p5].load = A, this.addEventListener("load", A);
      else this[p5].load = null
    }
    get onabort() {
      return L8.brandCheck(this, J8), this[p5].abort
    }
    set onabort(A) {
      if (L8.brandCheck(this, J8), this[p5].abort) this.removeEventListener("abort", this[p5].abort);
      if (typeof A === "function") this[p5].abort = A, this.addEventListener("abort", A);
      else this[p5].abort = null
    }
  }
  J8.EMPTY = J8.prototype.EMPTY = 0;
  J8.LOADING = J8.prototype.LOADING = 1;
  J8.DONE = J8.prototype.DONE = 2;
  Object.defineProperties(J8.prototype, {
    EMPTY: Zm,
    LOADING: Zm,
    DONE: Zm,
    readAsArrayBuffer: rY,
    readAsBinaryString: rY,
    readAsText: rY,
    readAsDataURL: rY,
    abort: rY,
    readyState: rY,
    result: rY,
    error: rY,
    onloadstart: rY,
    onprogress: rY,
    onload: rY,
    onabort: rY,
    onerror: rY,
    onloadend: rY,
    [Symbol.toStringTag]: {
      value: "FileReader",
      writable: !1,
      enumerable: !1,
      configurable: !0
    }
  });
  Object.defineProperties(J8, {
    EMPTY: Zm,
    LOADING: Zm,
    DONE: Zm
  });
  Xi0.exports = {
    FileReader: J8
  }
})
// @from(Start 5652613, End 5652693)
gW1 = z((kO8, Ci0) => {
  Ci0.exports = {
    kConstruct: A3().kConstruct
  }
})
// @from(Start 5652699, End 5653165)
zi0 = z((xO8, Hi0) => {
  var IN6 = Z1("node:assert"),
    {
      URLSerializer: Ki0
    } = nY(),
    {
      isValidHeaderName: GN6
    } = MJ();

  function ZN6(A, B, Q = !1) {
    let I = Ki0(A, Q),
      G = Ki0(B, Q);
    return I === G
  }

  function DN6(A) {
    IN6(A !== null);
    let B = [];
    for (let Q of A.split(","))
      if (Q = Q.trim(), GN6(Q)) B.push(Q);
    return B
  }
  Hi0.exports = {
    urlEquals: ZN6,
    getFieldValues: DN6
  }
})
// @from(Start 5653171, End 5664904)
Ui0 = z((fO8, Ei0) => {
  var {
    kConstruct: YN6
  } = gW1(), {
    urlEquals: WN6,
    getFieldValues: Ec1
  } = zi0(), {
    kEnumerableProperty: Rj,
    isDisturbed: JN6
  } = C6(), {
    webidl: k9
  } = jG(), {
    Response: FN6,
    cloneResponse: XN6,
    fromInnerResponse: VN6
  } = Ho(), {
    Request: nN,
    fromInnerRequest: CN6
  } = Im(), {
    kState: BK
  } = LR(), {
    fetching: KN6
  } = wo(), {
    urlIsHttpHttpsScheme: hW1,
    createDeferredPromise: Dm,
    readAllBytes: HN6
  } = MJ(), Uc1 = Z1("node:assert");
  class yw {
    #A;
    constructor() {
      if (arguments[0] !== YN6) k9.illegalConstructor();
      k9.util.markAsUncloneable(this), this.#A = arguments[1]
    }
    async match(A, B = {}) {
      k9.brandCheck(this, yw);
      let Q = "Cache.match";
      k9.argumentLengthCheck(arguments, 1, Q), A = k9.converters.RequestInfo(A, Q, "request"), B = k9.converters.CacheQueryOptions(B, Q, "options");
      let I = this.#G(A, B, 1);
      if (I.length === 0) return;
      return I[0]
    }
    async matchAll(A = void 0, B = {}) {
      k9.brandCheck(this, yw);
      let Q = "Cache.matchAll";
      if (A !== void 0) A = k9.converters.RequestInfo(A, Q, "request");
      return B = k9.converters.CacheQueryOptions(B, Q, "options"), this.#G(A, B)
    }
    async add(A) {
      k9.brandCheck(this, yw);
      let B = "Cache.add";
      k9.argumentLengthCheck(arguments, 1, B), A = k9.converters.RequestInfo(A, B, "request");
      let Q = [A];
      return await this.addAll(Q)
    }
    async addAll(A) {
      k9.brandCheck(this, yw);
      let B = "Cache.addAll";
      k9.argumentLengthCheck(arguments, 1, B);
      let Q = [],
        I = [];
      for (let X of A) {
        if (X === void 0) throw k9.errors.conversionFailed({
          prefix: B,
          argument: "Argument 1",
          types: ["undefined is not allowed"]
        });
        if (X = k9.converters.RequestInfo(X), typeof X === "string") continue;
        let V = X[BK];
        if (!hW1(V.url) || V.method !== "GET") throw k9.errors.exception({
          header: B,
          message: "Expected http/s scheme when method is not GET."
        })
      }
      let G = [];
      for (let X of A) {
        let V = new nN(X)[BK];
        if (!hW1(V.url)) throw k9.errors.exception({
          header: B,
          message: "Expected http/s scheme."
        });
        V.initiator = "fetch", V.destination = "subresource", I.push(V);
        let C = Dm();
        G.push(KN6({
          request: V,
          processResponse(K) {
            if (K.type === "error" || K.status === 206 || K.status < 200 || K.status > 299) C.reject(k9.errors.exception({
              header: "Cache.addAll",
              message: "Received an invalid status code or the request failed."
            }));
            else if (K.headersList.contains("vary")) {
              let E = Ec1(K.headersList.get("vary"));
              for (let N of E)
                if (N === "*") {
                  C.reject(k9.errors.exception({
                    header: "Cache.addAll",
                    message: "invalid vary field value"
                  }));
                  for (let q of G) q.abort();
                  return
                }
            }
          },
          processResponseEndOfBody(K) {
            if (K.aborted) {
              C.reject(new DOMException("aborted", "AbortError"));
              return
            }
            C.resolve(K)
          }
        })), Q.push(C.promise)
      }
      let D = await Promise.all(Q),
        Y = [],
        W = 0;
      for (let X of D) {
        let V = {
          type: "put",
          request: I[W],
          response: X
        };
        Y.push(V), W++
      }
      let J = Dm(),
        F = null;
      try {
        this.#B(Y)
      } catch (X) {
        F = X
      }
      return queueMicrotask(() => {
        if (F === null) J.resolve(void 0);
        else J.reject(F)
      }), J.promise
    }
    async put(A, B) {
      k9.brandCheck(this, yw);
      let Q = "Cache.put";
      k9.argumentLengthCheck(arguments, 2, Q), A = k9.converters.RequestInfo(A, Q, "request"), B = k9.converters.Response(B, Q, "response");
      let I = null;
      if (A instanceof nN) I = A[BK];
      else I = new nN(A)[BK];
      if (!hW1(I.url) || I.method !== "GET") throw k9.errors.exception({
        header: Q,
        message: "Expected an http/s scheme when method is not GET"
      });
      let G = B[BK];
      if (G.status === 206) throw k9.errors.exception({
        header: Q,
        message: "Got 206 status"
      });
      if (G.headersList.contains("vary")) {
        let V = Ec1(G.headersList.get("vary"));
        for (let C of V)
          if (C === "*") throw k9.errors.exception({
            header: Q,
            message: "Got * vary field value"
          })
      }
      if (G.body && (JN6(G.body.stream) || G.body.stream.locked)) throw k9.errors.exception({
        header: Q,
        message: "Response body is locked or disturbed"
      });
      let Z = XN6(G),
        D = Dm();
      if (G.body != null) {
        let C = G.body.stream.getReader();
        HN6(C).then(D.resolve, D.reject)
      } else D.resolve(void 0);
      let Y = [],
        W = {
          type: "put",
          request: I,
          response: Z
        };
      Y.push(W);
      let J = await D.promise;
      if (Z.body != null) Z.body.source = J;
      let F = Dm(),
        X = null;
      try {
        this.#B(Y)
      } catch (V) {
        X = V
      }
      return queueMicrotask(() => {
        if (X === null) F.resolve();
        else F.reject(X)
      }), F.promise
    }
    async delete(A, B = {}) {
      k9.brandCheck(this, yw);
      let Q = "Cache.delete";
      k9.argumentLengthCheck(arguments, 1, Q), A = k9.converters.RequestInfo(A, Q, "request"), B = k9.converters.CacheQueryOptions(B, Q, "options");
      let I = null;
      if (A instanceof nN) {
        if (I = A[BK], I.method !== "GET" && !B.ignoreMethod) return !1
      } else Uc1(typeof A === "string"), I = new nN(A)[BK];
      let G = [],
        Z = {
          type: "delete",
          request: I,
          options: B
        };
      G.push(Z);
      let D = Dm(),
        Y = null,
        W;
      try {
        W = this.#B(G)
      } catch (J) {
        Y = J
      }
      return queueMicrotask(() => {
        if (Y === null) D.resolve(!!W?.length);
        else D.reject(Y)
      }), D.promise
    }
    async keys(A = void 0, B = {}) {
      k9.brandCheck(this, yw);
      let Q = "Cache.keys";
      if (A !== void 0) A = k9.converters.RequestInfo(A, Q, "request");
      B = k9.converters.CacheQueryOptions(B, Q, "options");
      let I = null;
      if (A !== void 0) {
        if (A instanceof nN) {
          if (I = A[BK], I.method !== "GET" && !B.ignoreMethod) return []
        } else if (typeof A === "string") I = new nN(A)[BK]
      }
      let G = Dm(),
        Z = [];
      if (A === void 0)
        for (let D of this.#A) Z.push(D[0]);
      else {
        let D = this.#Q(I, B);
        for (let Y of D) Z.push(Y[0])
      }
      return queueMicrotask(() => {
        let D = [];
        for (let Y of Z) {
          let W = CN6(Y, new AbortController().signal, "immutable");
          D.push(W)
        }
        G.resolve(Object.freeze(D))
      }), G.promise
    }
    #B(A) {
      let B = this.#A,
        Q = [...B],
        I = [],
        G = [];
      try {
        for (let Z of A) {
          if (Z.type !== "delete" && Z.type !== "put") throw k9.errors.exception({
            header: "Cache.#batchCacheOperations",
            message: 'operation type does not match "delete" or "put"'
          });
          if (Z.type === "delete" && Z.response != null) throw k9.errors.exception({
            header: "Cache.#batchCacheOperations",
            message: "delete operation should not have an associated response"
          });
          if (this.#Q(Z.request, Z.options, I).length) throw new DOMException("???", "InvalidStateError");
          let D;
          if (Z.type === "delete") {
            if (D = this.#Q(Z.request, Z.options), D.length === 0) return [];
            for (let Y of D) {
              let W = B.indexOf(Y);
              Uc1(W !== -1), B.splice(W, 1)
            }
          } else if (Z.type === "put") {
            if (Z.response == null) throw k9.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "put operation should have an associated response"
            });
            let Y = Z.request;
            if (!hW1(Y.url)) throw k9.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "expected http or https scheme"
            });
            if (Y.method !== "GET") throw k9.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "not get method"
            });
            if (Z.options != null) throw k9.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "options must not be defined"
            });
            D = this.#Q(Z.request);
            for (let W of D) {
              let J = B.indexOf(W);
              Uc1(J !== -1), B.splice(J, 1)
            }
            B.push([Z.request, Z.response]), I.push([Z.request, Z.response])
          }
          G.push([Z.request, Z.response])
        }
        return G
      } catch (Z) {
        throw this.#A.length = 0, this.#A = Q, Z
      }
    }
    #Q(A, B, Q) {
      let I = [],
        G = Q ?? this.#A;
      for (let Z of G) {
        let [D, Y] = Z;
        if (this.#I(A, D, Y, B)) I.push(Z)
      }
      return I
    }
    #I(A, B, Q = null, I) {
      let G = new URL(A.url),
        Z = new URL(B.url);
      if (I?.ignoreSearch) Z.search = "", G.search = "";
      if (!WN6(G, Z, !0)) return !1;
      if (Q == null || I?.ignoreVary || !Q.headersList.contains("vary")) return !0;
      let D = Ec1(Q.headersList.get("vary"));
      for (let Y of D) {
        if (Y === "*") return !1;
        let W = B.headersList.get(Y),
          J = A.headersList.get(Y);
        if (W !== J) return !1
      }
      return !0
    }
    #G(A, B, Q = 1 / 0) {
      let I = null;
      if (A !== void 0) {
        if (A instanceof nN) {
          if (I = A[BK], I.method !== "GET" && !B.ignoreMethod) return []
        } else if (typeof A === "string") I = new nN(A)[BK]
      }
      let G = [];
      if (A === void 0)
        for (let D of this.#A) G.push(D[1]);
      else {
        let D = this.#Q(I, B);
        for (let Y of D) G.push(Y[1])
      }
      let Z = [];
      for (let D of G) {
        let Y = VN6(D, "immutable");
        if (Z.push(Y.clone()), Z.length >= Q) break
      }
      return Object.freeze(Z)
    }
  }
  Object.defineProperties(yw.prototype, {
    [Symbol.toStringTag]: {
      value: "Cache",
      configurable: !0
    },
    match: Rj,
    matchAll: Rj,
    add: Rj,
    addAll: Rj,
    put: Rj,
    delete: Rj,
    keys: Rj
  });
  var wi0 = [{
    key: "ignoreSearch",
    converter: k9.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "ignoreMethod",
    converter: k9.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "ignoreVary",
    converter: k9.converters.boolean,
    defaultValue: () => !1
  }];
  k9.converters.CacheQueryOptions = k9.dictionaryConverter(wi0);
  k9.converters.MultiCacheQueryOptions = k9.dictionaryConverter([...wi0, {
    key: "cacheName",
    converter: k9.converters.DOMString
  }]);
  k9.converters.Response = k9.interfaceConverter(FN6);
  k9.converters["sequence<RequestInfo>"] = k9.sequenceConverter(k9.converters.RequestInfo);
  Ei0.exports = {
    Cache: yw
  }
})
// @from(Start 5664910, End 5666861)
$i0 = z((vO8, Ni0) => {
  var {
    kConstruct: No
  } = gW1(), {
    Cache: mW1
  } = Ui0(), {
    webidl: fZ
  } = jG(), {
    kEnumerableProperty: $o
  } = C6();
  class bR {
    #A = new Map;
    constructor() {
      if (arguments[0] !== No) fZ.illegalConstructor();
      fZ.util.markAsUncloneable(this)
    }
    async match(A, B = {}) {
      if (fZ.brandCheck(this, bR), fZ.argumentLengthCheck(arguments, 1, "CacheStorage.match"), A = fZ.converters.RequestInfo(A), B = fZ.converters.MultiCacheQueryOptions(B), B.cacheName != null) {
        if (this.#A.has(B.cacheName)) {
          let Q = this.#A.get(B.cacheName);
          return await new mW1(No, Q).match(A, B)
        }
      } else
        for (let Q of this.#A.values()) {
          let G = await new mW1(No, Q).match(A, B);
          if (G !== void 0) return G
        }
    }
    async has(A) {
      fZ.brandCheck(this, bR);
      let B = "CacheStorage.has";
      return fZ.argumentLengthCheck(arguments, 1, B), A = fZ.converters.DOMString(A, B, "cacheName"), this.#A.has(A)
    }
    async open(A) {
      fZ.brandCheck(this, bR);
      let B = "CacheStorage.open";
      if (fZ.argumentLengthCheck(arguments, 1, B), A = fZ.converters.DOMString(A, B, "cacheName"), this.#A.has(A)) {
        let I = this.#A.get(A);
        return new mW1(No, I)
      }
      let Q = [];
      return this.#A.set(A, Q), new mW1(No, Q)
    }
    async delete(A) {
      fZ.brandCheck(this, bR);
      let B = "CacheStorage.delete";
      return fZ.argumentLengthCheck(arguments, 1, B), A = fZ.converters.DOMString(A, B, "cacheName"), this.#A.delete(A)
    }
    async keys() {
      return fZ.brandCheck(this, bR), [...this.#A.keys()]
    }
  }
  Object.defineProperties(bR.prototype, {
    [Symbol.toStringTag]: {
      value: "CacheStorage",
      configurable: !0
    },
    match: $o,
    has: $o,
    open: $o,
    delete: $o,
    keys: $o
  });
  Ni0.exports = {
    CacheStorage: bR
  }
})
// @from(Start 5666867, End 5666979)
Mi0 = z((bO8, qi0) => {
  qi0.exports = {
    maxAttributeValueSize: 1024,
    maxNameValuePairSize: 4096
  }
})
// @from(Start 5666985, End 5669917)
Nc1 = z((gO8, Pi0) => {
  function zN6(A) {
    for (let B = 0; B < A.length; ++B) {
      let Q = A.charCodeAt(B);
      if (Q >= 0 && Q <= 8 || Q >= 10 && Q <= 31 || Q === 127) return !0
    }
    return !1
  }

  function Li0(A) {
    for (let B = 0; B < A.length; ++B) {
      let Q = A.charCodeAt(B);
      if (Q < 33 || Q > 126 || Q === 34 || Q === 40 || Q === 41 || Q === 60 || Q === 62 || Q === 64 || Q === 44 || Q === 59 || Q === 58 || Q === 92 || Q === 47 || Q === 91 || Q === 93 || Q === 63 || Q === 61 || Q === 123 || Q === 125) throw new Error("Invalid cookie name")
    }
  }

  function Ri0(A) {
    let B = A.length,
      Q = 0;
    if (A[0] === '"') {
      if (B === 1 || A[B - 1] !== '"') throw new Error("Invalid cookie value");
      --B, ++Q
    }
    while (Q < B) {
      let I = A.charCodeAt(Q++);
      if (I < 33 || I > 126 || I === 34 || I === 44 || I === 59 || I === 92) throw new Error("Invalid cookie value")
    }
  }

  function Oi0(A) {
    for (let B = 0; B < A.length; ++B) {
      let Q = A.charCodeAt(B);
      if (Q < 32 || Q === 127 || Q === 59) throw new Error("Invalid cookie path")
    }
  }

  function wN6(A) {
    if (A.startsWith("-") || A.endsWith(".") || A.endsWith("-")) throw new Error("Invalid cookie domain")
  }
  var EN6 = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    UN6 = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    dW1 = Array(61).fill(0).map((A, B) => B.toString().padStart(2, "0"));

  function Ti0(A) {
    if (typeof A === "number") A = new Date(A);
    return `${EN6[A.getUTCDay()]}, ${dW1[A.getUTCDate()]} ${UN6[A.getUTCMonth()]} ${A.getUTCFullYear()} ${dW1[A.getUTCHours()]}:${dW1[A.getUTCMinutes()]}:${dW1[A.getUTCSeconds()]} GMT`
  }

  function NN6(A) {
    if (A < 0) throw new Error("Invalid cookie max-age")
  }

  function $N6(A) {
    if (A.name.length === 0) return null;
    Li0(A.name), Ri0(A.value);
    let B = [`${A.name}=${A.value}`];
    if (A.name.startsWith("__Secure-")) A.secure = !0;
    if (A.name.startsWith("__Host-")) A.secure = !0, A.domain = null, A.path = "/";
    if (A.secure) B.push("Secure");
    if (A.httpOnly) B.push("HttpOnly");
    if (typeof A.maxAge === "number") NN6(A.maxAge), B.push(`Max-Age=${A.maxAge}`);
    if (A.domain) wN6(A.domain), B.push(`Domain=${A.domain}`);
    if (A.path) Oi0(A.path), B.push(`Path=${A.path}`);
    if (A.expires && A.expires.toString() !== "Invalid Date") B.push(`Expires=${Ti0(A.expires)}`);
    if (A.sameSite) B.push(`SameSite=${A.sameSite}`);
    for (let Q of A.unparsed) {
      if (!Q.includes("=")) throw new Error("Invalid unparsed");
      let [I, ...G] = Q.split("=");
      B.push(`${I.trim()}=${G.join("=")}`)
    }
    return B.join("; ")
  }
  Pi0.exports = {
    isCTLExcludingHtab: zN6,
    validateCookieName: Li0,
    validateCookiePath: Oi0,
    validateCookieValue: Ri0,
    toIMFDate: Ti0,
    stringify: $N6
  }
})
// @from(Start 5669923, End 5672252)
_i0 = z((hO8, Si0) => {
  var {
    maxNameValuePairSize: qN6,
    maxAttributeValueSize: MN6
  } = Mi0(), {
    isCTLExcludingHtab: LN6
  } = Nc1(), {
    collectASequenceOfCodePointsFast: uW1
  } = nY(), RN6 = Z1("node:assert");

  function ON6(A) {
    if (LN6(A)) return null;
    let B = "",
      Q = "",
      I = "",
      G = "";
    if (A.includes(";")) {
      let Z = {
        position: 0
      };
      B = uW1(";", A, Z), Q = A.slice(Z.position)
    } else B = A;
    if (!B.includes("=")) G = B;
    else {
      let Z = {
        position: 0
      };
      I = uW1("=", B, Z), G = B.slice(Z.position + 1)
    }
    if (I = I.trim(), G = G.trim(), I.length + G.length > qN6) return null;
    return {
      name: I,
      value: G,
      ...Ym(Q)
    }
  }

  function Ym(A, B = {}) {
    if (A.length === 0) return B;
    RN6(A[0] === ";"), A = A.slice(1);
    let Q = "";
    if (A.includes(";")) Q = uW1(";", A, {
      position: 0
    }), A = A.slice(Q.length);
    else Q = A, A = "";
    let I = "",
      G = "";
    if (Q.includes("=")) {
      let D = {
        position: 0
      };
      I = uW1("=", Q, D), G = Q.slice(D.position + 1)
    } else I = Q;
    if (I = I.trim(), G = G.trim(), G.length > MN6) return Ym(A, B);
    let Z = I.toLowerCase();
    if (Z === "expires") {
      let D = new Date(G);
      B.expires = D
    } else if (Z === "max-age") {
      let D = G.charCodeAt(0);
      if ((D < 48 || D > 57) && G[0] !== "-") return Ym(A, B);
      if (!/^\d+$/.test(G)) return Ym(A, B);
      let Y = Number(G);
      B.maxAge = Y
    } else if (Z === "domain") {
      let D = G;
      if (D[0] === ".") D = D.slice(1);
      D = D.toLowerCase(), B.domain = D
    } else if (Z === "path") {
      let D = "";
      if (G.length === 0 || G[0] !== "/") D = "/";
      else D = G;
      B.path = D
    } else if (Z === "secure") B.secure = !0;
    else if (Z === "httponly") B.httpOnly = !0;
    else if (Z === "samesite") {
      let D = "Default",
        Y = G.toLowerCase();
      if (Y.includes("none")) D = "None";
      if (Y.includes("strict")) D = "Strict";
      if (Y.includes("lax")) D = "Lax";
      B.sameSite = D
    } else B.unparsed ??= [], B.unparsed.push(`${I}=${G}`);
    return Ym(A, B)
  }
  Si0.exports = {
    parseSetCookie: ON6,
    parseUnparsedAttributes: Ym
  }
})
// @from(Start 5672258, End 5675131)
ki0 = z((mO8, yi0) => {
  var {
    parseSetCookie: TN6
  } = _i0(), {
    stringify: PN6
  } = Nc1(), {
    webidl: x6
  } = jG(), {
    Headers: pW1
  } = $j();

  function SN6(A) {
    x6.argumentLengthCheck(arguments, 1, "getCookies"), x6.brandCheck(A, pW1, {
      strict: !1
    });
    let B = A.get("cookie"),
      Q = {};
    if (!B) return Q;
    for (let I of B.split(";")) {
      let [G, ...Z] = I.split("=");
      Q[G.trim()] = Z.join("=")
    }
    return Q
  }

  function _N6(A, B, Q) {
    x6.brandCheck(A, pW1, {
      strict: !1
    });
    let I = "deleteCookie";
    x6.argumentLengthCheck(arguments, 2, I), B = x6.converters.DOMString(B, I, "name"), Q = x6.converters.DeleteCookieAttributes(Q), ji0(A, {
      name: B,
      value: "",
      expires: new Date(0),
      ...Q
    })
  }

  function jN6(A) {
    x6.argumentLengthCheck(arguments, 1, "getSetCookies"), x6.brandCheck(A, pW1, {
      strict: !1
    });
    let B = A.getSetCookie();
    if (!B) return [];
    return B.map((Q) => TN6(Q))
  }

  function ji0(A, B) {
    x6.argumentLengthCheck(arguments, 2, "setCookie"), x6.brandCheck(A, pW1, {
      strict: !1
    }), B = x6.converters.Cookie(B);
    let Q = PN6(B);
    if (Q) A.append("Set-Cookie", Q)
  }
  x6.converters.DeleteCookieAttributes = x6.dictionaryConverter([{
    converter: x6.nullableConverter(x6.converters.DOMString),
    key: "path",
    defaultValue: () => null
  }, {
    converter: x6.nullableConverter(x6.converters.DOMString),
    key: "domain",
    defaultValue: () => null
  }]);
  x6.converters.Cookie = x6.dictionaryConverter([{
    converter: x6.converters.DOMString,
    key: "name"
  }, {
    converter: x6.converters.DOMString,
    key: "value"
  }, {
    converter: x6.nullableConverter((A) => {
      if (typeof A === "number") return x6.converters["unsigned long long"](A);
      return new Date(A)
    }),
    key: "expires",
    defaultValue: () => null
  }, {
    converter: x6.nullableConverter(x6.converters["long long"]),
    key: "maxAge",
    defaultValue: () => null
  }, {
    converter: x6.nullableConverter(x6.converters.DOMString),
    key: "domain",
    defaultValue: () => null
  }, {
    converter: x6.nullableConverter(x6.converters.DOMString),
    key: "path",
    defaultValue: () => null
  }, {
    converter: x6.nullableConverter(x6.converters.boolean),
    key: "secure",
    defaultValue: () => null
  }, {
    converter: x6.nullableConverter(x6.converters.boolean),
    key: "httpOnly",
    defaultValue: () => null
  }, {
    converter: x6.converters.USVString,
    key: "sameSite",
    allowedValues: ["Strict", "Lax", "None"]
  }, {
    converter: x6.sequenceConverter(x6.converters.DOMString),
    key: "unparsed",
    defaultValue: () => new Array(0)
  }]);
  yi0.exports = {
    getCookies: SN6,
    deleteCookie: _N6,
    getSetCookies: jN6,
    setCookie: ji0
  }
})
// @from(Start 5675137, End 5680821)
Jm = z((dO8, fi0) => {
  var {
    webidl: M9
  } = jG(), {
    kEnumerableProperty: oY
  } = C6(), {
    kConstruct: xi0
  } = A3(), {
    MessagePort: yN6
  } = Z1("node:worker_threads");
  class _J extends Event {
    #A;
    constructor(A, B = {}) {
      if (A === xi0) {
        super(arguments[1], arguments[2]);
        M9.util.markAsUncloneable(this);
        return
      }
      let Q = "MessageEvent constructor";
      M9.argumentLengthCheck(arguments, 1, Q), A = M9.converters.DOMString(A, Q, "type"), B = M9.converters.MessageEventInit(B, Q, "eventInitDict");
      super(A, B);
      this.#A = B, M9.util.markAsUncloneable(this)
    }
    get data() {
      return M9.brandCheck(this, _J), this.#A.data
    }
    get origin() {
      return M9.brandCheck(this, _J), this.#A.origin
    }
    get lastEventId() {
      return M9.brandCheck(this, _J), this.#A.lastEventId
    }
    get source() {
      return M9.brandCheck(this, _J), this.#A.source
    }
    get ports() {
      if (M9.brandCheck(this, _J), !Object.isFrozen(this.#A.ports)) Object.freeze(this.#A.ports);
      return this.#A.ports
    }
    initMessageEvent(A, B = !1, Q = !1, I = null, G = "", Z = "", D = null, Y = []) {
      return M9.brandCheck(this, _J), M9.argumentLengthCheck(arguments, 1, "MessageEvent.initMessageEvent"), new _J(A, {
        bubbles: B,
        cancelable: Q,
        data: I,
        origin: G,
        lastEventId: Z,
        source: D,
        ports: Y
      })
    }
    static createFastMessageEvent(A, B) {
      let Q = new _J(xi0, A, B);
      return Q.#A = B, Q.#A.data ??= null, Q.#A.origin ??= "", Q.#A.lastEventId ??= "", Q.#A.source ??= null, Q.#A.ports ??= [], Q
    }
  }
  var {
    createFastMessageEvent: kN6
  } = _J;
  delete _J.createFastMessageEvent;
  class Wm extends Event {
    #A;
    constructor(A, B = {}) {
      M9.argumentLengthCheck(arguments, 1, "CloseEvent constructor"), A = M9.converters.DOMString(A, "CloseEvent constructor", "type"), B = M9.converters.CloseEventInit(B);
      super(A, B);
      this.#A = B, M9.util.markAsUncloneable(this)
    }
    get wasClean() {
      return M9.brandCheck(this, Wm), this.#A.wasClean
    }
    get code() {
      return M9.brandCheck(this, Wm), this.#A.code
    }
    get reason() {
      return M9.brandCheck(this, Wm), this.#A.reason
    }
  }
  class gR extends Event {
    #A;
    constructor(A, B) {
      M9.argumentLengthCheck(arguments, 1, "ErrorEvent constructor");
      super(A, B);
      M9.util.markAsUncloneable(this), A = M9.converters.DOMString(A, "ErrorEvent constructor", "type"), B = M9.converters.ErrorEventInit(B ?? {}), this.#A = B
    }
    get message() {
      return M9.brandCheck(this, gR), this.#A.message
    }
    get filename() {
      return M9.brandCheck(this, gR), this.#A.filename
    }
    get lineno() {
      return M9.brandCheck(this, gR), this.#A.lineno
    }
    get colno() {
      return M9.brandCheck(this, gR), this.#A.colno
    }
    get error() {
      return M9.brandCheck(this, gR), this.#A.error
    }
  }
  Object.defineProperties(_J.prototype, {
    [Symbol.toStringTag]: {
      value: "MessageEvent",
      configurable: !0
    },
    data: oY,
    origin: oY,
    lastEventId: oY,
    source: oY,
    ports: oY,
    initMessageEvent: oY
  });
  Object.defineProperties(Wm.prototype, {
    [Symbol.toStringTag]: {
      value: "CloseEvent",
      configurable: !0
    },
    reason: oY,
    code: oY,
    wasClean: oY
  });
  Object.defineProperties(gR.prototype, {
    [Symbol.toStringTag]: {
      value: "ErrorEvent",
      configurable: !0
    },
    message: oY,
    filename: oY,
    lineno: oY,
    colno: oY,
    error: oY
  });
  M9.converters.MessagePort = M9.interfaceConverter(yN6);
  M9.converters["sequence<MessagePort>"] = M9.sequenceConverter(M9.converters.MessagePort);
  var $c1 = [{
    key: "bubbles",
    converter: M9.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "cancelable",
    converter: M9.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "composed",
    converter: M9.converters.boolean,
    defaultValue: () => !1
  }];
  M9.converters.MessageEventInit = M9.dictionaryConverter([...$c1, {
    key: "data",
    converter: M9.converters.any,
    defaultValue: () => null
  }, {
    key: "origin",
    converter: M9.converters.USVString,
    defaultValue: () => ""
  }, {
    key: "lastEventId",
    converter: M9.converters.DOMString,
    defaultValue: () => ""
  }, {
    key: "source",
    converter: M9.nullableConverter(M9.converters.MessagePort),
    defaultValue: () => null
  }, {
    key: "ports",
    converter: M9.converters["sequence<MessagePort>"],
    defaultValue: () => new Array(0)
  }]);
  M9.converters.CloseEventInit = M9.dictionaryConverter([...$c1, {
    key: "wasClean",
    converter: M9.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "code",
    converter: M9.converters["unsigned short"],
    defaultValue: () => 0
  }, {
    key: "reason",
    converter: M9.converters.USVString,
    defaultValue: () => ""
  }]);
  M9.converters.ErrorEventInit = M9.dictionaryConverter([...$c1, {
    key: "message",
    converter: M9.converters.DOMString,
    defaultValue: () => ""
  }, {
    key: "filename",
    converter: M9.converters.USVString,
    defaultValue: () => ""
  }, {
    key: "lineno",
    converter: M9.converters["unsigned long"],
    defaultValue: () => 0
  }, {
    key: "colno",
    converter: M9.converters["unsigned long"],
    defaultValue: () => 0
  }, {
    key: "error",
    converter: M9.converters.any
  }]);
  fi0.exports = {
    MessageEvent: _J,
    CloseEvent: Wm,
    ErrorEvent: gR,
    createFastMessageEvent: kN6
  }
})
// @from(Start 5680827, End 5681718)
Oj = z((uO8, vi0) => {
  var xN6 = {
      enumerable: !0,
      writable: !1,
      configurable: !1
    },
    fN6 = {
      CONNECTING: 0,
      OPEN: 1,
      CLOSING: 2,
      CLOSED: 3
    },
    vN6 = {
      NOT_SENT: 0,
      PROCESSING: 1,
      SENT: 2
    },
    bN6 = {
      CONTINUATION: 0,
      TEXT: 1,
      BINARY: 2,
      CLOSE: 8,
      PING: 9,
      PONG: 10
    },
    gN6 = {
      INFO: 0,
      PAYLOADLENGTH_16: 2,
      PAYLOADLENGTH_64: 3,
      READ_DATA: 4
    },
    hN6 = Buffer.allocUnsafe(0),
    mN6 = {
      string: 1,
      typedArray: 2,
      arrayBuffer: 3,
      blob: 4
    };
  vi0.exports = {
    uid: "258EAFA5-E914-47DA-95CA-C5AB0DC85B11",
    sentCloseFrameState: vN6,
    staticPropertyDescriptors: xN6,
    states: fN6,
    opcodes: bN6,
    maxUnsigned16Bit: 65535,
    parserStates: gN6,
    emptyBuffer: hN6,
    sendHints: mN6
  }
})
// @from(Start 5681724, End 5682082)
qo = z((pO8, bi0) => {
  bi0.exports = {
    kWebSocketURL: Symbol("url"),
    kReadyState: Symbol("ready state"),
    kController: Symbol("controller"),
    kResponse: Symbol("response"),
    kBinaryType: Symbol("binary type"),
    kSentClose: Symbol("sent close"),
    kReceivedClose: Symbol("received close"),
    kByteParser: Symbol("byte parser")
  }
})
// @from(Start 5682088, End 5685578)
Ro = z((cO8, ii0) => {
  var {
    kReadyState: Mo,
    kController: dN6,
    kResponse: uN6,
    kBinaryType: pN6,
    kWebSocketURL: cN6
  } = qo(), {
    states: Lo,
    opcodes: hR
  } = Oj(), {
    ErrorEvent: lN6,
    createFastMessageEvent: iN6
  } = Jm(), {
    isUtf8: nN6
  } = Z1("node:buffer"), {
    collectASequenceOfCodePointsFast: aN6,
    removeHTTPWhitespace: gi0
  } = nY();

  function sN6(A) {
    return A[Mo] === Lo.CONNECTING
  }

  function rN6(A) {
    return A[Mo] === Lo.OPEN
  }

  function oN6(A) {
    return A[Mo] === Lo.CLOSING
  }

  function tN6(A) {
    return A[Mo] === Lo.CLOSED
  }

  function qc1(A, B, Q = (G, Z) => new Event(G, Z), I = {}) {
    let G = Q(A, I);
    B.dispatchEvent(G)
  }

  function eN6(A, B, Q) {
    if (A[Mo] !== Lo.OPEN) return;
    let I;
    if (B === hR.TEXT) try {
      I = li0(Q)
    } catch {
      mi0(A, "Received invalid UTF-8 in text frame.");
      return
    } else if (B === hR.BINARY)
      if (A[pN6] === "blob") I = new Blob([Q]);
      else I = A$6(Q);
    qc1("message", A, iN6, {
      origin: A[cN6].origin,
      data: I
    })
  }

  function A$6(A) {
    if (A.byteLength === A.buffer.byteLength) return A.buffer;
    return A.buffer.slice(A.byteOffset, A.byteOffset + A.byteLength)
  }

  function B$6(A) {
    if (A.length === 0) return !1;
    for (let B = 0; B < A.length; ++B) {
      let Q = A.charCodeAt(B);
      if (Q < 33 || Q > 126 || Q === 34 || Q === 40 || Q === 41 || Q === 44 || Q === 47 || Q === 58 || Q === 59 || Q === 60 || Q === 61 || Q === 62 || Q === 63 || Q === 64 || Q === 91 || Q === 92 || Q === 93 || Q === 123 || Q === 125) return !1
    }
    return !0
  }

  function Q$6(A) {
    if (A >= 1000 && A < 1015) return A !== 1004 && A !== 1005 && A !== 1006;
    return A >= 3000 && A <= 4999
  }

  function mi0(A, B) {
    let {
      [dN6]: Q, [uN6]: I
    } = A;
    if (Q.abort(), I?.socket && !I.socket.destroyed) I.socket.destroy();
    if (B) qc1("error", A, (G, Z) => new lN6(G, Z), {
      error: new Error(B),
      message: B
    })
  }

  function di0(A) {
    return A === hR.CLOSE || A === hR.PING || A === hR.PONG
  }

  function ui0(A) {
    return A === hR.CONTINUATION
  }

  function pi0(A) {
    return A === hR.TEXT || A === hR.BINARY
  }

  function I$6(A) {
    return pi0(A) || ui0(A) || di0(A)
  }

  function G$6(A) {
    let B = {
        position: 0
      },
      Q = new Map;
    while (B.position < A.length) {
      let I = aN6(";", A, B),
        [G, Z = ""] = I.split("=");
      Q.set(gi0(G, !0, !1), gi0(Z, !1, !0)), B.position++
    }
    return Q
  }

  function Z$6(A) {
    for (let B = 0; B < A.length; B++) {
      let Q = A.charCodeAt(B);
      if (Q < 48 || Q > 57) return !1
    }
    return !0
  }
  var ci0 = typeof process.versions.icu === "string",
    hi0 = ci0 ? new TextDecoder("utf-8", {
      fatal: !0
    }) : void 0,
    li0 = ci0 ? hi0.decode.bind(hi0) : function(A) {
      if (nN6(A)) return A.toString("utf-8");
      throw new TypeError("Invalid utf-8 received.")
    };
  ii0.exports = {
    isConnecting: sN6,
    isEstablished: rN6,
    isClosing: oN6,
    isClosed: tN6,
    fireEvent: qc1,
    isValidSubprotocol: B$6,
    isValidStatusCode: Q$6,
    failWebsocketConnection: mi0,
    websocketMessageReceived: eN6,
    utf8Decode: li0,
    isControlFrame: di0,
    isContinuationFrame: ui0,
    isTextBinaryFrame: pi0,
    isValidOpcode: I$6,
    parseExtensions: G$6,
    isValidClientWindowBits: Z$6
  }
})
// @from(Start 5685584, End 5686854)
cW1 = z((lO8, ai0) => {
  var {
    maxUnsigned16Bit: D$6
  } = Oj(), Mc1, Oo = null, Fm = 16386;
  try {
    Mc1 = Z1("node:crypto")
  } catch {
    Mc1 = {
      randomFillSync: function A(B, Q, I) {
        for (let G = 0; G < B.length; ++G) B[G] = Math.random() * 255 | 0;
        return B
      }
    }
  }

  function Y$6() {
    if (Fm === 16386) Fm = 0, Mc1.randomFillSync(Oo ??= Buffer.allocUnsafe(16386), 0, 16386);
    return [Oo[Fm++], Oo[Fm++], Oo[Fm++], Oo[Fm++]]
  }
  class ni0 {
    constructor(A) {
      this.frameData = A
    }
    createFrame(A) {
      let B = this.frameData,
        Q = Y$6(),
        I = B?.byteLength ?? 0,
        G = I,
        Z = 6;
      if (I > D$6) Z += 8, G = 127;
      else if (I > 125) Z += 2, G = 126;
      let D = Buffer.allocUnsafe(I + Z);
      D[0] = D[1] = 0, D[0] |= 128, D[0] = (D[0] & 240) + A; /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */
      if (D[Z - 4] = Q[0], D[Z - 3] = Q[1], D[Z - 2] = Q[2], D[Z - 1] = Q[3], D[1] = G, G === 126) D.writeUInt16BE(I, 2);
      else if (G === 127) D[2] = D[3] = 0, D.writeUIntBE(I, 4, 6);
      D[1] |= 128;
      for (let Y = 0; Y < I; ++Y) D[Z + Y] = B[Y] ^ Q[Y & 3];
      return D
    }
  }
  ai0.exports = {
    WebsocketFrameSend: ni0
  }
})
// @from(Start 5686860, End 5691829)
Rc1 = z((iO8, Bn0) => {
  var {
    uid: W$6,
    states: To,
    sentCloseFrameState: lW1,
    emptyBuffer: J$6,
    opcodes: F$6
  } = Oj(), {
    kReadyState: Po,
    kSentClose: iW1,
    kByteParser: ri0,
    kReceivedClose: si0,
    kResponse: oi0
  } = qo(), {
    fireEvent: X$6,
    failWebsocketConnection: mR,
    isClosing: V$6,
    isClosed: C$6,
    isEstablished: K$6,
    parseExtensions: H$6
  } = Ro(), {
    channels: Xm
  } = Rh(), {
    CloseEvent: z$6
  } = Jm(), {
    makeRequest: w$6
  } = Im(), {
    fetching: E$6
  } = wo(), {
    Headers: U$6,
    getHeadersList: N$6
  } = $j(), {
    getDecodeSplit: $$6
  } = MJ(), {
    WebsocketFrameSend: q$6
  } = cW1(), Lc1;
  try {
    Lc1 = Z1("node:crypto")
  } catch {}

  function M$6(A, B, Q, I, G, Z) {
    let D = A;
    D.protocol = A.protocol === "ws:" ? "http:" : "https:";
    let Y = w$6({
      urlList: [D],
      client: Q,
      serviceWorkers: "none",
      referrer: "no-referrer",
      mode: "websocket",
      credentials: "include",
      cache: "no-store",
      redirect: "error"
    });
    if (Z.headers) {
      let X = N$6(new U$6(Z.headers));
      Y.headersList = X
    }
    let W = Lc1.randomBytes(16).toString("base64");
    Y.headersList.append("sec-websocket-key", W), Y.headersList.append("sec-websocket-version", "13");
    for (let X of B) Y.headersList.append("sec-websocket-protocol", X);
    let J = "permessage-deflate; client_max_window_bits";
    return Y.headersList.append("sec-websocket-extensions", J), E$6({
      request: Y,
      useParallelQueue: !0,
      dispatcher: Z.dispatcher,
      processResponse(X) {
        if (X.type === "error" || X.status !== 101) {
          mR(I, "Received network error or non-101 status code.");
          return
        }
        if (B.length !== 0 && !X.headersList.get("Sec-WebSocket-Protocol")) {
          mR(I, "Server did not respond with sent protocols.");
          return
        }
        if (X.headersList.get("Upgrade")?.toLowerCase() !== "websocket") {
          mR(I, 'Server did not set Upgrade header to "websocket".');
          return
        }
        if (X.headersList.get("Connection")?.toLowerCase() !== "upgrade") {
          mR(I, 'Server did not set Connection header to "upgrade".');
          return
        }
        let V = X.headersList.get("Sec-WebSocket-Accept"),
          C = Lc1.createHash("sha1").update(W + W$6).digest("base64");
        if (V !== C) {
          mR(I, "Incorrect hash received in Sec-WebSocket-Accept header.");
          return
        }
        let K = X.headersList.get("Sec-WebSocket-Extensions"),
          E;
        if (K !== null) {
          if (E = H$6(K), !E.has("permessage-deflate")) {
            mR(I, "Sec-WebSocket-Extensions header does not match.");
            return
          }
        }
        let N = X.headersList.get("Sec-WebSocket-Protocol");
        if (N !== null) {
          if (!$$6("sec-websocket-protocol", Y.headersList).includes(N)) {
            mR(I, "Protocol was not set in the opening handshake.");
            return
          }
        }
        if (X.socket.on("data", ti0), X.socket.on("close", ei0), X.socket.on("error", An0), Xm.open.hasSubscribers) Xm.open.publish({
          address: X.socket.address(),
          protocol: N,
          extensions: K
        });
        G(X, E)
      }
    })
  }

  function L$6(A, B, Q, I) {
    if (V$6(A) || C$6(A));
    else if (!K$6(A)) mR(A, "Connection was closed before it was established."), A[Po] = To.CLOSING;
    else if (A[iW1] === lW1.NOT_SENT) {
      A[iW1] = lW1.PROCESSING;
      let G = new q$6;
      if (B !== void 0 && Q === void 0) G.frameData = Buffer.allocUnsafe(2), G.frameData.writeUInt16BE(B, 0);
      else if (B !== void 0 && Q !== void 0) G.frameData = Buffer.allocUnsafe(2 + I), G.frameData.writeUInt16BE(B, 0), G.frameData.write(Q, 2, "utf-8");
      else G.frameData = J$6;
      A[oi0].socket.write(G.createFrame(F$6.CLOSE)), A[iW1] = lW1.SENT, A[Po] = To.CLOSING
    } else A[Po] = To.CLOSING
  }

  function ti0(A) {
    if (!this.ws[ri0].write(A)) this.pause()
  }

  function ei0() {
    let {
      ws: A
    } = this, {
      [oi0]: B
    } = A;
    B.socket.off("data", ti0), B.socket.off("close", ei0), B.socket.off("error", An0);
    let Q = A[iW1] === lW1.SENT && A[si0],
      I = 1005,
      G = "",
      Z = A[ri0].closingInfo;
    if (Z && !Z.error) I = Z.code ?? 1005, G = Z.reason;
    else if (!A[si0]) I = 1006;
    if (A[Po] = To.CLOSED, X$6("close", A, (D, Y) => new z$6(D, Y), {
        wasClean: Q,
        code: I,
        reason: G
      }), Xm.close.hasSubscribers) Xm.close.publish({
      websocket: A,
      code: I,
      reason: G
    })
  }

  function An0(A) {
    let {
      ws: B
    } = this;
    if (B[Po] = To.CLOSING, Xm.socketError.hasSubscribers) Xm.socketError.publish(A);
    this.destroy()
  }
  Bn0.exports = {
    establishWebSocketConnection: M$6,
    closeWebSocketConnection: L$6
  }
})
// @from(Start 5691835, End 5693148)
Gn0 = z((nO8, In0) => {
  var {
    createInflateRaw: R$6,
    Z_DEFAULT_WINDOWBITS: O$6
  } = Z1("node:zlib"), {
    isValidClientWindowBits: T$6
  } = Ro(), P$6 = Buffer.from([0, 0, 255, 255]), nW1 = Symbol("kBuffer"), aW1 = Symbol("kLength");
  class Qn0 {
    #A;
    #B = {};
    constructor(A) {
      this.#B.serverNoContextTakeover = A.has("server_no_context_takeover"), this.#B.serverMaxWindowBits = A.get("server_max_window_bits")
    }
    decompress(A, B, Q) {
      if (!this.#A) {
        let I = O$6;
        if (this.#B.serverMaxWindowBits) {
          if (!T$6(this.#B.serverMaxWindowBits)) {
            Q(new Error("Invalid server_max_window_bits"));
            return
          }
          I = Number.parseInt(this.#B.serverMaxWindowBits)
        }
        this.#A = R$6({
          windowBits: I
        }), this.#A[nW1] = [], this.#A[aW1] = 0, this.#A.on("data", (G) => {
          this.#A[nW1].push(G), this.#A[aW1] += G.length
        }), this.#A.on("error", (G) => {
          this.#A = null, Q(G)
        })
      }
      if (this.#A.write(A), B) this.#A.write(P$6);
      this.#A.flush(() => {
        let I = Buffer.concat(this.#A[nW1], this.#A[aW1]);
        this.#A[nW1].length = 0, this.#A[aW1] = 0, Q(null, I)
      })
    }
  }
  In0.exports = {
    PerMessageDeflate: Qn0
  }
})
// @from(Start 5693154, End 5700461)
zn0 = z((aO8, Hn0) => {
  var {
    Writable: S$6
  } = Z1("node:stream"), _$6 = Z1("node:assert"), {
    parserStates: tY,
    opcodes: Vm,
    states: j$6,
    emptyBuffer: Zn0,
    sentCloseFrameState: Dn0
  } = Oj(), {
    kReadyState: y$6,
    kSentClose: Yn0,
    kResponse: Wn0,
    kReceivedClose: Jn0
  } = qo(), {
    channels: sW1
  } = Rh(), {
    isValidStatusCode: k$6,
    isValidOpcode: x$6,
    failWebsocketConnection: dX,
    websocketMessageReceived: Fn0,
    utf8Decode: f$6,
    isControlFrame: Xn0,
    isTextBinaryFrame: Oc1,
    isContinuationFrame: v$6
  } = Ro(), {
    WebsocketFrameSend: Vn0
  } = cW1(), {
    closeWebSocketConnection: Cn0
  } = Rc1(), {
    PerMessageDeflate: b$6
  } = Gn0();
  class Kn0 extends S$6 {
    #A = [];
    #B = 0;
    #Q = !1;
    #I = tY.INFO;
    #G = {};
    #W = [];
    #Z;
    constructor(A, B) {
      super();
      if (this.ws = A, this.#Z = B == null ? new Map : B, this.#Z.has("permessage-deflate")) this.#Z.set("permessage-deflate", new b$6(B))
    }
    _write(A, B, Q) {
      this.#A.push(A), this.#B += A.length, this.#Q = !0, this.run(Q)
    }
    run(A) {
      while (this.#Q)
        if (this.#I === tY.INFO) {
          if (this.#B < 2) return A();
          let B = this.consume(2),
            Q = (B[0] & 128) !== 0,
            I = B[0] & 15,
            G = (B[1] & 128) === 128,
            Z = !Q && I !== Vm.CONTINUATION,
            D = B[1] & 127,
            Y = B[0] & 64,
            W = B[0] & 32,
            J = B[0] & 16;
          if (!x$6(I)) return dX(this.ws, "Invalid opcode received"), A();
          if (G) return dX(this.ws, "Frame cannot be masked"), A();
          if (Y !== 0 && !this.#Z.has("permessage-deflate")) {
            dX(this.ws, "Expected RSV1 to be clear.");
            return
          }
          if (W !== 0 || J !== 0) {
            dX(this.ws, "RSV1, RSV2, RSV3 must be clear");
            return
          }
          if (Z && !Oc1(I)) {
            dX(this.ws, "Invalid frame type was fragmented.");
            return
          }
          if (Oc1(I) && this.#W.length > 0) {
            dX(this.ws, "Expected continuation frame");
            return
          }
          if (this.#G.fragmented && Z) {
            dX(this.ws, "Fragmented frame exceeded 125 bytes.");
            return
          }
          if ((D > 125 || Z) && Xn0(I)) {
            dX(this.ws, "Control frame either too large or fragmented");
            return
          }
          if (v$6(I) && this.#W.length === 0 && !this.#G.compressed) {
            dX(this.ws, "Unexpected continuation frame");
            return
          }
          if (D <= 125) this.#G.payloadLength = D, this.#I = tY.READ_DATA;
          else if (D === 126) this.#I = tY.PAYLOADLENGTH_16;
          else if (D === 127) this.#I = tY.PAYLOADLENGTH_64;
          if (Oc1(I)) this.#G.binaryType = I, this.#G.compressed = Y !== 0;
          this.#G.opcode = I, this.#G.masked = G, this.#G.fin = Q, this.#G.fragmented = Z
        } else if (this.#I === tY.PAYLOADLENGTH_16) {
        if (this.#B < 2) return A();
        let B = this.consume(2);
        this.#G.payloadLength = B.readUInt16BE(0), this.#I = tY.READ_DATA
      } else if (this.#I === tY.PAYLOADLENGTH_64) {
        if (this.#B < 8) return A();
        let B = this.consume(8),
          Q = B.readUInt32BE(0);
        if (Q > 2147483647) {
          dX(this.ws, "Received payload length > 2^31 bytes.");
          return
        }
        let I = B.readUInt32BE(4);
        this.#G.payloadLength = (Q << 8) + I, this.#I = tY.READ_DATA
      } else if (this.#I === tY.READ_DATA) {
        if (this.#B < this.#G.payloadLength) return A();
        let B = this.consume(this.#G.payloadLength);
        if (Xn0(this.#G.opcode)) this.#Q = this.parseControlFrame(B), this.#I = tY.INFO;
        else if (!this.#G.compressed) {
          if (this.#W.push(B), !this.#G.fragmented && this.#G.fin) {
            let Q = Buffer.concat(this.#W);
            Fn0(this.ws, this.#G.binaryType, Q), this.#W.length = 0
          }
          this.#I = tY.INFO
        } else {
          this.#Z.get("permessage-deflate").decompress(B, this.#G.fin, (Q, I) => {
            if (Q) {
              Cn0(this.ws, 1007, Q.message, Q.message.length);
              return
            }
            if (this.#W.push(I), !this.#G.fin) {
              this.#I = tY.INFO, this.#Q = !0, this.run(A);
              return
            }
            Fn0(this.ws, this.#G.binaryType, Buffer.concat(this.#W)), this.#Q = !0, this.#I = tY.INFO, this.#W.length = 0, this.run(A)
          }), this.#Q = !1;
          break
        }
      }
    }
    consume(A) {
      if (A > this.#B) throw new Error("Called consume() before buffers satiated.");
      else if (A === 0) return Zn0;
      if (this.#A[0].length === A) return this.#B -= this.#A[0].length, this.#A.shift();
      let B = Buffer.allocUnsafe(A),
        Q = 0;
      while (Q !== A) {
        let I = this.#A[0],
          {
            length: G
          } = I;
        if (G + Q === A) {
          B.set(this.#A.shift(), Q);
          break
        } else if (G + Q > A) {
          B.set(I.subarray(0, A - Q), Q), this.#A[0] = I.subarray(A - Q);
          break
        } else B.set(this.#A.shift(), Q), Q += I.length
      }
      return this.#B -= A, B
    }
    parseCloseBody(A) {
      _$6(A.length !== 1);
      let B;
      if (A.length >= 2) B = A.readUInt16BE(0);
      if (B !== void 0 && !k$6(B)) return {
        code: 1002,
        reason: "Invalid status code",
        error: !0
      };
      let Q = A.subarray(2);
      if (Q[0] === 239 && Q[1] === 187 && Q[2] === 191) Q = Q.subarray(3);
      try {
        Q = f$6(Q)
      } catch {
        return {
          code: 1007,
          reason: "Invalid UTF-8",
          error: !0
        }
      }
      return {
        code: B,
        reason: Q,
        error: !1
      }
    }
    parseControlFrame(A) {
      let {
        opcode: B,
        payloadLength: Q
      } = this.#G;
      if (B === Vm.CLOSE) {
        if (Q === 1) return dX(this.ws, "Received close frame with a 1-byte body."), !1;
        if (this.#G.closeInfo = this.parseCloseBody(A), this.#G.closeInfo.error) {
          let {
            code: I,
            reason: G
          } = this.#G.closeInfo;
          return Cn0(this.ws, I, G, G.length), dX(this.ws, G), !1
        }
        if (this.ws[Yn0] !== Dn0.SENT) {
          let I = Zn0;
          if (this.#G.closeInfo.code) I = Buffer.allocUnsafe(2), I.writeUInt16BE(this.#G.closeInfo.code, 0);
          let G = new Vn0(I);
          this.ws[Wn0].socket.write(G.createFrame(Vm.CLOSE), (Z) => {
            if (!Z) this.ws[Yn0] = Dn0.SENT
          })
        }
        return this.ws[y$6] = j$6.CLOSING, this.ws[Jn0] = !0, !1
      } else if (B === Vm.PING) {
        if (!this.ws[Jn0]) {
          let I = new Vn0(A);
          if (this.ws[Wn0].socket.write(I.createFrame(Vm.PONG)), sW1.ping.hasSubscribers) sW1.ping.publish({
            payload: A
          })
        }
      } else if (B === Vm.PONG) {
        if (sW1.pong.hasSubscribers) sW1.pong.publish({
          payload: A
        })
      }
      return !0
    }
    get closingInfo() {
      return this.#G.closeInfo
    }
  }
  Hn0.exports = {
    ByteParser: Kn0
  }
})
// @from(Start 5700467, End 5701946)
qn0 = z((sO8, $n0) => {
  var {
    WebsocketFrameSend: g$6
  } = cW1(), {
    opcodes: wn0,
    sendHints: Cm
  } = Oj(), h$6 = Fp1(), En0 = Buffer[Symbol.species];
  class Nn0 {
    #A = new h$6;
    #B = !1;
    #Q;
    constructor(A) {
      this.#Q = A
    }
    add(A, B, Q) {
      if (Q !== Cm.blob) {
        let G = Un0(A, Q);
        if (!this.#B) this.#Q.write(G, B);
        else {
          let Z = {
            promise: null,
            callback: B,
            frame: G
          };
          this.#A.push(Z)
        }
        return
      }
      let I = {
        promise: A.arrayBuffer().then((G) => {
          I.promise = null, I.frame = Un0(G, Q)
        }),
        callback: B,
        frame: null
      };
      if (this.#A.push(I), !this.#B) this.#I()
    }
    async #I() {
      this.#B = !0;
      let A = this.#A;
      while (!A.isEmpty()) {
        let B = A.shift();
        if (B.promise !== null) await B.promise;
        this.#Q.write(B.frame, B.callback), B.callback = B.frame = null
      }
      this.#B = !1
    }
  }

  function Un0(A, B) {
    return new g$6(m$6(A, B)).createFrame(B === Cm.string ? wn0.TEXT : wn0.BINARY)
  }

  function m$6(A, B) {
    switch (B) {
      case Cm.string:
        return Buffer.from(A);
      case Cm.arrayBuffer:
      case Cm.blob:
        return new En0(A);
      case Cm.typedArray:
        return new En0(A.buffer, A.byteOffset, A.byteLength)
    }
  }
  $n0.exports = {
    SendQueue: Nn0
  }
})
// @from(Start 5701952, End 5710655)
jn0 = z((rO8, _n0) => {
  var {
    webidl: w4
  } = jG(), {
    URLSerializer: d$6
  } = nY(), {
    environmentSettingsObject: Mn0
  } = MJ(), {
    staticPropertyDescriptors: dR,
    states: So,
    sentCloseFrameState: u$6,
    sendHints: rW1
  } = Oj(), {
    kWebSocketURL: Ln0,
    kReadyState: Tc1,
    kController: p$6,
    kBinaryType: oW1,
    kResponse: Rn0,
    kSentClose: c$6,
    kByteParser: l$6
  } = qo(), {
    isConnecting: i$6,
    isEstablished: n$6,
    isClosing: a$6,
    isValidSubprotocol: s$6,
    fireEvent: On0
  } = Ro(), {
    establishWebSocketConnection: r$6,
    closeWebSocketConnection: Tn0
  } = Rc1(), {
    ByteParser: o$6
  } = zn0(), {
    kEnumerableProperty: uX,
    isBlobLike: Pn0
  } = C6(), {
    getGlobalDispatcher: t$6
  } = wW1(), {
    types: Sn0
  } = Z1("node:util"), {
    ErrorEvent: e$6,
    CloseEvent: Aq6
  } = Jm(), {
    SendQueue: Bq6
  } = qn0();
  class s5 extends EventTarget {
    #A = {
      open: null,
      error: null,
      close: null,
      message: null
    };
    #B = 0;
    #Q = "";
    #I = "";
    #G;
    constructor(A, B = []) {
      super();
      w4.util.markAsUncloneable(this);
      let Q = "WebSocket constructor";
      w4.argumentLengthCheck(arguments, 1, Q);
      let I = w4.converters["DOMString or sequence<DOMString> or WebSocketInit"](B, Q, "options");
      A = w4.converters.USVString(A, Q, "url"), B = I.protocols;
      let G = Mn0.settingsObject.baseUrl,
        Z;
      try {
        Z = new URL(A, G)
      } catch (Y) {
        throw new DOMException(Y, "SyntaxError")
      }
      if (Z.protocol === "http:") Z.protocol = "ws:";
      else if (Z.protocol === "https:") Z.protocol = "wss:";
      if (Z.protocol !== "ws:" && Z.protocol !== "wss:") throw new DOMException(`Expected a ws: or wss: protocol, got ${Z.protocol}`, "SyntaxError");
      if (Z.hash || Z.href.endsWith("#")) throw new DOMException("Got fragment", "SyntaxError");
      if (typeof B === "string") B = [B];
      if (B.length !== new Set(B.map((Y) => Y.toLowerCase())).size) throw new DOMException("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
      if (B.length > 0 && !B.every((Y) => s$6(Y))) throw new DOMException("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
      this[Ln0] = new URL(Z.href);
      let D = Mn0.settingsObject;
      this[p$6] = r$6(Z, B, D, this, (Y, W) => this.#W(Y, W), I), this[Tc1] = s5.CONNECTING, this[c$6] = u$6.NOT_SENT, this[oW1] = "blob"
    }
    close(A = void 0, B = void 0) {
      w4.brandCheck(this, s5);
      let Q = "WebSocket.close";
      if (A !== void 0) A = w4.converters["unsigned short"](A, Q, "code", {
        clamp: !0
      });
      if (B !== void 0) B = w4.converters.USVString(B, Q, "reason");
      if (A !== void 0) {
        if (A !== 1000 && (A < 3000 || A > 4999)) throw new DOMException("invalid code", "InvalidAccessError")
      }
      let I = 0;
      if (B !== void 0) {
        if (I = Buffer.byteLength(B), I > 123) throw new DOMException(`Reason must be less than 123 bytes; received ${I}`, "SyntaxError")
      }
      Tn0(this, A, B, I)
    }
    send(A) {
      w4.brandCheck(this, s5);
      let B = "WebSocket.send";
      if (w4.argumentLengthCheck(arguments, 1, B), A = w4.converters.WebSocketSendData(A, B, "data"), i$6(this)) throw new DOMException("Sent before connected.", "InvalidStateError");
      if (!n$6(this) || a$6(this)) return;
      if (typeof A === "string") {
        let Q = Buffer.byteLength(A);
        this.#B += Q, this.#G.add(A, () => {
          this.#B -= Q
        }, rW1.string)
      } else if (Sn0.isArrayBuffer(A)) this.#B += A.byteLength, this.#G.add(A, () => {
        this.#B -= A.byteLength
      }, rW1.arrayBuffer);
      else if (ArrayBuffer.isView(A)) this.#B += A.byteLength, this.#G.add(A, () => {
        this.#B -= A.byteLength
      }, rW1.typedArray);
      else if (Pn0(A)) this.#B += A.size, this.#G.add(A, () => {
        this.#B -= A.size
      }, rW1.blob)
    }
    get readyState() {
      return w4.brandCheck(this, s5), this[Tc1]
    }
    get bufferedAmount() {
      return w4.brandCheck(this, s5), this.#B
    }
    get url() {
      return w4.brandCheck(this, s5), d$6(this[Ln0])
    }
    get extensions() {
      return w4.brandCheck(this, s5), this.#I
    }
    get protocol() {
      return w4.brandCheck(this, s5), this.#Q
    }
    get onopen() {
      return w4.brandCheck(this, s5), this.#A.open
    }
    set onopen(A) {
      if (w4.brandCheck(this, s5), this.#A.open) this.removeEventListener("open", this.#A.open);
      if (typeof A === "function") this.#A.open = A, this.addEventListener("open", A);
      else this.#A.open = null
    }
    get onerror() {
      return w4.brandCheck(this, s5), this.#A.error
    }
    set onerror(A) {
      if (w4.brandCheck(this, s5), this.#A.error) this.removeEventListener("error", this.#A.error);
      if (typeof A === "function") this.#A.error = A, this.addEventListener("error", A);
      else this.#A.error = null
    }
    get onclose() {
      return w4.brandCheck(this, s5), this.#A.close
    }
    set onclose(A) {
      if (w4.brandCheck(this, s5), this.#A.close) this.removeEventListener("close", this.#A.close);
      if (typeof A === "function") this.#A.close = A, this.addEventListener("close", A);
      else this.#A.close = null
    }
    get onmessage() {
      return w4.brandCheck(this, s5), this.#A.message
    }
    set onmessage(A) {
      if (w4.brandCheck(this, s5), this.#A.message) this.removeEventListener("message", this.#A.message);
      if (typeof A === "function") this.#A.message = A, this.addEventListener("message", A);
      else this.#A.message = null
    }
    get binaryType() {
      return w4.brandCheck(this, s5), this[oW1]
    }
    set binaryType(A) {
      if (w4.brandCheck(this, s5), A !== "blob" && A !== "arraybuffer") this[oW1] = "blob";
      else this[oW1] = A
    }
    #W(A, B) {
      this[Rn0] = A;
      let Q = new o$6(this, B);
      Q.on("drain", Qq6), Q.on("error", Iq6.bind(this)), A.socket.ws = this, this[l$6] = Q, this.#G = new Bq6(A.socket), this[Tc1] = So.OPEN;
      let I = A.headersList.get("sec-websocket-extensions");
      if (I !== null) this.#I = I;
      let G = A.headersList.get("sec-websocket-protocol");
      if (G !== null) this.#Q = G;
      On0("open", this)
    }
  }
  s5.CONNECTING = s5.prototype.CONNECTING = So.CONNECTING;
  s5.OPEN = s5.prototype.OPEN = So.OPEN;
  s5.CLOSING = s5.prototype.CLOSING = So.CLOSING;
  s5.CLOSED = s5.prototype.CLOSED = So.CLOSED;
  Object.defineProperties(s5.prototype, {
    CONNECTING: dR,
    OPEN: dR,
    CLOSING: dR,
    CLOSED: dR,
    url: uX,
    readyState: uX,
    bufferedAmount: uX,
    onopen: uX,
    onerror: uX,
    onclose: uX,
    close: uX,
    onmessage: uX,
    binaryType: uX,
    send: uX,
    extensions: uX,
    protocol: uX,
    [Symbol.toStringTag]: {
      value: "WebSocket",
      writable: !1,
      enumerable: !1,
      configurable: !0
    }
  });
  Object.defineProperties(s5, {
    CONNECTING: dR,
    OPEN: dR,
    CLOSING: dR,
    CLOSED: dR
  });
  w4.converters["sequence<DOMString>"] = w4.sequenceConverter(w4.converters.DOMString);
  w4.converters["DOMString or sequence<DOMString>"] = function(A, B, Q) {
    if (w4.util.Type(A) === "Object" && Symbol.iterator in A) return w4.converters["sequence<DOMString>"](A);
    return w4.converters.DOMString(A, B, Q)
  };
  w4.converters.WebSocketInit = w4.dictionaryConverter([{
    key: "protocols",
    converter: w4.converters["DOMString or sequence<DOMString>"],
    defaultValue: () => new Array(0)
  }, {
    key: "dispatcher",
    converter: w4.converters.any,
    defaultValue: () => t$6()
  }, {
    key: "headers",
    converter: w4.nullableConverter(w4.converters.HeadersInit)
  }]);
  w4.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function(A) {
    if (w4.util.Type(A) === "Object" && !(Symbol.iterator in A)) return w4.converters.WebSocketInit(A);
    return {
      protocols: w4.converters["DOMString or sequence<DOMString>"](A)
    }
  };
  w4.converters.WebSocketSendData = function(A) {
    if (w4.util.Type(A) === "Object") {
      if (Pn0(A)) return w4.converters.Blob(A, {
        strict: !1
      });
      if (ArrayBuffer.isView(A) || Sn0.isArrayBuffer(A)) return w4.converters.BufferSource(A)
    }
    return w4.converters.USVString(A)
  };

  function Qq6() {
    this.ws[Rn0].socket.resume()
  }

  function Iq6(A) {
    let B, Q;
    if (A instanceof Aq6) B = A.reason, Q = A.code;
    else B = A.message;
    On0("error", this, () => new e$6("error", {
      error: A,
      message: B
    })), Tn0(this, Q)
  }
  _n0.exports = {
    WebSocket: s5
  }
})
// @from(Start 5710661, End 5711112)
Pc1 = z((oO8, yn0) => {
  function Gq6(A) {
    return A.indexOf("\x00") === -1
  }

  function Zq6(A) {
    if (A.length === 0) return !1;
    for (let B = 0; B < A.length; B++)
      if (A.charCodeAt(B) < 48 || A.charCodeAt(B) > 57) return !1;
    return !0
  }

  function Dq6(A) {
    return new Promise((B) => {
      setTimeout(B, A).unref()
    })
  }
  yn0.exports = {
    isValidLastEventId: Gq6,
    isASCIINumber: Zq6,
    delay: Dq6
  }
})
// @from(Start 5711118, End 5715224)
bn0 = z((tO8, vn0) => {
  var {
    Transform: Yq6
  } = Z1("node:stream"), {
    isASCIINumber: kn0,
    isValidLastEventId: xn0
  } = Pc1(), aN = [239, 187, 191];
  class fn0 extends Yq6 {
    state = null;
    checkBOM = !0;
    crlfCheck = !1;
    eventEndCheck = !1;
    buffer = null;
    pos = 0;
    event = {
      data: void 0,
      event: void 0,
      id: void 0,
      retry: void 0
    };
    constructor(A = {}) {
      A.readableObjectMode = !0;
      super(A);
      if (this.state = A.eventSourceSettings || {}, A.push) this.push = A.push
    }
    _transform(A, B, Q) {
      if (A.length === 0) {
        Q();
        return
      }
      if (this.buffer) this.buffer = Buffer.concat([this.buffer, A]);
      else this.buffer = A;
      if (this.checkBOM) switch (this.buffer.length) {
        case 1:
          if (this.buffer[0] === aN[0]) {
            Q();
            return
          }
          this.checkBOM = !1, Q();
          return;
        case 2:
          if (this.buffer[0] === aN[0] && this.buffer[1] === aN[1]) {
            Q();
            return
          }
          this.checkBOM = !1;
          break;
        case 3:
          if (this.buffer[0] === aN[0] && this.buffer[1] === aN[1] && this.buffer[2] === aN[2]) {
            this.buffer = Buffer.alloc(0), this.checkBOM = !1, Q();
            return
          }
          this.checkBOM = !1;
          break;
        default:
          if (this.buffer[0] === aN[0] && this.buffer[1] === aN[1] && this.buffer[2] === aN[2]) this.buffer = this.buffer.subarray(3);
          this.checkBOM = !1;
          break
      }
      while (this.pos < this.buffer.length) {
        if (this.eventEndCheck) {
          if (this.crlfCheck) {
            if (this.buffer[this.pos] === 10) {
              this.buffer = this.buffer.subarray(this.pos + 1), this.pos = 0, this.crlfCheck = !1;
              continue
            }
            this.crlfCheck = !1
          }
          if (this.buffer[this.pos] === 10 || this.buffer[this.pos] === 13) {
            if (this.buffer[this.pos] === 13) this.crlfCheck = !0;
            if (this.buffer = this.buffer.subarray(this.pos + 1), this.pos = 0, this.event.data !== void 0 || this.event.event || this.event.id || this.event.retry) this.processEvent(this.event);
            this.clearEvent();
            continue
          }
          this.eventEndCheck = !1;
          continue
        }
        if (this.buffer[this.pos] === 10 || this.buffer[this.pos] === 13) {
          if (this.buffer[this.pos] === 13) this.crlfCheck = !0;
          this.parseLine(this.buffer.subarray(0, this.pos), this.event), this.buffer = this.buffer.subarray(this.pos + 1), this.pos = 0, this.eventEndCheck = !0;
          continue
        }
        this.pos++
      }
      Q()
    }
    parseLine(A, B) {
      if (A.length === 0) return;
      let Q = A.indexOf(58);
      if (Q === 0) return;
      let I = "",
        G = "";
      if (Q !== -1) {
        I = A.subarray(0, Q).toString("utf8");
        let Z = Q + 1;
        if (A[Z] === 32) ++Z;
        G = A.subarray(Z).toString("utf8")
      } else I = A.toString("utf8"), G = "";
      switch (I) {
        case "data":
          if (B[I] === void 0) B[I] = G;
          else B[I] += `
${G}`;
          break;
        case "retry":
          if (kn0(G)) B[I] = G;
          break;
        case "id":
          if (xn0(G)) B[I] = G;
          break;
        case "event":
          if (G.length > 0) B[I] = G;
          break
      }
    }
    processEvent(A) {
      if (A.retry && kn0(A.retry)) this.state.reconnectionTime = parseInt(A.retry, 10);
      if (A.id && xn0(A.id)) this.state.lastEventId = A.id;
      if (A.data !== void 0) this.push({
        type: A.event || "message",
        options: {
          data: A.data,
          lastEventId: this.state.lastEventId,
          origin: this.state.origin
        }
      })
    }
    clearEvent() {
      this.event = {
        data: void 0,
        event: void 0,
        id: void 0,
        retry: void 0
      }
    }
  }
  vn0.exports = {
    EventSourceStream: fn0
  }
})
// @from(Start 5715230, End 5720943)
ln0 = z((eO8, cn0) => {
  var {
    pipeline: Wq6
  } = Z1("node:stream"), {
    fetching: Jq6
  } = wo(), {
    makeRequest: Fq6
  } = Im(), {
    webidl: sN
  } = jG(), {
    EventSourceStream: Xq6
  } = bn0(), {
    parseMIMEType: Vq6
  } = nY(), {
    createFastMessageEvent: Cq6
  } = Jm(), {
    isNetworkError: gn0
  } = Ho(), {
    delay: Kq6
  } = Pc1(), {
    kEnumerableProperty: Tj
  } = C6(), {
    environmentSettingsObject: hn0
  } = MJ(), mn0 = !1, dn0 = 3000, _o = 0, un0 = 1, jo = 2, Hq6 = "anonymous", zq6 = "use-credentials";
  class Km extends EventTarget {
    #A = {
      open: null,
      error: null,
      message: null
    };
    #B = null;
    #Q = !1;
    #I = _o;
    #G = null;
    #W = null;
    #Z;
    #F;
    constructor(A, B = {}) {
      super();
      sN.util.markAsUncloneable(this);
      let Q = "EventSource constructor";
      if (sN.argumentLengthCheck(arguments, 1, Q), !mn0) mn0 = !0, process.emitWarning("EventSource is experimental, expect them to change at any time.", {
        code: "UNDICI-ES"
      });
      A = sN.converters.USVString(A, Q, "url"), B = sN.converters.EventSourceInitDict(B, Q, "eventSourceInitDict"), this.#Z = B.dispatcher, this.#F = {
        lastEventId: "",
        reconnectionTime: dn0
      };
      let I = hn0,
        G;
      try {
        G = new URL(A, I.settingsObject.baseUrl), this.#F.origin = G.origin
      } catch (Y) {
        throw new DOMException(Y, "SyntaxError")
      }
      this.#B = G.href;
      let Z = Hq6;
      if (B.withCredentials) Z = zq6, this.#Q = !0;
      let D = {
        redirect: "follow",
        keepalive: !0,
        mode: "cors",
        credentials: Z === "anonymous" ? "same-origin" : "omit",
        referrer: "no-referrer"
      };
      D.client = hn0.settingsObject, D.headersList = [
        ["accept", {
          name: "accept",
          value: "text/event-stream"
        }]
      ], D.cache = "no-store", D.initiator = "other", D.urlList = [new URL(this.#B)], this.#G = Fq6(D), this.#J()
    }
    get readyState() {
      return this.#I
    }
    get url() {
      return this.#B
    }
    get withCredentials() {
      return this.#Q
    }
    #J() {
      if (this.#I === jo) return;
      this.#I = _o;
      let A = {
          request: this.#G,
          dispatcher: this.#Z
        },
        B = (Q) => {
          if (gn0(Q)) this.dispatchEvent(new Event("error")), this.close();
          this.#X()
        };
      A.processResponseEndOfBody = B, A.processResponse = (Q) => {
        if (gn0(Q))
          if (Q.aborted) {
            this.close(), this.dispatchEvent(new Event("error"));
            return
          } else {
            this.#X();
            return
          } let I = Q.headersList.get("content-type", !0),
          G = I !== null ? Vq6(I) : "failure",
          Z = G !== "failure" && G.essence === "text/event-stream";
        if (Q.status !== 200 || Z === !1) {
          this.close(), this.dispatchEvent(new Event("error"));
          return
        }
        this.#I = un0, this.dispatchEvent(new Event("open")), this.#F.origin = Q.urlList[Q.urlList.length - 1].origin;
        let D = new Xq6({
          eventSourceSettings: this.#F,
          push: (Y) => {
            this.dispatchEvent(Cq6(Y.type, Y.options))
          }
        });
        Wq6(Q.body.stream, D, (Y) => {
          if (Y?.aborted === !1) this.close(), this.dispatchEvent(new Event("error"))
        })
      }, this.#W = Jq6(A)
    }
    async #X() {
      if (this.#I === jo) return;
      if (this.#I = _o, this.dispatchEvent(new Event("error")), await Kq6(this.#F.reconnectionTime), this.#I !== _o) return;
      if (this.#F.lastEventId.length) this.#G.headersList.set("last-event-id", this.#F.lastEventId, !0);
      this.#J()
    }
    close() {
      if (sN.brandCheck(this, Km), this.#I === jo) return;
      this.#I = jo, this.#W.abort(), this.#G = null
    }
    get onopen() {
      return this.#A.open
    }
    set onopen(A) {
      if (this.#A.open) this.removeEventListener("open", this.#A.open);
      if (typeof A === "function") this.#A.open = A, this.addEventListener("open", A);
      else this.#A.open = null
    }
    get onmessage() {
      return this.#A.message
    }
    set onmessage(A) {
      if (this.#A.message) this.removeEventListener("message", this.#A.message);
      if (typeof A === "function") this.#A.message = A, this.addEventListener("message", A);
      else this.#A.message = null
    }
    get onerror() {
      return this.#A.error
    }
    set onerror(A) {
      if (this.#A.error) this.removeEventListener("error", this.#A.error);
      if (typeof A === "function") this.#A.error = A, this.addEventListener("error", A);
      else this.#A.error = null
    }
  }
  var pn0 = {
    CONNECTING: {
      __proto__: null,
      configurable: !1,
      enumerable: !0,
      value: _o,
      writable: !1
    },
    OPEN: {
      __proto__: null,
      configurable: !1,
      enumerable: !0,
      value: un0,
      writable: !1
    },
    CLOSED: {
      __proto__: null,
      configurable: !1,
      enumerable: !0,
      value: jo,
      writable: !1
    }
  };
  Object.defineProperties(Km, pn0);
  Object.defineProperties(Km.prototype, pn0);
  Object.defineProperties(Km.prototype, {
    close: Tj,
    onerror: Tj,
    onmessage: Tj,
    onopen: Tj,
    readyState: Tj,
    url: Tj,
    withCredentials: Tj
  });
  sN.converters.EventSourceInitDict = sN.dictionaryConverter([{
    key: "withCredentials",
    converter: sN.converters.boolean,
    defaultValue: () => !1
  }, {
    key: "dispatcher",
    converter: sN.converters.any
  }]);
  cn0.exports = {
    EventSource: Km,
    defaultReconnectionTime: dn0
  }
})
// @from(Start 5720949, End 5724619)
sn0 = z((sq6, A4) => {
  var wq6 = er(),
    in0 = yr(),
    Eq6 = lh(),
    Uq6 = Pu0(),
    Nq6 = ih(),
    $q6 = qp1(),
    qq6 = au0(),
    Mq6 = Bp0(),
    nn0 = u5(),
    eW1 = C6(),
    {
      InvalidArgumentError: tW1
    } = nn0,
    Hm = ap0(),
    Lq6 = xr(),
    Rq6 = np1(),
    Oq6 = kc0(),
    Tq6 = sp1(),
    Pq6 = vp1(),
    Sq6 = WW1(),
    {
      getGlobalDispatcher: an0,
      setGlobalDispatcher: _q6
    } = wW1(),
    jq6 = EW1(),
    yq6 = tY1(),
    kq6 = eY1();
  Object.assign(in0.prototype, Hm);
  sq6.Dispatcher = in0;
  sq6.Client = wq6;
  sq6.Pool = Eq6;
  sq6.BalancedPool = Uq6;
  sq6.Agent = Nq6;
  sq6.ProxyAgent = $q6;
  sq6.EnvHttpProxyAgent = qq6;
  sq6.RetryAgent = Mq6;
  sq6.RetryHandler = Sq6;
  sq6.DecoratorHandler = jq6;
  sq6.RedirectHandler = yq6;
  sq6.createRedirectInterceptor = kq6;
  sq6.interceptors = {
    redirect: mc0(),
    retry: uc0(),
    dump: lc0(),
    dns: rc0()
  };
  sq6.buildConnector = Lq6;
  sq6.errors = nn0;
  sq6.util = {
    parseHeaders: eW1.parseHeaders,
    headerNameToString: eW1.headerNameToString
  };

  function yo(A) {
    return (B, Q, I) => {
      if (typeof Q === "function") I = Q, Q = null;
      if (!B || typeof B !== "string" && typeof B !== "object" && !(B instanceof URL)) throw new tW1("invalid url");
      if (Q != null && typeof Q !== "object") throw new tW1("invalid opts");
      if (Q && Q.path != null) {
        if (typeof Q.path !== "string") throw new tW1("invalid opts.path");
        let D = Q.path;
        if (!Q.path.startsWith("/")) D = `/${D}`;
        B = new URL(eW1.parseOrigin(B).origin + D)
      } else {
        if (!Q) Q = typeof B === "object" ? B : {};
        B = eW1.parseURL(B)
      }
      let {
        agent: G,
        dispatcher: Z = an0()
      } = Q;
      if (G) throw new tW1("unsupported opts.agent. Did you mean opts.client?");
      return A.call(Z, {
        ...Q,
        origin: B.origin,
        path: B.search ? `${B.pathname}${B.search}` : B.pathname,
        method: Q.method || (Q.body ? "PUT" : "GET")
      }, I)
    }
  }
  sq6.setGlobalDispatcher = _q6;
  sq6.getGlobalDispatcher = an0;
  var xq6 = wo().fetch;
  sq6.fetch = async function A(B, Q = void 0) {
    try {
      return await xq6(B, Q)
    } catch (I) {
      if (I && typeof I === "object") Error.captureStackTrace(I);
      throw I
    }
  };
  sq6.Headers = $j().Headers;
  sq6.Response = Ho().Response;
  sq6.Request = Im().Request;
  sq6.FormData = mr().FormData;
  sq6.File = globalThis.File ?? Z1("node:buffer").File;
  sq6.FileReader = Vi0().FileReader;
  var {
    setGlobalOrigin: fq6,
    getGlobalOrigin: vq6
  } = ku1();
  sq6.setGlobalOrigin = fq6;
  sq6.getGlobalOrigin = vq6;
  var {
    CacheStorage: bq6
  } = $i0(), {
    kConstruct: gq6
  } = gW1();
  sq6.caches = new bq6(gq6);
  var {
    deleteCookie: hq6,
    getCookies: mq6,
    getSetCookies: dq6,
    setCookie: uq6
  } = ki0();
  sq6.deleteCookie = hq6;
  sq6.getCookies = mq6;
  sq6.getSetCookies = dq6;
  sq6.setCookie = uq6;
  var {
    parseMIMEType: pq6,
    serializeAMimeType: cq6
  } = nY();
  sq6.parseMIMEType = pq6;
  sq6.serializeAMimeType = cq6;
  var {
    CloseEvent: lq6,
    ErrorEvent: iq6,
    MessageEvent: nq6
  } = Jm();
  sq6.WebSocket = jn0().WebSocket;
  sq6.CloseEvent = lq6;
  sq6.ErrorEvent = iq6;
  sq6.MessageEvent = nq6;
  sq6.request = yo(Hm.request);
  sq6.stream = yo(Hm.stream);
  sq6.pipeline = yo(Hm.pipeline);
  sq6.connect = yo(Hm.connect);
  sq6.upgrade = yo(Hm.upgrade);
  sq6.MockClient = Rq6;
  sq6.MockPool = Tq6;
  sq6.MockAgent = Oq6;
  sq6.mockErrors = Pq6;
  var {
    EventSource: aq6
  } = ln0();
  sq6.EventSource = aq6
})
// @from(Start 5724625, End 5724731)
Ia0 = z((NT8, Qa0) => {
  var rM6 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  Qa0.exports = rM6
})
// @from(Start 5724737, End 5725704)
Ya0 = z(($T8, Da0) => {
  var oM6 = Ia0();

  function Ga0() {}

  function Za0() {}
  Za0.resetWarningCache = Ga0;
  Da0.exports = function() {
    function A(I, G, Z, D, Y, W) {
      if (W === oM6) return;
      var J = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
      throw J.name = "Invariant Violation", J
    }
    A.isRequired = A;

    function B() {
      return A
    }
    var Q = {
      array: A,
      bigint: A,
      bool: A,
      func: A,
      number: A,
      object: A,
      string: A,
      symbol: A,
      any: A,
      arrayOf: B,
      element: A,
      elementType: A,
      instanceOf: B,
      node: A,
      objectOf: B,
      oneOf: B,
      oneOfType: B,
      shape: B,
      exact: B,
      checkPropTypes: Za0,
      resetWarningCache: Ga0
    };
    return Q.PropTypes = Q, Q
  }
})
// @from(Start 5725710, End 5725776)
Ja0 = z((qT8, Wa0) => {
  Wa0.exports = Ya0()();
  var tM6, eM6
})
// @from(Start 5725782, End 5727932)
Ka0 = z((LT8, Ca0) => {
  var AL6 = Z1("os"),
    Va0 = Z1("tty"),
    pX = Sl(),
    {
      env: SI
    } = process,
    uR;
  if (pX("no-color") || pX("no-colors") || pX("color=false") || pX("color=never")) uR = 0;
  else if (pX("color") || pX("colors") || pX("color=true") || pX("color=always")) uR = 1;
  if ("FORCE_COLOR" in SI)
    if (SI.FORCE_COLOR === "true") uR = 1;
    else if (SI.FORCE_COLOR === "false") uR = 0;
  else uR = SI.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(SI.FORCE_COLOR, 10), 3);

  function _c1(A) {
    if (A === 0) return !1;
    return {
      level: A,
      hasBasic: !0,
      has256: A >= 2,
      has16m: A >= 3
    }
  }

  function jc1(A, B) {
    if (uR === 0) return 0;
    if (pX("color=16m") || pX("color=full") || pX("color=truecolor")) return 3;
    if (pX("color=256")) return 2;
    if (A && !B && uR === void 0) return 0;
    let Q = uR || 0;
    if (SI.TERM === "dumb") return Q;
    if (process.platform === "win32") {
      let I = AL6.release().split(".");
      if (Number(I[0]) >= 10 && Number(I[2]) >= 10586) return Number(I[2]) >= 14931 ? 3 : 2;
      return 1
    }
    if ("CI" in SI) {
      if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((I) => (I in SI)) || SI.CI_NAME === "codeship") return 1;
      return Q
    }
    if ("TEAMCITY_VERSION" in SI) return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(SI.TEAMCITY_VERSION) ? 1 : 0;
    if (SI.COLORTERM === "truecolor") return 3;
    if ("TERM_PROGRAM" in SI) {
      let I = parseInt((SI.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (SI.TERM_PROGRAM) {
        case "iTerm.app":
          return I >= 3 ? 3 : 2;
        case "Apple_Terminal":
          return 2
      }
    }
    if (/-256(color)?$/i.test(SI.TERM)) return 2;
    if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(SI.TERM)) return 1;
    if ("COLORTERM" in SI) return 1;
    return Q
  }

  function BL6(A) {
    let B = jc1(A, A && A.isTTY);
    return _c1(B)
  }
  Ca0.exports = {
    supportsColor: BL6,
    stdout: _c1(jc1(!0, Va0.isatty(1))),
    stderr: _c1(jc1(!0, Va0.isatty(2)))
  }
})
// @from(Start 5727938, End 5729604)
wa0 = z((RT8, za0) => {
  var QL6 = Ka0(),
    wm = Sl();

  function Ha0(A) {
    if (/^\d{3,4}$/.test(A)) {
      let Q = /(\d{1,2})(\d{2})/.exec(A);
      return {
        major: 0,
        minor: parseInt(Q[1], 10),
        patch: parseInt(Q[2], 10)
      }
    }
    let B = (A || "").split(".").map((Q) => parseInt(Q, 10));
    return {
      major: B[0],
      minor: B[1],
      patch: B[2]
    }
  }

  function yc1(A) {
    let {
      env: B
    } = process;
    if ("FORCE_HYPERLINK" in B) return !(B.FORCE_HYPERLINK.length > 0 && parseInt(B.FORCE_HYPERLINK, 10) === 0);
    if (wm("no-hyperlink") || wm("no-hyperlinks") || wm("hyperlink=false") || wm("hyperlink=never")) return !1;
    if (wm("hyperlink=true") || wm("hyperlink=always")) return !0;
    if ("NETLIFY" in B) return !0;
    if (!QL6.supportsColor(A)) return !1;
    if (A && !A.isTTY) return !1;
    if (process.platform === "win32") return !1;
    if ("CI" in B) return !1;
    if ("TEAMCITY_VERSION" in B) return !1;
    if ("TERM_PROGRAM" in B) {
      let Q = Ha0(B.TERM_PROGRAM_VERSION);
      switch (B.TERM_PROGRAM) {
        case "iTerm.app":
          if (Q.major === 3) return Q.minor >= 1;
          return Q.major > 3;
        case "WezTerm":
          return Q.major >= 20200620;
        case "vscode":
          return Q.major > 1 || Q.major === 1 && Q.minor >= 72
      }
    }
    if ("VTE_VERSION" in B) {
      if (B.VTE_VERSION === "0.50.0") return !1;
      let Q = Ha0(B.VTE_VERSION);
      return Q.major > 0 || Q.minor >= 50
    }
    return !1
  }
  za0.exports = {
    supportsHyperlink: yc1,
    stdout: yc1(process.stdout),
    stderr: yc1(process.stderr)
  }
})
// @from(Start 5729610, End 5730314)
Lr0 = z((ax8, Mr0) => {
  Mr0.exports = qr0;
  qr0.sync = fR6;
  var Nr0 = Z1("fs");

  function xR6(A, B) {
    var Q = B.pathExt !== void 0 ? B.pathExt : process.env.PATHEXT;
    if (!Q) return !0;
    if (Q = Q.split(";"), Q.indexOf("") !== -1) return !0;
    for (var I = 0; I < Q.length; I++) {
      var G = Q[I].toLowerCase();
      if (G && A.substr(-G.length).toLowerCase() === G) return !0
    }
    return !1
  }

  function $r0(A, B, Q) {
    if (!A.isSymbolicLink() && !A.isFile()) return !1;
    return xR6(B, Q)
  }

  function qr0(A, B, Q) {
    Nr0.stat(A, function(I, G) {
      Q(I, I ? !1 : $r0(G, A, B))
    })
  }

  function fR6(A, B) {
    return $r0(Nr0.statSync(A), A, B)
  }
})
// @from(Start 5730320, End 5731027)
Sr0 = z((sx8, Pr0) => {
  Pr0.exports = Or0;
  Or0.sync = vR6;
  var Rr0 = Z1("fs");

  function Or0(A, B, Q) {
    Rr0.stat(A, function(I, G) {
      Q(I, I ? !1 : Tr0(G, B))
    })
  }

  function vR6(A, B) {
    return Tr0(Rr0.statSync(A), B)
  }

  function Tr0(A, B) {
    return A.isFile() && bR6(A, B)
  }

  function bR6(A, B) {
    var {
      mode: Q,
      uid: I,
      gid: G
    } = A, Z = B.uid !== void 0 ? B.uid : process.getuid && process.getuid(), D = B.gid !== void 0 ? B.gid : process.getgid && process.getgid(), Y = parseInt("100", 8), W = parseInt("010", 8), J = parseInt("001", 8), F = Y | W, X = Q & J || Q & W && G === D || Q & Y && I === Z || Q & F && Z === 0;
    return X
  }
})
// @from(Start 5731033, End 5731890)
jr0 = z((ox8, _r0) => {
  var rx8 = Z1("fs"),
    GF1;
  if (process.platform === "win32" || global.TESTING_WINDOWS) GF1 = Lr0();
  else GF1 = Sr0();
  _r0.exports = Rl1;
  Rl1.sync = gR6;

  function Rl1(A, B, Q) {
    if (typeof B === "function") Q = B, B = {};
    if (!Q) {
      if (typeof Promise !== "function") throw new TypeError("callback not provided");
      return new Promise(function(I, G) {
        Rl1(A, B || {}, function(Z, D) {
          if (Z) G(Z);
          else I(D)
        })
      })
    }
    GF1(A, B || {}, function(I, G) {
      if (I) {
        if (I.code === "EACCES" || B && B.ignoreErrors) I = null, G = !1
      }
      Q(I, G)
    })
  }

  function gR6(A, B) {
    try {
      return GF1.sync(A, B || {})
    } catch (Q) {
      if (B && B.ignoreErrors || Q.code === "EACCES") return !1;
      else throw Q
    }
  }
})
// @from(Start 5731896, End 5734340)
gr0 = z((tx8, br0) => {
  var jm = process.platform === "win32" || process.env.OSTYPE === "cygwin" || process.env.OSTYPE === "msys",
    yr0 = Z1("path"),
    hR6 = jm ? ";" : ":",
    kr0 = jr0(),
    xr0 = (A) => Object.assign(new Error(`not found: ${A}`), {
      code: "ENOENT"
    }),
    fr0 = (A, B) => {
      let Q = B.colon || hR6,
        I = A.match(/\//) || jm && A.match(/\\/) ? [""] : [...jm ? [process.cwd()] : [], ...(B.path || process.env.PATH || "").split(Q)],
        G = jm ? B.pathExt || process.env.PATHEXT || ".EXE;.CMD;.BAT;.COM" : "",
        Z = jm ? G.split(Q) : [""];
      if (jm) {
        if (A.indexOf(".") !== -1 && Z[0] !== "") Z.unshift("")
      }
      return {
        pathEnv: I,
        pathExt: Z,
        pathExtExe: G
      }
    },
    vr0 = (A, B, Q) => {
      if (typeof B === "function") Q = B, B = {};
      if (!B) B = {};
      let {
        pathEnv: I,
        pathExt: G,
        pathExtExe: Z
      } = fr0(A, B), D = [], Y = (J) => new Promise((F, X) => {
        if (J === I.length) return B.all && D.length ? F(D) : X(xr0(A));
        let V = I[J],
          C = /^".*"$/.test(V) ? V.slice(1, -1) : V,
          K = yr0.join(C, A),
          E = !C && /^\.[\\\/]/.test(A) ? A.slice(0, 2) + K : K;
        F(W(E, J, 0))
      }), W = (J, F, X) => new Promise((V, C) => {
        if (X === G.length) return V(Y(F + 1));
        let K = G[X];
        kr0(J + K, {
          pathExt: Z
        }, (E, N) => {
          if (!E && N)
            if (B.all) D.push(J + K);
            else return V(J + K);
          return V(W(J, F, X + 1))
        })
      });
      return Q ? Y(0).then((J) => Q(null, J), Q) : Y(0)
    },
    mR6 = (A, B) => {
      B = B || {};
      let {
        pathEnv: Q,
        pathExt: I,
        pathExtExe: G
      } = fr0(A, B), Z = [];
      for (let D = 0; D < Q.length; D++) {
        let Y = Q[D],
          W = /^".*"$/.test(Y) ? Y.slice(1, -1) : Y,
          J = yr0.join(W, A),
          F = !W && /^\.[\\\/]/.test(A) ? A.slice(0, 2) + J : J;
        for (let X = 0; X < I.length; X++) {
          let V = F + I[X];
          try {
            if (kr0.sync(V, {
                pathExt: G
              }))
              if (B.all) Z.push(V);
              else return V
          } catch (C) {}
        }
      }
      if (B.all && Z.length) return Z;
      if (B.nothrow) return null;
      throw xr0(A)
    };
  br0.exports = vr0;
  vr0.sync = mR6
})
// @from(Start 5734346, End 5734641)
mr0 = z((ex8, Ol1) => {
  var hr0 = (A = {}) => {
    let B = A.env || process.env;
    if ((A.platform || process.platform) !== "win32") return "PATH";
    return Object.keys(B).reverse().find((I) => I.toUpperCase() === "PATH") || "Path"
  };
  Ol1.exports = hr0;
  Ol1.exports.default = hr0
})
// @from(Start 5734647, End 5735366)
cr0 = z((Af8, pr0) => {
  var dr0 = Z1("path"),
    dR6 = gr0(),
    uR6 = mr0();

  function ur0(A, B) {
    let Q = A.options.env || process.env,
      I = process.cwd(),
      G = A.options.cwd != null,
      Z = G && process.chdir !== void 0 && !process.chdir.disabled;
    if (Z) try {
      process.chdir(A.options.cwd)
    } catch (Y) {}
    let D;
    try {
      D = dR6.sync(A.command, {
        path: Q[uR6({
          env: Q
        })],
        pathExt: B ? dr0.delimiter : void 0
      })
    } catch (Y) {} finally {
      if (Z) process.chdir(I)
    }
    if (D) D = dr0.resolve(G ? A.options.cwd : "", D);
    return D
  }

  function pR6(A) {
    return ur0(A) || ur0(A, !0)
  }
  pr0.exports = pR6
})
// @from(Start 5735372, End 5735764)
lr0 = z((iR6, Pl1) => {
  var Tl1 = /([()\][%!^"`<>&|;, *?])/g;

  function cR6(A) {
    return A = A.replace(Tl1, "^$1"), A
  }

  function lR6(A, B) {
    if (A = `${A}`, A = A.replace(/(?=(\\+?)?)\1"/g, "$1$1\\\""), A = A.replace(/(?=(\\+?)?)\1$/, "$1$1"), A = `"${A}"`, A = A.replace(Tl1, "^$1"), B) A = A.replace(Tl1, "^$1");
    return A
  }
  iR6.command = cR6;
  iR6.argument = lR6
})
// @from(Start 5735770, End 5735822)
nr0 = z((Bf8, ir0) => {
  ir0.exports = /^#!(.*)/
})
// @from(Start 5735828, End 5736098)
sr0 = z((Qf8, ar0) => {
  var sR6 = nr0();
  ar0.exports = (A = "") => {
    let B = A.match(sR6);
    if (!B) return null;
    let [Q, I] = B[0].replace(/#! ?/, "").split(" "), G = Q.split("/").pop();
    if (G === "env") return I;
    return I ? `${G} ${I}` : G
  }
})
// @from(Start 5736104, End 5736392)
or0 = z((If8, rr0) => {
  var Sl1 = Z1("fs"),
    rR6 = sr0();

  function oR6(A) {
    let Q = Buffer.alloc(150),
      I;
    try {
      I = Sl1.openSync(A, "r"), Sl1.readSync(I, Q, 0, 150, 0), Sl1.closeSync(I)
    } catch (G) {}
    return rR6(Q.toString())
  }
  rr0.exports = oR6
})
// @from(Start 5736398, End 5737614)
Bo0 = z((Gf8, Ao0) => {
  var tR6 = Z1("path"),
    tr0 = cr0(),
    er0 = lr0(),
    eR6 = or0(),
    AO6 = process.platform === "win32",
    BO6 = /\.(?:com|exe)$/i,
    QO6 = /node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;

  function IO6(A) {
    A.file = tr0(A);
    let B = A.file && eR6(A.file);
    if (B) return A.args.unshift(A.file), A.command = B, tr0(A);
    return A.file
  }

  function GO6(A) {
    if (!AO6) return A;
    let B = IO6(A),
      Q = !BO6.test(B);
    if (A.options.forceShell || Q) {
      let I = QO6.test(B);
      A.command = tR6.normalize(A.command), A.command = er0.command(A.command), A.args = A.args.map((Z) => er0.argument(Z, I));
      let G = [A.command].concat(A.args).join(" ");
      A.args = ["/d", "/s", "/c", `"${G}"`], A.command = process.env.comspec || "cmd.exe", A.options.windowsVerbatimArguments = !0
    }
    return A
  }

  function ZO6(A, B, Q) {
    if (B && !Array.isArray(B)) Q = B, B = null;
    B = B ? B.slice(0) : [], Q = Object.assign({}, Q);
    let I = {
      command: A,
      args: B,
      options: Q,
      file: void 0,
      original: {
        command: A,
        args: B
      }
    };
    return Q.shell ? I : GO6(I)
  }
  Ao0.exports = ZO6
})
// @from(Start 5737620, End 5738513)
Go0 = z((Zf8, Io0) => {
  var _l1 = process.platform === "win32";

  function jl1(A, B) {
    return Object.assign(new Error(`${B} ${A.command} ENOENT`), {
      code: "ENOENT",
      errno: "ENOENT",
      syscall: `${B} ${A.command}`,
      path: A.command,
      spawnargs: A.args
    })
  }

  function DO6(A, B) {
    if (!_l1) return;
    let Q = A.emit;
    A.emit = function(I, G) {
      if (I === "exit") {
        let Z = Qo0(G, B);
        if (Z) return Q.call(A, "error", Z)
      }
      return Q.apply(A, arguments)
    }
  }

  function Qo0(A, B) {
    if (_l1 && A === 1 && !B.file) return jl1(B.original, "spawn");
    return null
  }

  function YO6(A, B) {
    if (_l1 && A === 1 && !B.file) return jl1(B.original, "spawnSync");
    return null
  }
  Io0.exports = {
    hookChildProcess: DO6,
    verifyENOENT: Qo0,
    verifyENOENTSync: YO6,
    notFoundError: jl1
  }
})
// @from(Start 5738519, End 5739066)
Yo0 = z((Df8, ym) => {
  var Zo0 = Z1("child_process"),
    yl1 = Bo0(),
    kl1 = Go0();

  function Do0(A, B, Q) {
    let I = yl1(A, B, Q),
      G = Zo0.spawn(I.command, I.args, I.options);
    return kl1.hookChildProcess(G, I), G
  }

  function WO6(A, B, Q) {
    let I = yl1(A, B, Q),
      G = Zo0.spawnSync(I.command, I.args, I.options);
    return G.error = G.error || kl1.verifyENOENTSync(G.status, I), G
  }
  ym.exports = Do0;
  ym.exports.spawn = Do0;
  ym.exports.sync = WO6;
  ym.exports._parse = yl1;
  ym.exports._enoent = kl1
})
// @from(Start 5739072, End 5739488)
Mt = z((ff8, zo0) => {
  var PO6 = Number.MAX_SAFE_INTEGER || 9007199254740991,
    SO6 = ["major", "premajor", "minor", "preminor", "patch", "prepatch", "prerelease"];
  zo0.exports = {
    MAX_LENGTH: 256,
    MAX_SAFE_COMPONENT_LENGTH: 16,
    MAX_SAFE_BUILD_LENGTH: 250,
    MAX_SAFE_INTEGER: PO6,
    RELEASE_TYPES: SO6,
    SEMVER_SPEC_VERSION: "2.0.0",
    FLAG_INCLUDE_PRERELEASE: 1,
    FLAG_LOOSE: 2
  }
})
// @from(Start 5739494, End 5739720)
Lt = z((vf8, wo0) => {
  var _O6 = typeof process === "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...A) => console.error("SEMVER", ...A) : () => {};
  wo0.exports = _O6
})
// @from(Start 5739726, End 5743786)
hm = z((vw, Eo0) => {
  var {
    MAX_SAFE_COMPONENT_LENGTH: el1,
    MAX_SAFE_BUILD_LENGTH: jO6,
    MAX_LENGTH: yO6
  } = Mt(), kO6 = Lt();
  vw = Eo0.exports = {};
  var xO6 = vw.re = [],
    fO6 = vw.safeRe = [],
    S2 = vw.src = [],
    vO6 = vw.safeSrc = [],
    _2 = vw.t = {},
    bO6 = 0,
    Ai1 = "[a-zA-Z0-9-]",
    gO6 = [
      ["\\s", 1],
      ["\\d", yO6],
      [Ai1, jO6]
    ],
    hO6 = (A) => {
      for (let [B, Q] of gO6) A = A.split(`${B}*`).join(`${B}{0,${Q}}`).split(`${B}+`).join(`${B}{1,${Q}}`);
      return A
    },
    v4 = (A, B, Q) => {
      let I = hO6(B),
        G = bO6++;
      kO6(A, G, B), _2[A] = G, S2[G] = B, vO6[G] = I, xO6[G] = new RegExp(B, Q ? "g" : void 0), fO6[G] = new RegExp(I, Q ? "g" : void 0)
    };
  v4("NUMERICIDENTIFIER", "0|[1-9]\\d*");
  v4("NUMERICIDENTIFIERLOOSE", "\\d+");
  v4("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${Ai1}*`);
  v4("MAINVERSION", `(${S2[_2.NUMERICIDENTIFIER]})\\.(${S2[_2.NUMERICIDENTIFIER]})\\.(${S2[_2.NUMERICIDENTIFIER]})`);
  v4("MAINVERSIONLOOSE", `(${S2[_2.NUMERICIDENTIFIERLOOSE]})\\.(${S2[_2.NUMERICIDENTIFIERLOOSE]})\\.(${S2[_2.NUMERICIDENTIFIERLOOSE]})`);
  v4("PRERELEASEIDENTIFIER", `(?:${S2[_2.NUMERICIDENTIFIER]}|${S2[_2.NONNUMERICIDENTIFIER]})`);
  v4("PRERELEASEIDENTIFIERLOOSE", `(?:${S2[_2.NUMERICIDENTIFIERLOOSE]}|${S2[_2.NONNUMERICIDENTIFIER]})`);
  v4("PRERELEASE", `(?:-(${S2[_2.PRERELEASEIDENTIFIER]}(?:\\.${S2[_2.PRERELEASEIDENTIFIER]})*))`);
  v4("PRERELEASELOOSE", `(?:-?(${S2[_2.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${S2[_2.PRERELEASEIDENTIFIERLOOSE]})*))`);
  v4("BUILDIDENTIFIER", `${Ai1}+`);
  v4("BUILD", `(?:\\+(${S2[_2.BUILDIDENTIFIER]}(?:\\.${S2[_2.BUILDIDENTIFIER]})*))`);
  v4("FULLPLAIN", `v?${S2[_2.MAINVERSION]}${S2[_2.PRERELEASE]}?${S2[_2.BUILD]}?`);
  v4("FULL", `^${S2[_2.FULLPLAIN]}$`);
  v4("LOOSEPLAIN", `[v=\\s]*${S2[_2.MAINVERSIONLOOSE]}${S2[_2.PRERELEASELOOSE]}?${S2[_2.BUILD]}?`);
  v4("LOOSE", `^${S2[_2.LOOSEPLAIN]}$`);
  v4("GTLT", "((?:<|>)?=?)");
  v4("XRANGEIDENTIFIERLOOSE", `${S2[_2.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
  v4("XRANGEIDENTIFIER", `${S2[_2.NUMERICIDENTIFIER]}|x|X|\\*`);
  v4("XRANGEPLAIN", `[v=\\s]*(${S2[_2.XRANGEIDENTIFIER]})(?:\\.(${S2[_2.XRANGEIDENTIFIER]})(?:\\.(${S2[_2.XRANGEIDENTIFIER]})(?:${S2[_2.PRERELEASE]})?${S2[_2.BUILD]}?)?)?`);
  v4("XRANGEPLAINLOOSE", `[v=\\s]*(${S2[_2.XRANGEIDENTIFIERLOOSE]})(?:\\.(${S2[_2.XRANGEIDENTIFIERLOOSE]})(?:\\.(${S2[_2.XRANGEIDENTIFIERLOOSE]})(?:${S2[_2.PRERELEASELOOSE]})?${S2[_2.BUILD]}?)?)?`);
  v4("XRANGE", `^${S2[_2.GTLT]}\\s*${S2[_2.XRANGEPLAIN]}$`);
  v4("XRANGELOOSE", `^${S2[_2.GTLT]}\\s*${S2[_2.XRANGEPLAINLOOSE]}$`);
  v4("COERCEPLAIN", `(^|[^\\d])(\\d{1,${el1}})(?:\\.(\\d{1,${el1}}))?(?:\\.(\\d{1,${el1}}))?`);
  v4("COERCE", `${S2[_2.COERCEPLAIN]}(?:$|[^\\d])`);
  v4("COERCEFULL", S2[_2.COERCEPLAIN] + `(?:${S2[_2.PRERELEASE]})?(?:${S2[_2.BUILD]})?(?:$|[^\\d])`);
  v4("COERCERTL", S2[_2.COERCE], !0);
  v4("COERCERTLFULL", S2[_2.COERCEFULL], !0);
  v4("LONETILDE", "(?:~>?)");
  v4("TILDETRIM", `(\\s*)${S2[_2.LONETILDE]}\\s+`, !0);
  vw.tildeTrimReplace = "$1~";
  v4("TILDE", `^${S2[_2.LONETILDE]}${S2[_2.XRANGEPLAIN]}$`);
  v4("TILDELOOSE", `^${S2[_2.LONETILDE]}${S2[_2.XRANGEPLAINLOOSE]}$`);
  v4("LONECARET", "(?:\\^)");
  v4("CARETTRIM", `(\\s*)${S2[_2.LONECARET]}\\s+`, !0);
  vw.caretTrimReplace = "$1^";
  v4("CARET", `^${S2[_2.LONECARET]}${S2[_2.XRANGEPLAIN]}$`);
  v4("CARETLOOSE", `^${S2[_2.LONECARET]}${S2[_2.XRANGEPLAINLOOSE]}$`);
  v4("COMPARATORLOOSE", `^${S2[_2.GTLT]}\\s*(${S2[_2.LOOSEPLAIN]})$|^$`);
  v4("COMPARATOR", `^${S2[_2.GTLT]}\\s*(${S2[_2.FULLPLAIN]})$|^$`);
  v4("COMPARATORTRIM", `(\\s*)${S2[_2.GTLT]}\\s*(${S2[_2.LOOSEPLAIN]}|${S2[_2.XRANGEPLAIN]})`, !0);
  vw.comparatorTrimReplace = "$1$2$3";
  v4("HYPHENRANGE", `^\\s*(${S2[_2.XRANGEPLAIN]})\\s+-\\s+(${S2[_2.XRANGEPLAIN]})\\s*$`);
  v4("HYPHENRANGELOOSE", `^\\s*(${S2[_2.XRANGEPLAINLOOSE]})\\s+-\\s+(${S2[_2.XRANGEPLAINLOOSE]})\\s*$`);
  v4("STAR", "(<|>)?=?\\s*\\*");
  v4("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$");
  v4("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$")
})
// @from(Start 5743792, End 5744031)
VF1 = z((bf8, Uo0) => {
  var mO6 = Object.freeze({
      loose: !0
    }),
    dO6 = Object.freeze({}),
    uO6 = (A) => {
      if (!A) return dO6;
      if (typeof A !== "object") return mO6;
      return A
    };
  Uo0.exports = uO6
})
// @from(Start 5744037, End 5744384)
Bi1 = z((gf8, qo0) => {
  var No0 = /^[0-9]+$/,
    $o0 = (A, B) => {
      let Q = No0.test(A),
        I = No0.test(B);
      if (Q && I) A = +A, B = +B;
      return A === B ? 0 : Q && !I ? -1 : I && !Q ? 1 : A < B ? -1 : 1
    },
    pO6 = (A, B) => $o0(B, A);
  qo0.exports = {
    compareIdentifiers: $o0,
    rcompareIdentifiers: pO6
  }
})
// @from(Start 5744390, End 5750451)
gZ = z((hf8, Oo0) => {
  var CF1 = Lt(),
    {
      MAX_LENGTH: Mo0,
      MAX_SAFE_INTEGER: KF1
    } = Mt(),
    {
      safeRe: Lo0,
      safeSrc: Ro0,
      t: HF1
    } = hm(),
    cO6 = VF1(),
    {
      compareIdentifiers: mm
    } = Bi1();
  class CK {
    constructor(A, B) {
      if (B = cO6(B), A instanceof CK)
        if (A.loose === !!B.loose && A.includePrerelease === !!B.includePrerelease) return A;
        else A = A.version;
      else if (typeof A !== "string") throw new TypeError(`Invalid version. Must be a string. Got type "${typeof A}".`);
      if (A.length > Mo0) throw new TypeError(`version is longer than ${Mo0} characters`);
      CF1("SemVer", A, B), this.options = B, this.loose = !!B.loose, this.includePrerelease = !!B.includePrerelease;
      let Q = A.trim().match(B.loose ? Lo0[HF1.LOOSE] : Lo0[HF1.FULL]);
      if (!Q) throw new TypeError(`Invalid Version: ${A}`);
      if (this.raw = A, this.major = +Q[1], this.minor = +Q[2], this.patch = +Q[3], this.major > KF1 || this.major < 0) throw new TypeError("Invalid major version");
      if (this.minor > KF1 || this.minor < 0) throw new TypeError("Invalid minor version");
      if (this.patch > KF1 || this.patch < 0) throw new TypeError("Invalid patch version");
      if (!Q[4]) this.prerelease = [];
      else this.prerelease = Q[4].split(".").map((I) => {
        if (/^[0-9]+$/.test(I)) {
          let G = +I;
          if (G >= 0 && G < KF1) return G
        }
        return I
      });
      this.build = Q[5] ? Q[5].split(".") : [], this.format()
    }
    format() {
      if (this.version = `${this.major}.${this.minor}.${this.patch}`, this.prerelease.length) this.version += `-${this.prerelease.join(".")}`;
      return this.version
    }
    toString() {
      return this.version
    }
    compare(A) {
      if (CF1("SemVer.compare", this.version, this.options, A), !(A instanceof CK)) {
        if (typeof A === "string" && A === this.version) return 0;
        A = new CK(A, this.options)
      }
      if (A.version === this.version) return 0;
      return this.compareMain(A) || this.comparePre(A)
    }
    compareMain(A) {
      if (!(A instanceof CK)) A = new CK(A, this.options);
      return mm(this.major, A.major) || mm(this.minor, A.minor) || mm(this.patch, A.patch)
    }
    comparePre(A) {
      if (!(A instanceof CK)) A = new CK(A, this.options);
      if (this.prerelease.length && !A.prerelease.length) return -1;
      else if (!this.prerelease.length && A.prerelease.length) return 1;
      else if (!this.prerelease.length && !A.prerelease.length) return 0;
      let B = 0;
      do {
        let Q = this.prerelease[B],
          I = A.prerelease[B];
        if (CF1("prerelease compare", B, Q, I), Q === void 0 && I === void 0) return 0;
        else if (I === void 0) return 1;
        else if (Q === void 0) return -1;
        else if (Q === I) continue;
        else return mm(Q, I)
      } while (++B)
    }
    compareBuild(A) {
      if (!(A instanceof CK)) A = new CK(A, this.options);
      let B = 0;
      do {
        let Q = this.build[B],
          I = A.build[B];
        if (CF1("build compare", B, Q, I), Q === void 0 && I === void 0) return 0;
        else if (I === void 0) return 1;
        else if (Q === void 0) return -1;
        else if (Q === I) continue;
        else return mm(Q, I)
      } while (++B)
    }
    inc(A, B, Q) {
      if (A.startsWith("pre")) {
        if (!B && Q === !1) throw new Error("invalid increment argument: identifier is empty");
        if (B) {
          let I = new RegExp(`^${this.options.loose?Ro0[HF1.PRERELEASELOOSE]:Ro0[HF1.PRERELEASE]}$`),
            G = `-${B}`.match(I);
          if (!G || G[1] !== B) throw new Error(`invalid identifier: ${B}`)
        }
      }
      switch (A) {
        case "premajor":
          this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", B, Q);
          break;
        case "preminor":
          this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", B, Q);
          break;
        case "prepatch":
          this.prerelease.length = 0, this.inc("patch", B, Q), this.inc("pre", B, Q);
          break;
        case "prerelease":
          if (this.prerelease.length === 0) this.inc("patch", B, Q);
          this.inc("pre", B, Q);
          break;
        case "release":
          if (this.prerelease.length === 0) throw new Error(`version ${this.raw} is not a prerelease`);
          this.prerelease.length = 0;
          break;
        case "major":
          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) this.major++;
          this.minor = 0, this.patch = 0, this.prerelease = [];
          break;
        case "minor":
          if (this.patch !== 0 || this.prerelease.length === 0) this.minor++;
          this.patch = 0, this.prerelease = [];
          break;
        case "patch":
          if (this.prerelease.length === 0) this.patch++;
          this.prerelease = [];
          break;
        case "pre": {
          let I = Number(Q) ? 1 : 0;
          if (this.prerelease.length === 0) this.prerelease = [I];
          else {
            let G = this.prerelease.length;
            while (--G >= 0)
              if (typeof this.prerelease[G] === "number") this.prerelease[G]++, G = -2;
            if (G === -1) {
              if (B === this.prerelease.join(".") && Q === !1) throw new Error("invalid increment argument: identifier already exists");
              this.prerelease.push(I)
            }
          }
          if (B) {
            let G = [B, I];
            if (Q === !1) G = [B];
            if (mm(this.prerelease[0], B) === 0) {
              if (isNaN(this.prerelease[1])) this.prerelease = G
            } else this.prerelease = G
          }
          break
        }
        default:
          throw new Error(`invalid increment argument: ${A}`)
      }
      if (this.raw = this.format(), this.build.length) this.raw += `+${this.build.join(".")}`;
      return this
    }
  }
  Oo0.exports = CK
})
// @from(Start 5750457, End 5750709)
bj = z((mf8, Po0) => {
  var To0 = gZ(),
    lO6 = (A, B, Q = !1) => {
      if (A instanceof To0) return A;
      try {
        return new To0(A, B)
      } catch (I) {
        if (!Q) return null;
        throw I
      }
    };
  Po0.exports = lO6
})
// @from(Start 5750715, End 5750867)
_o0 = z((df8, So0) => {
  var iO6 = bj(),
    nO6 = (A, B) => {
      let Q = iO6(A, B);
      return Q ? Q.version : null
    };
  So0.exports = nO6
})
// @from(Start 5750873, End 5751054)
yo0 = z((uf8, jo0) => {
  var aO6 = bj(),
    sO6 = (A, B) => {
      let Q = aO6(A.trim().replace(/^[=v]+/, ""), B);
      return Q ? Q.version : null
    };
  jo0.exports = sO6
})
// @from(Start 5751060, End 5751362)
fo0 = z((pf8, xo0) => {
  var ko0 = gZ(),
    rO6 = (A, B, Q, I, G) => {
      if (typeof Q === "string") G = I, I = Q, Q = void 0;
      try {
        return new ko0(A instanceof ko0 ? A.version : A, Q).inc(B, I, G).version
      } catch (Z) {
        return null
      }
    };
  xo0.exports = rO6
})
// @from(Start 5751368, End 5752115)
go0 = z((cf8, bo0) => {
  var vo0 = bj(),
    oO6 = (A, B) => {
      let Q = vo0(A, null, !0),
        I = vo0(B, null, !0),
        G = Q.compare(I);
      if (G === 0) return null;
      let Z = G > 0,
        D = Z ? Q : I,
        Y = Z ? I : Q,
        W = !!D.prerelease.length;
      if (!!Y.prerelease.length && !W) {
        if (!Y.patch && !Y.minor) return "major";
        if (Y.compareMain(D) === 0) {
          if (Y.minor && !Y.patch) return "minor";
          return "patch"
        }
      }
      let F = W ? "pre" : "";
      if (Q.major !== I.major) return F + "major";
      if (Q.minor !== I.minor) return F + "minor";
      if (Q.patch !== I.patch) return F + "patch";
      return "prerelease"
    };
  bo0.exports = oO6
})
// @from(Start 5752121, End 5752226)
mo0 = z((lf8, ho0) => {
  var tO6 = gZ(),
    eO6 = (A, B) => new tO6(A, B).major;
  ho0.exports = eO6
})
// @from(Start 5752232, End 5752337)
uo0 = z((if8, do0) => {
  var AT6 = gZ(),
    BT6 = (A, B) => new AT6(A, B).minor;
  do0.exports = BT6
})
// @from(Start 5752343, End 5752448)
co0 = z((nf8, po0) => {
  var QT6 = gZ(),
    IT6 = (A, B) => new QT6(A, B).patch;
  po0.exports = IT6
})
// @from(Start 5752454, End 5752632)
io0 = z((af8, lo0) => {
  var GT6 = bj(),
    ZT6 = (A, B) => {
      let Q = GT6(A, B);
      return Q && Q.prerelease.length ? Q.prerelease : null
    };
  lo0.exports = ZT6
})
// @from(Start 5752638, End 5752762)
sX = z((sf8, ao0) => {
  var no0 = gZ(),
    DT6 = (A, B, Q) => new no0(A, Q).compare(new no0(B, Q));
  ao0.exports = DT6
})
// @from(Start 5752768, End 5752869)
ro0 = z((rf8, so0) => {
  var YT6 = sX(),
    WT6 = (A, B, Q) => YT6(B, A, Q);
  so0.exports = WT6
})
// @from(Start 5752875, End 5752974)
to0 = z((of8, oo0) => {
  var JT6 = sX(),
    FT6 = (A, B) => JT6(A, B, !0);
  oo0.exports = FT6
})
// @from(Start 5752980, End 5753179)
zF1 = z((tf8, At0) => {
  var eo0 = gZ(),
    XT6 = (A, B, Q) => {
      let I = new eo0(A, Q),
        G = new eo0(B, Q);
      return I.compare(G) || I.compareBuild(G)
    };
  At0.exports = XT6
})
// @from(Start 5753185, End 5753302)
Qt0 = z((ef8, Bt0) => {
  var VT6 = zF1(),
    CT6 = (A, B) => A.sort((Q, I) => VT6(Q, I, B));
  Bt0.exports = CT6
})
// @from(Start 5753308, End 5753425)
Gt0 = z((Av8, It0) => {
  var KT6 = zF1(),
    HT6 = (A, B) => A.sort((Q, I) => KT6(I, Q, B));
  It0.exports = HT6
})
// @from(Start 5753431, End 5753535)
Rt = z((Bv8, Zt0) => {
  var zT6 = sX(),
    wT6 = (A, B, Q) => zT6(A, B, Q) > 0;
  Zt0.exports = wT6
})
// @from(Start 5753541, End 5753646)
wF1 = z((Qv8, Dt0) => {
  var ET6 = sX(),
    UT6 = (A, B, Q) => ET6(A, B, Q) < 0;
  Dt0.exports = UT6
})
// @from(Start 5753652, End 5753759)
Qi1 = z((Iv8, Yt0) => {
  var NT6 = sX(),
    $T6 = (A, B, Q) => NT6(A, B, Q) === 0;
  Yt0.exports = $T6
})
// @from(Start 5753765, End 5753872)
Ii1 = z((Gv8, Wt0) => {
  var qT6 = sX(),
    MT6 = (A, B, Q) => qT6(A, B, Q) !== 0;
  Wt0.exports = MT6
})
// @from(Start 5753878, End 5753983)
Ot = z((Zv8, Jt0) => {
  var LT6 = sX(),
    RT6 = (A, B, Q) => LT6(A, B, Q) >= 0;
  Jt0.exports = RT6
})
// @from(Start 5753989, End 5754095)
EF1 = z((Dv8, Ft0) => {
  var OT6 = sX(),
    TT6 = (A, B, Q) => OT6(A, B, Q) <= 0;
  Ft0.exports = TT6
})
// @from(Start 5754101, End 5755017)
Gi1 = z((Yv8, Xt0) => {
  var PT6 = Qi1(),
    ST6 = Ii1(),
    _T6 = Rt(),
    jT6 = Ot(),
    yT6 = wF1(),
    kT6 = EF1(),
    xT6 = (A, B, Q, I) => {
      switch (B) {
        case "===":
          if (typeof A === "object") A = A.version;
          if (typeof Q === "object") Q = Q.version;
          return A === Q;
        case "!==":
          if (typeof A === "object") A = A.version;
          if (typeof Q === "object") Q = Q.version;
          return A !== Q;
        case "":
        case "=":
        case "==":
          return PT6(A, Q, I);
        case "!=":
          return ST6(A, Q, I);
        case ">":
          return _T6(A, Q, I);
        case ">=":
          return jT6(A, Q, I);
        case "<":
          return yT6(A, Q, I);
        case "<=":
          return kT6(A, Q, I);
        default:
          throw new TypeError(`Invalid operator: ${B}`)
      }
    };
  Xt0.exports = xT6
})
// @from(Start 5755023, End 5756084)
Zi1 = z((Wv8, Vt0) => {
  var fT6 = gZ(),
    vT6 = bj(),
    {
      safeRe: UF1,
      t: NF1
    } = hm(),
    bT6 = (A, B) => {
      if (A instanceof fT6) return A;
      if (typeof A === "number") A = String(A);
      if (typeof A !== "string") return null;
      B = B || {};
      let Q = null;
      if (!B.rtl) Q = A.match(B.includePrerelease ? UF1[NF1.COERCEFULL] : UF1[NF1.COERCE]);
      else {
        let W = B.includePrerelease ? UF1[NF1.COERCERTLFULL] : UF1[NF1.COERCERTL],
          J;
        while ((J = W.exec(A)) && (!Q || Q.index + Q[0].length !== A.length)) {
          if (!Q || J.index + J[0].length !== Q.index + Q[0].length) Q = J;
          W.lastIndex = J.index + J[1].length + J[2].length
        }
        W.lastIndex = -1
      }
      if (Q === null) return null;
      let I = Q[2],
        G = Q[3] || "0",
        Z = Q[4] || "0",
        D = B.includePrerelease && Q[5] ? `-${Q[5]}` : "",
        Y = B.includePrerelease && Q[6] ? `+${Q[6]}` : "";
      return vT6(`${I}.${G}.${Z}${D}${Y}`, B)
    };
  Vt0.exports = bT6
})
// @from(Start 5756090, End 5756662)
Ht0 = z((Jv8, Kt0) => {
  class Ct0 {
    constructor() {
      this.max = 1000, this.map = new Map
    }
    get(A) {
      let B = this.map.get(A);
      if (B === void 0) return;
      else return this.map.delete(A), this.map.set(A, B), B
    }
    delete(A) {
      return this.map.delete(A)
    }
    set(A, B) {
      if (!this.delete(A) && B !== void 0) {
        if (this.map.size >= this.max) {
          let I = this.map.keys().next().value;
          this.delete(I)
        }
        this.map.set(A, B)
      }
      return this
    }
  }
  Kt0.exports = Ct0
})
// @from(Start 5756668, End 5765039)
rX = z((Fv8, Ut0) => {
  var gT6 = /\s+/g;
  class Tt {
    constructor(A, B) {
      if (B = mT6(B), A instanceof Tt)
        if (A.loose === !!B.loose && A.includePrerelease === !!B.includePrerelease) return A;
        else return new Tt(A.raw, B);
      if (A instanceof Di1) return this.raw = A.value, this.set = [
        [A]
      ], this.formatted = void 0, this;
      if (this.options = B, this.loose = !!B.loose, this.includePrerelease = !!B.includePrerelease, this.raw = A.trim().replace(gT6, " "), this.set = this.raw.split("||").map((Q) => this.parseRange(Q.trim())).filter((Q) => Q.length), !this.set.length) throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
      if (this.set.length > 1) {
        let Q = this.set[0];
        if (this.set = this.set.filter((I) => !wt0(I[0])), this.set.length === 0) this.set = [Q];
        else if (this.set.length > 1) {
          for (let I of this.set)
            if (I.length === 1 && nT6(I[0])) {
              this.set = [I];
              break
            }
        }
      }
      this.formatted = void 0
    }
    get range() {
      if (this.formatted === void 0) {
        this.formatted = "";
        for (let A = 0; A < this.set.length; A++) {
          if (A > 0) this.formatted += "||";
          let B = this.set[A];
          for (let Q = 0; Q < B.length; Q++) {
            if (Q > 0) this.formatted += " ";
            this.formatted += B[Q].toString().trim()
          }
        }
      }
      return this.formatted
    }
    format() {
      return this.range
    }
    toString() {
      return this.range
    }
    parseRange(A) {
      let Q = ((this.options.includePrerelease && lT6) | (this.options.loose && iT6)) + ":" + A,
        I = zt0.get(Q);
      if (I) return I;
      let G = this.options.loose,
        Z = G ? QW[gD.HYPHENRANGELOOSE] : QW[gD.HYPHENRANGE];
      A = A.replace(Z, IP6(this.options.includePrerelease)), LB("hyphen replace", A), A = A.replace(QW[gD.COMPARATORTRIM], uT6), LB("comparator trim", A), A = A.replace(QW[gD.TILDETRIM], pT6), LB("tilde trim", A), A = A.replace(QW[gD.CARETTRIM], cT6), LB("caret trim", A);
      let D = A.split(" ").map((F) => aT6(F, this.options)).join(" ").split(/\s+/).map((F) => QP6(F, this.options));
      if (G) D = D.filter((F) => {
        return LB("loose invalid filter", F, this.options), !!F.match(QW[gD.COMPARATORLOOSE])
      });
      LB("range list", D);
      let Y = new Map,
        W = D.map((F) => new Di1(F, this.options));
      for (let F of W) {
        if (wt0(F)) return [F];
        Y.set(F.value, F)
      }
      if (Y.size > 1 && Y.has("")) Y.delete("");
      let J = [...Y.values()];
      return zt0.set(Q, J), J
    }
    intersects(A, B) {
      if (!(A instanceof Tt)) throw new TypeError("a Range is required");
      return this.set.some((Q) => {
        return Et0(Q, B) && A.set.some((I) => {
          return Et0(I, B) && Q.every((G) => {
            return I.every((Z) => {
              return G.intersects(Z, B)
            })
          })
        })
      })
    }
    test(A) {
      if (!A) return !1;
      if (typeof A === "string") try {
        A = new dT6(A, this.options)
      } catch (B) {
        return !1
      }
      for (let B = 0; B < this.set.length; B++)
        if (GP6(this.set[B], A, this.options)) return !0;
      return !1
    }
  }
  Ut0.exports = Tt;
  var hT6 = Ht0(),
    zt0 = new hT6,
    mT6 = VF1(),
    Di1 = Pt(),
    LB = Lt(),
    dT6 = gZ(),
    {
      safeRe: QW,
      t: gD,
      comparatorTrimReplace: uT6,
      tildeTrimReplace: pT6,
      caretTrimReplace: cT6
    } = hm(),
    {
      FLAG_INCLUDE_PRERELEASE: lT6,
      FLAG_LOOSE: iT6
    } = Mt(),
    wt0 = (A) => A.value === "<0.0.0-0",
    nT6 = (A) => A.value === "",
    Et0 = (A, B) => {
      let Q = !0,
        I = A.slice(),
        G = I.pop();
      while (Q && I.length) Q = I.every((Z) => {
        return G.intersects(Z, B)
      }), G = I.pop();
      return Q
    },
    aT6 = (A, B) => {
      return LB("comp", A, B), A = oT6(A, B), LB("caret", A), A = sT6(A, B), LB("tildes", A), A = eT6(A, B), LB("xrange", A), A = BP6(A, B), LB("stars", A), A
    },
    hD = (A) => !A || A.toLowerCase() === "x" || A === "*",
    sT6 = (A, B) => {
      return A.trim().split(/\s+/).map((Q) => rT6(Q, B)).join(" ")
    },
    rT6 = (A, B) => {
      let Q = B.loose ? QW[gD.TILDELOOSE] : QW[gD.TILDE];
      return A.replace(Q, (I, G, Z, D, Y) => {
        LB("tilde", A, I, G, Z, D, Y);
        let W;
        if (hD(G)) W = "";
        else if (hD(Z)) W = `>=${G}.0.0 <${+G+1}.0.0-0`;
        else if (hD(D)) W = `>=${G}.${Z}.0 <${G}.${+Z+1}.0-0`;
        else if (Y) LB("replaceTilde pr", Y), W = `>=${G}.${Z}.${D}-${Y} <${G}.${+Z+1}.0-0`;
        else W = `>=${G}.${Z}.${D} <${G}.${+Z+1}.0-0`;
        return LB("tilde return", W), W
      })
    },
    oT6 = (A, B) => {
      return A.trim().split(/\s+/).map((Q) => tT6(Q, B)).join(" ")
    },
    tT6 = (A, B) => {
      LB("caret", A, B);
      let Q = B.loose ? QW[gD.CARETLOOSE] : QW[gD.CARET],
        I = B.includePrerelease ? "-0" : "";
      return A.replace(Q, (G, Z, D, Y, W) => {
        LB("caret", A, G, Z, D, Y, W);
        let J;
        if (hD(Z)) J = "";
        else if (hD(D)) J = `>=${Z}.0.0${I} <${+Z+1}.0.0-0`;
        else if (hD(Y))
          if (Z === "0") J = `>=${Z}.${D}.0${I} <${Z}.${+D+1}.0-0`;
          else J = `>=${Z}.${D}.0${I} <${+Z+1}.0.0-0`;
        else if (W)
          if (LB("replaceCaret pr", W), Z === "0")
            if (D === "0") J = `>=${Z}.${D}.${Y}-${W} <${Z}.${D}.${+Y+1}-0`;
            else J = `>=${Z}.${D}.${Y}-${W} <${Z}.${+D+1}.0-0`;
        else J = `>=${Z}.${D}.${Y}-${W} <${+Z+1}.0.0-0`;
        else if (LB("no pr"), Z === "0")
          if (D === "0") J = `>=${Z}.${D}.${Y}${I} <${Z}.${D}.${+Y+1}-0`;
          else J = `>=${Z}.${D}.${Y}${I} <${Z}.${+D+1}.0-0`;
        else J = `>=${Z}.${D}.${Y} <${+Z+1}.0.0-0`;
        return LB("caret return", J), J
      })
    },
    eT6 = (A, B) => {
      return LB("replaceXRanges", A, B), A.split(/\s+/).map((Q) => AP6(Q, B)).join(" ")
    },
    AP6 = (A, B) => {
      A = A.trim();
      let Q = B.loose ? QW[gD.XRANGELOOSE] : QW[gD.XRANGE];
      return A.replace(Q, (I, G, Z, D, Y, W) => {
        LB("xRange", A, I, G, Z, D, Y, W);
        let J = hD(Z),
          F = J || hD(D),
          X = F || hD(Y),
          V = X;
        if (G === "=" && V) G = "";
        if (W = B.includePrerelease ? "-0" : "", J)
          if (G === ">" || G === "<") I = "<0.0.0-0";
          else I = "*";
        else if (G && V) {
          if (F) D = 0;
          if (Y = 0, G === ">")
            if (G = ">=", F) Z = +Z + 1, D = 0, Y = 0;
            else D = +D + 1, Y = 0;
          else if (G === "<=")
            if (G = "<", F) Z = +Z + 1;
            else D = +D + 1;
          if (G === "<") W = "-0";
          I = `${G+Z}.${D}.${Y}${W}`
        } else if (F) I = `>=${Z}.0.0${W} <${+Z+1}.0.0-0`;
        else if (X) I = `>=${Z}.${D}.0${W} <${Z}.${+D+1}.0-0`;
        return LB("xRange return", I), I
      })
    },
    BP6 = (A, B) => {
      return LB("replaceStars", A, B), A.trim().replace(QW[gD.STAR], "")
    },
    QP6 = (A, B) => {
      return LB("replaceGTE0", A, B), A.trim().replace(QW[B.includePrerelease ? gD.GTE0PRE : gD.GTE0], "")
    },
    IP6 = (A) => (B, Q, I, G, Z, D, Y, W, J, F, X, V) => {
      if (hD(I)) Q = "";
      else if (hD(G)) Q = `>=${I}.0.0${A?"-0":""}`;
      else if (hD(Z)) Q = `>=${I}.${G}.0${A?"-0":""}`;
      else if (D) Q = `>=${Q}`;
      else Q = `>=${Q}${A?"-0":""}`;
      if (hD(J)) W = "";
      else if (hD(F)) W = `<${+J+1}.0.0-0`;
      else if (hD(X)) W = `<${J}.${+F+1}.0-0`;
      else if (V) W = `<=${J}.${F}.${X}-${V}`;
      else if (A) W = `<${J}.${F}.${+X+1}-0`;
      else W = `<=${W}`;
      return `${Q} ${W}`.trim()
    },
    GP6 = (A, B, Q) => {
      for (let I = 0; I < A.length; I++)
        if (!A[I].test(B)) return !1;
      if (B.prerelease.length && !Q.includePrerelease) {
        for (let I = 0; I < A.length; I++) {
          if (LB(A[I].semver), A[I].semver === Di1.ANY) continue;
          if (A[I].semver.prerelease.length > 0) {
            let G = A[I].semver;
            if (G.major === B.major && G.minor === B.minor && G.patch === B.patch) return !0
          }
        }
        return !1
      }
      return !0
    }
})
// @from(Start 5765045, End 5767588)
Pt = z((Xv8, Rt0) => {
  var St = Symbol("SemVer ANY");
  class $F1 {
    static get ANY() {
      return St
    }
    constructor(A, B) {
      if (B = Nt0(B), A instanceof $F1)
        if (A.loose === !!B.loose) return A;
        else A = A.value;
      if (A = A.trim().split(/\s+/).join(" "), Wi1("comparator", A, B), this.options = B, this.loose = !!B.loose, this.parse(A), this.semver === St) this.value = "";
      else this.value = this.operator + this.semver.version;
      Wi1("comp", this)
    }
    parse(A) {
      let B = this.options.loose ? $t0[qt0.COMPARATORLOOSE] : $t0[qt0.COMPARATOR],
        Q = A.match(B);
      if (!Q) throw new TypeError(`Invalid comparator: ${A}`);
      if (this.operator = Q[1] !== void 0 ? Q[1] : "", this.operator === "=") this.operator = "";
      if (!Q[2]) this.semver = St;
      else this.semver = new Mt0(Q[2], this.options.loose)
    }
    toString() {
      return this.value
    }
    test(A) {
      if (Wi1("Comparator.test", A, this.options.loose), this.semver === St || A === St) return !0;
      if (typeof A === "string") try {
        A = new Mt0(A, this.options)
      } catch (B) {
        return !1
      }
      return Yi1(A, this.operator, this.semver, this.options)
    }
    intersects(A, B) {
      if (!(A instanceof $F1)) throw new TypeError("a Comparator is required");
      if (this.operator === "") {
        if (this.value === "") return !0;
        return new Lt0(A.value, B).test(this.value)
      } else if (A.operator === "") {
        if (A.value === "") return !0;
        return new Lt0(this.value, B).test(A.semver)
      }
      if (B = Nt0(B), B.includePrerelease && (this.value === "<0.0.0-0" || A.value === "<0.0.0-0")) return !1;
      if (!B.includePrerelease && (this.value.startsWith("<0.0.0") || A.value.startsWith("<0.0.0"))) return !1;
      if (this.operator.startsWith(">") && A.operator.startsWith(">")) return !0;
      if (this.operator.startsWith("<") && A.operator.startsWith("<")) return !0;
      if (this.semver.version === A.semver.version && this.operator.includes("=") && A.operator.includes("=")) return !0;
      if (Yi1(this.semver, "<", A.semver, B) && this.operator.startsWith(">") && A.operator.startsWith("<")) return !0;
      if (Yi1(this.semver, ">", A.semver, B) && this.operator.startsWith("<") && A.operator.startsWith(">")) return !0;
      return !1
    }
  }
  Rt0.exports = $F1;
  var Nt0 = VF1(),
    {
      safeRe: $t0,
      t: qt0
    } = hm(),
    Yi1 = Gi1(),
    Wi1 = Lt(),
    Mt0 = gZ(),
    Lt0 = rX()
})
// @from(Start 5767594, End 5767796)
dm = z((Vv8, Ot0) => {
  var ZP6 = rX(),
    DP6 = (A, B, Q) => {
      try {
        B = new ZP6(B, Q)
      } catch (I) {
        return !1
      }
      return B.test(A)
    };
  Ot0.exports = DP6
})
// @from(Start 5767802, End 5767967)
Pt0 = z((Cv8, Tt0) => {
  var YP6 = rX(),
    WP6 = (A, B) => new YP6(A, B).set.map((Q) => Q.map((I) => I.value).join(" ").trim().split(" "));
  Tt0.exports = WP6
})
// @from(Start 5767973, End 5768372)
_t0 = z((Kv8, St0) => {
  var JP6 = gZ(),
    FP6 = rX(),
    XP6 = (A, B, Q) => {
      let I = null,
        G = null,
        Z = null;
      try {
        Z = new FP6(B, Q)
      } catch (D) {
        return null
      }
      return A.forEach((D) => {
        if (Z.test(D)) {
          if (!I || G.compare(D) === -1) I = D, G = new JP6(I, Q)
        }
      }), I
    };
  St0.exports = XP6
})
// @from(Start 5768378, End 5768776)
yt0 = z((Hv8, jt0) => {
  var VP6 = gZ(),
    CP6 = rX(),
    KP6 = (A, B, Q) => {
      let I = null,
        G = null,
        Z = null;
      try {
        Z = new CP6(B, Q)
      } catch (D) {
        return null
      }
      return A.forEach((D) => {
        if (Z.test(D)) {
          if (!I || G.compare(D) === 1) I = D, G = new VP6(I, Q)
        }
      }), I
    };
  jt0.exports = KP6
})
// @from(Start 5768782, End 5769833)
ft0 = z((zv8, xt0) => {
  var Ji1 = gZ(),
    HP6 = rX(),
    kt0 = Rt(),
    zP6 = (A, B) => {
      A = new HP6(A, B);
      let Q = new Ji1("0.0.0");
      if (A.test(Q)) return Q;
      if (Q = new Ji1("0.0.0-0"), A.test(Q)) return Q;
      Q = null;
      for (let I = 0; I < A.set.length; ++I) {
        let G = A.set[I],
          Z = null;
        if (G.forEach((D) => {
            let Y = new Ji1(D.semver.version);
            switch (D.operator) {
              case ">":
                if (Y.prerelease.length === 0) Y.patch++;
                else Y.prerelease.push(0);
                Y.raw = Y.format();
              case "":
              case ">=":
                if (!Z || kt0(Y, Z)) Z = Y;
                break;
              case "<":
              case "<=":
                break;
              default:
                throw new Error(`Unexpected operation: ${D.operator}`)
            }
          }), Z && (!Q || kt0(Q, Z))) Q = Z
      }
      if (Q && A.test(Q)) return Q;
      return null
    };
  xt0.exports = zP6
})
// @from(Start 5769839, End 5770034)
bt0 = z((wv8, vt0) => {
  var wP6 = rX(),
    EP6 = (A, B) => {
      try {
        return new wP6(A, B).range || "*"
      } catch (Q) {
        return null
      }
    };
  vt0.exports = EP6
})
// @from(Start 5770040, End 5771242)
qF1 = z((Ev8, dt0) => {
  var UP6 = gZ(),
    mt0 = Pt(),
    {
      ANY: NP6
    } = mt0,
    $P6 = rX(),
    qP6 = dm(),
    gt0 = Rt(),
    ht0 = wF1(),
    MP6 = EF1(),
    LP6 = Ot(),
    RP6 = (A, B, Q, I) => {
      A = new UP6(A, I), B = new $P6(B, I);
      let G, Z, D, Y, W;
      switch (Q) {
        case ">":
          G = gt0, Z = MP6, D = ht0, Y = ">", W = ">=";
          break;
        case "<":
          G = ht0, Z = LP6, D = gt0, Y = "<", W = "<=";
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"')
      }
      if (qP6(A, B, I)) return !1;
      for (let J = 0; J < B.set.length; ++J) {
        let F = B.set[J],
          X = null,
          V = null;
        if (F.forEach((C) => {
            if (C.semver === NP6) C = new mt0(">=0.0.0");
            if (X = X || C, V = V || C, G(C.semver, X.semver, I)) X = C;
            else if (D(C.semver, V.semver, I)) V = C
          }), X.operator === Y || X.operator === W) return !1;
        if ((!V.operator || V.operator === Y) && Z(A, V.semver)) return !1;
        else if (V.operator === W && D(A, V.semver)) return !1
      }
      return !0
    };
  dt0.exports = RP6
})
// @from(Start 5771248, End 5771355)
pt0 = z((Uv8, ut0) => {
  var OP6 = qF1(),
    TP6 = (A, B, Q) => OP6(A, B, ">", Q);
  ut0.exports = TP6
})
// @from(Start 5771361, End 5771468)
lt0 = z((Nv8, ct0) => {
  var PP6 = qF1(),
    SP6 = (A, B, Q) => PP6(A, B, "<", Q);
  ct0.exports = SP6
})
// @from(Start 5771474, End 5771640)
at0 = z(($v8, nt0) => {
  var it0 = rX(),
    _P6 = (A, B, Q) => {
      return A = new it0(A, Q), B = new it0(B, Q), A.intersects(B, Q)
    };
  nt0.exports = _P6
})
// @from(Start 5771646, End 5772366)
rt0 = z((qv8, st0) => {
  var jP6 = dm(),
    yP6 = sX();
  st0.exports = (A, B, Q) => {
    let I = [],
      G = null,
      Z = null,
      D = A.sort((F, X) => yP6(F, X, Q));
    for (let F of D)
      if (jP6(F, B, Q)) {
        if (Z = F, !G) G = F
      } else {
        if (Z) I.push([G, Z]);
        Z = null, G = null
      } if (G) I.push([G, null]);
    let Y = [];
    for (let [F, X] of I)
      if (F === X) Y.push(F);
      else if (!X && F === D[0]) Y.push("*");
    else if (!X) Y.push(`>=${F}`);
    else if (F === D[0]) Y.push(`<=${X}`);
    else Y.push(`${F} - ${X}`);
    let W = Y.join(" || "),
      J = typeof B.raw === "string" ? B.raw : String(B);
    return W.length < J.length ? W : B
  }
})
// @from(Start 5772372, End 5775801)
Qe0 = z((Mv8, Be0) => {
  var ot0 = rX(),
    Xi1 = Pt(),
    {
      ANY: Fi1
    } = Xi1,
    _t = dm(),
    Vi1 = sX(),
    kP6 = (A, B, Q = {}) => {
      if (A === B) return !0;
      A = new ot0(A, Q), B = new ot0(B, Q);
      let I = !1;
      A: for (let G of A.set) {
        for (let Z of B.set) {
          let D = fP6(G, Z, Q);
          if (I = I || D !== null, D) continue A
        }
        if (I) return !1
      }
      return !0
    },
    xP6 = [new Xi1(">=0.0.0-0")],
    tt0 = [new Xi1(">=0.0.0")],
    fP6 = (A, B, Q) => {
      if (A === B) return !0;
      if (A.length === 1 && A[0].semver === Fi1)
        if (B.length === 1 && B[0].semver === Fi1) return !0;
        else if (Q.includePrerelease) A = xP6;
      else A = tt0;
      if (B.length === 1 && B[0].semver === Fi1)
        if (Q.includePrerelease) return !0;
        else B = tt0;
      let I = new Set,
        G, Z;
      for (let C of A)
        if (C.operator === ">" || C.operator === ">=") G = et0(G, C, Q);
        else if (C.operator === "<" || C.operator === "<=") Z = Ae0(Z, C, Q);
      else I.add(C.semver);
      if (I.size > 1) return null;
      let D;
      if (G && Z) {
        if (D = Vi1(G.semver, Z.semver, Q), D > 0) return null;
        else if (D === 0 && (G.operator !== ">=" || Z.operator !== "<=")) return null
      }
      for (let C of I) {
        if (G && !_t(C, String(G), Q)) return null;
        if (Z && !_t(C, String(Z), Q)) return null;
        for (let K of B)
          if (!_t(C, String(K), Q)) return !1;
        return !0
      }
      let Y, W, J, F, X = Z && !Q.includePrerelease && Z.semver.prerelease.length ? Z.semver : !1,
        V = G && !Q.includePrerelease && G.semver.prerelease.length ? G.semver : !1;
      if (X && X.prerelease.length === 1 && Z.operator === "<" && X.prerelease[0] === 0) X = !1;
      for (let C of B) {
        if (F = F || C.operator === ">" || C.operator === ">=", J = J || C.operator === "<" || C.operator === "<=", G) {
          if (V) {
            if (C.semver.prerelease && C.semver.prerelease.length && C.semver.major === V.major && C.semver.minor === V.minor && C.semver.patch === V.patch) V = !1
          }
          if (C.operator === ">" || C.operator === ">=") {
            if (Y = et0(G, C, Q), Y === C && Y !== G) return !1
          } else if (G.operator === ">=" && !_t(G.semver, String(C), Q)) return !1
        }
        if (Z) {
          if (X) {
            if (C.semver.prerelease && C.semver.prerelease.length && C.semver.major === X.major && C.semver.minor === X.minor && C.semver.patch === X.patch) X = !1
          }
          if (C.operator === "<" || C.operator === "<=") {
            if (W = Ae0(Z, C, Q), W === C && W !== Z) return !1
          } else if (Z.operator === "<=" && !_t(Z.semver, String(C), Q)) return !1
        }
        if (!C.operator && (Z || G) && D !== 0) return !1
      }
      if (G && J && !Z && D !== 0) return !1;
      if (Z && F && !G && D !== 0) return !1;
      if (V || X) return !1;
      return !0
    },
    et0 = (A, B, Q) => {
      if (!A) return B;
      let I = Vi1(A.semver, B.semver, Q);
      return I > 0 ? A : I < 0 ? B : B.operator === ">" && A.operator === ">=" ? B : A
    },
    Ae0 = (A, B, Q) => {
      if (!A) return B;
      let I = Vi1(A.semver, B.semver, Q);
      return I < 0 ? A : I > 0 ? B : B.operator === "<" && A.operator === "<=" ? B : A
    };
  Be0.exports = kP6
})
// @from(Start 5775807, End 5777449)
gj = z((Lv8, Ze0) => {
  var Ci1 = hm(),
    Ie0 = Mt(),
    vP6 = gZ(),
    Ge0 = Bi1(),
    bP6 = bj(),
    gP6 = _o0(),
    hP6 = yo0(),
    mP6 = fo0(),
    dP6 = go0(),
    uP6 = mo0(),
    pP6 = uo0(),
    cP6 = co0(),
    lP6 = io0(),
    iP6 = sX(),
    nP6 = ro0(),
    aP6 = to0(),
    sP6 = zF1(),
    rP6 = Qt0(),
    oP6 = Gt0(),
    tP6 = Rt(),
    eP6 = wF1(),
    AS6 = Qi1(),
    BS6 = Ii1(),
    QS6 = Ot(),
    IS6 = EF1(),
    GS6 = Gi1(),
    ZS6 = Zi1(),
    DS6 = Pt(),
    YS6 = rX(),
    WS6 = dm(),
    JS6 = Pt0(),
    FS6 = _t0(),
    XS6 = yt0(),
    VS6 = ft0(),
    CS6 = bt0(),
    KS6 = qF1(),
    HS6 = pt0(),
    zS6 = lt0(),
    wS6 = at0(),
    ES6 = rt0(),
    US6 = Qe0();
  Ze0.exports = {
    parse: bP6,
    valid: gP6,
    clean: hP6,
    inc: mP6,
    diff: dP6,
    major: uP6,
    minor: pP6,
    patch: cP6,
    prerelease: lP6,
    compare: iP6,
    rcompare: nP6,
    compareLoose: aP6,
    compareBuild: sP6,
    sort: rP6,
    rsort: oP6,
    gt: tP6,
    lt: eP6,
    eq: AS6,
    neq: BS6,
    gte: QS6,
    lte: IS6,
    cmp: GS6,
    coerce: ZS6,
    Comparator: DS6,
    Range: YS6,
    satisfies: WS6,
    toComparators: JS6,
    maxSatisfying: FS6,
    minSatisfying: XS6,
    minVersion: VS6,
    validRange: CS6,
    outside: KS6,
    gtr: HS6,
    ltr: zS6,
    intersects: wS6,
    simplifyRange: ES6,
    subset: US6,
    SemVer: vP6,
    re: Ci1.re,
    src: Ci1.src,
    tokens: Ci1.t,
    SEMVER_SPEC_VERSION: Ie0.SEMVER_SPEC_VERSION,
    RELEASE_TYPES: Ie0.RELEASE_TYPES,
    compareIdentifiers: Ge0.compareIdentifiers,
    rcompareIdentifiers: Ge0.rcompareIdentifiers
  }
})
// @from(Start 5777455, End 5780358)
ve0 = z((Zb8, fe0) => {
  var {
    defineProperty: PF1,
    getOwnPropertyDescriptor: bS6,
    getOwnPropertyNames: gS6
  } = Object, hS6 = Object.prototype.hasOwnProperty, SF1 = (A, B) => PF1(A, "name", {
    value: B,
    configurable: !0
  }), mS6 = (A, B) => {
    for (var Q in B) PF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, dS6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of gS6(B))
        if (!hS6.call(A, G) && G !== Q) PF1(A, G, {
          get: () => B[G],
          enumerable: !(I = bS6(B, G)) || I.enumerable
        })
    }
    return A
  }, uS6 = (A) => dS6(PF1({}, "__esModule", {
    value: !0
  }), A), Te0 = {};
  mS6(Te0, {
    AlgorithmId: () => je0,
    EndpointURLScheme: () => _e0,
    FieldPosition: () => ye0,
    HttpApiKeyAuthLocation: () => Se0,
    HttpAuthLocation: () => Pe0,
    IniSectionType: () => ke0,
    RequestHandlerProtocol: () => xe0,
    SMITHY_CONTEXT_KEY: () => nS6,
    getDefaultClientConfiguration: () => lS6,
    resolveDefaultRuntimeConfig: () => iS6
  });
  fe0.exports = uS6(Te0);
  var Pe0 = ((A) => {
      return A.HEADER = "header", A.QUERY = "query", A
    })(Pe0 || {}),
    Se0 = ((A) => {
      return A.HEADER = "header", A.QUERY = "query", A
    })(Se0 || {}),
    _e0 = ((A) => {
      return A.HTTP = "http", A.HTTPS = "https", A
    })(_e0 || {}),
    je0 = ((A) => {
      return A.MD5 = "md5", A.CRC32 = "crc32", A.CRC32C = "crc32c", A.SHA1 = "sha1", A.SHA256 = "sha256", A
    })(je0 || {}),
    pS6 = SF1((A) => {
      let B = [];
      if (A.sha256 !== void 0) B.push({
        algorithmId: () => "sha256",
        checksumConstructor: () => A.sha256
      });
      if (A.md5 != null) B.push({
        algorithmId: () => "md5",
        checksumConstructor: () => A.md5
      });
      return {
        _checksumAlgorithms: B,
        addChecksumAlgorithm(Q) {
          this._checksumAlgorithms.push(Q)
        },
        checksumAlgorithms() {
          return this._checksumAlgorithms
        }
      }
    }, "getChecksumConfiguration"),
    cS6 = SF1((A) => {
      let B = {};
      return A.checksumAlgorithms().forEach((Q) => {
        B[Q.algorithmId()] = Q.checksumConstructor()
      }), B
    }, "resolveChecksumRuntimeConfig"),
    lS6 = SF1((A) => {
      return {
        ...pS6(A)
      }
    }, "getDefaultClientConfiguration"),
    iS6 = SF1((A) => {
      return {
        ...cS6(A)
      }
    }, "resolveDefaultRuntimeConfig"),
    ye0 = ((A) => {
      return A[A.HEADER = 0] = "HEADER", A[A.TRAILER = 1] = "TRAILER", A
    })(ye0 || {}),
    nS6 = "__smithy_context",
    ke0 = ((A) => {
      return A.PROFILE = "profile", A.SSO_SESSION = "sso-session", A.SERVICES = "services", A
    })(ke0 || {}),
    xe0 = ((A) => {
      return A.HTTP_0_9 = "http/0.9", A.HTTP_1_0 = "http/1.0", A.TDS_8_0 = "tds/8.0", A
    })(xe0 || {})
})
// @from(Start 5780364, End 5781462)
de0 = z((Db8, me0) => {
  var {
    defineProperty: _F1,
    getOwnPropertyDescriptor: aS6,
    getOwnPropertyNames: sS6
  } = Object, rS6 = Object.prototype.hasOwnProperty, ge0 = (A, B) => _F1(A, "name", {
    value: B,
    configurable: !0
  }), oS6 = (A, B) => {
    for (var Q in B) _F1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, tS6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of sS6(B))
        if (!rS6.call(A, G) && G !== Q) _F1(A, G, {
          get: () => B[G],
          enumerable: !(I = aS6(B, G)) || I.enumerable
        })
    }
    return A
  }, eS6 = (A) => tS6(_F1({}, "__esModule", {
    value: !0
  }), A), he0 = {};
  oS6(he0, {
    getSmithyContext: () => A_6,
    normalizeProvider: () => B_6
  });
  me0.exports = eS6(he0);
  var be0 = ve0(),
    A_6 = ge0((A) => A[be0.SMITHY_CONTEXT_KEY] || (A[be0.SMITHY_CONTEXT_KEY] = {}), "getSmithyContext"),
    B_6 = ge0((A) => {
      if (typeof A === "function") return A;
      let B = Promise.resolve(A);
      return () => B
    }, "normalizeProvider")
})
// @from(Start 5781468, End 5782421)
qi1 = z((Yb8, pe0) => {
  var {
    defineProperty: jF1,
    getOwnPropertyDescriptor: Q_6,
    getOwnPropertyNames: I_6
  } = Object, G_6 = Object.prototype.hasOwnProperty, Z_6 = (A, B) => jF1(A, "name", {
    value: B,
    configurable: !0
  }), D_6 = (A, B) => {
    for (var Q in B) jF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Y_6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of I_6(B))
        if (!G_6.call(A, G) && G !== Q) jF1(A, G, {
          get: () => B[G],
          enumerable: !(I = Q_6(B, G)) || I.enumerable
        })
    }
    return A
  }, W_6 = (A) => Y_6(jF1({}, "__esModule", {
    value: !0
  }), A), ue0 = {};
  D_6(ue0, {
    isArrayBuffer: () => J_6
  });
  pe0.exports = W_6(ue0);
  var J_6 = Z_6((A) => typeof ArrayBuffer === "function" && A instanceof ArrayBuffer || Object.prototype.toString.call(A) === "[object ArrayBuffer]", "isArrayBuffer")
})
// @from(Start 5782427, End 5783776)
ne0 = z((Wb8, ie0) => {
  var {
    defineProperty: yF1,
    getOwnPropertyDescriptor: F_6,
    getOwnPropertyNames: X_6
  } = Object, V_6 = Object.prototype.hasOwnProperty, ce0 = (A, B) => yF1(A, "name", {
    value: B,
    configurable: !0
  }), C_6 = (A, B) => {
    for (var Q in B) yF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, K_6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of X_6(B))
        if (!V_6.call(A, G) && G !== Q) yF1(A, G, {
          get: () => B[G],
          enumerable: !(I = F_6(B, G)) || I.enumerable
        })
    }
    return A
  }, H_6 = (A) => K_6(yF1({}, "__esModule", {
    value: !0
  }), A), le0 = {};
  C_6(le0, {
    fromArrayBuffer: () => w_6,
    fromString: () => E_6
  });
  ie0.exports = H_6(le0);
  var z_6 = qi1(),
    Mi1 = Z1("buffer"),
    w_6 = ce0((A, B = 0, Q = A.byteLength - B) => {
      if (!z_6.isArrayBuffer(A)) throw new TypeError(`The "input" argument must be ArrayBuffer. Received type ${typeof A} (${A})`);
      return Mi1.Buffer.from(A, B, Q)
    }, "fromArrayBuffer"),
    E_6 = ce0((A, B) => {
      if (typeof A !== "string") throw new TypeError(`The "input" argument must be of type string. Received type ${typeof A} (${A})`);
      return B ? Mi1.Buffer.from(A, B) : Mi1.Buffer.from(A)
    }, "fromString")
})
// @from(Start 5783782, End 5785438)
gt = z((Jb8, oe0) => {
  var {
    defineProperty: kF1,
    getOwnPropertyDescriptor: U_6,
    getOwnPropertyNames: N_6
  } = Object, $_6 = Object.prototype.hasOwnProperty, Li1 = (A, B) => kF1(A, "name", {
    value: B,
    configurable: !0
  }), q_6 = (A, B) => {
    for (var Q in B) kF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, M_6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of N_6(B))
        if (!$_6.call(A, G) && G !== Q) kF1(A, G, {
          get: () => B[G],
          enumerable: !(I = U_6(B, G)) || I.enumerable
        })
    }
    return A
  }, L_6 = (A) => M_6(kF1({}, "__esModule", {
    value: !0
  }), A), ae0 = {};
  q_6(ae0, {
    fromUtf8: () => re0,
    toUint8Array: () => R_6,
    toUtf8: () => O_6
  });
  oe0.exports = L_6(ae0);
  var se0 = ne0(),
    re0 = Li1((A) => {
      let B = se0.fromString(A, "utf8");
      return new Uint8Array(B.buffer, B.byteOffset, B.byteLength / Uint8Array.BYTES_PER_ELEMENT)
    }, "fromUtf8"),
    R_6 = Li1((A) => {
      if (typeof A === "string") return re0(A);
      if (ArrayBuffer.isView(A)) return new Uint8Array(A.buffer, A.byteOffset, A.byteLength / Uint8Array.BYTES_PER_ELEMENT);
      return new Uint8Array(A)
    }, "toUint8Array"),
    O_6 = Li1((A) => {
      if (typeof A === "string") return A;
      if (typeof A !== "object" || typeof A.byteOffset !== "number" || typeof A.byteLength !== "number") throw new Error("@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.");
      return se0.fromArrayBuffer(A.buffer, A.byteOffset, A.byteLength).toString("utf8")
    }, "toUtf8")
})
// @from(Start 5785444, End 5786978)
G12 = z((Fb8, I12) => {
  var {
    defineProperty: xF1,
    getOwnPropertyDescriptor: T_6,
    getOwnPropertyNames: P_6
  } = Object, S_6 = Object.prototype.hasOwnProperty, te0 = (A, B) => xF1(A, "name", {
    value: B,
    configurable: !0
  }), __6 = (A, B) => {
    for (var Q in B) xF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, j_6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of P_6(B))
        if (!S_6.call(A, G) && G !== Q) xF1(A, G, {
          get: () => B[G],
          enumerable: !(I = T_6(B, G)) || I.enumerable
        })
    }
    return A
  }, y_6 = (A) => j_6(xF1({}, "__esModule", {
    value: !0
  }), A), ee0 = {};
  __6(ee0, {
    fromHex: () => B12,
    toHex: () => Q12
  });
  I12.exports = y_6(ee0);
  var A12 = {},
    Ri1 = {};
  for (let A = 0; A < 256; A++) {
    let B = A.toString(16).toLowerCase();
    if (B.length === 1) B = `0${B}`;
    A12[A] = B, Ri1[B] = A
  }

  function B12(A) {
    if (A.length % 2 !== 0) throw new Error("Hex encoded strings must have an even number length");
    let B = new Uint8Array(A.length / 2);
    for (let Q = 0; Q < A.length; Q += 2) {
      let I = A.slice(Q, Q + 2).toLowerCase();
      if (I in Ri1) B[Q / 2] = Ri1[I];
      else throw new Error(`Cannot decode unrecognized sequence ${I} as hexadecimal`)
    }
    return B
  }
  te0(B12, "fromHex");

  function Q12(A) {
    let B = "";
    for (let Q = 0; Q < A.byteLength; Q++) B += A12[A[Q]];
    return B
  }
  te0(Q12, "toHex")
})
// @from(Start 5786984, End 5788037)
W12 = z((Xb8, Y12) => {
  var {
    defineProperty: fF1,
    getOwnPropertyDescriptor: k_6,
    getOwnPropertyNames: x_6
  } = Object, f_6 = Object.prototype.hasOwnProperty, Oi1 = (A, B) => fF1(A, "name", {
    value: B,
    configurable: !0
  }), v_6 = (A, B) => {
    for (var Q in B) fF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, b_6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of x_6(B))
        if (!f_6.call(A, G) && G !== Q) fF1(A, G, {
          get: () => B[G],
          enumerable: !(I = k_6(B, G)) || I.enumerable
        })
    }
    return A
  }, g_6 = (A) => b_6(fF1({}, "__esModule", {
    value: !0
  }), A), Z12 = {};
  v_6(Z12, {
    escapeUri: () => D12,
    escapeUriPath: () => m_6
  });
  Y12.exports = g_6(Z12);
  var D12 = Oi1((A) => encodeURIComponent(A).replace(/[!'()*]/g, h_6), "escapeUri"),
    h_6 = Oi1((A) => `%${A.charCodeAt(0).toString(16).toUpperCase()}`, "hexEncode"),
    m_6 = Oi1((A) => A.split("/").map(D12).join("/"), "escapeUriPath")
})
// @from(Start 5788043, End 5803463)
P12 = z((Vb8, T12) => {
  var {
    defineProperty: mF1,
    getOwnPropertyDescriptor: d_6,
    getOwnPropertyNames: u_6
  } = Object, p_6 = Object.prototype.hasOwnProperty, z7 = (A, B) => mF1(A, "name", {
    value: B,
    configurable: !0
  }), c_6 = (A, B) => {
    for (var Q in B) mF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, l_6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of u_6(B))
        if (!p_6.call(A, G) && G !== Q) mF1(A, G, {
          get: () => B[G],
          enumerable: !(I = d_6(B, G)) || I.enumerable
        })
    }
    return A
  }, i_6 = (A) => l_6(mF1({}, "__esModule", {
    value: !0
  }), A), C12 = {};
  c_6(C12, {
    SignatureV4: () => Uj6,
    clearCredentialCache: () => Jj6,
    createScope: () => gF1,
    getCanonicalHeaders: () => _i1,
    getCanonicalQuery: () => $12,
    getPayloadHash: () => hF1,
    getSigningKey: () => N12,
    moveHeadersToQuery: () => R12,
    prepareRequest: () => yi1
  });
  T12.exports = i_6(C12);
  var J12 = de0(),
    Ti1 = gt(),
    n_6 = "X-Amz-Algorithm",
    a_6 = "X-Amz-Credential",
    K12 = "X-Amz-Date",
    s_6 = "X-Amz-SignedHeaders",
    r_6 = "X-Amz-Expires",
    H12 = "X-Amz-Signature",
    z12 = "X-Amz-Security-Token",
    w12 = "authorization",
    E12 = K12.toLowerCase(),
    o_6 = "date",
    t_6 = [w12, E12, o_6],
    e_6 = H12.toLowerCase(),
    Si1 = "x-amz-content-sha256",
    Aj6 = z12.toLowerCase(),
    Bj6 = {
      authorization: !0,
      "cache-control": !0,
      connection: !0,
      expect: !0,
      from: !0,
      "keep-alive": !0,
      "max-forwards": !0,
      pragma: !0,
      referer: !0,
      te: !0,
      trailer: !0,
      "transfer-encoding": !0,
      upgrade: !0,
      "user-agent": !0,
      "x-amzn-trace-id": !0
    },
    Qj6 = /^proxy-/,
    Ij6 = /^sec-/,
    Pi1 = "AWS4-HMAC-SHA256",
    Gj6 = "AWS4-HMAC-SHA256-PAYLOAD",
    Zj6 = "UNSIGNED-PAYLOAD",
    Dj6 = 50,
    U12 = "aws4_request",
    Yj6 = 604800,
    eR = G12(),
    Wj6 = gt(),
    cm = {},
    bF1 = [],
    gF1 = z7((A, B, Q) => `${A}/${B}/${Q}/${U12}`, "createScope"),
    N12 = z7(async (A, B, Q, I, G) => {
      let Z = await F12(A, B.secretAccessKey, B.accessKeyId),
        D = `${Q}:${I}:${G}:${eR.toHex(Z)}:${B.sessionToken}`;
      if (D in cm) return cm[D];
      bF1.push(D);
      while (bF1.length > Dj6) delete cm[bF1.shift()];
      let Y = `AWS4${B.secretAccessKey}`;
      for (let W of [Q, I, G, U12]) Y = await F12(A, Y, W);
      return cm[D] = Y
    }, "getSigningKey"),
    Jj6 = z7(() => {
      bF1.length = 0, Object.keys(cm).forEach((A) => {
        delete cm[A]
      })
    }, "clearCredentialCache"),
    F12 = z7((A, B, Q) => {
      let I = new A(B);
      return I.update(Wj6.toUint8Array(Q)), I.digest()
    }, "hmac"),
    _i1 = z7(({
      headers: A
    }, B, Q) => {
      let I = {};
      for (let G of Object.keys(A).sort()) {
        if (A[G] == null) continue;
        let Z = G.toLowerCase();
        if (Z in Bj6 || (B == null ? void 0 : B.has(Z)) || Qj6.test(Z) || Ij6.test(Z)) {
          if (!Q || Q && !Q.has(Z)) continue
        }
        I[Z] = A[G].trim().replace(/\s+/g, " ")
      }
      return I
    }, "getCanonicalHeaders"),
    ht = W12(),
    $12 = z7(({
      query: A = {}
    }) => {
      let B = [],
        Q = {};
      for (let I of Object.keys(A).sort()) {
        if (I.toLowerCase() === e_6) continue;
        B.push(I);
        let G = A[I];
        if (typeof G === "string") Q[I] = `${ht.escapeUri(I)}=${ht.escapeUri(G)}`;
        else if (Array.isArray(G)) Q[I] = G.slice(0).reduce((Z, D) => Z.concat([`${ht.escapeUri(I)}=${ht.escapeUri(D)}`]), []).sort().join("&")
      }
      return B.map((I) => Q[I]).filter((I) => I).join("&")
    }, "getCanonicalQuery"),
    Fj6 = qi1(),
    Xj6 = gt(),
    hF1 = z7(async ({
      headers: A,
      body: B
    }, Q) => {
      for (let I of Object.keys(A))
        if (I.toLowerCase() === Si1) return A[I];
      if (B == null) return "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";
      else if (typeof B === "string" || ArrayBuffer.isView(B) || Fj6.isArrayBuffer(B)) {
        let I = new Q;
        return I.update(Xj6.toUint8Array(B)), eR.toHex(await I.digest())
      }
      return Zj6
    }, "getPayloadHash"),
    X12 = gt(),
    q12 = class A {
      format(B) {
        let Q = [];
        for (let Z of Object.keys(B)) {
          let D = X12.fromUtf8(Z);
          Q.push(Uint8Array.from([D.byteLength]), D, this.formatHeaderValue(B[Z]))
        }
        let I = new Uint8Array(Q.reduce((Z, D) => Z + D.byteLength, 0)),
          G = 0;
        for (let Z of Q) I.set(Z, G), G += Z.byteLength;
        return I
      }
      formatHeaderValue(B) {
        switch (B.type) {
          case "boolean":
            return Uint8Array.from([B.value ? 0 : 1]);
          case "byte":
            return Uint8Array.from([2, B.value]);
          case "short":
            let Q = new DataView(new ArrayBuffer(3));
            return Q.setUint8(0, 3), Q.setInt16(1, B.value, !1), new Uint8Array(Q.buffer);
          case "integer":
            let I = new DataView(new ArrayBuffer(5));
            return I.setUint8(0, 4), I.setInt32(1, B.value, !1), new Uint8Array(I.buffer);
          case "long":
            let G = new Uint8Array(9);
            return G[0] = 5, G.set(B.value.bytes, 1), G;
          case "binary":
            let Z = new DataView(new ArrayBuffer(3 + B.value.byteLength));
            Z.setUint8(0, 6), Z.setUint16(1, B.value.byteLength, !1);
            let D = new Uint8Array(Z.buffer);
            return D.set(B.value, 3), D;
          case "string":
            let Y = X12.fromUtf8(B.value),
              W = new DataView(new ArrayBuffer(3 + Y.byteLength));
            W.setUint8(0, 7), W.setUint16(1, Y.byteLength, !1);
            let J = new Uint8Array(W.buffer);
            return J.set(Y, 3), J;
          case "timestamp":
            let F = new Uint8Array(9);
            return F[0] = 8, F.set(Kj6.fromNumber(B.value.valueOf()).bytes, 1), F;
          case "uuid":
            if (!Cj6.test(B.value)) throw new Error(`Invalid UUID received: ${B.value}`);
            let X = new Uint8Array(17);
            return X[0] = 9, X.set(eR.fromHex(B.value.replace(/\-/g, "")), 1), X
        }
      }
    };
  z7(q12, "HeaderFormatter");
  var Vj6 = q12,
    Cj6 = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/,
    M12 = class A {
      constructor(B) {
        if (this.bytes = B, B.byteLength !== 8) throw new Error("Int64 buffers must be exactly 8 bytes")
      }
      static fromNumber(B) {
        if (B > 9223372036854776000 || B < -9223372036854776000) throw new Error(`${B} is too large (or, if negative, too small) to represent as an Int64`);
        let Q = new Uint8Array(8);
        for (let I = 7, G = Math.abs(Math.round(B)); I > -1 && G > 0; I--, G /= 256) Q[I] = G;
        if (B < 0) ji1(Q);
        return new A(Q)
      }
      valueOf() {
        let B = this.bytes.slice(0),
          Q = B[0] & 128;
        if (Q) ji1(B);
        return parseInt(eR.toHex(B), 16) * (Q ? -1 : 1)
      }
      toString() {
        return String(this.valueOf())
      }
    };
  z7(M12, "Int64");
  var Kj6 = M12;

  function ji1(A) {
    for (let B = 0; B < 8; B++) A[B] ^= 255;
    for (let B = 7; B > -1; B--)
      if (A[B]++, A[B] !== 0) break
  }
  z7(ji1, "negate");
  var Hj6 = z7((A, B) => {
      A = A.toLowerCase();
      for (let Q of Object.keys(B))
        if (A === Q.toLowerCase()) return !0;
      return !1
    }, "hasHeader"),
    L12 = z7(({
      headers: A,
      query: B,
      ...Q
    }) => ({
      ...Q,
      headers: {
        ...A
      },
      query: B ? zj6(B) : void 0
    }), "cloneRequest"),
    zj6 = z7((A) => Object.keys(A).reduce((B, Q) => {
      let I = A[Q];
      return {
        ...B,
        [Q]: Array.isArray(I) ? [...I] : I
      }
    }, {}), "cloneQuery"),
    R12 = z7((A, B = {}) => {
      var Q;
      let {
        headers: I,
        query: G = {}
      } = typeof A.clone === "function" ? A.clone() : L12(A);
      for (let Z of Object.keys(I)) {
        let D = Z.toLowerCase();
        if (D.slice(0, 6) === "x-amz-" && !((Q = B.unhoistableHeaders) == null ? void 0 : Q.has(D))) G[Z] = I[Z], delete I[Z]
      }
      return {
        ...A,
        headers: I,
        query: G
      }
    }, "moveHeadersToQuery"),
    yi1 = z7((A) => {
      A = typeof A.clone === "function" ? A.clone() : L12(A);
      for (let B of Object.keys(A.headers))
        if (t_6.indexOf(B.toLowerCase()) > -1) delete A.headers[B];
      return A
    }, "prepareRequest"),
    wj6 = z7((A) => Ej6(A).toISOString().replace(/\.\d{3}Z$/, "Z"), "iso8601"),
    Ej6 = z7((A) => {
      if (typeof A === "number") return new Date(A * 1000);
      if (typeof A === "string") {
        if (Number(A)) return new Date(Number(A) * 1000);
        return new Date(A)
      }
      return A
    }, "toDate"),
    O12 = class A {
      constructor({
        applyChecksum: B,
        credentials: Q,
        region: I,
        service: G,
        sha256: Z,
        uriEscapePath: D = !0
      }) {
        this.headerFormatter = new Vj6, this.service = G, this.sha256 = Z, this.uriEscapePath = D, this.applyChecksum = typeof B === "boolean" ? B : !0, this.regionProvider = J12.normalizeProvider(I), this.credentialProvider = J12.normalizeProvider(Q)
      }
      async presign(B, Q = {}) {
        let {
          signingDate: I = new Date,
          expiresIn: G = 3600,
          unsignableHeaders: Z,
          unhoistableHeaders: D,
          signableHeaders: Y,
          signingRegion: W,
          signingService: J
        } = Q, F = await this.credentialProvider();
        this.validateResolvedCredentials(F);
        let X = W ?? await this.regionProvider(),
          {
            longDate: V,
            shortDate: C
          } = vF1(I);
        if (G > Yj6) return Promise.reject("Signature version 4 presigned URLs must have an expiration date less than one week in the future");
        let K = gF1(C, X, J ?? this.service),
          E = R12(yi1(B), {
            unhoistableHeaders: D
          });
        if (F.sessionToken) E.query[z12] = F.sessionToken;
        E.query[n_6] = Pi1, E.query[a_6] = `${F.accessKeyId}/${K}`, E.query[K12] = V, E.query[r_6] = G.toString(10);
        let N = _i1(E, Z, Y);
        return E.query[s_6] = V12(N), E.query[H12] = await this.getSignature(V, K, this.getSigningKey(F, X, C, J), this.createCanonicalRequest(E, N, await hF1(B, this.sha256))), E
      }
      async sign(B, Q) {
        if (typeof B === "string") return this.signString(B, Q);
        else if (B.headers && B.payload) return this.signEvent(B, Q);
        else if (B.message) return this.signMessage(B, Q);
        else return this.signRequest(B, Q)
      }
      async signEvent({
        headers: B,
        payload: Q
      }, {
        signingDate: I = new Date,
        priorSignature: G,
        signingRegion: Z,
        signingService: D
      }) {
        let Y = Z ?? await this.regionProvider(),
          {
            shortDate: W,
            longDate: J
          } = vF1(I),
          F = gF1(W, Y, D ?? this.service),
          X = await hF1({
            headers: {},
            body: Q
          }, this.sha256),
          V = new this.sha256;
        V.update(B);
        let C = eR.toHex(await V.digest()),
          K = [Gj6, J, F, G, C, X].join(`
`);
        return this.signString(K, {
          signingDate: I,
          signingRegion: Y,
          signingService: D
        })
      }
      async signMessage(B, {
        signingDate: Q = new Date,
        signingRegion: I,
        signingService: G
      }) {
        return this.signEvent({
          headers: this.headerFormatter.format(B.message.headers),
          payload: B.message.body
        }, {
          signingDate: Q,
          signingRegion: I,
          signingService: G,
          priorSignature: B.priorSignature
        }).then((D) => {
          return {
            message: B.message,
            signature: D
          }
        })
      }
      async signString(B, {
        signingDate: Q = new Date,
        signingRegion: I,
        signingService: G
      } = {}) {
        let Z = await this.credentialProvider();
        this.validateResolvedCredentials(Z);
        let D = I ?? await this.regionProvider(),
          {
            shortDate: Y
          } = vF1(Q),
          W = new this.sha256(await this.getSigningKey(Z, D, Y, G));
        return W.update(Ti1.toUint8Array(B)), eR.toHex(await W.digest())
      }
      async signRequest(B, {
        signingDate: Q = new Date,
        signableHeaders: I,
        unsignableHeaders: G,
        signingRegion: Z,
        signingService: D
      } = {}) {
        let Y = await this.credentialProvider();
        this.validateResolvedCredentials(Y);
        let W = Z ?? await this.regionProvider(),
          J = yi1(B),
          {
            longDate: F,
            shortDate: X
          } = vF1(Q),
          V = gF1(X, W, D ?? this.service);
        if (J.headers[E12] = F, Y.sessionToken) J.headers[Aj6] = Y.sessionToken;
        let C = await hF1(J, this.sha256);
        if (!Hj6(Si1, J.headers) && this.applyChecksum) J.headers[Si1] = C;
        let K = _i1(J, G, I),
          E = await this.getSignature(F, V, this.getSigningKey(Y, W, X, D), this.createCanonicalRequest(J, K, C));
        return J.headers[w12] = `${Pi1} Credential=${Y.accessKeyId}/${V}, SignedHeaders=${V12(K)}, Signature=${E}`, J
      }
      createCanonicalRequest(B, Q, I) {
        let G = Object.keys(Q).sort();
        return `${B.method}
${this.getCanonicalPath(B)}
${$12(B)}
${G.map((Z)=>`${Z}:${Q[Z]}`).join(`
`)}

${G.join(";")}
${I}`
      }
      async createStringToSign(B, Q, I) {
        let G = new this.sha256;
        G.update(Ti1.toUint8Array(I));
        let Z = await G.digest();
        return `${Pi1}
${B}
${Q}
${eR.toHex(Z)}`
      }
      getCanonicalPath({
        path: B
      }) {
        if (this.uriEscapePath) {
          let Q = [];
          for (let Z of B.split("/")) {
            if ((Z == null ? void 0 : Z.length) === 0) continue;
            if (Z === ".") continue;
            if (Z === "..") Q.pop();
            else Q.push(Z)
          }
          let I = `${(B==null?void 0:B.startsWith("/"))?"/":""}${Q.join("/")}${Q.length>0&&(B==null?void 0:B.endsWith("/"))?"/":""}`;
          return ht.escapeUri(I).replace(/%2F/g, "/")
        }
        return B
      }
      async getSignature(B, Q, I, G) {
        let Z = await this.createStringToSign(B, Q, G),
          D = new this.sha256(await I);
        return D.update(Ti1.toUint8Array(Z)), eR.toHex(await D.digest())
      }
      getSigningKey(B, Q, I, G) {
        return N12(this.sha256, B, I, Q, G || this.service)
      }
      validateResolvedCredentials(B) {
        if (typeof B !== "object" || typeof B.accessKeyId !== "string" || typeof B.secretAccessKey !== "string") throw new Error("Resolved credential object is not valid")
      }
    };
  z7(O12, "SignatureV4");
  var Uj6 = O12,
    vF1 = z7((A) => {
      let B = wj6(A).replace(/[\-:]/g, "");
      return {
        longDate: B,
        shortDate: B.slice(0, 8)
      }
    }, "formatDate"),
    V12 = z7((A) => Object.keys(A).sort().join(";"), "getCanonicalHeaderList")
})
// @from(Start 5803469, End 5820789)
IA2 = z((Cb8, pF1) => {
  var S12, _12, j12, y12, k12, x12, f12, v12, b12, g12, h12, m12, d12, dF1, ki1, u12, p12, c12, lm, l12, i12, n12, a12, s12, r12, o12, t12, e12, uF1, AA2, BA2, QA2;
  (function(A) {
    var B = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) define("tslib", ["exports"], function(I) {
      A(Q(B, Q(I)))
    });
    else if (typeof pF1 === "object" && typeof Cb8 === "object") A(Q(B, Q(Cb8)));
    else A(Q(B));

    function Q(I, G) {
      if (I !== B)
        if (typeof Object.create === "function") Object.defineProperty(I, "__esModule", {
          value: !0
        });
        else I.__esModule = !0;
      return function(Z, D) {
        return I[Z] = G ? G(Z, D) : D
      }
    }
  })(function(A) {
    var B = Object.setPrototypeOf || {
      __proto__: []
    }
    instanceof Array && function(Z, D) {
      Z.__proto__ = D
    } || function(Z, D) {
      for (var Y in D)
        if (Object.prototype.hasOwnProperty.call(D, Y)) Z[Y] = D[Y]
    };
    S12 = function(Z, D) {
      if (typeof D !== "function" && D !== null) throw new TypeError("Class extends value " + String(D) + " is not a constructor or null");
      B(Z, D);

      function Y() {
        this.constructor = Z
      }
      Z.prototype = D === null ? Object.create(D) : (Y.prototype = D.prototype, new Y)
    }, _12 = Object.assign || function(Z) {
      for (var D, Y = 1, W = arguments.length; Y < W; Y++) {
        D = arguments[Y];
        for (var J in D)
          if (Object.prototype.hasOwnProperty.call(D, J)) Z[J] = D[J]
      }
      return Z
    }, j12 = function(Z, D) {
      var Y = {};
      for (var W in Z)
        if (Object.prototype.hasOwnProperty.call(Z, W) && D.indexOf(W) < 0) Y[W] = Z[W];
      if (Z != null && typeof Object.getOwnPropertySymbols === "function") {
        for (var J = 0, W = Object.getOwnPropertySymbols(Z); J < W.length; J++)
          if (D.indexOf(W[J]) < 0 && Object.prototype.propertyIsEnumerable.call(Z, W[J])) Y[W[J]] = Z[W[J]]
      }
      return Y
    }, y12 = function(Z, D, Y, W) {
      var J = arguments.length,
        F = J < 3 ? D : W === null ? W = Object.getOwnPropertyDescriptor(D, Y) : W,
        X;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") F = Reflect.decorate(Z, D, Y, W);
      else
        for (var V = Z.length - 1; V >= 0; V--)
          if (X = Z[V]) F = (J < 3 ? X(F) : J > 3 ? X(D, Y, F) : X(D, Y)) || F;
      return J > 3 && F && Object.defineProperty(D, Y, F), F
    }, k12 = function(Z, D) {
      return function(Y, W) {
        D(Y, W, Z)
      }
    }, x12 = function(Z, D, Y, W, J, F) {
      function X(_) {
        if (_ !== void 0 && typeof _ !== "function") throw new TypeError("Function expected");
        return _
      }
      var V = W.kind,
        C = V === "getter" ? "get" : V === "setter" ? "set" : "value",
        K = !D && Z ? W.static ? Z : Z.prototype : null,
        E = D || (K ? Object.getOwnPropertyDescriptor(K, W.name) : {}),
        N, q = !1;
      for (var O = Y.length - 1; O >= 0; O--) {
        var R = {};
        for (var T in W) R[T] = T === "access" ? {} : W[T];
        for (var T in W.access) R.access[T] = W.access[T];
        R.addInitializer = function(_) {
          if (q) throw new TypeError("Cannot add initializers after decoration has completed");
          F.push(X(_ || null))
        };
        var L = Y[O](V === "accessor" ? {
          get: E.get,
          set: E.set
        } : E[C], R);
        if (V === "accessor") {
          if (L === void 0) continue;
          if (L === null || typeof L !== "object") throw new TypeError("Object expected");
          if (N = X(L.get)) E.get = N;
          if (N = X(L.set)) E.set = N;
          if (N = X(L.init)) J.unshift(N)
        } else if (N = X(L))
          if (V === "field") J.unshift(N);
          else E[C] = N
      }
      if (K) Object.defineProperty(K, W.name, E);
      q = !0
    }, f12 = function(Z, D, Y) {
      var W = arguments.length > 2;
      for (var J = 0; J < D.length; J++) Y = W ? D[J].call(Z, Y) : D[J].call(Z);
      return W ? Y : void 0
    }, v12 = function(Z) {
      return typeof Z === "symbol" ? Z : "".concat(Z)
    }, b12 = function(Z, D, Y) {
      if (typeof D === "symbol") D = D.description ? "[".concat(D.description, "]") : "";
      return Object.defineProperty(Z, "name", {
        configurable: !0,
        value: Y ? "".concat(Y, " ", D) : D
      })
    }, g12 = function(Z, D) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(Z, D)
    }, h12 = function(Z, D, Y, W) {
      function J(F) {
        return F instanceof Y ? F : new Y(function(X) {
          X(F)
        })
      }
      return new(Y || (Y = Promise))(function(F, X) {
        function V(E) {
          try {
            K(W.next(E))
          } catch (N) {
            X(N)
          }
        }

        function C(E) {
          try {
            K(W.throw(E))
          } catch (N) {
            X(N)
          }
        }

        function K(E) {
          E.done ? F(E.value) : J(E.value).then(V, C)
        }
        K((W = W.apply(Z, D || [])).next())
      })
    }, m12 = function(Z, D) {
      var Y = {
          label: 0,
          sent: function() {
            if (F[0] & 1) throw F[1];
            return F[1]
          },
          trys: [],
          ops: []
        },
        W, J, F, X = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return X.next = V(0), X.throw = V(1), X.return = V(2), typeof Symbol === "function" && (X[Symbol.iterator] = function() {
        return this
      }), X;

      function V(K) {
        return function(E) {
          return C([K, E])
        }
      }

      function C(K) {
        if (W) throw new TypeError("Generator is already executing.");
        while (X && (X = 0, K[0] && (Y = 0)), Y) try {
          if (W = 1, J && (F = K[0] & 2 ? J.return : K[0] ? J.throw || ((F = J.return) && F.call(J), 0) : J.next) && !(F = F.call(J, K[1])).done) return F;
          if (J = 0, F) K = [K[0] & 2, F.value];
          switch (K[0]) {
            case 0:
            case 1:
              F = K;
              break;
            case 4:
              return Y.label++, {
                value: K[1],
                done: !1
              };
            case 5:
              Y.label++, J = K[1], K = [0];
              continue;
            case 7:
              K = Y.ops.pop(), Y.trys.pop();
              continue;
            default:
              if ((F = Y.trys, !(F = F.length > 0 && F[F.length - 1])) && (K[0] === 6 || K[0] === 2)) {
                Y = 0;
                continue
              }
              if (K[0] === 3 && (!F || K[1] > F[0] && K[1] < F[3])) {
                Y.label = K[1];
                break
              }
              if (K[0] === 6 && Y.label < F[1]) {
                Y.label = F[1], F = K;
                break
              }
              if (F && Y.label < F[2]) {
                Y.label = F[2], Y.ops.push(K);
                break
              }
              if (F[2]) Y.ops.pop();
              Y.trys.pop();
              continue
          }
          K = D.call(Z, Y)
        } catch (E) {
          K = [6, E], J = 0
        } finally {
          W = F = 0
        }
        if (K[0] & 5) throw K[1];
        return {
          value: K[0] ? K[1] : void 0,
          done: !0
        }
      }
    }, d12 = function(Z, D) {
      for (var Y in Z)
        if (Y !== "default" && !Object.prototype.hasOwnProperty.call(D, Y)) uF1(D, Z, Y)
    }, uF1 = Object.create ? function(Z, D, Y, W) {
      if (W === void 0) W = Y;
      var J = Object.getOwnPropertyDescriptor(D, Y);
      if (!J || ("get" in J ? !D.__esModule : J.writable || J.configurable)) J = {
        enumerable: !0,
        get: function() {
          return D[Y]
        }
      };
      Object.defineProperty(Z, W, J)
    } : function(Z, D, Y, W) {
      if (W === void 0) W = Y;
      Z[W] = D[Y]
    }, dF1 = function(Z) {
      var D = typeof Symbol === "function" && Symbol.iterator,
        Y = D && Z[D],
        W = 0;
      if (Y) return Y.call(Z);
      if (Z && typeof Z.length === "number") return {
        next: function() {
          if (Z && W >= Z.length) Z = void 0;
          return {
            value: Z && Z[W++],
            done: !Z
          }
        }
      };
      throw new TypeError(D ? "Object is not iterable." : "Symbol.iterator is not defined.")
    }, ki1 = function(Z, D) {
      var Y = typeof Symbol === "function" && Z[Symbol.iterator];
      if (!Y) return Z;
      var W = Y.call(Z),
        J, F = [],
        X;
      try {
        while ((D === void 0 || D-- > 0) && !(J = W.next()).done) F.push(J.value)
      } catch (V) {
        X = {
          error: V
        }
      } finally {
        try {
          if (J && !J.done && (Y = W.return)) Y.call(W)
        } finally {
          if (X) throw X.error
        }
      }
      return F
    }, u12 = function() {
      for (var Z = [], D = 0; D < arguments.length; D++) Z = Z.concat(ki1(arguments[D]));
      return Z
    }, p12 = function() {
      for (var Z = 0, D = 0, Y = arguments.length; D < Y; D++) Z += arguments[D].length;
      for (var W = Array(Z), J = 0, D = 0; D < Y; D++)
        for (var F = arguments[D], X = 0, V = F.length; X < V; X++, J++) W[J] = F[X];
      return W
    }, c12 = function(Z, D, Y) {
      if (Y || arguments.length === 2) {
        for (var W = 0, J = D.length, F; W < J; W++)
          if (F || !(W in D)) {
            if (!F) F = Array.prototype.slice.call(D, 0, W);
            F[W] = D[W]
          }
      }
      return Z.concat(F || Array.prototype.slice.call(D))
    }, lm = function(Z) {
      return this instanceof lm ? (this.v = Z, this) : new lm(Z)
    }, l12 = function(Z, D, Y) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var W = Y.apply(Z, D || []),
        J, F = [];
      return J = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), V("next"), V("throw"), V("return", X), J[Symbol.asyncIterator] = function() {
        return this
      }, J;

      function X(O) {
        return function(R) {
          return Promise.resolve(R).then(O, N)
        }
      }

      function V(O, R) {
        if (W[O]) {
          if (J[O] = function(T) {
              return new Promise(function(L, _) {
                F.push([O, T, L, _]) > 1 || C(O, T)
              })
            }, R) J[O] = R(J[O])
        }
      }

      function C(O, R) {
        try {
          K(W[O](R))
        } catch (T) {
          q(F[0][3], T)
        }
      }

      function K(O) {
        O.value instanceof lm ? Promise.resolve(O.value.v).then(E, N) : q(F[0][2], O)
      }

      function E(O) {
        C("next", O)
      }

      function N(O) {
        C("throw", O)
      }

      function q(O, R) {
        if (O(R), F.shift(), F.length) C(F[0][0], F[0][1])
      }
    }, i12 = function(Z) {
      var D, Y;
      return D = {}, W("next"), W("throw", function(J) {
        throw J
      }), W("return"), D[Symbol.iterator] = function() {
        return this
      }, D;

      function W(J, F) {
        D[J] = Z[J] ? function(X) {
          return (Y = !Y) ? {
            value: lm(Z[J](X)),
            done: !1
          } : F ? F(X) : X
        } : F
      }
    }, n12 = function(Z) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var D = Z[Symbol.asyncIterator],
        Y;
      return D ? D.call(Z) : (Z = typeof dF1 === "function" ? dF1(Z) : Z[Symbol.iterator](), Y = {}, W("next"), W("throw"), W("return"), Y[Symbol.asyncIterator] = function() {
        return this
      }, Y);

      function W(F) {
        Y[F] = Z[F] && function(X) {
          return new Promise(function(V, C) {
            X = Z[F](X), J(V, C, X.done, X.value)
          })
        }
      }

      function J(F, X, V, C) {
        Promise.resolve(C).then(function(K) {
          F({
            value: K,
            done: V
          })
        }, X)
      }
    }, a12 = function(Z, D) {
      if (Object.defineProperty) Object.defineProperty(Z, "raw", {
        value: D
      });
      else Z.raw = D;
      return Z
    };
    var Q = Object.create ? function(Z, D) {
        Object.defineProperty(Z, "default", {
          enumerable: !0,
          value: D
        })
      } : function(Z, D) {
        Z.default = D
      },
      I = function(Z) {
        return I = Object.getOwnPropertyNames || function(D) {
          var Y = [];
          for (var W in D)
            if (Object.prototype.hasOwnProperty.call(D, W)) Y[Y.length] = W;
          return Y
        }, I(Z)
      };
    s12 = function(Z) {
      if (Z && Z.__esModule) return Z;
      var D = {};
      if (Z != null) {
        for (var Y = I(Z), W = 0; W < Y.length; W++)
          if (Y[W] !== "default") uF1(D, Z, Y[W])
      }
      return Q(D, Z), D
    }, r12 = function(Z) {
      return Z && Z.__esModule ? Z : {
        default: Z
      }
    }, o12 = function(Z, D, Y, W) {
      if (Y === "a" && !W) throw new TypeError("Private accessor was defined without a getter");
      if (typeof D === "function" ? Z !== D || !W : !D.has(Z)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return Y === "m" ? W : Y === "a" ? W.call(Z) : W ? W.value : D.get(Z)
    }, t12 = function(Z, D, Y, W, J) {
      if (W === "m") throw new TypeError("Private method is not writable");
      if (W === "a" && !J) throw new TypeError("Private accessor was defined without a setter");
      if (typeof D === "function" ? Z !== D || !J : !D.has(Z)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return W === "a" ? J.call(Z, Y) : J ? J.value = Y : D.set(Z, Y), Y
    }, e12 = function(Z, D) {
      if (D === null || typeof D !== "object" && typeof D !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
      return typeof Z === "function" ? D === Z : Z.has(D)
    }, AA2 = function(Z, D, Y) {
      if (D !== null && D !== void 0) {
        if (typeof D !== "object" && typeof D !== "function") throw new TypeError("Object expected.");
        var W, J;
        if (Y) {
          if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
          W = D[Symbol.asyncDispose]
        }
        if (W === void 0) {
          if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
          if (W = D[Symbol.dispose], Y) J = W
        }
        if (typeof W !== "function") throw new TypeError("Object not disposable.");
        if (J) W = function() {
          try {
            J.call(this)
          } catch (F) {
            return Promise.reject(F)
          }
        };
        Z.stack.push({
          value: D,
          dispose: W,
          async: Y
        })
      } else if (Y) Z.stack.push({
        async: !0
      });
      return D
    };
    var G = typeof SuppressedError === "function" ? SuppressedError : function(Z, D, Y) {
      var W = new Error(Y);
      return W.name = "SuppressedError", W.error = Z, W.suppressed = D, W
    };
    BA2 = function(Z) {
      function D(F) {
        Z.error = Z.hasError ? new G(F, Z.error, "An error was suppressed during disposal.") : F, Z.hasError = !0
      }
      var Y, W = 0;

      function J() {
        while (Y = Z.stack.pop()) try {
          if (!Y.async && W === 1) return W = 0, Z.stack.push(Y), Promise.resolve().then(J);
          if (Y.dispose) {
            var F = Y.dispose.call(Y.value);
            if (Y.async) return W |= 2, Promise.resolve(F).then(J, function(X) {
              return D(X), J()
            })
          } else W |= 1
        } catch (X) {
          D(X)
        }
        if (W === 1) return Z.hasError ? Promise.reject(Z.error) : Promise.resolve();
        if (Z.hasError) throw Z.error
      }
      return J()
    }, QA2 = function(Z, D) {
      if (typeof Z === "string" && /^\.\.?\//.test(Z)) return Z.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(Y, W, J, F, X) {
        return W ? D ? ".jsx" : ".js" : J && (!F || !X) ? Y : J + F + "." + X.toLowerCase() + "js"
      });
      return Z
    }, A("__extends", S12), A("__assign", _12), A("__rest", j12), A("__decorate", y12), A("__param", k12), A("__esDecorate", x12), A("__runInitializers", f12), A("__propKey", v12), A("__setFunctionName", b12), A("__metadata", g12), A("__awaiter", h12), A("__generator", m12), A("__exportStar", d12), A("__createBinding", uF1), A("__values", dF1), A("__read", ki1), A("__spread", u12), A("__spreadArrays", p12), A("__spreadArray", c12), A("__await", lm), A("__asyncGenerator", l12), A("__asyncDelegator", i12), A("__asyncValues", n12), A("__makeTemplateObject", a12), A("__importStar", s12), A("__importDefault", r12), A("__classPrivateFieldGet", o12), A("__classPrivateFieldSet", t12), A("__classPrivateFieldIn", e12), A("__addDisposableResource", AA2), A("__disposeResources", BA2), A("__rewriteRelativeImportExtension", QA2)
  })
})
// @from(Start 5820795, End 5821847)
ZA2 = z((GA2) => {
  Object.defineProperty(GA2, "__esModule", {
    value: !0
  });
  GA2.propertyProviderChain = GA2.createCredentialChain = void 0;
  var Nj6 = $I(),
    $j6 = (...A) => {
      let B = -1,
        I = Object.assign(async (G) => {
          let Z = await GA2.propertyProviderChain(...A)(G);
          if (!Z.expiration && B !== -1) Z.expiration = new Date(Date.now() + B);
          return Z
        }, {
          expireAfter(G) {
            if (G < 300000) throw new Error("@aws-sdk/credential-providers - createCredentialChain(...).expireAfter(ms) may not be called with a duration lower than five minutes.");
            return B = G, I
          }
        });
      return I
    };
  GA2.createCredentialChain = $j6;
  var qj6 = (...A) => async (B) => {
    if (A.length === 0) throw new Nj6.ProviderError("No providers in chain");
    let Q;
    for (let I of A) try {
      return await I(B)
    } catch (G) {
      if (Q = G, G?.tryNextLink) continue;
      throw G
    }
    throw Q
  };
  GA2.propertyProviderChain = qj6
})
// @from(Start 5821853, End 5823583)
vi1 = z((DA2) => {
  Object.defineProperty(DA2, "__esModule", {
    value: !0
  });
  DA2.resolveHttpAuthSchemeConfig = DA2.defaultCognitoIdentityHttpAuthSchemeProvider = DA2.defaultCognitoIdentityHttpAuthSchemeParametersProvider = void 0;
  var Lj6 = IB(),
    fi1 = ZX(),
    Rj6 = async (A, B, Q) => {
      return {
        operation: fi1.getSmithyContext(B).operation,
        region: await fi1.normalizeProvider(A.region)() || (() => {
          throw new Error("expected `region` to be configured for `aws.auth#sigv4`")
        })()
      }
    };
  DA2.defaultCognitoIdentityHttpAuthSchemeParametersProvider = Rj6;

  function Oj6(A) {
    return {
      schemeId: "aws.auth#sigv4",
      signingProperties: {
        name: "cognito-identity",
        region: A.region
      },
      propertiesExtractor: (B, Q) => ({
        signingProperties: {
          config: B,
          context: Q
        }
      })
    }
  }

  function cF1(A) {
    return {
      schemeId: "smithy.api#noAuth"
    }
  }
  var Tj6 = (A) => {
    let B = [];
    switch (A.operation) {
      case "GetCredentialsForIdentity": {
        B.push(cF1(A));
        break
      }
      case "GetId": {
        B.push(cF1(A));
        break
      }
      case "GetOpenIdToken": {
        B.push(cF1(A));
        break
      }
      case "UnlinkIdentity": {
        B.push(cF1(A));
        break
      }
      default:
        B.push(Oj6(A))
    }
    return B
  };
  DA2.defaultCognitoIdentityHttpAuthSchemeProvider = Tj6;
  var Pj6 = (A) => {
    let B = Lj6.resolveAwsSdkSigV4Config(A);
    return Object.assign(B, {
      authSchemePreference: fi1.normalizeProvider(A.authSchemePreference ?? [])
    })
  };
  DA2.resolveHttpAuthSchemeConfig = Pj6
})
// @from(Start 5823589, End 5840909)
vA2 = z((zb8, nF1) => {
  var WA2, JA2, FA2, XA2, VA2, CA2, KA2, HA2, zA2, wA2, EA2, UA2, NA2, lF1, bi1, $A2, qA2, MA2, im, LA2, RA2, OA2, TA2, PA2, SA2, _A2, jA2, yA2, iF1, kA2, xA2, fA2;
  (function(A) {
    var B = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) define("tslib", ["exports"], function(I) {
      A(Q(B, Q(I)))
    });
    else if (typeof nF1 === "object" && typeof zb8 === "object") A(Q(B, Q(zb8)));
    else A(Q(B));

    function Q(I, G) {
      if (I !== B)
        if (typeof Object.create === "function") Object.defineProperty(I, "__esModule", {
          value: !0
        });
        else I.__esModule = !0;
      return function(Z, D) {
        return I[Z] = G ? G(Z, D) : D
      }
    }
  })(function(A) {
    var B = Object.setPrototypeOf || {
      __proto__: []
    }
    instanceof Array && function(Z, D) {
      Z.__proto__ = D
    } || function(Z, D) {
      for (var Y in D)
        if (Object.prototype.hasOwnProperty.call(D, Y)) Z[Y] = D[Y]
    };
    WA2 = function(Z, D) {
      if (typeof D !== "function" && D !== null) throw new TypeError("Class extends value " + String(D) + " is not a constructor or null");
      B(Z, D);

      function Y() {
        this.constructor = Z
      }
      Z.prototype = D === null ? Object.create(D) : (Y.prototype = D.prototype, new Y)
    }, JA2 = Object.assign || function(Z) {
      for (var D, Y = 1, W = arguments.length; Y < W; Y++) {
        D = arguments[Y];
        for (var J in D)
          if (Object.prototype.hasOwnProperty.call(D, J)) Z[J] = D[J]
      }
      return Z
    }, FA2 = function(Z, D) {
      var Y = {};
      for (var W in Z)
        if (Object.prototype.hasOwnProperty.call(Z, W) && D.indexOf(W) < 0) Y[W] = Z[W];
      if (Z != null && typeof Object.getOwnPropertySymbols === "function") {
        for (var J = 0, W = Object.getOwnPropertySymbols(Z); J < W.length; J++)
          if (D.indexOf(W[J]) < 0 && Object.prototype.propertyIsEnumerable.call(Z, W[J])) Y[W[J]] = Z[W[J]]
      }
      return Y
    }, XA2 = function(Z, D, Y, W) {
      var J = arguments.length,
        F = J < 3 ? D : W === null ? W = Object.getOwnPropertyDescriptor(D, Y) : W,
        X;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") F = Reflect.decorate(Z, D, Y, W);
      else
        for (var V = Z.length - 1; V >= 0; V--)
          if (X = Z[V]) F = (J < 3 ? X(F) : J > 3 ? X(D, Y, F) : X(D, Y)) || F;
      return J > 3 && F && Object.defineProperty(D, Y, F), F
    }, VA2 = function(Z, D) {
      return function(Y, W) {
        D(Y, W, Z)
      }
    }, CA2 = function(Z, D, Y, W, J, F) {
      function X(_) {
        if (_ !== void 0 && typeof _ !== "function") throw new TypeError("Function expected");
        return _
      }
      var V = W.kind,
        C = V === "getter" ? "get" : V === "setter" ? "set" : "value",
        K = !D && Z ? W.static ? Z : Z.prototype : null,
        E = D || (K ? Object.getOwnPropertyDescriptor(K, W.name) : {}),
        N, q = !1;
      for (var O = Y.length - 1; O >= 0; O--) {
        var R = {};
        for (var T in W) R[T] = T === "access" ? {} : W[T];
        for (var T in W.access) R.access[T] = W.access[T];
        R.addInitializer = function(_) {
          if (q) throw new TypeError("Cannot add initializers after decoration has completed");
          F.push(X(_ || null))
        };
        var L = Y[O](V === "accessor" ? {
          get: E.get,
          set: E.set
        } : E[C], R);
        if (V === "accessor") {
          if (L === void 0) continue;
          if (L === null || typeof L !== "object") throw new TypeError("Object expected");
          if (N = X(L.get)) E.get = N;
          if (N = X(L.set)) E.set = N;
          if (N = X(L.init)) J.unshift(N)
        } else if (N = X(L))
          if (V === "field") J.unshift(N);
          else E[C] = N
      }
      if (K) Object.defineProperty(K, W.name, E);
      q = !0
    }, KA2 = function(Z, D, Y) {
      var W = arguments.length > 2;
      for (var J = 0; J < D.length; J++) Y = W ? D[J].call(Z, Y) : D[J].call(Z);
      return W ? Y : void 0
    }, HA2 = function(Z) {
      return typeof Z === "symbol" ? Z : "".concat(Z)
    }, zA2 = function(Z, D, Y) {
      if (typeof D === "symbol") D = D.description ? "[".concat(D.description, "]") : "";
      return Object.defineProperty(Z, "name", {
        configurable: !0,
        value: Y ? "".concat(Y, " ", D) : D
      })
    }, wA2 = function(Z, D) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(Z, D)
    }, EA2 = function(Z, D, Y, W) {
      function J(F) {
        return F instanceof Y ? F : new Y(function(X) {
          X(F)
        })
      }
      return new(Y || (Y = Promise))(function(F, X) {
        function V(E) {
          try {
            K(W.next(E))
          } catch (N) {
            X(N)
          }
        }

        function C(E) {
          try {
            K(W.throw(E))
          } catch (N) {
            X(N)
          }
        }

        function K(E) {
          E.done ? F(E.value) : J(E.value).then(V, C)
        }
        K((W = W.apply(Z, D || [])).next())
      })
    }, UA2 = function(Z, D) {
      var Y = {
          label: 0,
          sent: function() {
            if (F[0] & 1) throw F[1];
            return F[1]
          },
          trys: [],
          ops: []
        },
        W, J, F, X = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return X.next = V(0), X.throw = V(1), X.return = V(2), typeof Symbol === "function" && (X[Symbol.iterator] = function() {
        return this
      }), X;

      function V(K) {
        return function(E) {
          return C([K, E])
        }
      }

      function C(K) {
        if (W) throw new TypeError("Generator is already executing.");
        while (X && (X = 0, K[0] && (Y = 0)), Y) try {
          if (W = 1, J && (F = K[0] & 2 ? J.return : K[0] ? J.throw || ((F = J.return) && F.call(J), 0) : J.next) && !(F = F.call(J, K[1])).done) return F;
          if (J = 0, F) K = [K[0] & 2, F.value];
          switch (K[0]) {
            case 0:
            case 1:
              F = K;
              break;
            case 4:
              return Y.label++, {
                value: K[1],
                done: !1
              };
            case 5:
              Y.label++, J = K[1], K = [0];
              continue;
            case 7:
              K = Y.ops.pop(), Y.trys.pop();
              continue;
            default:
              if ((F = Y.trys, !(F = F.length > 0 && F[F.length - 1])) && (K[0] === 6 || K[0] === 2)) {
                Y = 0;
                continue
              }
              if (K[0] === 3 && (!F || K[1] > F[0] && K[1] < F[3])) {
                Y.label = K[1];
                break
              }
              if (K[0] === 6 && Y.label < F[1]) {
                Y.label = F[1], F = K;
                break
              }
              if (F && Y.label < F[2]) {
                Y.label = F[2], Y.ops.push(K);
                break
              }
              if (F[2]) Y.ops.pop();
              Y.trys.pop();
              continue
          }
          K = D.call(Z, Y)
        } catch (E) {
          K = [6, E], J = 0
        } finally {
          W = F = 0
        }
        if (K[0] & 5) throw K[1];
        return {
          value: K[0] ? K[1] : void 0,
          done: !0
        }
      }
    }, NA2 = function(Z, D) {
      for (var Y in Z)
        if (Y !== "default" && !Object.prototype.hasOwnProperty.call(D, Y)) iF1(D, Z, Y)
    }, iF1 = Object.create ? function(Z, D, Y, W) {
      if (W === void 0) W = Y;
      var J = Object.getOwnPropertyDescriptor(D, Y);
      if (!J || ("get" in J ? !D.__esModule : J.writable || J.configurable)) J = {
        enumerable: !0,
        get: function() {
          return D[Y]
        }
      };
      Object.defineProperty(Z, W, J)
    } : function(Z, D, Y, W) {
      if (W === void 0) W = Y;
      Z[W] = D[Y]
    }, lF1 = function(Z) {
      var D = typeof Symbol === "function" && Symbol.iterator,
        Y = D && Z[D],
        W = 0;
      if (Y) return Y.call(Z);
      if (Z && typeof Z.length === "number") return {
        next: function() {
          if (Z && W >= Z.length) Z = void 0;
          return {
            value: Z && Z[W++],
            done: !Z
          }
        }
      };
      throw new TypeError(D ? "Object is not iterable." : "Symbol.iterator is not defined.")
    }, bi1 = function(Z, D) {
      var Y = typeof Symbol === "function" && Z[Symbol.iterator];
      if (!Y) return Z;
      var W = Y.call(Z),
        J, F = [],
        X;
      try {
        while ((D === void 0 || D-- > 0) && !(J = W.next()).done) F.push(J.value)
      } catch (V) {
        X = {
          error: V
        }
      } finally {
        try {
          if (J && !J.done && (Y = W.return)) Y.call(W)
        } finally {
          if (X) throw X.error
        }
      }
      return F
    }, $A2 = function() {
      for (var Z = [], D = 0; D < arguments.length; D++) Z = Z.concat(bi1(arguments[D]));
      return Z
    }, qA2 = function() {
      for (var Z = 0, D = 0, Y = arguments.length; D < Y; D++) Z += arguments[D].length;
      for (var W = Array(Z), J = 0, D = 0; D < Y; D++)
        for (var F = arguments[D], X = 0, V = F.length; X < V; X++, J++) W[J] = F[X];
      return W
    }, MA2 = function(Z, D, Y) {
      if (Y || arguments.length === 2) {
        for (var W = 0, J = D.length, F; W < J; W++)
          if (F || !(W in D)) {
            if (!F) F = Array.prototype.slice.call(D, 0, W);
            F[W] = D[W]
          }
      }
      return Z.concat(F || Array.prototype.slice.call(D))
    }, im = function(Z) {
      return this instanceof im ? (this.v = Z, this) : new im(Z)
    }, LA2 = function(Z, D, Y) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var W = Y.apply(Z, D || []),
        J, F = [];
      return J = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), V("next"), V("throw"), V("return", X), J[Symbol.asyncIterator] = function() {
        return this
      }, J;

      function X(O) {
        return function(R) {
          return Promise.resolve(R).then(O, N)
        }
      }

      function V(O, R) {
        if (W[O]) {
          if (J[O] = function(T) {
              return new Promise(function(L, _) {
                F.push([O, T, L, _]) > 1 || C(O, T)
              })
            }, R) J[O] = R(J[O])
        }
      }

      function C(O, R) {
        try {
          K(W[O](R))
        } catch (T) {
          q(F[0][3], T)
        }
      }

      function K(O) {
        O.value instanceof im ? Promise.resolve(O.value.v).then(E, N) : q(F[0][2], O)
      }

      function E(O) {
        C("next", O)
      }

      function N(O) {
        C("throw", O)
      }

      function q(O, R) {
        if (O(R), F.shift(), F.length) C(F[0][0], F[0][1])
      }
    }, RA2 = function(Z) {
      var D, Y;
      return D = {}, W("next"), W("throw", function(J) {
        throw J
      }), W("return"), D[Symbol.iterator] = function() {
        return this
      }, D;

      function W(J, F) {
        D[J] = Z[J] ? function(X) {
          return (Y = !Y) ? {
            value: im(Z[J](X)),
            done: !1
          } : F ? F(X) : X
        } : F
      }
    }, OA2 = function(Z) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var D = Z[Symbol.asyncIterator],
        Y;
      return D ? D.call(Z) : (Z = typeof lF1 === "function" ? lF1(Z) : Z[Symbol.iterator](), Y = {}, W("next"), W("throw"), W("return"), Y[Symbol.asyncIterator] = function() {
        return this
      }, Y);

      function W(F) {
        Y[F] = Z[F] && function(X) {
          return new Promise(function(V, C) {
            X = Z[F](X), J(V, C, X.done, X.value)
          })
        }
      }

      function J(F, X, V, C) {
        Promise.resolve(C).then(function(K) {
          F({
            value: K,
            done: V
          })
        }, X)
      }
    }, TA2 = function(Z, D) {
      if (Object.defineProperty) Object.defineProperty(Z, "raw", {
        value: D
      });
      else Z.raw = D;
      return Z
    };
    var Q = Object.create ? function(Z, D) {
        Object.defineProperty(Z, "default", {
          enumerable: !0,
          value: D
        })
      } : function(Z, D) {
        Z.default = D
      },
      I = function(Z) {
        return I = Object.getOwnPropertyNames || function(D) {
          var Y = [];
          for (var W in D)
            if (Object.prototype.hasOwnProperty.call(D, W)) Y[Y.length] = W;
          return Y
        }, I(Z)
      };
    PA2 = function(Z) {
      if (Z && Z.__esModule) return Z;
      var D = {};
      if (Z != null) {
        for (var Y = I(Z), W = 0; W < Y.length; W++)
          if (Y[W] !== "default") iF1(D, Z, Y[W])
      }
      return Q(D, Z), D
    }, SA2 = function(Z) {
      return Z && Z.__esModule ? Z : {
        default: Z
      }
    }, _A2 = function(Z, D, Y, W) {
      if (Y === "a" && !W) throw new TypeError("Private accessor was defined without a getter");
      if (typeof D === "function" ? Z !== D || !W : !D.has(Z)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return Y === "m" ? W : Y === "a" ? W.call(Z) : W ? W.value : D.get(Z)
    }, jA2 = function(Z, D, Y, W, J) {
      if (W === "m") throw new TypeError("Private method is not writable");
      if (W === "a" && !J) throw new TypeError("Private accessor was defined without a setter");
      if (typeof D === "function" ? Z !== D || !J : !D.has(Z)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return W === "a" ? J.call(Z, Y) : J ? J.value = Y : D.set(Z, Y), Y
    }, yA2 = function(Z, D) {
      if (D === null || typeof D !== "object" && typeof D !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
      return typeof Z === "function" ? D === Z : Z.has(D)
    }, kA2 = function(Z, D, Y) {
      if (D !== null && D !== void 0) {
        if (typeof D !== "object" && typeof D !== "function") throw new TypeError("Object expected.");
        var W, J;
        if (Y) {
          if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
          W = D[Symbol.asyncDispose]
        }
        if (W === void 0) {
          if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
          if (W = D[Symbol.dispose], Y) J = W
        }
        if (typeof W !== "function") throw new TypeError("Object not disposable.");
        if (J) W = function() {
          try {
            J.call(this)
          } catch (F) {
            return Promise.reject(F)
          }
        };
        Z.stack.push({
          value: D,
          dispose: W,
          async: Y
        })
      } else if (Y) Z.stack.push({
        async: !0
      });
      return D
    };
    var G = typeof SuppressedError === "function" ? SuppressedError : function(Z, D, Y) {
      var W = new Error(Y);
      return W.name = "SuppressedError", W.error = Z, W.suppressed = D, W
    };
    xA2 = function(Z) {
      function D(F) {
        Z.error = Z.hasError ? new G(F, Z.error, "An error was suppressed during disposal.") : F, Z.hasError = !0
      }
      var Y, W = 0;

      function J() {
        while (Y = Z.stack.pop()) try {
          if (!Y.async && W === 1) return W = 0, Z.stack.push(Y), Promise.resolve().then(J);
          if (Y.dispose) {
            var F = Y.dispose.call(Y.value);
            if (Y.async) return W |= 2, Promise.resolve(F).then(J, function(X) {
              return D(X), J()
            })
          } else W |= 1
        } catch (X) {
          D(X)
        }
        if (W === 1) return Z.hasError ? Promise.reject(Z.error) : Promise.resolve();
        if (Z.hasError) throw Z.error
      }
      return J()
    }, fA2 = function(Z, D) {
      if (typeof Z === "string" && /^\.\.?\//.test(Z)) return Z.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(Y, W, J, F, X) {
        return W ? D ? ".jsx" : ".js" : J && (!F || !X) ? Y : J + F + "." + X.toLowerCase() + "js"
      });
      return Z
    }, A("__extends", WA2), A("__assign", JA2), A("__rest", FA2), A("__decorate", XA2), A("__param", VA2), A("__esDecorate", CA2), A("__runInitializers", KA2), A("__propKey", HA2), A("__setFunctionName", zA2), A("__metadata", wA2), A("__awaiter", EA2), A("__generator", UA2), A("__exportStar", NA2), A("__createBinding", iF1), A("__values", lF1), A("__read", bi1), A("__spread", $A2), A("__spreadArrays", qA2), A("__spreadArray", MA2), A("__await", im), A("__asyncGenerator", LA2), A("__asyncDelegator", RA2), A("__asyncValues", OA2), A("__makeTemplateObject", TA2), A("__importStar", PA2), A("__importDefault", SA2), A("__classPrivateFieldGet", _A2), A("__classPrivateFieldSet", jA2), A("__classPrivateFieldIn", yA2), A("__addDisposableResource", kA2), A("__disposeResources", xA2), A("__rewriteRelativeImportExtension", fA2)
  })
})
// @from(Start 5840915, End 5844856)
bA2 = z((wb8, jj6) => {
  jj6.exports = {
    name: "@aws-sdk/client-cognito-identity",
    description: "AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native",
    version: "3.797.0",
    scripts: {
      build: "concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'",
      "build:cjs": "node ../../scripts/compilation/inline client-cognito-identity",
      "build:es": "tsc -p tsconfig.es.json",
      "build:include:deps": "lerna run --scope $npm_package_name --include-dependencies build",
      "build:types": "tsc -p tsconfig.types.json",
      "build:types:downlevel": "downlevel-dts dist-types dist-types/ts3.4",
      clean: "rimraf ./dist-* && rimraf *.tsbuildinfo",
      "extract:docs": "api-extractor run --local",
      "generate:client": "node ../../scripts/generate-clients/single-service --solo cognito-identity",
      "test:e2e": "yarn g:vitest run -c vitest.config.e2e.ts --mode development",
      "test:e2e:watch": "yarn g:vitest watch -c vitest.config.e2e.ts"
    },
    main: "./dist-cjs/index.js",
    types: "./dist-types/index.d.ts",
    module: "./dist-es/index.js",
    sideEffects: !1,
    dependencies: {
      "@aws-crypto/sha256-browser": "5.2.0",
      "@aws-crypto/sha256-js": "5.2.0",
      "@aws-sdk/core": "3.796.0",
      "@aws-sdk/credential-provider-node": "3.797.0",
      "@aws-sdk/middleware-host-header": "3.775.0",
      "@aws-sdk/middleware-logger": "3.775.0",
      "@aws-sdk/middleware-recursion-detection": "3.775.0",
      "@aws-sdk/middleware-user-agent": "3.796.0",
      "@aws-sdk/region-config-resolver": "3.775.0",
      "@aws-sdk/types": "3.775.0",
      "@aws-sdk/util-endpoints": "3.787.0",
      "@aws-sdk/util-user-agent-browser": "3.775.0",
      "@aws-sdk/util-user-agent-node": "3.796.0",
      "@smithy/config-resolver": "^4.1.0",
      "@smithy/core": "^3.2.0",
      "@smithy/fetch-http-handler": "^5.0.2",
      "@smithy/hash-node": "^4.0.2",
      "@smithy/invalid-dependency": "^4.0.2",
      "@smithy/middleware-content-length": "^4.0.2",
      "@smithy/middleware-endpoint": "^4.1.0",
      "@smithy/middleware-retry": "^4.1.0",
      "@smithy/middleware-serde": "^4.0.3",
      "@smithy/middleware-stack": "^4.0.2",
      "@smithy/node-config-provider": "^4.0.2",
      "@smithy/node-http-handler": "^4.0.4",
      "@smithy/protocol-http": "^5.1.0",
      "@smithy/smithy-client": "^4.2.0",
      "@smithy/types": "^4.2.0",
      "@smithy/url-parser": "^4.0.2",
      "@smithy/util-base64": "^4.0.0",
      "@smithy/util-body-length-browser": "^4.0.0",
      "@smithy/util-body-length-node": "^4.0.0",
      "@smithy/util-defaults-mode-browser": "^4.0.8",
      "@smithy/util-defaults-mode-node": "^4.0.8",
      "@smithy/util-endpoints": "^3.0.2",
      "@smithy/util-middleware": "^4.0.2",
      "@smithy/util-retry": "^4.0.2",
      "@smithy/util-utf8": "^4.0.0",
      tslib: "^2.6.2"
    },
    devDependencies: {
      "@aws-sdk/client-iam": "3.797.0",
      "@tsconfig/node18": "18.2.4",
      "@types/chai": "^4.2.11",
      "@types/node": "^18.19.69",
      concurrently: "7.0.0",
      "downlevel-dts": "0.10.1",
      rimraf: "3.0.2",
      typescript: "~5.2.2"
    },
    engines: {
      node: ">=18.0.0"
    },
    typesVersions: {
      "<4.0": {
        "dist-types/*": ["dist-types/ts3.4/*"]
      }
    },
    files: ["dist-*/**"],
    author: {
      name: "AWS SDK for JavaScript Team",
      url: "https://aws.amazon.com/javascript/"
    },
    license: "Apache-2.0",
    browser: {
      "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.browser"
    },
    "react-native": {
      "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.native"
    },
    homepage: "https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity",
    repository: {
      type: "git",
      url: "https://github.com/aws/aws-sdk-js-v3.git",
      directory: "clients/client-cognito-identity"
    }
  }
})
// @from(Start 5844862, End 5847645)
gi1 = z((Eb8, iA2) => {
  var {
    defineProperty: aF1,
    getOwnPropertyDescriptor: yj6,
    getOwnPropertyNames: kj6
  } = Object, xj6 = Object.prototype.hasOwnProperty, sF1 = (A, B) => aF1(A, "name", {
    value: B,
    configurable: !0
  }), fj6 = (A, B) => {
    for (var Q in B) aF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, vj6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of kj6(B))
        if (!xj6.call(A, G) && G !== Q) aF1(A, G, {
          get: () => B[G],
          enumerable: !(I = yj6(B, G)) || I.enumerable
        })
    }
    return A
  }, bj6 = (A) => vj6(aF1({}, "__esModule", {
    value: !0
  }), A), gA2 = {};
  fj6(gA2, {
    AlgorithmId: () => uA2,
    EndpointURLScheme: () => dA2,
    FieldPosition: () => pA2,
    HttpApiKeyAuthLocation: () => mA2,
    HttpAuthLocation: () => hA2,
    IniSectionType: () => cA2,
    RequestHandlerProtocol: () => lA2,
    SMITHY_CONTEXT_KEY: () => uj6,
    getDefaultClientConfiguration: () => mj6,
    resolveDefaultRuntimeConfig: () => dj6
  });
  iA2.exports = bj6(gA2);
  var hA2 = ((A) => {
      return A.HEADER = "header", A.QUERY = "query", A
    })(hA2 || {}),
    mA2 = ((A) => {
      return A.HEADER = "header", A.QUERY = "query", A
    })(mA2 || {}),
    dA2 = ((A) => {
      return A.HTTP = "http", A.HTTPS = "https", A
    })(dA2 || {}),
    uA2 = ((A) => {
      return A.MD5 = "md5", A.CRC32 = "crc32", A.CRC32C = "crc32c", A.SHA1 = "sha1", A.SHA256 = "sha256", A
    })(uA2 || {}),
    gj6 = sF1((A) => {
      let B = [];
      if (A.sha256 !== void 0) B.push({
        algorithmId: () => "sha256",
        checksumConstructor: () => A.sha256
      });
      if (A.md5 != null) B.push({
        algorithmId: () => "md5",
        checksumConstructor: () => A.md5
      });
      return {
        addChecksumAlgorithm(Q) {
          B.push(Q)
        },
        checksumAlgorithms() {
          return B
        }
      }
    }, "getChecksumConfiguration"),
    hj6 = sF1((A) => {
      let B = {};
      return A.checksumAlgorithms().forEach((Q) => {
        B[Q.algorithmId()] = Q.checksumConstructor()
      }), B
    }, "resolveChecksumRuntimeConfig"),
    mj6 = sF1((A) => {
      return gj6(A)
    }, "getDefaultClientConfiguration"),
    dj6 = sF1((A) => {
      return hj6(A)
    }, "resolveDefaultRuntimeConfig"),
    pA2 = ((A) => {
      return A[A.HEADER = 0] = "HEADER", A[A.TRAILER = 1] = "TRAILER", A
    })(pA2 || {}),
    uj6 = "__smithy_context",
    cA2 = ((A) => {
      return A.PROFILE = "profile", A.SSO_SESSION = "sso-session", A.SERVICES = "services", A
    })(cA2 || {}),
    lA2 = ((A) => {
      return A.HTTP_0_9 = "http/0.9", A.HTTP_1_0 = "http/1.0", A.TDS_8_0 = "tds/8.0", A
    })(lA2 || {})
})
// @from(Start 5847651, End 5876188)
ct = z((Ub8, F02) => {
  var {
    defineProperty: tF1,
    getOwnPropertyDescriptor: pj6,
    getOwnPropertyNames: cj6
  } = Object, lj6 = Object.prototype.hasOwnProperty, Q2 = (A, B) => tF1(A, "name", {
    value: B,
    configurable: !0
  }), ij6 = (A, B) => {
    for (var Q in B) tF1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, nj6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of cj6(B))
        if (!lj6.call(A, G) && G !== Q) tF1(A, G, {
          get: () => B[G],
          enumerable: !(I = pj6(B, G)) || I.enumerable
        })
    }
    return A
  }, aj6 = (A) => nj6(tF1({}, "__esModule", {
    value: !0
  }), A), aA2 = {};
  ij6(aA2, {
    Client: () => sj6,
    Command: () => rA2,
    LazyJsonString: () => hj,
    NoOpLogger: () => ly6,
    SENSITIVE_STRING: () => oj6,
    ServiceException: () => yy6,
    _json: () => li1,
    collectBody: () => hi1.collectBody,
    convertMap: () => iy6,
    createAggregatedClient: () => tj6,
    dateToUtcString: () => Q02,
    decorateServiceException: () => I02,
    emitWarningIfUnsupportedVersion: () => vy6,
    expectBoolean: () => Ay6,
    expectByte: () => ci1,
    expectFloat32: () => rF1,
    expectInt: () => Qy6,
    expectInt32: () => ui1,
    expectLong: () => ut,
    expectNonNull: () => Gy6,
    expectNumber: () => dt,
    expectObject: () => oA2,
    expectShort: () => pi1,
    expectString: () => Zy6,
    expectUnion: () => Dy6,
    extendedEncodeURIComponent: () => hi1.extendedEncodeURIComponent,
    getArrayIfSingleItem: () => py6,
    getDefaultClientConfiguration: () => dy6,
    getDefaultExtensionConfiguration: () => Z02,
    getValueFromTextNode: () => D02,
    handleFloat: () => Jy6,
    isSerializableHeaderValue: () => cy6,
    limitedParseDouble: () => ai1,
    limitedParseFloat: () => Fy6,
    limitedParseFloat32: () => Xy6,
    loadConfigsForDefaultMode: () => fy6,
    logger: () => pt,
    map: () => ri1,
    parseBoolean: () => ej6,
    parseEpochTimestamp: () => My6,
    parseRfc3339DateTime: () => zy6,
    parseRfc3339DateTimeWithOffset: () => Ey6,
    parseRfc7231DateTime: () => qy6,
    quoteHeader: () => W02,
    resolveDefaultRuntimeConfig: () => uy6,
    resolvedPath: () => hi1.resolvedPath,
    serializeDateTime: () => ty6,
    serializeFloat: () => oy6,
    splitEvery: () => J02,
    splitHeader: () => ey6,
    strictParseByte: () => B02,
    strictParseDouble: () => ni1,
    strictParseFloat: () => Yy6,
    strictParseFloat32: () => tA2,
    strictParseInt: () => Vy6,
    strictParseInt32: () => Cy6,
    strictParseLong: () => A02,
    strictParseShort: () => nm,
    take: () => ny6,
    throwDefaultError: () => G02,
    withBaseException: () => ky6
  });
  F02.exports = aj6(aA2);
  var sA2 = WN(),
    sj6 = class {
      constructor(A) {
        this.config = A, this.middlewareStack = sA2.constructStack()
      }
      static {
        Q2(this, "Client")
      }
      send(A, B, Q) {
        let I = typeof B !== "function" ? B : void 0,
          G = typeof B === "function" ? B : Q,
          Z = I === void 0 && this.config.cacheMiddleware === !0,
          D;
        if (Z) {
          if (!this.handlers) this.handlers = new WeakMap;
          let Y = this.handlers;
          if (Y.has(A.constructor)) D = Y.get(A.constructor);
          else D = A.resolveMiddleware(this.middlewareStack, this.config, I), Y.set(A.constructor, D)
        } else delete this.handlers, D = A.resolveMiddleware(this.middlewareStack, this.config, I);
        if (G) D(A).then((Y) => G(null, Y.output), (Y) => G(Y)).catch(() => {});
        else return D(A).then((Y) => Y.output)
      }
      destroy() {
        this.config?.requestHandler?.destroy?.(), delete this.handlers
      }
    },
    hi1 = vz(),
    di1 = gi1(),
    rA2 = class {
      constructor() {
        this.middlewareStack = sA2.constructStack()
      }
      static {
        Q2(this, "Command")
      }
      static classBuilder() {
        return new rj6
      }
      resolveMiddlewareWithContext(A, B, Q, {
        middlewareFn: I,
        clientName: G,
        commandName: Z,
        inputFilterSensitiveLog: D,
        outputFilterSensitiveLog: Y,
        smithyContext: W,
        additionalContext: J,
        CommandCtor: F
      }) {
        for (let E of I.bind(this)(F, A, B, Q)) this.middlewareStack.use(E);
        let X = A.concat(this.middlewareStack),
          {
            logger: V
          } = B,
          C = {
            logger: V,
            clientName: G,
            commandName: Z,
            inputFilterSensitiveLog: D,
            outputFilterSensitiveLog: Y,
            [di1.SMITHY_CONTEXT_KEY]: {
              commandInstance: this,
              ...W
            },
            ...J
          },
          {
            requestHandler: K
          } = B;
        return X.resolve((E) => K.handle(E.request, Q || {}), C)
      }
    },
    rj6 = class {
      constructor() {
        this._init = () => {}, this._ep = {}, this._middlewareFn = () => [], this._commandName = "", this._clientName = "", this._additionalContext = {}, this._smithyContext = {}, this._inputFilterSensitiveLog = (A) => A, this._outputFilterSensitiveLog = (A) => A, this._serializer = null, this._deserializer = null
      }
      static {
        Q2(this, "ClassBuilder")
      }
      init(A) {
        this._init = A
      }
      ep(A) {
        return this._ep = A, this
      }
      m(A) {
        return this._middlewareFn = A, this
      }
      s(A, B, Q = {}) {
        return this._smithyContext = {
          service: A,
          operation: B,
          ...Q
        }, this
      }
      c(A = {}) {
        return this._additionalContext = A, this
      }
      n(A, B) {
        return this._clientName = A, this._commandName = B, this
      }
      f(A = (Q) => Q, B = (Q) => Q) {
        return this._inputFilterSensitiveLog = A, this._outputFilterSensitiveLog = B, this
      }
      ser(A) {
        return this._serializer = A, this
      }
      de(A) {
        return this._deserializer = A, this
      }
      build() {
        let A = this,
          B;
        return B = class extends rA2 {
          constructor(...[Q]) {
            super();
            this.serialize = A._serializer, this.deserialize = A._deserializer, this.input = Q ?? {}, A._init(this)
          }
          static {
            Q2(this, "CommandRef")
          }
          static getEndpointParameterInstructions() {
            return A._ep
          }
          resolveMiddleware(Q, I, G) {
            return this.resolveMiddlewareWithContext(Q, I, G, {
              CommandCtor: B,
              middlewareFn: A._middlewareFn,
              clientName: A._clientName,
              commandName: A._commandName,
              inputFilterSensitiveLog: A._inputFilterSensitiveLog,
              outputFilterSensitiveLog: A._outputFilterSensitiveLog,
              smithyContext: A._smithyContext,
              additionalContext: A._additionalContext
            })
          }
        }
      }
    },
    oj6 = "***SensitiveInformation***",
    tj6 = Q2((A, B) => {
      for (let Q of Object.keys(A)) {
        let I = A[Q],
          G = Q2(async function(D, Y, W) {
            let J = new I(D);
            if (typeof Y === "function") this.send(J, Y);
            else if (typeof W === "function") {
              if (typeof Y !== "object") throw new Error(`Expected http options but got ${typeof Y}`);
              this.send(J, Y || {}, W)
            } else return this.send(J, Y)
          }, "methodImpl"),
          Z = (Q[0].toLowerCase() + Q.slice(1)).replace(/Command$/, "");
        B.prototype[Z] = G
      }
    }, "createAggregatedClient"),
    ej6 = Q2((A) => {
      switch (A) {
        case "true":
          return !0;
        case "false":
          return !1;
        default:
          throw new Error(`Unable to parse boolean value "${A}"`)
      }
    }, "parseBoolean"),
    Ay6 = Q2((A) => {
      if (A === null || A === void 0) return;
      if (typeof A === "number") {
        if (A === 0 || A === 1) pt.warn(oF1(`Expected boolean, got ${typeof A}: ${A}`));
        if (A === 0) return !1;
        if (A === 1) return !0
      }
      if (typeof A === "string") {
        let B = A.toLowerCase();
        if (B === "false" || B === "true") pt.warn(oF1(`Expected boolean, got ${typeof A}: ${A}`));
        if (B === "false") return !1;
        if (B === "true") return !0
      }
      if (typeof A === "boolean") return A;
      throw new TypeError(`Expected boolean, got ${typeof A}: ${A}`)
    }, "expectBoolean"),
    dt = Q2((A) => {
      if (A === null || A === void 0) return;
      if (typeof A === "string") {
        let B = parseFloat(A);
        if (!Number.isNaN(B)) {
          if (String(B) !== String(A)) pt.warn(oF1(`Expected number but observed string: ${A}`));
          return B
        }
      }
      if (typeof A === "number") return A;
      throw new TypeError(`Expected number, got ${typeof A}: ${A}`)
    }, "expectNumber"),
    By6 = Math.ceil(340282346638528860000000000000000000000),
    rF1 = Q2((A) => {
      let B = dt(A);
      if (B !== void 0 && !Number.isNaN(B) && B !== 1 / 0 && B !== -1 / 0) {
        if (Math.abs(B) > By6) throw new TypeError(`Expected 32-bit float, got ${A}`)
      }
      return B
    }, "expectFloat32"),
    ut = Q2((A) => {
      if (A === null || A === void 0) return;
      if (Number.isInteger(A) && !Number.isNaN(A)) return A;
      throw new TypeError(`Expected integer, got ${typeof A}: ${A}`)
    }, "expectLong"),
    Qy6 = ut,
    ui1 = Q2((A) => ii1(A, 32), "expectInt32"),
    pi1 = Q2((A) => ii1(A, 16), "expectShort"),
    ci1 = Q2((A) => ii1(A, 8), "expectByte"),
    ii1 = Q2((A, B) => {
      let Q = ut(A);
      if (Q !== void 0 && Iy6(Q, B) !== Q) throw new TypeError(`Expected ${B}-bit integer, got ${A}`);
      return Q
    }, "expectSizedInt"),
    Iy6 = Q2((A, B) => {
      switch (B) {
        case 32:
          return Int32Array.of(A)[0];
        case 16:
          return Int16Array.of(A)[0];
        case 8:
          return Int8Array.of(A)[0]
      }
    }, "castInt"),
    Gy6 = Q2((A, B) => {
      if (A === null || A === void 0) {
        if (B) throw new TypeError(`Expected a non-null value for ${B}`);
        throw new TypeError("Expected a non-null value")
      }
      return A
    }, "expectNonNull"),
    oA2 = Q2((A) => {
      if (A === null || A === void 0) return;
      if (typeof A === "object" && !Array.isArray(A)) return A;
      let B = Array.isArray(A) ? "array" : typeof A;
      throw new TypeError(`Expected object, got ${B}: ${A}`)
    }, "expectObject"),
    Zy6 = Q2((A) => {
      if (A === null || A === void 0) return;
      if (typeof A === "string") return A;
      if (["boolean", "number", "bigint"].includes(typeof A)) return pt.warn(oF1(`Expected string, got ${typeof A}: ${A}`)), String(A);
      throw new TypeError(`Expected string, got ${typeof A}: ${A}`)
    }, "expectString"),
    Dy6 = Q2((A) => {
      if (A === null || A === void 0) return;
      let B = oA2(A),
        Q = Object.entries(B).filter(([, I]) => I != null).map(([I]) => I);
      if (Q.length === 0) throw new TypeError("Unions must have exactly one non-null member. None were found.");
      if (Q.length > 1) throw new TypeError(`Unions must have exactly one non-null member. Keys ${Q} were not null.`);
      return B
    }, "expectUnion"),
    ni1 = Q2((A) => {
      if (typeof A == "string") return dt(sm(A));
      return dt(A)
    }, "strictParseDouble"),
    Yy6 = ni1,
    tA2 = Q2((A) => {
      if (typeof A == "string") return rF1(sm(A));
      return rF1(A)
    }, "strictParseFloat32"),
    Wy6 = /(-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?)|(-?Infinity)|(NaN)/g,
    sm = Q2((A) => {
      let B = A.match(Wy6);
      if (B === null || B[0].length !== A.length) throw new TypeError("Expected real number, got implicit NaN");
      return parseFloat(A)
    }, "parseNumber"),
    ai1 = Q2((A) => {
      if (typeof A == "string") return eA2(A);
      return dt(A)
    }, "limitedParseDouble"),
    Jy6 = ai1,
    Fy6 = ai1,
    Xy6 = Q2((A) => {
      if (typeof A == "string") return eA2(A);
      return rF1(A)
    }, "limitedParseFloat32"),
    eA2 = Q2((A) => {
      switch (A) {
        case "NaN":
          return NaN;
        case "Infinity":
          return 1 / 0;
        case "-Infinity":
          return -1 / 0;
        default:
          throw new Error(`Unable to parse float value: ${A}`)
      }
    }, "parseFloatString"),
    A02 = Q2((A) => {
      if (typeof A === "string") return ut(sm(A));
      return ut(A)
    }, "strictParseLong"),
    Vy6 = A02,
    Cy6 = Q2((A) => {
      if (typeof A === "string") return ui1(sm(A));
      return ui1(A)
    }, "strictParseInt32"),
    nm = Q2((A) => {
      if (typeof A === "string") return pi1(sm(A));
      return pi1(A)
    }, "strictParseShort"),
    B02 = Q2((A) => {
      if (typeof A === "string") return ci1(sm(A));
      return ci1(A)
    }, "strictParseByte"),
    oF1 = Q2((A) => {
      return String(new TypeError(A).stack || A).split(`
`).slice(0, 5).filter((B) => !B.includes("stackTraceWarning")).join(`
`)
    }, "stackTraceWarning"),
    pt = {
      warn: console.warn
    },
    Ky6 = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    si1 = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

  function Q02(A) {
    let B = A.getUTCFullYear(),
      Q = A.getUTCMonth(),
      I = A.getUTCDay(),
      G = A.getUTCDate(),
      Z = A.getUTCHours(),
      D = A.getUTCMinutes(),
      Y = A.getUTCSeconds(),
      W = G < 10 ? `0${G}` : `${G}`,
      J = Z < 10 ? `0${Z}` : `${Z}`,
      F = D < 10 ? `0${D}` : `${D}`,
      X = Y < 10 ? `0${Y}` : `${Y}`;
    return `${Ky6[I]}, ${W} ${si1[Q]} ${B} ${J}:${F}:${X} GMT`
  }
  Q2(Q02, "dateToUtcString");
  var Hy6 = new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?[zZ]$/),
    zy6 = Q2((A) => {
      if (A === null || A === void 0) return;
      if (typeof A !== "string") throw new TypeError("RFC-3339 date-times must be expressed as strings");
      let B = Hy6.exec(A);
      if (!B) throw new TypeError("Invalid RFC-3339 date-time value");
      let [Q, I, G, Z, D, Y, W, J] = B, F = nm(am(I)), X = hw(G, "month", 1, 12), V = hw(Z, "day", 1, 31);
      return mt(F, X, V, {
        hours: D,
        minutes: Y,
        seconds: W,
        fractionalMilliseconds: J
      })
    }, "parseRfc3339DateTime"),
    wy6 = new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?(([-+]\d{2}\:\d{2})|[zZ])$/),
    Ey6 = Q2((A) => {
      if (A === null || A === void 0) return;
      if (typeof A !== "string") throw new TypeError("RFC-3339 date-times must be expressed as strings");
      let B = wy6.exec(A);
      if (!B) throw new TypeError("Invalid RFC-3339 date-time value");
      let [Q, I, G, Z, D, Y, W, J, F] = B, X = nm(am(I)), V = hw(G, "month", 1, 12), C = hw(Z, "day", 1, 31), K = mt(X, V, C, {
        hours: D,
        minutes: Y,
        seconds: W,
        fractionalMilliseconds: J
      });
      if (F.toUpperCase() != "Z") K.setTime(K.getTime() - jy6(F));
      return K
    }, "parseRfc3339DateTimeWithOffset"),
    Uy6 = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? GMT$/),
    Ny6 = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d{2}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? GMT$/),
    $y6 = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\d{2}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? (\d{4})$/),
    qy6 = Q2((A) => {
      if (A === null || A === void 0) return;
      if (typeof A !== "string") throw new TypeError("RFC-7231 date-times must be expressed as strings");
      let B = Uy6.exec(A);
      if (B) {
        let [Q, I, G, Z, D, Y, W, J] = B;
        return mt(nm(am(Z)), mi1(G), hw(I, "day", 1, 31), {
          hours: D,
          minutes: Y,
          seconds: W,
          fractionalMilliseconds: J
        })
      }
      if (B = Ny6.exec(A), B) {
        let [Q, I, G, Z, D, Y, W, J] = B;
        return Oy6(mt(Ly6(Z), mi1(G), hw(I, "day", 1, 31), {
          hours: D,
          minutes: Y,
          seconds: W,
          fractionalMilliseconds: J
        }))
      }
      if (B = $y6.exec(A), B) {
        let [Q, I, G, Z, D, Y, W, J] = B;
        return mt(nm(am(J)), mi1(I), hw(G.trimLeft(), "day", 1, 31), {
          hours: Z,
          minutes: D,
          seconds: Y,
          fractionalMilliseconds: W
        })
      }
      throw new TypeError("Invalid RFC-7231 date-time value")
    }, "parseRfc7231DateTime"),
    My6 = Q2((A) => {
      if (A === null || A === void 0) return;
      let B;
      if (typeof A === "number") B = A;
      else if (typeof A === "string") B = ni1(A);
      else if (typeof A === "object" && A.tag === 1) B = A.value;
      else throw new TypeError("Epoch timestamps must be expressed as floating point numbers or their string representation");
      if (Number.isNaN(B) || B === 1 / 0 || B === -1 / 0) throw new TypeError("Epoch timestamps must be valid, non-Infinite, non-NaN numerics");
      return new Date(Math.round(B * 1000))
    }, "parseEpochTimestamp"),
    mt = Q2((A, B, Q, I) => {
      let G = B - 1;
      return Py6(A, G, Q), new Date(Date.UTC(A, G, Q, hw(I.hours, "hour", 0, 23), hw(I.minutes, "minute", 0, 59), hw(I.seconds, "seconds", 0, 60), _y6(I.fractionalMilliseconds)))
    }, "buildDate"),
    Ly6 = Q2((A) => {
      let B = new Date().getUTCFullYear(),
        Q = Math.floor(B / 100) * 100 + nm(am(A));
      if (Q < B) return Q + 100;
      return Q
    }, "parseTwoDigitYear"),
    Ry6 = 1576800000000,
    Oy6 = Q2((A) => {
      if (A.getTime() - new Date().getTime() > Ry6) return new Date(Date.UTC(A.getUTCFullYear() - 100, A.getUTCMonth(), A.getUTCDate(), A.getUTCHours(), A.getUTCMinutes(), A.getUTCSeconds(), A.getUTCMilliseconds()));
      return A
    }, "adjustRfc850Year"),
    mi1 = Q2((A) => {
      let B = si1.indexOf(A);
      if (B < 0) throw new TypeError(`Invalid month: ${A}`);
      return B + 1
    }, "parseMonthByShortName"),
    Ty6 = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
    Py6 = Q2((A, B, Q) => {
      let I = Ty6[B];
      if (B === 1 && Sy6(A)) I = 29;
      if (Q > I) throw new TypeError(`Invalid day for ${si1[B]} in ${A}: ${Q}`)
    }, "validateDayOfMonth"),
    Sy6 = Q2((A) => {
      return A % 4 === 0 && (A % 100 !== 0 || A % 400 === 0)
    }, "isLeapYear"),
    hw = Q2((A, B, Q, I) => {
      let G = B02(am(A));
      if (G < Q || G > I) throw new TypeError(`${B} must be between ${Q} and ${I}, inclusive`);
      return G
    }, "parseDateValue"),
    _y6 = Q2((A) => {
      if (A === null || A === void 0) return 0;
      return tA2("0." + A) * 1000
    }, "parseMilliseconds"),
    jy6 = Q2((A) => {
      let B = A[0],
        Q = 1;
      if (B == "+") Q = 1;
      else if (B == "-") Q = -1;
      else throw new TypeError(`Offset direction, ${B}, must be "+" or "-"`);
      let I = Number(A.substring(1, 3)),
        G = Number(A.substring(4, 6));
      return Q * (I * 60 + G) * 60 * 1000
    }, "parseOffsetToMilliseconds"),
    am = Q2((A) => {
      let B = 0;
      while (B < A.length - 1 && A.charAt(B) === "0") B++;
      if (B === 0) return A;
      return A.slice(B)
    }, "stripLeadingZeroes"),
    yy6 = class A extends Error {
      static {
        Q2(this, "ServiceException")
      }
      constructor(B) {
        super(B.message);
        Object.setPrototypeOf(this, Object.getPrototypeOf(this).constructor.prototype), this.name = B.name, this.$fault = B.$fault, this.$metadata = B.$metadata
      }
      static isInstance(B) {
        if (!B) return !1;
        let Q = B;
        return A.prototype.isPrototypeOf(Q) || Boolean(Q.$fault) && Boolean(Q.$metadata) && (Q.$fault === "client" || Q.$fault === "server")
      }
      static[Symbol.hasInstance](B) {
        if (!B) return !1;
        let Q = B;
        if (this === A) return A.isInstance(B);
        if (A.isInstance(B)) {
          if (Q.name && this.name) return this.prototype.isPrototypeOf(B) || Q.name === this.name;
          return this.prototype.isPrototypeOf(B)
        }
        return !1
      }
    },
    I02 = Q2((A, B = {}) => {
      Object.entries(B).filter(([, I]) => I !== void 0).forEach(([I, G]) => {
        if (A[I] == null || A[I] === "") A[I] = G
      });
      let Q = A.message || A.Message || "UnknownError";
      return A.message = Q, delete A.Message, A
    }, "decorateServiceException"),
    G02 = Q2(({
      output: A,
      parsedBody: B,
      exceptionCtor: Q,
      errorCode: I
    }) => {
      let G = xy6(A),
        Z = G.httpStatusCode ? G.httpStatusCode + "" : void 0,
        D = new Q({
          name: B?.code || B?.Code || I || Z || "UnknownError",
          $fault: "client",
          $metadata: G
        });
      throw I02(D, B)
    }, "throwDefaultError"),
    ky6 = Q2((A) => {
      return ({
        output: B,
        parsedBody: Q,
        errorCode: I
      }) => {
        G02({
          output: B,
          parsedBody: Q,
          exceptionCtor: A,
          errorCode: I
        })
      }
    }, "withBaseException"),
    xy6 = Q2((A) => ({
      httpStatusCode: A.statusCode,
      requestId: A.headers["x-amzn-requestid"] ?? A.headers["x-amzn-request-id"] ?? A.headers["x-amz-request-id"],
      extendedRequestId: A.headers["x-amz-id-2"],
      cfId: A.headers["x-amz-cf-id"]
    }), "deserializeMetadata"),
    fy6 = Q2((A) => {
      switch (A) {
        case "standard":
          return {
            retryMode: "standard", connectionTimeout: 3100
          };
        case "in-region":
          return {
            retryMode: "standard", connectionTimeout: 1100
          };
        case "cross-region":
          return {
            retryMode: "standard", connectionTimeout: 3100
          };
        case "mobile":
          return {
            retryMode: "standard", connectionTimeout: 30000
          };
        default:
          return {}
      }
    }, "loadConfigsForDefaultMode"),
    nA2 = !1,
    vy6 = Q2((A) => {
      if (A && !nA2 && parseInt(A.substring(1, A.indexOf("."))) < 16) nA2 = !0
    }, "emitWarningIfUnsupportedVersion"),
    by6 = Q2((A) => {
      let B = [];
      for (let Q in di1.AlgorithmId) {
        let I = di1.AlgorithmId[Q];
        if (A[I] === void 0) continue;
        B.push({
          algorithmId: () => I,
          checksumConstructor: () => A[I]
        })
      }
      return {
        addChecksumAlgorithm(Q) {
          B.push(Q)
        },
        checksumAlgorithms() {
          return B
        }
      }
    }, "getChecksumConfiguration"),
    gy6 = Q2((A) => {
      let B = {};
      return A.checksumAlgorithms().forEach((Q) => {
        B[Q.algorithmId()] = Q.checksumConstructor()
      }), B
    }, "resolveChecksumRuntimeConfig"),
    hy6 = Q2((A) => {
      return {
        setRetryStrategy(B) {
          A.retryStrategy = B
        },
        retryStrategy() {
          return A.retryStrategy
        }
      }
    }, "getRetryConfiguration"),
    my6 = Q2((A) => {
      let B = {};
      return B.retryStrategy = A.retryStrategy(), B
    }, "resolveRetryRuntimeConfig"),
    Z02 = Q2((A) => {
      return Object.assign(by6(A), hy6(A))
    }, "getDefaultExtensionConfiguration"),
    dy6 = Z02,
    uy6 = Q2((A) => {
      return Object.assign(gy6(A), my6(A))
    }, "resolveDefaultRuntimeConfig"),
    py6 = Q2((A) => Array.isArray(A) ? A : [A], "getArrayIfSingleItem"),
    D02 = Q2((A) => {
      for (let Q in A)
        if (A.hasOwnProperty(Q) && A[Q]["#text"] !== void 0) A[Q] = A[Q]["#text"];
        else if (typeof A[Q] === "object" && A[Q] !== null) A[Q] = D02(A[Q]);
      return A
    }, "getValueFromTextNode"),
    cy6 = Q2((A) => {
      return A != null
    }, "isSerializableHeaderValue"),
    hj = Q2(function A(B) {
      return Object.assign(new String(B), {
        deserializeJSON() {
          return JSON.parse(String(B))
        },
        toString() {
          return String(B)
        },
        toJSON() {
          return String(B)
        }
      })
    }, "LazyJsonString");
  hj.from = (A) => {
    if (A && typeof A === "object" && (A instanceof hj || ("deserializeJSON" in A))) return A;
    else if (typeof A === "string" || Object.getPrototypeOf(A) === String.prototype) return hj(String(A));
    return hj(JSON.stringify(A))
  };
  hj.fromObject = hj.from;
  var ly6 = class {
    static {
      Q2(this, "NoOpLogger")
    }
    trace() {}
    debug() {}
    info() {}
    warn() {}
    error() {}
  };

  function ri1(A, B, Q) {
    let I, G, Z;
    if (typeof B === "undefined" && typeof Q === "undefined") I = {}, Z = A;
    else if (I = A, typeof B === "function") return G = B, Z = Q, ay6(I, G, Z);
    else Z = B;
    for (let D of Object.keys(Z)) {
      if (!Array.isArray(Z[D])) {
        I[D] = Z[D];
        continue
      }
      Y02(I, null, Z, D)
    }
    return I
  }
  Q2(ri1, "map");
  var iy6 = Q2((A) => {
      let B = {};
      for (let [Q, I] of Object.entries(A || {})) B[Q] = [, I];
      return B
    }, "convertMap"),
    ny6 = Q2((A, B) => {
      let Q = {};
      for (let I in B) Y02(Q, A, B, I);
      return Q
    }, "take"),
    ay6 = Q2((A, B, Q) => {
      return ri1(A, Object.entries(Q).reduce((I, [G, Z]) => {
        if (Array.isArray(Z)) I[G] = Z;
        else if (typeof Z === "function") I[G] = [B, Z()];
        else I[G] = [B, Z];
        return I
      }, {}))
    }, "mapWithFilter"),
    Y02 = Q2((A, B, Q, I) => {
      if (B !== null) {
        let D = Q[I];
        if (typeof D === "function") D = [, D];
        let [Y = sy6, W = ry6, J = I] = D;
        if (typeof Y === "function" && Y(B[J]) || typeof Y !== "function" && !!Y) A[I] = W(B[J]);
        return
      }
      let [G, Z] = Q[I];
      if (typeof Z === "function") {
        let D, Y = G === void 0 && (D = Z()) != null,
          W = typeof G === "function" && !!G(void 0) || typeof G !== "function" && !!G;
        if (Y) A[I] = D;
        else if (W) A[I] = Z()
      } else {
        let D = G === void 0 && Z != null,
          Y = typeof G === "function" && !!G(Z) || typeof G !== "function" && !!G;
        if (D || Y) A[I] = Z
      }
    }, "applyInstruction"),
    sy6 = Q2((A) => A != null, "nonNullish"),
    ry6 = Q2((A) => A, "pass");

  function W02(A) {
    if (A.includes(",") || A.includes('"')) A = `"${A.replace(/"/g,"\\\"")}"`;
    return A
  }
  Q2(W02, "quoteHeader");
  var oy6 = Q2((A) => {
      if (A !== A) return "NaN";
      switch (A) {
        case 1 / 0:
          return "Infinity";
        case -1 / 0:
          return "-Infinity";
        default:
          return A
      }
    }, "serializeFloat"),
    ty6 = Q2((A) => A.toISOString().replace(".000Z", "Z"), "serializeDateTime"),
    li1 = Q2((A) => {
      if (A == null) return {};
      if (Array.isArray(A)) return A.filter((B) => B != null).map(li1);
      if (typeof A === "object") {
        let B = {};
        for (let Q of Object.keys(A)) {
          if (A[Q] == null) continue;
          B[Q] = li1(A[Q])
        }
        return B
      }
      return A
    }, "_json");

  function J02(A, B, Q) {
    if (Q <= 0 || !Number.isInteger(Q)) throw new Error("Invalid number of delimiters (" + Q + ") for splitEvery.");
    let I = A.split(B);
    if (Q === 1) return I;
    let G = [],
      Z = "";
    for (let D = 0; D < I.length; D++) {
      if (Z === "") Z = I[D];
      else Z += B + I[D];
      if ((D + 1) % Q === 0) G.push(Z), Z = ""
    }
    if (Z !== "") G.push(Z);
    return G
  }
  Q2(J02, "splitEvery");
  var ey6 = Q2((A) => {
    let B = A.length,
      Q = [],
      I = !1,
      G = void 0,
      Z = 0;
    for (let D = 0; D < B; ++D) {
      let Y = A[D];
      switch (Y) {
        case '"':
          if (G !== "\\") I = !I;
          break;
        case ",":
          if (!I) Q.push(A.slice(Z, D)), Z = D + 1;
          break;
        default:
      }
      G = Y
    }
    return Q.push(A.slice(Z)), Q.map((D) => {
      D = D.trim();
      let Y = D.length;
      if (Y < 2) return D;
      if (D[0] === '"' && D[Y - 1] === '"') D = D.slice(1, Y - 1);
      return D.replace(/\\"/g, '"')
    })
  }, "splitHeader")
})
// @from(Start 5876194, End 5876684)
C02 = z((X02) => {
  Object.defineProperty(X02, "__esModule", {
    value: !0
  });
  X02.fromBase64 = void 0;
  var Ak6 = MZ(),
    Bk6 = /^[A-Za-z0-9+/]*={0,2}$/,
    Qk6 = (A) => {
      if (A.length * 3 % 4 !== 0) throw new TypeError("Incorrect padding on base64 string.");
      if (!Bk6.exec(A)) throw new TypeError("Invalid base64 string.");
      let B = Ak6.fromString(A, "base64");
      return new Uint8Array(B.buffer, B.byteOffset, B.byteLength)
    };
  X02.fromBase64 = Qk6
})
// @from(Start 5876690, End 5877263)
z02 = z((K02) => {
  Object.defineProperty(K02, "__esModule", {
    value: !0
  });
  K02.toBase64 = void 0;
  var Ik6 = MZ(),
    Gk6 = RQ(),
    Zk6 = (A) => {
      let B;
      if (typeof A === "string") B = Gk6.fromUtf8(A);
      else B = A;
      if (typeof B !== "object" || typeof B.byteOffset !== "number" || typeof B.byteLength !== "number") throw new Error("@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.");
      return Ik6.fromArrayBuffer(B.buffer, B.byteOffset, B.byteLength).toString("base64")
    };
  K02.toBase64 = Zk6
})
// @from(Start 5877269, End 5877965)
U02 = z((Tb8, eF1) => {
  var {
    defineProperty: w02,
    getOwnPropertyDescriptor: Dk6,
    getOwnPropertyNames: Yk6
  } = Object, Wk6 = Object.prototype.hasOwnProperty, oi1 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Yk6(B))
        if (!Wk6.call(A, G) && G !== Q) w02(A, G, {
          get: () => B[G],
          enumerable: !(I = Dk6(B, G)) || I.enumerable
        })
    }
    return A
  }, E02 = (A, B, Q) => (oi1(A, B, "default"), Q && oi1(Q, B, "default")), Jk6 = (A) => oi1(w02({}, "__esModule", {
    value: !0
  }), A), ti1 = {};
  eF1.exports = Jk6(ti1);
  E02(ti1, C02(), eF1.exports);
  E02(ti1, z02(), eF1.exports)
})
// @from(Start 5877971, End 5884114)
v02 = z((x02) => {
  Object.defineProperty(x02, "__esModule", {
    value: !0
  });
  x02.ruleSet = void 0;
  var _02 = "required",
    mZ = "fn",
    dZ = "argv",
    om = "ref",
    N02 = !0,
    $02 = "isSet",
    nt = "booleanEquals",
    rm = "error",
    mw = "endpoint",
    Y$ = "tree",
    ei1 = "PartitionResult",
    An1 = "getAttr",
    lt = "stringEquals",
    q02 = {
      [_02]: !1,
      type: "String"
    },
    M02 = {
      [_02]: !0,
      default: !1,
      type: "Boolean"
    },
    L02 = {
      [om]: "Endpoint"
    },
    j02 = {
      [mZ]: nt,
      [dZ]: [{
        [om]: "UseFIPS"
      }, !0]
    },
    y02 = {
      [mZ]: nt,
      [dZ]: [{
        [om]: "UseDualStack"
      }, !0]
    },
    w7 = {},
    it = {
      [om]: "Region"
    },
    R02 = {
      [mZ]: An1,
      [dZ]: [{
        [om]: ei1
      }, "supportsFIPS"]
    },
    k02 = {
      [om]: ei1
    },
    O02 = {
      [mZ]: nt,
      [dZ]: [!0, {
        [mZ]: An1,
        [dZ]: [k02, "supportsDualStack"]
      }]
    },
    T02 = [j02],
    P02 = [y02],
    S02 = [it],
    Fk6 = {
      version: "1.0",
      parameters: {
        Region: q02,
        UseDualStack: M02,
        UseFIPS: M02,
        Endpoint: q02
      },
      rules: [{
        conditions: [{
          [mZ]: $02,
          [dZ]: [L02]
        }],
        rules: [{
          conditions: T02,
          error: "Invalid Configuration: FIPS and custom endpoint are not supported",
          type: rm
        }, {
          conditions: P02,
          error: "Invalid Configuration: Dualstack and custom endpoint are not supported",
          type: rm
        }, {
          endpoint: {
            url: L02,
            properties: w7,
            headers: w7
          },
          type: mw
        }],
        type: Y$
      }, {
        conditions: [{
          [mZ]: $02,
          [dZ]: S02
        }],
        rules: [{
          conditions: [{
            [mZ]: "aws.partition",
            [dZ]: S02,
            assign: ei1
          }],
          rules: [{
            conditions: [j02, y02],
            rules: [{
              conditions: [{
                [mZ]: nt,
                [dZ]: [N02, R02]
              }, O02],
              rules: [{
                conditions: [{
                  [mZ]: lt,
                  [dZ]: [it, "us-east-1"]
                }],
                endpoint: {
                  url: "https://cognito-identity-fips.us-east-1.amazonaws.com",
                  properties: w7,
                  headers: w7
                },
                type: mw
              }, {
                conditions: [{
                  [mZ]: lt,
                  [dZ]: [it, "us-east-2"]
                }],
                endpoint: {
                  url: "https://cognito-identity-fips.us-east-2.amazonaws.com",
                  properties: w7,
                  headers: w7
                },
                type: mw
              }, {
                conditions: [{
                  [mZ]: lt,
                  [dZ]: [it, "us-west-1"]
                }],
                endpoint: {
                  url: "https://cognito-identity-fips.us-west-1.amazonaws.com",
                  properties: w7,
                  headers: w7
                },
                type: mw
              }, {
                conditions: [{
                  [mZ]: lt,
                  [dZ]: [it, "us-west-2"]
                }],
                endpoint: {
                  url: "https://cognito-identity-fips.us-west-2.amazonaws.com",
                  properties: w7,
                  headers: w7
                },
                type: mw
              }, {
                endpoint: {
                  url: "https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                  properties: w7,
                  headers: w7
                },
                type: mw
              }],
              type: Y$
            }, {
              error: "FIPS and DualStack are enabled, but this partition does not support one or both",
              type: rm
            }],
            type: Y$
          }, {
            conditions: T02,
            rules: [{
              conditions: [{
                [mZ]: nt,
                [dZ]: [R02, N02]
              }],
              rules: [{
                endpoint: {
                  url: "https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}",
                  properties: w7,
                  headers: w7
                },
                type: mw
              }],
              type: Y$
            }, {
              error: "FIPS is enabled but this partition does not support FIPS",
              type: rm
            }],
            type: Y$
          }, {
            conditions: P02,
            rules: [{
              conditions: [O02],
              rules: [{
                conditions: [{
                  [mZ]: lt,
                  [dZ]: ["aws", {
                    [mZ]: An1,
                    [dZ]: [k02, "name"]
                  }]
                }],
                endpoint: {
                  url: "https://cognito-identity.{Region}.amazonaws.com",
                  properties: w7,
                  headers: w7
                },
                type: mw
              }, {
                endpoint: {
                  url: "https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}",
                  properties: w7,
                  headers: w7
                },
                type: mw
              }],
              type: Y$
            }, {
              error: "DualStack is enabled but this partition does not support DualStack",
              type: rm
            }],
            type: Y$
          }, {
            endpoint: {
              url: "https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}",
              properties: w7,
              headers: w7
            },
            type: mw
          }],
          type: Y$
        }],
        type: Y$
      }, {
        error: "Invalid Configuration: Missing Region",
        type: rm
      }]
    };
  x02.ruleSet = Fk6
})
// @from(Start 5884120, End 5884678)
h02 = z((b02) => {
  Object.defineProperty(b02, "__esModule", {
    value: !0
  });
  b02.defaultEndpointResolver = void 0;
  var Xk6 = RL(),
    Bn1 = LL(),
    Vk6 = v02(),
    Ck6 = new Bn1.EndpointCache({
      size: 50,
      params: ["Endpoint", "Region", "UseDualStack", "UseFIPS"]
    }),
    Kk6 = (A, B = {}) => {
      return Ck6.get(A, () => Bn1.resolveEndpoint(Vk6.ruleSet, {
        endpointParams: A,
        logger: B.logger
      }))
    };
  b02.defaultEndpointResolver = Kk6;
  Bn1.customEndpointFunctions.aws = Xk6.awsEndpointFunctions
})
// @from(Start 5884684, End 5886119)
c02 = z((u02) => {
  Object.defineProperty(u02, "__esModule", {
    value: !0
  });
  u02.getRuntimeConfig = void 0;
  var Hk6 = IB(),
    zk6 = NI(),
    wk6 = ct(),
    Ek6 = FN(),
    m02 = U02(),
    d02 = RQ(),
    Uk6 = vi1(),
    Nk6 = h02(),
    $k6 = (A) => {
      return {
        apiVersion: "2014-06-30",
        base64Decoder: A?.base64Decoder ?? m02.fromBase64,
        base64Encoder: A?.base64Encoder ?? m02.toBase64,
        disableHostPrefix: A?.disableHostPrefix ?? !1,
        endpointProvider: A?.endpointProvider ?? Nk6.defaultEndpointResolver,
        extensions: A?.extensions ?? [],
        httpAuthSchemeProvider: A?.httpAuthSchemeProvider ?? Uk6.defaultCognitoIdentityHttpAuthSchemeProvider,
        httpAuthSchemes: A?.httpAuthSchemes ?? [{
          schemeId: "aws.auth#sigv4",
          identityProvider: (B) => B.getIdentityProvider("aws.auth#sigv4"),
          signer: new Hk6.AwsSdkSigV4Signer
        }, {
          schemeId: "smithy.api#noAuth",
          identityProvider: (B) => B.getIdentityProvider("smithy.api#noAuth") || (async () => ({})),
          signer: new zk6.NoAuthSigner
        }],
        logger: A?.logger ?? new wk6.NoOpLogger,
        serviceId: A?.serviceId ?? "Cognito Identity",
        urlParser: A?.urlParser ?? Ek6.parseUrl,
        utf8Decoder: A?.utf8Decoder ?? d02.fromUtf8,
        utf8Encoder: A?.utf8Encoder ?? d02.toUtf8
      }
    };
  u02.getRuntimeConfig = $k6
})
// @from(Start 5886125, End 5888326)
r02 = z((a02) => {
  Object.defineProperty(a02, "__esModule", {
    value: !0
  });
  a02.getRuntimeConfig = void 0;
  var qk6 = vA2(),
    Mk6 = qk6.__importDefault(bA2()),
    Lk6 = IB(),
    Rk6 = ha(),
    l02 = I_(),
    AX1 = _D(),
    Ok6 = G_(),
    i02 = KJ(),
    tm = qC(),
    n02 = DN(),
    Tk6 = Z_(),
    Pk6 = vL(),
    Sk6 = c02(),
    _k6 = ct(),
    jk6 = Y_(),
    yk6 = ct(),
    kk6 = (A) => {
      yk6.emitWarningIfUnsupportedVersion(process.version);
      let B = jk6.resolveDefaultsModeConfig(A),
        Q = () => B().then(_k6.loadConfigsForDefaultMode),
        I = Sk6.getRuntimeConfig(A);
      Lk6.emitWarningIfUnsupportedVersion(process.version);
      let G = {
        profile: A?.profile
      };
      return {
        ...I,
        ...A,
        runtime: "node",
        defaultsMode: B,
        bodyLengthChecker: A?.bodyLengthChecker ?? Tk6.calculateBodyLength,
        credentialDefaultProvider: A?.credentialDefaultProvider ?? Rk6.defaultProvider,
        defaultUserAgentProvider: A?.defaultUserAgentProvider ?? l02.createDefaultUserAgentProvider({
          serviceId: I.serviceId,
          clientVersion: Mk6.default.version
        }),
        maxAttempts: A?.maxAttempts ?? tm.loadConfig(i02.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, A),
        region: A?.region ?? tm.loadConfig(AX1.NODE_REGION_CONFIG_OPTIONS, {
          ...AX1.NODE_REGION_CONFIG_FILE_OPTIONS,
          ...G
        }),
        requestHandler: n02.NodeHttpHandler.create(A?.requestHandler ?? Q),
        retryMode: A?.retryMode ?? tm.loadConfig({
          ...i02.NODE_RETRY_MODE_CONFIG_OPTIONS,
          default: async () => (await Q()).retryMode || Pk6.DEFAULT_RETRY_MODE
        }, A),
        sha256: A?.sha256 ?? Ok6.Hash.bind(null, "sha256"),
        streamCollector: A?.streamCollector ?? n02.streamCollector,
        useDualstackEndpoint: A?.useDualstackEndpoint ?? tm.loadConfig(AX1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, G),
        useFipsEndpoint: A?.useFipsEndpoint ?? tm.loadConfig(AX1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, G),
        userAgentAppId: A?.userAgentAppId ?? tm.loadConfig(l02.NODE_APP_ID_CONFIG_OPTIONS, G)
      }
    };
  a02.getRuntimeConfig = kk6
})
// @from(Start 5888332, End 5892839)
Q22 = z((yb8, B22) => {
  var {
    defineProperty: BX1,
    getOwnPropertyDescriptor: xk6,
    getOwnPropertyNames: fk6
  } = Object, vk6 = Object.prototype.hasOwnProperty, AO = (A, B) => BX1(A, "name", {
    value: B,
    configurable: !0
  }), bk6 = (A, B) => {
    for (var Q in B) BX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, gk6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of fk6(B))
        if (!vk6.call(A, G) && G !== Q) BX1(A, G, {
          get: () => B[G],
          enumerable: !(I = xk6(B, G)) || I.enumerable
        })
    }
    return A
  }, hk6 = (A) => gk6(BX1({}, "__esModule", {
    value: !0
  }), A), o02 = {};
  bk6(o02, {
    Field: () => uk6,
    Fields: () => pk6,
    HttpRequest: () => ck6,
    HttpResponse: () => lk6,
    IHttpRequest: () => t02.HttpRequest,
    getHttpHandlerExtensionConfiguration: () => mk6,
    isValidHostname: () => A22,
    resolveHttpHandlerRuntimeConfig: () => dk6
  });
  B22.exports = hk6(o02);
  var mk6 = AO((A) => {
      return {
        setHttpHandler(B) {
          A.httpHandler = B
        },
        httpHandler() {
          return A.httpHandler
        },
        updateHttpClientConfig(B, Q) {
          A.httpHandler?.updateHttpClientConfig(B, Q)
        },
        httpHandlerConfigs() {
          return A.httpHandler.httpHandlerConfigs()
        }
      }
    }, "getHttpHandlerExtensionConfiguration"),
    dk6 = AO((A) => {
      return {
        httpHandler: A.httpHandler()
      }
    }, "resolveHttpHandlerRuntimeConfig"),
    t02 = gi1(),
    uk6 = class {
      static {
        AO(this, "Field")
      }
      constructor({
        name: A,
        kind: B = t02.FieldPosition.HEADER,
        values: Q = []
      }) {
        this.name = A, this.kind = B, this.values = Q
      }
      add(A) {
        this.values.push(A)
      }
      set(A) {
        this.values = A
      }
      remove(A) {
        this.values = this.values.filter((B) => B !== A)
      }
      toString() {
        return this.values.map((A) => A.includes(",") || A.includes(" ") ? `"${A}"` : A).join(", ")
      }
      get() {
        return this.values
      }
    },
    pk6 = class {
      constructor({
        fields: A = [],
        encoding: B = "utf-8"
      }) {
        this.entries = {}, A.forEach(this.setField.bind(this)), this.encoding = B
      }
      static {
        AO(this, "Fields")
      }
      setField(A) {
        this.entries[A.name.toLowerCase()] = A
      }
      getField(A) {
        return this.entries[A.toLowerCase()]
      }
      removeField(A) {
        delete this.entries[A.toLowerCase()]
      }
      getByType(A) {
        return Object.values(this.entries).filter((B) => B.kind === A)
      }
    },
    ck6 = class A {
      static {
        AO(this, "HttpRequest")
      }
      constructor(B) {
        this.method = B.method || "GET", this.hostname = B.hostname || "localhost", this.port = B.port, this.query = B.query || {}, this.headers = B.headers || {}, this.body = B.body, this.protocol = B.protocol ? B.protocol.slice(-1) !== ":" ? `${B.protocol}:` : B.protocol : "https:", this.path = B.path ? B.path.charAt(0) !== "/" ? `/${B.path}` : B.path : "/", this.username = B.username, this.password = B.password, this.fragment = B.fragment
      }
      static clone(B) {
        let Q = new A({
          ...B,
          headers: {
            ...B.headers
          }
        });
        if (Q.query) Q.query = e02(Q.query);
        return Q
      }
      static isInstance(B) {
        if (!B) return !1;
        let Q = B;
        return "method" in Q && "protocol" in Q && "hostname" in Q && "path" in Q && typeof Q.query === "object" && typeof Q.headers === "object"
      }
      clone() {
        return A.clone(this)
      }
    };

  function e02(A) {
    return Object.keys(A).reduce((B, Q) => {
      let I = A[Q];
      return {
        ...B,
        [Q]: Array.isArray(I) ? [...I] : I
      }
    }, {})
  }
  AO(e02, "cloneQuery");
  var lk6 = class {
    static {
      AO(this, "HttpResponse")
    }
    constructor(A) {
      this.statusCode = A.statusCode, this.reason = A.reason, this.headers = A.headers || {}, this.body = A.body
    }
    static isInstance(A) {
      if (!A) return !1;
      let B = A;
      return typeof B.statusCode === "number" && typeof B.headers === "object"
    }
  };

  function A22(A) {
    return /^[a-z0-9][a-z0-9\.\-]*[a-z0-9]$/.test(A)
  }
  AO(A22, "isValidHostname")
})
// @from(Start 5892845, End 5934836)
A92 = z((vb8, e22) => {
  var {
    defineProperty: IX1,
    getOwnPropertyDescriptor: ik6,
    getOwnPropertyNames: nk6
  } = Object, ak6 = Object.prototype.hasOwnProperty, aA = (A, B) => IX1(A, "name", {
    value: B,
    configurable: !0
  }), sk6 = (A, B) => {
    for (var Q in B) IX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, rk6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of nk6(B))
        if (!ak6.call(A, G) && G !== Q) IX1(A, G, {
          get: () => B[G],
          enumerable: !(I = ik6(B, G)) || I.enumerable
        })
    }
    return A
  }, ok6 = (A) => rk6(IX1({}, "__esModule", {
    value: !0
  }), A), W22 = {};
  sk6(W22, {
    AmbiguousRoleResolutionType: () => Yx6,
    CognitoIdentity: () => t22,
    CognitoIdentityClient: () => In1,
    CognitoIdentityServiceException: () => bJ,
    ConcurrentModificationException: () => U22,
    CreateIdentityPoolCommand: () => _22,
    CredentialsFilterSensitiveLog: () => $22,
    DeleteIdentitiesCommand: () => j22,
    DeleteIdentityPoolCommand: () => y22,
    DescribeIdentityCommand: () => k22,
    DescribeIdentityPoolCommand: () => x22,
    DeveloperUserAlreadyRegisteredException: () => E22,
    ErrorCode: () => Wx6,
    ExternalServiceException: () => z22,
    GetCredentialsForIdentityCommand: () => f22,
    GetCredentialsForIdentityInputFilterSensitiveLog: () => N22,
    GetCredentialsForIdentityResponseFilterSensitiveLog: () => q22,
    GetIdCommand: () => v22,
    GetIdInputFilterSensitiveLog: () => M22,
    GetIdentityPoolRolesCommand: () => b22,
    GetOpenIdTokenCommand: () => g22,
    GetOpenIdTokenForDeveloperIdentityCommand: () => h22,
    GetOpenIdTokenForDeveloperIdentityInputFilterSensitiveLog: () => O22,
    GetOpenIdTokenForDeveloperIdentityResponseFilterSensitiveLog: () => T22,
    GetOpenIdTokenInputFilterSensitiveLog: () => L22,
    GetOpenIdTokenResponseFilterSensitiveLog: () => R22,
    GetPrincipalTagAttributeMapCommand: () => m22,
    InternalErrorException: () => J22,
    InvalidIdentityPoolConfigurationException: () => w22,
    InvalidParameterException: () => F22,
    LimitExceededException: () => X22,
    ListIdentitiesCommand: () => d22,
    ListIdentityPoolsCommand: () => Gn1,
    ListTagsForResourceCommand: () => u22,
    LookupDeveloperIdentityCommand: () => p22,
    MappingRuleMatchType: () => Jx6,
    MergeDeveloperIdentitiesCommand: () => c22,
    NotAuthorizedException: () => V22,
    ResourceConflictException: () => C22,
    ResourceNotFoundException: () => H22,
    RoleMappingType: () => Fx6,
    SetIdentityPoolRolesCommand: () => l22,
    SetPrincipalTagAttributeMapCommand: () => i22,
    TagResourceCommand: () => n22,
    TooManyRequestsException: () => K22,
    UnlinkDeveloperIdentityCommand: () => a22,
    UnlinkIdentityCommand: () => s22,
    UnlinkIdentityInputFilterSensitiveLog: () => P22,
    UntagResourceCommand: () => r22,
    UpdateIdentityPoolCommand: () => o22,
    __Client: () => nA.Client,
    paginateListIdentityPools: () => Nf6
  });
  e22.exports = ok6(W22);
  var I22 = cS(),
    tk6 = lS(),
    ek6 = iS(),
    G22 = jL(),
    Ax6 = _D(),
    QX1 = NI(),
    Bx6 = tS(),
    I3 = hz(),
    Z22 = KJ(),
    D22 = vi1(),
    Qx6 = aA((A) => {
      return Object.assign(A, {
        useDualstackEndpoint: A.useDualstackEndpoint ?? !1,
        useFipsEndpoint: A.useFipsEndpoint ?? !1,
        defaultSigningName: "cognito-identity"
      })
    }, "resolveClientEndpointParameters"),
    M3 = {
      UseFIPS: {
        type: "builtInParams",
        name: "useFipsEndpoint"
      },
      Endpoint: {
        type: "builtInParams",
        name: "endpoint"
      },
      Region: {
        type: "builtInParams",
        name: "region"
      },
      UseDualStack: {
        type: "builtInParams",
        name: "useDualstackEndpoint"
      }
    },
    Ix6 = r02(),
    Y22 = W_(),
    Qn1 = Q22(),
    nA = ct(),
    Gx6 = aA((A) => {
      let {
        httpAuthSchemes: B,
        httpAuthSchemeProvider: Q,
        credentials: I
      } = A;
      return {
        setHttpAuthScheme(G) {
          let Z = B.findIndex((D) => D.schemeId === G.schemeId);
          if (Z === -1) B.push(G);
          else B.splice(Z, 1, G)
        },
        httpAuthSchemes() {
          return B
        },
        setHttpAuthSchemeProvider(G) {
          Q = G
        },
        httpAuthSchemeProvider() {
          return Q
        },
        setCredentials(G) {
          I = G
        },
        credentials() {
          return I
        }
      }
    }, "getHttpAuthExtensionConfiguration"),
    Zx6 = aA((A) => {
      return {
        httpAuthSchemes: A.httpAuthSchemes(),
        httpAuthSchemeProvider: A.httpAuthSchemeProvider(),
        credentials: A.credentials()
      }
    }, "resolveHttpAuthRuntimeConfig"),
    Dx6 = aA((A, B) => {
      let Q = Object.assign(Y22.getAwsRegionExtensionConfiguration(A), nA.getDefaultExtensionConfiguration(A), Qn1.getHttpHandlerExtensionConfiguration(A), Gx6(A));
      return B.forEach((I) => I.configure(Q)), Object.assign(A, Y22.resolveAwsRegionExtensionConfiguration(Q), nA.resolveDefaultRuntimeConfig(Q), Qn1.resolveHttpHandlerRuntimeConfig(Q), Zx6(Q))
    }, "resolveRuntimeExtensions"),
    In1 = class extends nA.Client {
      static {
        aA(this, "CognitoIdentityClient")
      }
      config;
      constructor(...[A]) {
        let B = Ix6.getRuntimeConfig(A || {});
        super(B);
        this.initConfig = B;
        let Q = Qx6(B),
          I = G22.resolveUserAgentConfig(Q),
          G = Z22.resolveRetryConfig(I),
          Z = Ax6.resolveRegionConfig(G),
          D = I22.resolveHostHeaderConfig(Z),
          Y = I3.resolveEndpointConfig(D),
          W = D22.resolveHttpAuthSchemeConfig(Y),
          J = Dx6(W, A?.extensions || []);
        this.config = J, this.middlewareStack.use(G22.getUserAgentPlugin(this.config)), this.middlewareStack.use(Z22.getRetryPlugin(this.config)), this.middlewareStack.use(Bx6.getContentLengthPlugin(this.config)), this.middlewareStack.use(I22.getHostHeaderPlugin(this.config)), this.middlewareStack.use(tk6.getLoggerPlugin(this.config)), this.middlewareStack.use(ek6.getRecursionDetectionPlugin(this.config)), this.middlewareStack.use(QX1.getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {
          httpAuthSchemeParametersProvider: D22.defaultCognitoIdentityHttpAuthSchemeParametersProvider,
          identityProviderConfigProvider: aA(async (F) => new QX1.DefaultIdentityProviderConfig({
            "aws.auth#sigv4": F.credentials
          }), "identityProviderConfigProvider")
        })), this.middlewareStack.use(QX1.getHttpSigningPlugin(this.config))
      }
      destroy() {
        super.destroy()
      }
    },
    L3 = yz(),
    xQ = IB(),
    bJ = class A extends nA.ServiceException {
      static {
        aA(this, "CognitoIdentityServiceException")
      }
      constructor(B) {
        super(B);
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    Yx6 = {
      AUTHENTICATED_ROLE: "AuthenticatedRole",
      DENY: "Deny"
    },
    J22 = class A extends bJ {
      static {
        aA(this, "InternalErrorException")
      }
      name = "InternalErrorException";
      $fault = "server";
      constructor(B) {
        super({
          name: "InternalErrorException",
          $fault: "server",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    F22 = class A extends bJ {
      static {
        aA(this, "InvalidParameterException")
      }
      name = "InvalidParameterException";
      $fault = "client";
      constructor(B) {
        super({
          name: "InvalidParameterException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    X22 = class A extends bJ {
      static {
        aA(this, "LimitExceededException")
      }
      name = "LimitExceededException";
      $fault = "client";
      constructor(B) {
        super({
          name: "LimitExceededException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    V22 = class A extends bJ {
      static {
        aA(this, "NotAuthorizedException")
      }
      name = "NotAuthorizedException";
      $fault = "client";
      constructor(B) {
        super({
          name: "NotAuthorizedException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    C22 = class A extends bJ {
      static {
        aA(this, "ResourceConflictException")
      }
      name = "ResourceConflictException";
      $fault = "client";
      constructor(B) {
        super({
          name: "ResourceConflictException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    K22 = class A extends bJ {
      static {
        aA(this, "TooManyRequestsException")
      }
      name = "TooManyRequestsException";
      $fault = "client";
      constructor(B) {
        super({
          name: "TooManyRequestsException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    Wx6 = {
      ACCESS_DENIED: "AccessDenied",
      INTERNAL_SERVER_ERROR: "InternalServerError"
    },
    H22 = class A extends bJ {
      static {
        aA(this, "ResourceNotFoundException")
      }
      name = "ResourceNotFoundException";
      $fault = "client";
      constructor(B) {
        super({
          name: "ResourceNotFoundException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    z22 = class A extends bJ {
      static {
        aA(this, "ExternalServiceException")
      }
      name = "ExternalServiceException";
      $fault = "client";
      constructor(B) {
        super({
          name: "ExternalServiceException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    w22 = class A extends bJ {
      static {
        aA(this, "InvalidIdentityPoolConfigurationException")
      }
      name = "InvalidIdentityPoolConfigurationException";
      $fault = "client";
      constructor(B) {
        super({
          name: "InvalidIdentityPoolConfigurationException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    Jx6 = {
      CONTAINS: "Contains",
      EQUALS: "Equals",
      NOT_EQUAL: "NotEqual",
      STARTS_WITH: "StartsWith"
    },
    Fx6 = {
      RULES: "Rules",
      TOKEN: "Token"
    },
    E22 = class A extends bJ {
      static {
        aA(this, "DeveloperUserAlreadyRegisteredException")
      }
      name = "DeveloperUserAlreadyRegisteredException";
      $fault = "client";
      constructor(B) {
        super({
          name: "DeveloperUserAlreadyRegisteredException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    U22 = class A extends bJ {
      static {
        aA(this, "ConcurrentModificationException")
      }
      name = "ConcurrentModificationException";
      $fault = "client";
      constructor(B) {
        super({
          name: "ConcurrentModificationException",
          $fault: "client",
          ...B
        });
        Object.setPrototypeOf(this, A.prototype)
      }
    },
    N22 = aA((A) => ({
      ...A,
      ...A.Logins && {
        Logins: nA.SENSITIVE_STRING
      }
    }), "GetCredentialsForIdentityInputFilterSensitiveLog"),
    $22 = aA((A) => ({
      ...A,
      ...A.SecretKey && {
        SecretKey: nA.SENSITIVE_STRING
      }
    }), "CredentialsFilterSensitiveLog"),
    q22 = aA((A) => ({
      ...A,
      ...A.Credentials && {
        Credentials: $22(A.Credentials)
      }
    }), "GetCredentialsForIdentityResponseFilterSensitiveLog"),
    M22 = aA((A) => ({
      ...A,
      ...A.Logins && {
        Logins: nA.SENSITIVE_STRING
      }
    }), "GetIdInputFilterSensitiveLog"),
    L22 = aA((A) => ({
      ...A,
      ...A.Logins && {
        Logins: nA.SENSITIVE_STRING
      }
    }), "GetOpenIdTokenInputFilterSensitiveLog"),
    R22 = aA((A) => ({
      ...A,
      ...A.Token && {
        Token: nA.SENSITIVE_STRING
      }
    }), "GetOpenIdTokenResponseFilterSensitiveLog"),
    O22 = aA((A) => ({
      ...A,
      ...A.Logins && {
        Logins: nA.SENSITIVE_STRING
      }
    }), "GetOpenIdTokenForDeveloperIdentityInputFilterSensitiveLog"),
    T22 = aA((A) => ({
      ...A,
      ...A.Token && {
        Token: nA.SENSITIVE_STRING
      }
    }), "GetOpenIdTokenForDeveloperIdentityResponseFilterSensitiveLog"),
    P22 = aA((A) => ({
      ...A,
      ...A.Logins && {
        Logins: nA.SENSITIVE_STRING
      }
    }), "UnlinkIdentityInputFilterSensitiveLog"),
    Xx6 = aA(async (A, B) => {
      let Q = G3("CreateIdentityPool"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_CreateIdentityPoolCommand"),
    Vx6 = aA(async (A, B) => {
      let Q = G3("DeleteIdentities"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_DeleteIdentitiesCommand"),
    Cx6 = aA(async (A, B) => {
      let Q = G3("DeleteIdentityPool"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_DeleteIdentityPoolCommand"),
    Kx6 = aA(async (A, B) => {
      let Q = G3("DescribeIdentity"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_DescribeIdentityCommand"),
    Hx6 = aA(async (A, B) => {
      let Q = G3("DescribeIdentityPool"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_DescribeIdentityPoolCommand"),
    zx6 = aA(async (A, B) => {
      let Q = G3("GetCredentialsForIdentity"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_GetCredentialsForIdentityCommand"),
    wx6 = aA(async (A, B) => {
      let Q = G3("GetId"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_GetIdCommand"),
    Ex6 = aA(async (A, B) => {
      let Q = G3("GetIdentityPoolRoles"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_GetIdentityPoolRolesCommand"),
    Ux6 = aA(async (A, B) => {
      let Q = G3("GetOpenIdToken"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_GetOpenIdTokenCommand"),
    Nx6 = aA(async (A, B) => {
      let Q = G3("GetOpenIdTokenForDeveloperIdentity"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_GetOpenIdTokenForDeveloperIdentityCommand"),
    $x6 = aA(async (A, B) => {
      let Q = G3("GetPrincipalTagAttributeMap"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_GetPrincipalTagAttributeMapCommand"),
    qx6 = aA(async (A, B) => {
      let Q = G3("ListIdentities"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_ListIdentitiesCommand"),
    Mx6 = aA(async (A, B) => {
      let Q = G3("ListIdentityPools"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_ListIdentityPoolsCommand"),
    Lx6 = aA(async (A, B) => {
      let Q = G3("ListTagsForResource"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_ListTagsForResourceCommand"),
    Rx6 = aA(async (A, B) => {
      let Q = G3("LookupDeveloperIdentity"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_LookupDeveloperIdentityCommand"),
    Ox6 = aA(async (A, B) => {
      let Q = G3("MergeDeveloperIdentities"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_MergeDeveloperIdentitiesCommand"),
    Tx6 = aA(async (A, B) => {
      let Q = G3("SetIdentityPoolRoles"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_SetIdentityPoolRolesCommand"),
    Px6 = aA(async (A, B) => {
      let Q = G3("SetPrincipalTagAttributeMap"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_SetPrincipalTagAttributeMapCommand"),
    Sx6 = aA(async (A, B) => {
      let Q = G3("TagResource"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_TagResourceCommand"),
    _x6 = aA(async (A, B) => {
      let Q = G3("UnlinkDeveloperIdentity"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_UnlinkDeveloperIdentityCommand"),
    jx6 = aA(async (A, B) => {
      let Q = G3("UnlinkIdentity"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_UnlinkIdentityCommand"),
    yx6 = aA(async (A, B) => {
      let Q = G3("UntagResource"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_UntagResourceCommand"),
    kx6 = aA(async (A, B) => {
      let Q = G3("UpdateIdentityPool"),
        I;
      return I = JSON.stringify(nA._json(A)), O3(B, Q, "/", void 0, I)
    }, "se_UpdateIdentityPoolCommand"),
    xx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_CreateIdentityPoolCommand"),
    fx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_DeleteIdentitiesCommand"),
    vx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      return await nA.collectBody(A.body, B), {
        $metadata: Z5(A)
      }
    }, "de_DeleteIdentityPoolCommand"),
    bx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = S22(Q, B), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_DescribeIdentityCommand"),
    gx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_DescribeIdentityPoolCommand"),
    hx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = Hf6(Q, B), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_GetCredentialsForIdentityCommand"),
    mx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_GetIdCommand"),
    dx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_GetIdentityPoolRolesCommand"),
    ux6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_GetOpenIdTokenCommand"),
    px6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_GetOpenIdTokenForDeveloperIdentityCommand"),
    cx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_GetPrincipalTagAttributeMapCommand"),
    lx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = wf6(Q, B), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_ListIdentitiesCommand"),
    ix6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_ListIdentityPoolsCommand"),
    nx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_ListTagsForResourceCommand"),
    ax6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_LookupDeveloperIdentityCommand"),
    sx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_MergeDeveloperIdentitiesCommand"),
    rx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      return await nA.collectBody(A.body, B), {
        $metadata: Z5(A)
      }
    }, "de_SetIdentityPoolRolesCommand"),
    ox6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_SetPrincipalTagAttributeMapCommand"),
    tx6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_TagResourceCommand"),
    ex6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      return await nA.collectBody(A.body, B), {
        $metadata: Z5(A)
      }
    }, "de_UnlinkDeveloperIdentityCommand"),
    Af6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      return await nA.collectBody(A.body, B), {
        $metadata: Z5(A)
      }
    }, "de_UnlinkIdentityCommand"),
    Bf6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_UntagResourceCommand"),
    Qf6 = aA(async (A, B) => {
      if (A.statusCode >= 300) return R3(A, B);
      let Q = await xQ.parseJsonBody(A.body, B),
        I = {};
      return I = nA._json(Q), {
        $metadata: Z5(A),
        ...I
      }
    }, "de_UpdateIdentityPoolCommand"),
    R3 = aA(async (A, B) => {
      let Q = {
          ...A,
          body: await xQ.parseJsonErrorBody(A.body, B)
        },
        I = xQ.loadRestJsonErrorCode(A, Q.body);
      switch (I) {
        case "InternalErrorException":
        case "com.amazonaws.cognitoidentity#InternalErrorException":
          throw await Df6(Q, B);
        case "InvalidParameterException":
        case "com.amazonaws.cognitoidentity#InvalidParameterException":
          throw await Wf6(Q, B);
        case "LimitExceededException":
        case "com.amazonaws.cognitoidentity#LimitExceededException":
          throw await Jf6(Q, B);
        case "NotAuthorizedException":
        case "com.amazonaws.cognitoidentity#NotAuthorizedException":
          throw await Ff6(Q, B);
        case "ResourceConflictException":
        case "com.amazonaws.cognitoidentity#ResourceConflictException":
          throw await Xf6(Q, B);
        case "TooManyRequestsException":
        case "com.amazonaws.cognitoidentity#TooManyRequestsException":
          throw await Cf6(Q, B);
        case "ResourceNotFoundException":
        case "com.amazonaws.cognitoidentity#ResourceNotFoundException":
          throw await Vf6(Q, B);
        case "ExternalServiceException":
        case "com.amazonaws.cognitoidentity#ExternalServiceException":
          throw await Zf6(Q, B);
        case "InvalidIdentityPoolConfigurationException":
        case "com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException":
          throw await Yf6(Q, B);
        case "DeveloperUserAlreadyRegisteredException":
        case "com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException":
          throw await Gf6(Q, B);
        case "ConcurrentModificationException":
        case "com.amazonaws.cognitoidentity#ConcurrentModificationException":
          throw await If6(Q, B);
        default:
          let G = Q.body;
          return Ef6({
            output: A,
            parsedBody: G,
            errorCode: I
          })
      }
    }, "de_CommandError"),
    If6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new U22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_ConcurrentModificationExceptionRes"),
    Gf6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new E22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_DeveloperUserAlreadyRegisteredExceptionRes"),
    Zf6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new z22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_ExternalServiceExceptionRes"),
    Df6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new J22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_InternalErrorExceptionRes"),
    Yf6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new w22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_InvalidIdentityPoolConfigurationExceptionRes"),
    Wf6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new F22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_InvalidParameterExceptionRes"),
    Jf6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new X22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_LimitExceededExceptionRes"),
    Ff6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new V22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_NotAuthorizedExceptionRes"),
    Xf6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new C22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_ResourceConflictExceptionRes"),
    Vf6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new H22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_ResourceNotFoundExceptionRes"),
    Cf6 = aA(async (A, B) => {
      let Q = A.body,
        I = nA._json(Q),
        G = new K22({
          $metadata: Z5(A),
          ...I
        });
      return nA.decorateServiceException(G, Q)
    }, "de_TooManyRequestsExceptionRes"),
    Kf6 = aA((A, B) => {
      return nA.take(A, {
        AccessKeyId: nA.expectString,
        Expiration: aA((Q) => nA.expectNonNull(nA.parseEpochTimestamp(nA.expectNumber(Q))), "Expiration"),
        SecretKey: nA.expectString,
        SessionToken: nA.expectString
      })
    }, "de_Credentials"),
    Hf6 = aA((A, B) => {
      return nA.take(A, {
        Credentials: aA((Q) => Kf6(Q, B), "Credentials"),
        IdentityId: nA.expectString
      })
    }, "de_GetCredentialsForIdentityResponse"),
    zf6 = aA((A, B) => {
      return (A || []).filter((I) => I != null).map((I) => {
        return S22(I, B)
      })
    }, "de_IdentitiesList"),
    S22 = aA((A, B) => {
      return nA.take(A, {
        CreationDate: aA((Q) => nA.expectNonNull(nA.parseEpochTimestamp(nA.expectNumber(Q))), "CreationDate"),
        IdentityId: nA.expectString,
        LastModifiedDate: aA((Q) => nA.expectNonNull(nA.parseEpochTimestamp(nA.expectNumber(Q))), "LastModifiedDate"),
        Logins: nA._json
      })
    }, "de_IdentityDescription"),
    wf6 = aA((A, B) => {
      return nA.take(A, {
        Identities: aA((Q) => zf6(Q, B), "Identities"),
        IdentityPoolId: nA.expectString,
        NextToken: nA.expectString
      })
    }, "de_ListIdentitiesResponse"),
    Z5 = aA((A) => ({
      httpStatusCode: A.statusCode,
      requestId: A.headers["x-amzn-requestid"] ?? A.headers["x-amzn-request-id"] ?? A.headers["x-amz-request-id"],
      extendedRequestId: A.headers["x-amz-id-2"],
      cfId: A.headers["x-amz-cf-id"]
    }), "deserializeMetadata"),
    Ef6 = nA.withBaseException(bJ),
    O3 = aA(async (A, B, Q, I, G) => {
      let {
        hostname: Z,
        protocol: D = "https",
        port: Y,
        path: W
      } = await A.endpoint(), J = {
        protocol: D,
        hostname: Z,
        port: Y,
        method: "POST",
        path: W.endsWith("/") ? W.slice(0, -1) + Q : W + Q,
        headers: B
      };
      if (I !== void 0) J.hostname = I;
      if (G !== void 0) J.body = G;
      return new Qn1.HttpRequest(J)
    }, "buildHttpRpcRequest");

  function G3(A) {
    return {
      "content-type": "application/x-amz-json-1.1",
      "x-amz-target": `AWSCognitoIdentityService.${A}`
    }
  }
  aA(G3, "sharedHeaders");
  var _22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "CreateIdentityPool", {}).n("CognitoIdentityClient", "CreateIdentityPoolCommand").f(void 0, void 0).ser(Xx6).de(xx6).build() {
      static {
        aA(this, "CreateIdentityPoolCommand")
      }
    },
    j22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "DeleteIdentities", {}).n("CognitoIdentityClient", "DeleteIdentitiesCommand").f(void 0, void 0).ser(Vx6).de(fx6).build() {
      static {
        aA(this, "DeleteIdentitiesCommand")
      }
    },
    y22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "DeleteIdentityPool", {}).n("CognitoIdentityClient", "DeleteIdentityPoolCommand").f(void 0, void 0).ser(Cx6).de(vx6).build() {
      static {
        aA(this, "DeleteIdentityPoolCommand")
      }
    },
    k22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "DescribeIdentity", {}).n("CognitoIdentityClient", "DescribeIdentityCommand").f(void 0, void 0).ser(Kx6).de(bx6).build() {
      static {
        aA(this, "DescribeIdentityCommand")
      }
    },
    x22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "DescribeIdentityPool", {}).n("CognitoIdentityClient", "DescribeIdentityPoolCommand").f(void 0, void 0).ser(Hx6).de(gx6).build() {
      static {
        aA(this, "DescribeIdentityPoolCommand")
      }
    },
    f22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "GetCredentialsForIdentity", {}).n("CognitoIdentityClient", "GetCredentialsForIdentityCommand").f(N22, q22).ser(zx6).de(hx6).build() {
      static {
        aA(this, "GetCredentialsForIdentityCommand")
      }
    },
    v22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "GetId", {}).n("CognitoIdentityClient", "GetIdCommand").f(M22, void 0).ser(wx6).de(mx6).build() {
      static {
        aA(this, "GetIdCommand")
      }
    },
    b22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "GetIdentityPoolRoles", {}).n("CognitoIdentityClient", "GetIdentityPoolRolesCommand").f(void 0, void 0).ser(Ex6).de(dx6).build() {
      static {
        aA(this, "GetIdentityPoolRolesCommand")
      }
    },
    g22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "GetOpenIdToken", {}).n("CognitoIdentityClient", "GetOpenIdTokenCommand").f(L22, R22).ser(Ux6).de(ux6).build() {
      static {
        aA(this, "GetOpenIdTokenCommand")
      }
    },
    h22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "GetOpenIdTokenForDeveloperIdentity", {}).n("CognitoIdentityClient", "GetOpenIdTokenForDeveloperIdentityCommand").f(O22, T22).ser(Nx6).de(px6).build() {
      static {
        aA(this, "GetOpenIdTokenForDeveloperIdentityCommand")
      }
    },
    m22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "GetPrincipalTagAttributeMap", {}).n("CognitoIdentityClient", "GetPrincipalTagAttributeMapCommand").f(void 0, void 0).ser($x6).de(cx6).build() {
      static {
        aA(this, "GetPrincipalTagAttributeMapCommand")
      }
    },
    d22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "ListIdentities", {}).n("CognitoIdentityClient", "ListIdentitiesCommand").f(void 0, void 0).ser(qx6).de(lx6).build() {
      static {
        aA(this, "ListIdentitiesCommand")
      }
    },
    Gn1 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "ListIdentityPools", {}).n("CognitoIdentityClient", "ListIdentityPoolsCommand").f(void 0, void 0).ser(Mx6).de(ix6).build() {
      static {
        aA(this, "ListIdentityPoolsCommand")
      }
    },
    u22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "ListTagsForResource", {}).n("CognitoIdentityClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(Lx6).de(nx6).build() {
      static {
        aA(this, "ListTagsForResourceCommand")
      }
    },
    p22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "LookupDeveloperIdentity", {}).n("CognitoIdentityClient", "LookupDeveloperIdentityCommand").f(void 0, void 0).ser(Rx6).de(ax6).build() {
      static {
        aA(this, "LookupDeveloperIdentityCommand")
      }
    },
    c22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "MergeDeveloperIdentities", {}).n("CognitoIdentityClient", "MergeDeveloperIdentitiesCommand").f(void 0, void 0).ser(Ox6).de(sx6).build() {
      static {
        aA(this, "MergeDeveloperIdentitiesCommand")
      }
    },
    l22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "SetIdentityPoolRoles", {}).n("CognitoIdentityClient", "SetIdentityPoolRolesCommand").f(void 0, void 0).ser(Tx6).de(rx6).build() {
      static {
        aA(this, "SetIdentityPoolRolesCommand")
      }
    },
    i22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "SetPrincipalTagAttributeMap", {}).n("CognitoIdentityClient", "SetPrincipalTagAttributeMapCommand").f(void 0, void 0).ser(Px6).de(ox6).build() {
      static {
        aA(this, "SetPrincipalTagAttributeMapCommand")
      }
    },
    n22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "TagResource", {}).n("CognitoIdentityClient", "TagResourceCommand").f(void 0, void 0).ser(Sx6).de(tx6).build() {
      static {
        aA(this, "TagResourceCommand")
      }
    },
    a22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "UnlinkDeveloperIdentity", {}).n("CognitoIdentityClient", "UnlinkDeveloperIdentityCommand").f(void 0, void 0).ser(_x6).de(ex6).build() {
      static {
        aA(this, "UnlinkDeveloperIdentityCommand")
      }
    },
    s22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "UnlinkIdentity", {}).n("CognitoIdentityClient", "UnlinkIdentityCommand").f(P22, void 0).ser(jx6).de(Af6).build() {
      static {
        aA(this, "UnlinkIdentityCommand")
      }
    },
    r22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "UntagResource", {}).n("CognitoIdentityClient", "UntagResourceCommand").f(void 0, void 0).ser(yx6).de(Bf6).build() {
      static {
        aA(this, "UntagResourceCommand")
      }
    },
    o22 = class extends nA.Command.classBuilder().ep(M3).m(function(A, B, Q, I) {
      return [L3.getSerdePlugin(Q, this.serialize, this.deserialize), I3.getEndpointPlugin(Q, A.getEndpointParameterInstructions())]
    }).s("AWSCognitoIdentityService", "UpdateIdentityPool", {}).n("CognitoIdentityClient", "UpdateIdentityPoolCommand").f(void 0, void 0).ser(kx6).de(Qf6).build() {
      static {
        aA(this, "UpdateIdentityPoolCommand")
      }
    },
    Uf6 = {
      CreateIdentityPoolCommand: _22,
      DeleteIdentitiesCommand: j22,
      DeleteIdentityPoolCommand: y22,
      DescribeIdentityCommand: k22,
      DescribeIdentityPoolCommand: x22,
      GetCredentialsForIdentityCommand: f22,
      GetIdCommand: v22,
      GetIdentityPoolRolesCommand: b22,
      GetOpenIdTokenCommand: g22,
      GetOpenIdTokenForDeveloperIdentityCommand: h22,
      GetPrincipalTagAttributeMapCommand: m22,
      ListIdentitiesCommand: d22,
      ListIdentityPoolsCommand: Gn1,
      ListTagsForResourceCommand: u22,
      LookupDeveloperIdentityCommand: p22,
      MergeDeveloperIdentitiesCommand: c22,
      SetIdentityPoolRolesCommand: l22,
      SetPrincipalTagAttributeMapCommand: i22,
      TagResourceCommand: n22,
      UnlinkDeveloperIdentityCommand: a22,
      UnlinkIdentityCommand: s22,
      UntagResourceCommand: r22,
      UpdateIdentityPoolCommand: o22
    },
    t22 = class extends In1 {
      static {
        aA(this, "CognitoIdentity")
      }
    };
  nA.createAggregatedClient(Uf6, t22);
  var Nf6 = QX1.createPaginator(In1, Gn1, "NextToken", "NextToken", "MaxResults")
})
// @from(Start 5934842, End 5942266)
Jn1 = z((Wg8, X92) => {
  var {
    defineProperty: ZX1,
    getOwnPropertyDescriptor: $f6,
    getOwnPropertyNames: B92
  } = Object, qf6 = Object.prototype.hasOwnProperty, gJ = (A, B) => ZX1(A, "name", {
    value: B,
    configurable: !0
  }), Mf6 = (A, B) => function Q() {
    return A && (B = A[B92(A)[0]](A = 0)), B
  }, Q92 = (A, B) => {
    for (var Q in B) ZX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Lf6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of B92(B))
        if (!qf6.call(A, G) && G !== Q) ZX1(A, G, {
          get: () => B[G],
          enumerable: !(I = $f6(B, G)) || I.enumerable
        })
    }
    return A
  }, Rf6 = (A) => Lf6(ZX1({}, "__esModule", {
    value: !0
  }), A), Dn1 = {};
  Q92(Dn1, {
    CognitoIdentityClient: () => GX1.CognitoIdentityClient,
    GetCredentialsForIdentityCommand: () => GX1.GetCredentialsForIdentityCommand,
    GetIdCommand: () => GX1.GetIdCommand
  });
  var GX1, I92 = Mf6({
      "src/loadCognitoIdentity.ts"() {
        GX1 = A92()
      }
    }),
    G92 = {};
  Q92(G92, {
    fromCognitoIdentity: () => Wn1,
    fromCognitoIdentityPool: () => J92
  });
  X92.exports = Rf6(G92);
  var DX1 = $I();

  function Yn1(A) {
    return Promise.all(Object.keys(A).reduce((B, Q) => {
      let I = A[Q];
      if (typeof I === "string") B.push([Q, I]);
      else B.push(I().then((G) => [Q, G]));
      return B
    }, [])).then((B) => B.reduce((Q, [I, G]) => {
      return Q[I] = G, Q
    }, {}))
  }
  gJ(Yn1, "resolveLogins");

  function Wn1(A) {
    return async (B) => {
      A.logger?.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");
      let {
        GetCredentialsForIdentityCommand: Q,
        CognitoIdentityClient: I
      } = await Promise.resolve().then(() => (I92(), Dn1)), G = gJ((J) => A.clientConfig?.[J] ?? A.parentClientConfig?.[J] ?? B?.callerClientConfig?.[J], "fromConfigs"), {
        Credentials: {
          AccessKeyId: Z = Z92(A.logger),
          Expiration: D,
          SecretKey: Y = Y92(A.logger),
          SessionToken: W
        } = D92(A.logger)
      } = await (A.client ?? new I(Object.assign({}, A.clientConfig ?? {}, {
        region: G("region"),
        profile: G("profile")
      }))).send(new Q({
        CustomRoleArn: A.customRoleArn,
        IdentityId: A.identityId,
        Logins: A.logins ? await Yn1(A.logins) : void 0
      }));
      return {
        identityId: A.identityId,
        accessKeyId: Z,
        secretAccessKey: Y,
        sessionToken: W,
        expiration: D
      }
    }
  }
  gJ(Wn1, "fromCognitoIdentity");

  function Z92(A) {
    throw new DX1.CredentialsProviderError("Response from Amazon Cognito contained no access key ID", {
      logger: A
    })
  }
  gJ(Z92, "throwOnMissingAccessKeyId");

  function D92(A) {
    throw new DX1.CredentialsProviderError("Response from Amazon Cognito contained no credentials", {
      logger: A
    })
  }
  gJ(D92, "throwOnMissingCredentials");

  function Y92(A) {
    throw new DX1.CredentialsProviderError("Response from Amazon Cognito contained no secret key", {
      logger: A
    })
  }
  gJ(Y92, "throwOnMissingSecretKey");
  var Zn1 = "IdentityIds",
    Of6 = class {
      constructor(A = "aws:cognito-identity-ids") {
        this.dbName = A
      }
      static {
        gJ(this, "IndexedDbStorage")
      }
      getItem(A) {
        return this.withObjectStore("readonly", (B) => {
          let Q = B.get(A);
          return new Promise((I) => {
            Q.onerror = () => I(null), Q.onsuccess = () => I(Q.result ? Q.result.value : null)
          })
        }).catch(() => null)
      }
      removeItem(A) {
        return this.withObjectStore("readwrite", (B) => {
          let Q = B.delete(A);
          return new Promise((I, G) => {
            Q.onerror = () => G(Q.error), Q.onsuccess = () => I()
          })
        })
      }
      setItem(A, B) {
        return this.withObjectStore("readwrite", (Q) => {
          let I = Q.put({
            id: A,
            value: B
          });
          return new Promise((G, Z) => {
            I.onerror = () => Z(I.error), I.onsuccess = () => G()
          })
        })
      }
      getDb() {
        let A = self.indexedDB.open(this.dbName, 1);
        return new Promise((B, Q) => {
          A.onsuccess = () => {
            B(A.result)
          }, A.onerror = () => {
            Q(A.error)
          }, A.onblocked = () => {
            Q(new Error("Unable to access DB"))
          }, A.onupgradeneeded = () => {
            let I = A.result;
            I.onerror = () => {
              Q(new Error("Failed to create object store"))
            }, I.createObjectStore(Zn1, {
              keyPath: "id"
            })
          }
        })
      }
      withObjectStore(A, B) {
        return this.getDb().then((Q) => {
          let I = Q.transaction(Zn1, A);
          return I.oncomplete = () => Q.close(), new Promise((G, Z) => {
            I.onerror = () => Z(I.error), G(B(I.objectStore(Zn1)))
          }).catch((G) => {
            throw Q.close(), G
          })
        })
      }
    },
    Tf6 = class {
      constructor(A = {}) {
        this.store = A
      }
      static {
        gJ(this, "InMemoryStorage")
      }
      getItem(A) {
        if (A in this.store) return this.store[A];
        return null
      }
      removeItem(A) {
        delete this.store[A]
      }
      setItem(A, B) {
        this.store[A] = B
      }
    },
    Pf6 = new Tf6;

  function W92() {
    if (typeof self === "object" && self.indexedDB) return new Of6;
    if (typeof window === "object" && window.localStorage) return window.localStorage;
    return Pf6
  }
  gJ(W92, "localStorage");

  function J92({
    accountId: A,
    cache: B = W92(),
    client: Q,
    clientConfig: I,
    customRoleArn: G,
    identityPoolId: Z,
    logins: D,
    userIdentifier: Y = !D || Object.keys(D).length === 0 ? "ANONYMOUS" : void 0,
    logger: W,
    parentClientConfig: J
  }) {
    W?.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");
    let F = Y ? `aws:cognito-identity-credentials:${Z}:${Y}` : void 0,
      X = gJ(async (V) => {
        let {
          GetIdCommand: C,
          CognitoIdentityClient: K
        } = await Promise.resolve().then(() => (I92(), Dn1)), E = gJ((O) => I?.[O] ?? J?.[O] ?? V?.callerClientConfig?.[O], "fromConfigs"), N = Q ?? new K(Object.assign({}, I ?? {}, {
          region: E("region"),
          profile: E("profile")
        })), q = F && await B.getItem(F);
        if (!q) {
          let {
            IdentityId: O = F92(W)
          } = await N.send(new C({
            AccountId: A,
            IdentityPoolId: Z,
            Logins: D ? await Yn1(D) : void 0
          }));
          if (q = O, F) Promise.resolve(B.setItem(F, q)).catch(() => {})
        }
        return X = Wn1({
          client: N,
          customRoleArn: G,
          logins: D,
          identityId: q
        }), X(V)
      }, "provider");
    return (V) => X(V).catch(async (C) => {
      if (F) Promise.resolve(B.removeItem(F)).catch(() => {});
      throw C
    })
  }
  gJ(J92, "fromCognitoIdentityPool");

  function F92(A) {
    throw new DX1.CredentialsProviderError("Response from Amazon Cognito contained no identity ID", {
      logger: A
    })
  }
  gJ(F92, "throwOnMissingId")
})
// @from(Start 5942272, End 5942507)
K92 = z((V92) => {
  Object.defineProperty(V92, "__esModule", {
    value: !0
  });
  V92.fromCognitoIdentity = void 0;
  var Sf6 = Jn1(),
    _f6 = (A) => Sf6.fromCognitoIdentity({
      ...A
    });
  V92.fromCognitoIdentity = _f6
})
// @from(Start 5942513, End 5942760)
w92 = z((H92) => {
  Object.defineProperty(H92, "__esModule", {
    value: !0
  });
  H92.fromCognitoIdentityPool = void 0;
  var jf6 = Jn1(),
    yf6 = (A) => jf6.fromCognitoIdentityPool({
      ...A
    });
  H92.fromCognitoIdentityPool = yf6
})
// @from(Start 5942766, End 5943089)
N92 = z((E92) => {
  Object.defineProperty(E92, "__esModule", {
    value: !0
  });
  E92.fromContainerMetadata = void 0;
  var kf6 = B_(),
    xf6 = (A) => {
      return A?.logger?.debug("@smithy/credential-provider-imds", "fromContainerMetadata"), kf6.fromContainerMetadata(A)
    };
  E92.fromContainerMetadata = xf6
})
// @from(Start 5943095, End 5943277)
M92 = z(($92) => {
  Object.defineProperty($92, "__esModule", {
    value: !0
  });
  $92.fromEnv = void 0;
  var ff6 = d71(),
    vf6 = (A) => ff6.fromEnv(A);
  $92.fromEnv = vf6
})
// @from(Start 5943283, End 5943487)
O92 = z((L92) => {
  Object.defineProperty(L92, "__esModule", {
    value: !0
  });
  L92.fromIni = void 0;
  var bf6 = _x1(),
    gf6 = (A = {}) => bf6.fromIni({
      ...A
    });
  L92.fromIni = gf6
})
// @from(Start 5943493, End 5943908)
S92 = z((T92) => {
  Object.defineProperty(T92, "__esModule", {
    value: !0
  });
  T92.fromInstanceMetadata = void 0;
  var hf6 = NC(),
    mf6 = B_(),
    df6 = (A) => {
      return A?.logger?.debug("@smithy/credential-provider-imds", "fromInstanceMetadata"), async () => mf6.fromInstanceMetadata(A)().then((B) => hf6.setCredentialFeature(B, "CREDENTIALS_IMDS", "0"))
    };
  T92.fromInstanceMetadata = df6
})
// @from(Start 5943914, End 5944153)
Fn1 = z((_92) => {
  Object.defineProperty(_92, "__esModule", {
    value: !0
  });
  _92.fromNodeProviderChain = void 0;
  var uf6 = ha(),
    pf6 = (A = {}) => uf6.defaultProvider({
      ...A
    });
  _92.fromNodeProviderChain = pf6
})
// @from(Start 5944159, End 5944353)
x92 = z((y92) => {
  Object.defineProperty(y92, "__esModule", {
    value: !0
  });
  y92.fromProcess = void 0;
  var cf6 = iI1(),
    lf6 = (A) => cf6.fromProcess(A);
  y92.fromProcess = lf6
})
// @from(Start 5944359, End 5944588)
b92 = z((f92) => {
  Object.defineProperty(f92, "__esModule", {
    value: !0
  });
  f92.fromSSO = void 0;
  var if6 = dI1(),
    nf6 = (A = {}) => {
      return if6.fromSSO({
        ...A
      })
    };
  f92.fromSSO = nf6
})
// @from(Start 5944594, End 5945014)
h92 = z((YX1) => {
  Object.defineProperty(YX1, "__esModule", {
    value: !0
  });
  YX1.STSClient = YX1.AssumeRoleCommand = void 0;
  var g92 = cI1();
  Object.defineProperty(YX1, "AssumeRoleCommand", {
    enumerable: !0,
    get: function() {
      return g92.AssumeRoleCommand
    }
  });
  Object.defineProperty(YX1, "STSClient", {
    enumerable: !0,
    get: function() {
      return g92.STSClient
    }
  })
})
// @from(Start 5945020, End 5949499)
u92 = z((dw) => {
  var sf6 = dw && dw.__createBinding || (Object.create ? function(A, B, Q, I) {
      if (I === void 0) I = Q;
      var G = Object.getOwnPropertyDescriptor(B, Q);
      if (!G || ("get" in G ? !B.__esModule : G.writable || G.configurable)) G = {
        enumerable: !0,
        get: function() {
          return B[Q]
        }
      };
      Object.defineProperty(A, I, G)
    } : function(A, B, Q, I) {
      if (I === void 0) I = Q;
      A[I] = B[Q]
    }),
    rf6 = dw && dw.__setModuleDefault || (Object.create ? function(A, B) {
      Object.defineProperty(A, "default", {
        enumerable: !0,
        value: B
      })
    } : function(A, B) {
      A.default = B
    }),
    of6 = dw && dw.__importStar || function(A) {
      if (A && A.__esModule) return A;
      var B = {};
      if (A != null) {
        for (var Q in A)
          if (Q !== "default" && Object.prototype.hasOwnProperty.call(A, Q)) sf6(B, A, Q)
      }
      return rf6(B, A), B
    };
  Object.defineProperty(dw, "__esModule", {
    value: !0
  });
  dw.fromTemporaryCredentials = void 0;
  var tf6 = NI(),
    m92 = $I(),
    ef6 = "us-east-1",
    Av6 = (A, B, Q) => {
      let I;
      return async (G = {}) => {
        let {
          callerClientConfig: Z
        } = G, D = A.clientConfig?.profile ?? Z?.profile, Y = A.logger ?? Z?.logger;
        Y?.debug("@aws-sdk/credential-providers - fromTemporaryCredentials (STS)");
        let W = {
          ...A.params,
          RoleSessionName: A.params.RoleSessionName ?? "aws-sdk-js-" + Date.now()
        };
        if (W?.SerialNumber) {
          if (!A.mfaCodeProvider) throw new m92.CredentialsProviderError("Temporary credential requires multi-factor authentication, but no MFA code callback was provided.", {
            tryNextLink: !1,
            logger: Y
          });
          W.TokenCode = await A.mfaCodeProvider(W?.SerialNumber)
        }
        let {
          AssumeRoleCommand: J,
          STSClient: F
        } = await Promise.resolve().then(() => of6(h92()));
        if (!I) {
          let V = typeof B === "function" ? B() : void 0,
            C = [A.masterCredentials, A.clientConfig?.credentials, void Z?.credentials, Z?.credentialDefaultProvider?.(), V],
            K = "STS client default credentials";
          if (C[0]) K = "options.masterCredentials";
          else if (C[1]) K = "options.clientConfig.credentials";
          else if (C[2]) throw K = "caller client's credentials", new Error("fromTemporaryCredentials recursion in callerClientConfig.credentials");
          else if (C[3]) K = "caller client's credentialDefaultProvider";
          else if (C[4]) K = "AWS SDK default credentials";
          let E = [A.clientConfig?.region, Z?.region, await Q?.({
              profile: D
            }), ef6],
            N = "default partition's default region";
          if (E[0]) N = "options.clientConfig.region";
          else if (E[1]) N = "caller client's region";
          else if (E[2]) N = "file or env region";
          let q = [d92(A.clientConfig?.requestHandler), d92(Z?.requestHandler)],
            O = "STS default requestHandler";
          if (q[0]) O = "options.clientConfig.requestHandler";
          else if (q[1]) O = "caller client's requestHandler";
          Y?.debug?.(`@aws-sdk/credential-providers - fromTemporaryCredentials STS client init with ${N}=${await tf6.normalizeProvider(WX1(E))()}, ${K}, ${O}.`), I = new F({
            ...A.clientConfig,
            credentials: WX1(C),
            logger: Y,
            profile: D,
            region: WX1(E),
            requestHandler: WX1(q)
          })
        }
        if (A.clientPlugins)
          for (let V of A.clientPlugins) I.middlewareStack.use(V);
        let {
          Credentials: X
        } = await I.send(new J(W));
        if (!X || !X.AccessKeyId || !X.SecretAccessKey) throw new m92.CredentialsProviderError(`Invalid response from STS.assumeRole call with role ${W.RoleArn}`, {
          logger: Y
        });
        return {
          accessKeyId: X.AccessKeyId,
          secretAccessKey: X.SecretAccessKey,
          sessionToken: X.SessionToken,
          expiration: X.Expiration,
          credentialScope: X.CredentialScope
        }
      }
    };
  dw.fromTemporaryCredentials = Av6;
  var d92 = (A) => {
      return A?.metadata?.handlerProtocol === "h2" ? void 0 : A
    },
    WX1 = (A) => {
      for (let B of A)
        if (B !== void 0) return B
    }
})
// @from(Start 5949505, End 5950192)
l92 = z((p92) => {
  Object.defineProperty(p92, "__esModule", {
    value: !0
  });
  p92.fromTemporaryCredentials = void 0;
  var Bv6 = _D(),
    Qv6 = qC(),
    Iv6 = Fn1(),
    Gv6 = u92(),
    Zv6 = (A) => {
      return Gv6.fromTemporaryCredentials(A, Iv6.fromNodeProviderChain, async ({
        profile: B = process.env.AWS_PROFILE
      }) => Qv6.loadConfig({
        environmentVariableSelector: (Q) => Q.AWS_REGION,
        configFileSelector: (Q) => {
          return Q.region
        },
        default: () => {
          return
        }
      }, {
        ...Bv6.NODE_REGION_CONFIG_FILE_OPTIONS,
        profile: B
      })())
    };
  p92.fromTemporaryCredentials = Zv6
})
// @from(Start 5950198, End 5950419)
a92 = z((i92) => {
  Object.defineProperty(i92, "__esModule", {
    value: !0
  });
  i92.fromTokenFile = void 0;
  var Dv6 = fa(),
    Yv6 = (A = {}) => Dv6.fromTokenFile({
      ...A
    });
  i92.fromTokenFile = Yv6
})
// @from(Start 5950425, End 5950638)
o92 = z((s92) => {
  Object.defineProperty(s92, "__esModule", {
    value: !0
  });
  s92.fromWebToken = void 0;
  var Wv6 = fa(),
    Jv6 = (A) => Wv6.fromWebToken({
      ...A
    });
  s92.fromWebToken = Jv6
})
// @from(Start 5950644, End 5951300)
t92 = z((uZ) => {
  Object.defineProperty(uZ, "__esModule", {
    value: !0
  });
  uZ.fromHttp = void 0;
  var hJ = IA2();
  hJ.__exportStar(ZA2(), uZ);
  hJ.__exportStar(K92(), uZ);
  hJ.__exportStar(w92(), uZ);
  hJ.__exportStar(N92(), uZ);
  var Fv6 = AI1();
  Object.defineProperty(uZ, "fromHttp", {
    enumerable: !0,
    get: function() {
      return Fv6.fromHttp
    }
  });
  hJ.__exportStar(M92(), uZ);
  hJ.__exportStar(O92(), uZ);
  hJ.__exportStar(S92(), uZ);
  hJ.__exportStar(Fn1(), uZ);
  hJ.__exportStar(x92(), uZ);
  hJ.__exportStar(b92(), uZ);
  hJ.__exportStar(l92(), uZ);
  hJ.__exportStar(a92(), uZ);
  hJ.__exportStar(o92(), uZ)
})
// @from(Start 5951306, End 5954209)
Xn1 = z((Tg8, Y42) => {
  var {
    defineProperty: JX1,
    getOwnPropertyDescriptor: Vv6,
    getOwnPropertyNames: Cv6
  } = Object, Kv6 = Object.prototype.hasOwnProperty, FX1 = (A, B) => JX1(A, "name", {
    value: B,
    configurable: !0
  }), Hv6 = (A, B) => {
    for (var Q in B) JX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, zv6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Cv6(B))
        if (!Kv6.call(A, G) && G !== Q) JX1(A, G, {
          get: () => B[G],
          enumerable: !(I = Vv6(B, G)) || I.enumerable
        })
    }
    return A
  }, wv6 = (A) => zv6(JX1({}, "__esModule", {
    value: !0
  }), A), e92 = {};
  Hv6(e92, {
    AlgorithmId: () => I42,
    EndpointURLScheme: () => Q42,
    FieldPosition: () => G42,
    HttpApiKeyAuthLocation: () => B42,
    HttpAuthLocation: () => A42,
    IniSectionType: () => Z42,
    RequestHandlerProtocol: () => D42,
    SMITHY_CONTEXT_KEY: () => qv6,
    getDefaultClientConfiguration: () => Nv6,
    resolveDefaultRuntimeConfig: () => $v6
  });
  Y42.exports = wv6(e92);
  var A42 = ((A) => {
      return A.HEADER = "header", A.QUERY = "query", A
    })(A42 || {}),
    B42 = ((A) => {
      return A.HEADER = "header", A.QUERY = "query", A
    })(B42 || {}),
    Q42 = ((A) => {
      return A.HTTP = "http", A.HTTPS = "https", A
    })(Q42 || {}),
    I42 = ((A) => {
      return A.MD5 = "md5", A.CRC32 = "crc32", A.CRC32C = "crc32c", A.SHA1 = "sha1", A.SHA256 = "sha256", A
    })(I42 || {}),
    Ev6 = FX1((A) => {
      let B = [];
      if (A.sha256 !== void 0) B.push({
        algorithmId: () => "sha256",
        checksumConstructor: () => A.sha256
      });
      if (A.md5 != null) B.push({
        algorithmId: () => "md5",
        checksumConstructor: () => A.md5
      });
      return {
        _checksumAlgorithms: B,
        addChecksumAlgorithm(Q) {
          this._checksumAlgorithms.push(Q)
        },
        checksumAlgorithms() {
          return this._checksumAlgorithms
        }
      }
    }, "getChecksumConfiguration"),
    Uv6 = FX1((A) => {
      let B = {};
      return A.checksumAlgorithms().forEach((Q) => {
        B[Q.algorithmId()] = Q.checksumConstructor()
      }), B
    }, "resolveChecksumRuntimeConfig"),
    Nv6 = FX1((A) => {
      return {
        ...Ev6(A)
      }
    }, "getDefaultClientConfiguration"),
    $v6 = FX1((A) => {
      return {
        ...Uv6(A)
      }
    }, "resolveDefaultRuntimeConfig"),
    G42 = ((A) => {
      return A[A.HEADER = 0] = "HEADER", A[A.TRAILER = 1] = "TRAILER", A
    })(G42 || {}),
    qv6 = "__smithy_context",
    Z42 = ((A) => {
      return A.PROFILE = "profile", A.SSO_SESSION = "sso-session", A.SERVICES = "services", A
    })(Z42 || {}),
    D42 = ((A) => {
      return A.HTTP_0_9 = "http/0.9", A.HTTP_1_0 = "http/1.0", A.TDS_8_0 = "tds/8.0", A
    })(D42 || {})
})
// @from(Start 5954215, End 5958570)
VX1 = z((Pg8, H42) => {
  var {
    defineProperty: XX1,
    getOwnPropertyDescriptor: Mv6,
    getOwnPropertyNames: Lv6
  } = Object, Rv6 = Object.prototype.hasOwnProperty, BO = (A, B) => XX1(A, "name", {
    value: B,
    configurable: !0
  }), Ov6 = (A, B) => {
    for (var Q in B) XX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Tv6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Lv6(B))
        if (!Rv6.call(A, G) && G !== Q) XX1(A, G, {
          get: () => B[G],
          enumerable: !(I = Mv6(B, G)) || I.enumerable
        })
    }
    return A
  }, Pv6 = (A) => Tv6(XX1({}, "__esModule", {
    value: !0
  }), A), W42 = {};
  Ov6(W42, {
    Field: () => yv6,
    Fields: () => kv6,
    HttpRequest: () => xv6,
    HttpResponse: () => fv6,
    getHttpHandlerExtensionConfiguration: () => Sv6,
    isValidHostname: () => K42,
    resolveHttpHandlerRuntimeConfig: () => _v6
  });
  H42.exports = Pv6(W42);
  var Sv6 = BO((A) => {
      let B = A.httpHandler;
      return {
        setHttpHandler(Q) {
          B = Q
        },
        httpHandler() {
          return B
        },
        updateHttpClientConfig(Q, I) {
          B.updateHttpClientConfig(Q, I)
        },
        httpHandlerConfigs() {
          return B.httpHandlerConfigs()
        }
      }
    }, "getHttpHandlerExtensionConfiguration"),
    _v6 = BO((A) => {
      return {
        httpHandler: A.httpHandler()
      }
    }, "resolveHttpHandlerRuntimeConfig"),
    jv6 = Xn1(),
    J42 = class A {
      constructor({
        name: B,
        kind: Q = jv6.FieldPosition.HEADER,
        values: I = []
      }) {
        this.name = B, this.kind = Q, this.values = I
      }
      add(B) {
        this.values.push(B)
      }
      set(B) {
        this.values = B
      }
      remove(B) {
        this.values = this.values.filter((Q) => Q !== B)
      }
      toString() {
        return this.values.map((B) => B.includes(",") || B.includes(" ") ? `"${B}"` : B).join(", ")
      }
      get() {
        return this.values
      }
    };
  BO(J42, "Field");
  var yv6 = J42,
    F42 = class A {
      constructor({
        fields: B = [],
        encoding: Q = "utf-8"
      }) {
        this.entries = {}, B.forEach(this.setField.bind(this)), this.encoding = Q
      }
      setField(B) {
        this.entries[B.name.toLowerCase()] = B
      }
      getField(B) {
        return this.entries[B.toLowerCase()]
      }
      removeField(B) {
        delete this.entries[B.toLowerCase()]
      }
      getByType(B) {
        return Object.values(this.entries).filter((Q) => Q.kind === B)
      }
    };
  BO(F42, "Fields");
  var kv6 = F42,
    X42 = class A {
      constructor(B) {
        this.method = B.method || "GET", this.hostname = B.hostname || "localhost", this.port = B.port, this.query = B.query || {}, this.headers = B.headers || {}, this.body = B.body, this.protocol = B.protocol ? B.protocol.slice(-1) !== ":" ? `${B.protocol}:` : B.protocol : "https:", this.path = B.path ? B.path.charAt(0) !== "/" ? `/${B.path}` : B.path : "/", this.username = B.username, this.password = B.password, this.fragment = B.fragment
      }
      static isInstance(B) {
        if (!B) return !1;
        let Q = B;
        return "method" in Q && "protocol" in Q && "hostname" in Q && "path" in Q && typeof Q.query === "object" && typeof Q.headers === "object"
      }
      clone() {
        let B = new A({
          ...this,
          headers: {
            ...this.headers
          }
        });
        if (B.query) B.query = V42(B.query);
        return B
      }
    };
  BO(X42, "HttpRequest");
  var xv6 = X42;

  function V42(A) {
    return Object.keys(A).reduce((B, Q) => {
      let I = A[Q];
      return {
        ...B,
        [Q]: Array.isArray(I) ? [...I] : I
      }
    }, {})
  }
  BO(V42, "cloneQuery");
  var C42 = class A {
    constructor(B) {
      this.statusCode = B.statusCode, this.reason = B.reason, this.headers = B.headers || {}, this.body = B.body
    }
    static isInstance(B) {
      if (!B) return !1;
      let Q = B;
      return typeof Q.statusCode === "number" && typeof Q.headers === "object"
    }
  };
  BO(C42, "HttpResponse");
  var fv6 = C42;

  function K42(A) {
    return /^[a-z0-9][a-z0-9\.\-]*[a-z0-9]$/.test(A)
  }
  BO(K42, "isValidHostname")
})
// @from(Start 5958576, End 5969939)
Cn1 = z((Sg8, KX1) => {
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  var z42, w42, E42, U42, N42, $42, q42, M42, L42, CX1, Vn1, R42, O42, em, T42, P42, S42, _42, j42, y42, k42, x42, f42;
  (function(A) {
    var B = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) define("tslib", ["exports"], function(I) {
      A(Q(B, Q(I)))
    });
    else if (typeof KX1 === "object" && typeof Sg8 === "object") A(Q(B, Q(Sg8)));
    else A(Q(B));

    function Q(I, G) {
      if (I !== B)
        if (typeof Object.create === "function") Object.defineProperty(I, "__esModule", {
          value: !0
        });
        else I.__esModule = !0;
      return function(Z, D) {
        return I[Z] = G ? G(Z, D) : D
      }
    }
  })(function(A) {
    var B = Object.setPrototypeOf || {
      __proto__: []
    }
    instanceof Array && function(Q, I) {
      Q.__proto__ = I
    } || function(Q, I) {
      for (var G in I)
        if (I.hasOwnProperty(G)) Q[G] = I[G]
    };
    z42 = function(Q, I) {
      B(Q, I);

      function G() {
        this.constructor = Q
      }
      Q.prototype = I === null ? Object.create(I) : (G.prototype = I.prototype, new G)
    }, w42 = Object.assign || function(Q) {
      for (var I, G = 1, Z = arguments.length; G < Z; G++) {
        I = arguments[G];
        for (var D in I)
          if (Object.prototype.hasOwnProperty.call(I, D)) Q[D] = I[D]
      }
      return Q
    }, E42 = function(Q, I) {
      var G = {};
      for (var Z in Q)
        if (Object.prototype.hasOwnProperty.call(Q, Z) && I.indexOf(Z) < 0) G[Z] = Q[Z];
      if (Q != null && typeof Object.getOwnPropertySymbols === "function") {
        for (var D = 0, Z = Object.getOwnPropertySymbols(Q); D < Z.length; D++)
          if (I.indexOf(Z[D]) < 0 && Object.prototype.propertyIsEnumerable.call(Q, Z[D])) G[Z[D]] = Q[Z[D]]
      }
      return G
    }, U42 = function(Q, I, G, Z) {
      var D = arguments.length,
        Y = D < 3 ? I : Z === null ? Z = Object.getOwnPropertyDescriptor(I, G) : Z,
        W;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") Y = Reflect.decorate(Q, I, G, Z);
      else
        for (var J = Q.length - 1; J >= 0; J--)
          if (W = Q[J]) Y = (D < 3 ? W(Y) : D > 3 ? W(I, G, Y) : W(I, G)) || Y;
      return D > 3 && Y && Object.defineProperty(I, G, Y), Y
    }, N42 = function(Q, I) {
      return function(G, Z) {
        I(G, Z, Q)
      }
    }, $42 = function(Q, I) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(Q, I)
    }, q42 = function(Q, I, G, Z) {
      function D(Y) {
        return Y instanceof G ? Y : new G(function(W) {
          W(Y)
        })
      }
      return new(G || (G = Promise))(function(Y, W) {
        function J(V) {
          try {
            X(Z.next(V))
          } catch (C) {
            W(C)
          }
        }

        function F(V) {
          try {
            X(Z.throw(V))
          } catch (C) {
            W(C)
          }
        }

        function X(V) {
          V.done ? Y(V.value) : D(V.value).then(J, F)
        }
        X((Z = Z.apply(Q, I || [])).next())
      })
    }, M42 = function(Q, I) {
      var G = {
          label: 0,
          sent: function() {
            if (Y[0] & 1) throw Y[1];
            return Y[1]
          },
          trys: [],
          ops: []
        },
        Z, D, Y, W;
      return W = {
        next: J(0),
        throw: J(1),
        return: J(2)
      }, typeof Symbol === "function" && (W[Symbol.iterator] = function() {
        return this
      }), W;

      function J(X) {
        return function(V) {
          return F([X, V])
        }
      }

      function F(X) {
        if (Z) throw new TypeError("Generator is already executing.");
        while (G) try {
          if (Z = 1, D && (Y = X[0] & 2 ? D.return : X[0] ? D.throw || ((Y = D.return) && Y.call(D), 0) : D.next) && !(Y = Y.call(D, X[1])).done) return Y;
          if (D = 0, Y) X = [X[0] & 2, Y.value];
          switch (X[0]) {
            case 0:
            case 1:
              Y = X;
              break;
            case 4:
              return G.label++, {
                value: X[1],
                done: !1
              };
            case 5:
              G.label++, D = X[1], X = [0];
              continue;
            case 7:
              X = G.ops.pop(), G.trys.pop();
              continue;
            default:
              if ((Y = G.trys, !(Y = Y.length > 0 && Y[Y.length - 1])) && (X[0] === 6 || X[0] === 2)) {
                G = 0;
                continue
              }
              if (X[0] === 3 && (!Y || X[1] > Y[0] && X[1] < Y[3])) {
                G.label = X[1];
                break
              }
              if (X[0] === 6 && G.label < Y[1]) {
                G.label = Y[1], Y = X;
                break
              }
              if (Y && G.label < Y[2]) {
                G.label = Y[2], G.ops.push(X);
                break
              }
              if (Y[2]) G.ops.pop();
              G.trys.pop();
              continue
          }
          X = I.call(Q, G)
        } catch (V) {
          X = [6, V], D = 0
        } finally {
          Z = Y = 0
        }
        if (X[0] & 5) throw X[1];
        return {
          value: X[0] ? X[1] : void 0,
          done: !0
        }
      }
    }, f42 = function(Q, I, G, Z) {
      if (Z === void 0) Z = G;
      Q[Z] = I[G]
    }, L42 = function(Q, I) {
      for (var G in Q)
        if (G !== "default" && !I.hasOwnProperty(G)) I[G] = Q[G]
    }, CX1 = function(Q) {
      var I = typeof Symbol === "function" && Symbol.iterator,
        G = I && Q[I],
        Z = 0;
      if (G) return G.call(Q);
      if (Q && typeof Q.length === "number") return {
        next: function() {
          if (Q && Z >= Q.length) Q = void 0;
          return {
            value: Q && Q[Z++],
            done: !Q
          }
        }
      };
      throw new TypeError(I ? "Object is not iterable." : "Symbol.iterator is not defined.")
    }, Vn1 = function(Q, I) {
      var G = typeof Symbol === "function" && Q[Symbol.iterator];
      if (!G) return Q;
      var Z = G.call(Q),
        D, Y = [],
        W;
      try {
        while ((I === void 0 || I-- > 0) && !(D = Z.next()).done) Y.push(D.value)
      } catch (J) {
        W = {
          error: J
        }
      } finally {
        try {
          if (D && !D.done && (G = Z.return)) G.call(Z)
        } finally {
          if (W) throw W.error
        }
      }
      return Y
    }, R42 = function() {
      for (var Q = [], I = 0; I < arguments.length; I++) Q = Q.concat(Vn1(arguments[I]));
      return Q
    }, O42 = function() {
      for (var Q = 0, I = 0, G = arguments.length; I < G; I++) Q += arguments[I].length;
      for (var Z = Array(Q), D = 0, I = 0; I < G; I++)
        for (var Y = arguments[I], W = 0, J = Y.length; W < J; W++, D++) Z[D] = Y[W];
      return Z
    }, em = function(Q) {
      return this instanceof em ? (this.v = Q, this) : new em(Q)
    }, T42 = function(Q, I, G) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var Z = G.apply(Q, I || []),
        D, Y = [];
      return D = {}, W("next"), W("throw"), W("return"), D[Symbol.asyncIterator] = function() {
        return this
      }, D;

      function W(K) {
        if (Z[K]) D[K] = function(E) {
          return new Promise(function(N, q) {
            Y.push([K, E, N, q]) > 1 || J(K, E)
          })
        }
      }

      function J(K, E) {
        try {
          F(Z[K](E))
        } catch (N) {
          C(Y[0][3], N)
        }
      }

      function F(K) {
        K.value instanceof em ? Promise.resolve(K.value.v).then(X, V) : C(Y[0][2], K)
      }

      function X(K) {
        J("next", K)
      }

      function V(K) {
        J("throw", K)
      }

      function C(K, E) {
        if (K(E), Y.shift(), Y.length) J(Y[0][0], Y[0][1])
      }
    }, P42 = function(Q) {
      var I, G;
      return I = {}, Z("next"), Z("throw", function(D) {
        throw D
      }), Z("return"), I[Symbol.iterator] = function() {
        return this
      }, I;

      function Z(D, Y) {
        I[D] = Q[D] ? function(W) {
          return (G = !G) ? {
            value: em(Q[D](W)),
            done: D === "return"
          } : Y ? Y(W) : W
        } : Y
      }
    }, S42 = function(Q) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var I = Q[Symbol.asyncIterator],
        G;
      return I ? I.call(Q) : (Q = typeof CX1 === "function" ? CX1(Q) : Q[Symbol.iterator](), G = {}, Z("next"), Z("throw"), Z("return"), G[Symbol.asyncIterator] = function() {
        return this
      }, G);

      function Z(Y) {
        G[Y] = Q[Y] && function(W) {
          return new Promise(function(J, F) {
            W = Q[Y](W), D(J, F, W.done, W.value)
          })
        }
      }

      function D(Y, W, J, F) {
        Promise.resolve(F).then(function(X) {
          Y({
            value: X,
            done: J
          })
        }, W)
      }
    }, _42 = function(Q, I) {
      if (Object.defineProperty) Object.defineProperty(Q, "raw", {
        value: I
      });
      else Q.raw = I;
      return Q
    }, j42 = function(Q) {
      if (Q && Q.__esModule) return Q;
      var I = {};
      if (Q != null) {
        for (var G in Q)
          if (Object.hasOwnProperty.call(Q, G)) I[G] = Q[G]
      }
      return I.default = Q, I
    }, y42 = function(Q) {
      return Q && Q.__esModule ? Q : {
        default: Q
      }
    }, k42 = function(Q, I) {
      if (!I.has(Q)) throw new TypeError("attempted to get private field on non-instance");
      return I.get(Q)
    }, x42 = function(Q, I, G) {
      if (!I.has(Q)) throw new TypeError("attempted to set private field on non-instance");
      return I.set(Q, G), G
    }, A("__extends", z42), A("__assign", w42), A("__rest", E42), A("__decorate", U42), A("__param", N42), A("__metadata", $42), A("__awaiter", q42), A("__generator", M42), A("__exportStar", L42), A("__createBinding", f42), A("__values", CX1), A("__read", Vn1), A("__spread", R42), A("__spreadArrays", O42), A("__await", em), A("__asyncGenerator", T42), A("__asyncDelegator", P42), A("__asyncValues", S42), A("__makeTemplateObject", _42), A("__importStar", j42), A("__importDefault", y42), A("__classPrivateFieldGet", k42), A("__classPrivateFieldSet", x42)
  })
})
// @from(Start 5969945, End 5971115)
Kn1 = z((v42) => {
  Object.defineProperty(v42, "__esModule", {
    value: !0
  });
  v42.MAX_HASHABLE_LENGTH = v42.INIT = v42.KEY = v42.DIGEST_LENGTH = v42.BLOCK_SIZE = void 0;
  v42.BLOCK_SIZE = 64;
  v42.DIGEST_LENGTH = 32;
  v42.KEY = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
  v42.INIT = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];
  v42.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1
})
// @from(Start 5971121, End 5974273)
m42 = z((g42) => {
  Object.defineProperty(g42, "__esModule", {
    value: !0
  });
  g42.RawSha256 = void 0;
  var oX = Kn1(),
    mv6 = function() {
      function A() {
        this.state = Int32Array.from(oX.INIT), this.temp = new Int32Array(64), this.buffer = new Uint8Array(64), this.bufferLength = 0, this.bytesHashed = 0, this.finished = !1
      }
      return A.prototype.update = function(B) {
        if (this.finished) throw new Error("Attempted to update an already finished hash.");
        var Q = 0,
          I = B.byteLength;
        if (this.bytesHashed += I, this.bytesHashed * 8 > oX.MAX_HASHABLE_LENGTH) throw new Error("Cannot hash more than 2^53 - 1 bits");
        while (I > 0)
          if (this.buffer[this.bufferLength++] = B[Q++], I--, this.bufferLength === oX.BLOCK_SIZE) this.hashBuffer(), this.bufferLength = 0
      }, A.prototype.digest = function() {
        if (!this.finished) {
          var B = this.bytesHashed * 8,
            Q = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength),
            I = this.bufferLength;
          if (Q.setUint8(this.bufferLength++, 128), I % oX.BLOCK_SIZE >= oX.BLOCK_SIZE - 8) {
            for (var G = this.bufferLength; G < oX.BLOCK_SIZE; G++) Q.setUint8(G, 0);
            this.hashBuffer(), this.bufferLength = 0
          }
          for (var G = this.bufferLength; G < oX.BLOCK_SIZE - 8; G++) Q.setUint8(G, 0);
          Q.setUint32(oX.BLOCK_SIZE - 8, Math.floor(B / 4294967296), !0), Q.setUint32(oX.BLOCK_SIZE - 4, B), this.hashBuffer(), this.finished = !0
        }
        var Z = new Uint8Array(oX.DIGEST_LENGTH);
        for (var G = 0; G < 8; G++) Z[G * 4] = this.state[G] >>> 24 & 255, Z[G * 4 + 1] = this.state[G] >>> 16 & 255, Z[G * 4 + 2] = this.state[G] >>> 8 & 255, Z[G * 4 + 3] = this.state[G] >>> 0 & 255;
        return Z
      }, A.prototype.hashBuffer = function() {
        var B = this,
          Q = B.buffer,
          I = B.state,
          G = I[0],
          Z = I[1],
          D = I[2],
          Y = I[3],
          W = I[4],
          J = I[5],
          F = I[6],
          X = I[7];
        for (var V = 0; V < oX.BLOCK_SIZE; V++) {
          if (V < 16) this.temp[V] = (Q[V * 4] & 255) << 24 | (Q[V * 4 + 1] & 255) << 16 | (Q[V * 4 + 2] & 255) << 8 | Q[V * 4 + 3] & 255;
          else {
            var C = this.temp[V - 2],
              K = (C >>> 17 | C << 15) ^ (C >>> 19 | C << 13) ^ C >>> 10;
            C = this.temp[V - 15];
            var E = (C >>> 7 | C << 25) ^ (C >>> 18 | C << 14) ^ C >>> 3;
            this.temp[V] = (K + this.temp[V - 7] | 0) + (E + this.temp[V - 16] | 0)
          }
          var N = (((W >>> 6 | W << 26) ^ (W >>> 11 | W << 21) ^ (W >>> 25 | W << 7)) + (W & J ^ ~W & F) | 0) + (X + (oX.KEY[V] + this.temp[V] | 0) | 0) | 0,
            q = ((G >>> 2 | G << 30) ^ (G >>> 13 | G << 19) ^ (G >>> 22 | G << 10)) + (G & Z ^ G & D ^ Z & D) | 0;
          X = F, F = J, J = W, W = Y + N | 0, Y = D, D = Z, Z = G, G = N + q | 0
        }
        I[0] += G, I[1] += Z, I[2] += D, I[3] += Y, I[4] += W, I[5] += J, I[6] += F, I[7] += X
      }, A
    }();
  g42.RawSha256 = mv6
})
// @from(Start 5974279, End 5975567)
p42 = z((d42) => {
  Object.defineProperty(d42, "__esModule", {
    value: !0
  });
  d42.toUtf8 = d42.fromUtf8 = void 0;
  var dv6 = (A) => {
    let B = [];
    for (let Q = 0, I = A.length; Q < I; Q++) {
      let G = A.charCodeAt(Q);
      if (G < 128) B.push(G);
      else if (G < 2048) B.push(G >> 6 | 192, G & 63 | 128);
      else if (Q + 1 < A.length && (G & 64512) === 55296 && (A.charCodeAt(Q + 1) & 64512) === 56320) {
        let Z = 65536 + ((G & 1023) << 10) + (A.charCodeAt(++Q) & 1023);
        B.push(Z >> 18 | 240, Z >> 12 & 63 | 128, Z >> 6 & 63 | 128, Z & 63 | 128)
      } else B.push(G >> 12 | 224, G >> 6 & 63 | 128, G & 63 | 128)
    }
    return Uint8Array.from(B)
  };
  d42.fromUtf8 = dv6;
  var uv6 = (A) => {
    let B = "";
    for (let Q = 0, I = A.length; Q < I; Q++) {
      let G = A[Q];
      if (G < 128) B += String.fromCharCode(G);
      else if (192 <= G && G < 224) {
        let Z = A[++Q];
        B += String.fromCharCode((G & 31) << 6 | Z & 63)
      } else if (240 <= G && G < 365) {
        let D = "%" + [G, A[++Q], A[++Q], A[++Q]].map((Y) => Y.toString(16)).join("%");
        B += decodeURIComponent(D)
      } else B += String.fromCharCode((G & 15) << 12 | (A[++Q] & 63) << 6 | A[++Q] & 63)
    }
    return B
  };
  d42.toUtf8 = uv6
})
// @from(Start 5975573, End 5975873)
i42 = z((c42) => {
  Object.defineProperty(c42, "__esModule", {
    value: !0
  });
  c42.toUtf8 = c42.fromUtf8 = void 0;

  function cv6(A) {
    return new TextEncoder().encode(A)
  }
  c42.fromUtf8 = cv6;

  function lv6(A) {
    return new TextDecoder("utf-8").decode(A)
  }
  c42.toUtf8 = lv6
})
// @from(Start 5975879, End 5976254)
Hn1 = z((s42) => {
  Object.defineProperty(s42, "__esModule", {
    value: !0
  });
  s42.toUtf8 = s42.fromUtf8 = void 0;
  var n42 = p42(),
    a42 = i42(),
    nv6 = (A) => typeof TextEncoder === "function" ? a42.fromUtf8(A) : n42.fromUtf8(A);
  s42.fromUtf8 = nv6;
  var av6 = (A) => typeof TextDecoder === "function" ? a42.toUtf8(A) : n42.toUtf8(A);
  s42.toUtf8 = av6
})
// @from(Start 5976260, End 5976820)
e42 = z((o42) => {
  Object.defineProperty(o42, "__esModule", {
    value: !0
  });
  o42.convertToBuffer = void 0;
  var rv6 = Hn1(),
    ov6 = typeof Buffer !== "undefined" && Buffer.from ? function(A) {
      return Buffer.from(A, "utf8")
    } : rv6.fromUtf8;

  function tv6(A) {
    if (A instanceof Uint8Array) return A;
    if (typeof A === "string") return ov6(A);
    if (ArrayBuffer.isView(A)) return new Uint8Array(A.buffer, A.byteOffset, A.byteLength / Uint8Array.BYTES_PER_ELEMENT);
    return new Uint8Array(A)
  }
  o42.convertToBuffer = tv6
})
// @from(Start 5976826, End 5977073)
Q62 = z((A62) => {
  Object.defineProperty(A62, "__esModule", {
    value: !0
  });
  A62.isEmptyData = void 0;

  function ev6(A) {
    if (typeof A === "string") return A.length === 0;
    return A.byteLength === 0
  }
  A62.isEmptyData = ev6
})
// @from(Start 5977079, End 5977341)
Z62 = z((I62) => {
  Object.defineProperty(I62, "__esModule", {
    value: !0
  });
  I62.numToUint8 = void 0;

  function Ab6(A) {
    return new Uint8Array([(A & 4278190080) >> 24, (A & 16711680) >> 16, (A & 65280) >> 8, A & 255])
  }
  I62.numToUint8 = Ab6
})
// @from(Start 5977347, End 5977703)
W62 = z((D62) => {
  Object.defineProperty(D62, "__esModule", {
    value: !0
  });
  D62.uint32ArrayFrom = void 0;

  function Bb6(A) {
    if (!Uint32Array.from) {
      var B = new Uint32Array(A.length),
        Q = 0;
      while (Q < A.length) B[Q] = A[Q], Q += 1;
      return B
    }
    return Uint32Array.from(A)
  }
  D62.uint32ArrayFrom = Bb6
})
// @from(Start 5977709, End 5978479)
J62 = z((Ad) => {
  Object.defineProperty(Ad, "__esModule", {
    value: !0
  });
  Ad.uint32ArrayFrom = Ad.numToUint8 = Ad.isEmptyData = Ad.convertToBuffer = void 0;
  var Qb6 = e42();
  Object.defineProperty(Ad, "convertToBuffer", {
    enumerable: !0,
    get: function() {
      return Qb6.convertToBuffer
    }
  });
  var Ib6 = Q62();
  Object.defineProperty(Ad, "isEmptyData", {
    enumerable: !0,
    get: function() {
      return Ib6.isEmptyData
    }
  });
  var Gb6 = Z62();
  Object.defineProperty(Ad, "numToUint8", {
    enumerable: !0,
    get: function() {
      return Gb6.numToUint8
    }
  });
  var Zb6 = W62();
  Object.defineProperty(Ad, "uint32ArrayFrom", {
    enumerable: !0,
    get: function() {
      return Zb6.uint32ArrayFrom
    }
  })
})
// @from(Start 5978485, End 5980231)
C62 = z((X62) => {
  Object.defineProperty(X62, "__esModule", {
    value: !0
  });
  X62.Sha256 = void 0;
  var F62 = Cn1(),
    zX1 = Kn1(),
    HX1 = m42(),
    zn1 = J62(),
    Yb6 = function() {
      function A(B) {
        this.secret = B, this.hash = new HX1.RawSha256, this.reset()
      }
      return A.prototype.update = function(B) {
        if (zn1.isEmptyData(B) || this.error) return;
        try {
          this.hash.update(zn1.convertToBuffer(B))
        } catch (Q) {
          this.error = Q
        }
      }, A.prototype.digestSync = function() {
        if (this.error) throw this.error;
        if (this.outer) {
          if (!this.outer.finished) this.outer.update(this.hash.digest());
          return this.outer.digest()
        }
        return this.hash.digest()
      }, A.prototype.digest = function() {
        return F62.__awaiter(this, void 0, void 0, function() {
          return F62.__generator(this, function(B) {
            return [2, this.digestSync()]
          })
        })
      }, A.prototype.reset = function() {
        if (this.hash = new HX1.RawSha256, this.secret) {
          this.outer = new HX1.RawSha256;
          var B = Wb6(this.secret),
            Q = new Uint8Array(zX1.BLOCK_SIZE);
          Q.set(B);
          for (var I = 0; I < zX1.BLOCK_SIZE; I++) B[I] ^= 54, Q[I] ^= 92;
          this.hash.update(B), this.outer.update(Q);
          for (var I = 0; I < B.byteLength; I++) B[I] = 0
        }
      }, A
    }();
  X62.Sha256 = Yb6;

  function Wb6(A) {
    var B = zn1.convertToBuffer(A);
    if (B.byteLength > zX1.BLOCK_SIZE) {
      var Q = new HX1.RawSha256;
      Q.update(B), B = Q.digest()
    }
    var I = new Uint8Array(zX1.BLOCK_SIZE);
    return I.set(B), I
  }
})
// @from(Start 5980237, End 5980373)
K62 = z((wn1) => {
  Object.defineProperty(wn1, "__esModule", {
    value: !0
  });
  var Jb6 = Cn1();
  Jb6.__exportStar(C62(), wn1)
})
// @from(Start 5980379, End 5991742)
Un1 = z((ng8, EX1) => {
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  var N62, $62, q62, M62, L62, R62, O62, T62, P62, wX1, En1, S62, _62, Bd, j62, y62, k62, x62, f62, v62, b62, g62, h62;
  (function(A) {
    var B = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) define("tslib", ["exports"], function(I) {
      A(Q(B, Q(I)))
    });
    else if (typeof EX1 === "object" && typeof ng8 === "object") A(Q(B, Q(ng8)));
    else A(Q(B));

    function Q(I, G) {
      if (I !== B)
        if (typeof Object.create === "function") Object.defineProperty(I, "__esModule", {
          value: !0
        });
        else I.__esModule = !0;
      return function(Z, D) {
        return I[Z] = G ? G(Z, D) : D
      }
    }
  })(function(A) {
    var B = Object.setPrototypeOf || {
      __proto__: []
    }
    instanceof Array && function(Q, I) {
      Q.__proto__ = I
    } || function(Q, I) {
      for (var G in I)
        if (I.hasOwnProperty(G)) Q[G] = I[G]
    };
    N62 = function(Q, I) {
      B(Q, I);

      function G() {
        this.constructor = Q
      }
      Q.prototype = I === null ? Object.create(I) : (G.prototype = I.prototype, new G)
    }, $62 = Object.assign || function(Q) {
      for (var I, G = 1, Z = arguments.length; G < Z; G++) {
        I = arguments[G];
        for (var D in I)
          if (Object.prototype.hasOwnProperty.call(I, D)) Q[D] = I[D]
      }
      return Q
    }, q62 = function(Q, I) {
      var G = {};
      for (var Z in Q)
        if (Object.prototype.hasOwnProperty.call(Q, Z) && I.indexOf(Z) < 0) G[Z] = Q[Z];
      if (Q != null && typeof Object.getOwnPropertySymbols === "function") {
        for (var D = 0, Z = Object.getOwnPropertySymbols(Q); D < Z.length; D++)
          if (I.indexOf(Z[D]) < 0 && Object.prototype.propertyIsEnumerable.call(Q, Z[D])) G[Z[D]] = Q[Z[D]]
      }
      return G
    }, M62 = function(Q, I, G, Z) {
      var D = arguments.length,
        Y = D < 3 ? I : Z === null ? Z = Object.getOwnPropertyDescriptor(I, G) : Z,
        W;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") Y = Reflect.decorate(Q, I, G, Z);
      else
        for (var J = Q.length - 1; J >= 0; J--)
          if (W = Q[J]) Y = (D < 3 ? W(Y) : D > 3 ? W(I, G, Y) : W(I, G)) || Y;
      return D > 3 && Y && Object.defineProperty(I, G, Y), Y
    }, L62 = function(Q, I) {
      return function(G, Z) {
        I(G, Z, Q)
      }
    }, R62 = function(Q, I) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(Q, I)
    }, O62 = function(Q, I, G, Z) {
      function D(Y) {
        return Y instanceof G ? Y : new G(function(W) {
          W(Y)
        })
      }
      return new(G || (G = Promise))(function(Y, W) {
        function J(V) {
          try {
            X(Z.next(V))
          } catch (C) {
            W(C)
          }
        }

        function F(V) {
          try {
            X(Z.throw(V))
          } catch (C) {
            W(C)
          }
        }

        function X(V) {
          V.done ? Y(V.value) : D(V.value).then(J, F)
        }
        X((Z = Z.apply(Q, I || [])).next())
      })
    }, T62 = function(Q, I) {
      var G = {
          label: 0,
          sent: function() {
            if (Y[0] & 1) throw Y[1];
            return Y[1]
          },
          trys: [],
          ops: []
        },
        Z, D, Y, W;
      return W = {
        next: J(0),
        throw: J(1),
        return: J(2)
      }, typeof Symbol === "function" && (W[Symbol.iterator] = function() {
        return this
      }), W;

      function J(X) {
        return function(V) {
          return F([X, V])
        }
      }

      function F(X) {
        if (Z) throw new TypeError("Generator is already executing.");
        while (G) try {
          if (Z = 1, D && (Y = X[0] & 2 ? D.return : X[0] ? D.throw || ((Y = D.return) && Y.call(D), 0) : D.next) && !(Y = Y.call(D, X[1])).done) return Y;
          if (D = 0, Y) X = [X[0] & 2, Y.value];
          switch (X[0]) {
            case 0:
            case 1:
              Y = X;
              break;
            case 4:
              return G.label++, {
                value: X[1],
                done: !1
              };
            case 5:
              G.label++, D = X[1], X = [0];
              continue;
            case 7:
              X = G.ops.pop(), G.trys.pop();
              continue;
            default:
              if ((Y = G.trys, !(Y = Y.length > 0 && Y[Y.length - 1])) && (X[0] === 6 || X[0] === 2)) {
                G = 0;
                continue
              }
              if (X[0] === 3 && (!Y || X[1] > Y[0] && X[1] < Y[3])) {
                G.label = X[1];
                break
              }
              if (X[0] === 6 && G.label < Y[1]) {
                G.label = Y[1], Y = X;
                break
              }
              if (Y && G.label < Y[2]) {
                G.label = Y[2], G.ops.push(X);
                break
              }
              if (Y[2]) G.ops.pop();
              G.trys.pop();
              continue
          }
          X = I.call(Q, G)
        } catch (V) {
          X = [6, V], D = 0
        } finally {
          Z = Y = 0
        }
        if (X[0] & 5) throw X[1];
        return {
          value: X[0] ? X[1] : void 0,
          done: !0
        }
      }
    }, h62 = function(Q, I, G, Z) {
      if (Z === void 0) Z = G;
      Q[Z] = I[G]
    }, P62 = function(Q, I) {
      for (var G in Q)
        if (G !== "default" && !I.hasOwnProperty(G)) I[G] = Q[G]
    }, wX1 = function(Q) {
      var I = typeof Symbol === "function" && Symbol.iterator,
        G = I && Q[I],
        Z = 0;
      if (G) return G.call(Q);
      if (Q && typeof Q.length === "number") return {
        next: function() {
          if (Q && Z >= Q.length) Q = void 0;
          return {
            value: Q && Q[Z++],
            done: !Q
          }
        }
      };
      throw new TypeError(I ? "Object is not iterable." : "Symbol.iterator is not defined.")
    }, En1 = function(Q, I) {
      var G = typeof Symbol === "function" && Q[Symbol.iterator];
      if (!G) return Q;
      var Z = G.call(Q),
        D, Y = [],
        W;
      try {
        while ((I === void 0 || I-- > 0) && !(D = Z.next()).done) Y.push(D.value)
      } catch (J) {
        W = {
          error: J
        }
      } finally {
        try {
          if (D && !D.done && (G = Z.return)) G.call(Z)
        } finally {
          if (W) throw W.error
        }
      }
      return Y
    }, S62 = function() {
      for (var Q = [], I = 0; I < arguments.length; I++) Q = Q.concat(En1(arguments[I]));
      return Q
    }, _62 = function() {
      for (var Q = 0, I = 0, G = arguments.length; I < G; I++) Q += arguments[I].length;
      for (var Z = Array(Q), D = 0, I = 0; I < G; I++)
        for (var Y = arguments[I], W = 0, J = Y.length; W < J; W++, D++) Z[D] = Y[W];
      return Z
    }, Bd = function(Q) {
      return this instanceof Bd ? (this.v = Q, this) : new Bd(Q)
    }, j62 = function(Q, I, G) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var Z = G.apply(Q, I || []),
        D, Y = [];
      return D = {}, W("next"), W("throw"), W("return"), D[Symbol.asyncIterator] = function() {
        return this
      }, D;

      function W(K) {
        if (Z[K]) D[K] = function(E) {
          return new Promise(function(N, q) {
            Y.push([K, E, N, q]) > 1 || J(K, E)
          })
        }
      }

      function J(K, E) {
        try {
          F(Z[K](E))
        } catch (N) {
          C(Y[0][3], N)
        }
      }

      function F(K) {
        K.value instanceof Bd ? Promise.resolve(K.value.v).then(X, V) : C(Y[0][2], K)
      }

      function X(K) {
        J("next", K)
      }

      function V(K) {
        J("throw", K)
      }

      function C(K, E) {
        if (K(E), Y.shift(), Y.length) J(Y[0][0], Y[0][1])
      }
    }, y62 = function(Q) {
      var I, G;
      return I = {}, Z("next"), Z("throw", function(D) {
        throw D
      }), Z("return"), I[Symbol.iterator] = function() {
        return this
      }, I;

      function Z(D, Y) {
        I[D] = Q[D] ? function(W) {
          return (G = !G) ? {
            value: Bd(Q[D](W)),
            done: D === "return"
          } : Y ? Y(W) : W
        } : Y
      }
    }, k62 = function(Q) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var I = Q[Symbol.asyncIterator],
        G;
      return I ? I.call(Q) : (Q = typeof wX1 === "function" ? wX1(Q) : Q[Symbol.iterator](), G = {}, Z("next"), Z("throw"), Z("return"), G[Symbol.asyncIterator] = function() {
        return this
      }, G);

      function Z(Y) {
        G[Y] = Q[Y] && function(W) {
          return new Promise(function(J, F) {
            W = Q[Y](W), D(J, F, W.done, W.value)
          })
        }
      }

      function D(Y, W, J, F) {
        Promise.resolve(F).then(function(X) {
          Y({
            value: X,
            done: J
          })
        }, W)
      }
    }, x62 = function(Q, I) {
      if (Object.defineProperty) Object.defineProperty(Q, "raw", {
        value: I
      });
      else Q.raw = I;
      return Q
    }, f62 = function(Q) {
      if (Q && Q.__esModule) return Q;
      var I = {};
      if (Q != null) {
        for (var G in Q)
          if (Object.hasOwnProperty.call(Q, G)) I[G] = Q[G]
      }
      return I.default = Q, I
    }, v62 = function(Q) {
      return Q && Q.__esModule ? Q : {
        default: Q
      }
    }, b62 = function(Q, I) {
      if (!I.has(Q)) throw new TypeError("attempted to get private field on non-instance");
      return I.get(Q)
    }, g62 = function(Q, I, G) {
      if (!I.has(Q)) throw new TypeError("attempted to set private field on non-instance");
      return I.set(Q, G), G
    }, A("__extends", N62), A("__assign", $62), A("__rest", q62), A("__decorate", M62), A("__param", L62), A("__metadata", R62), A("__awaiter", O62), A("__generator", T62), A("__exportStar", P62), A("__createBinding", h62), A("__values", wX1), A("__read", En1), A("__spread", S62), A("__spreadArrays", _62), A("__await", Bd), A("__asyncGenerator", j62), A("__asyncDelegator", y62), A("__asyncValues", k62), A("__makeTemplateObject", x62), A("__importStar", f62), A("__importDefault", v62), A("__classPrivateFieldGet", b62), A("__classPrivateFieldSet", g62)
  })
})
// @from(Start 5991748, End 5992308)
u62 = z((m62) => {
  Object.defineProperty(m62, "__esModule", {
    value: !0
  });
  m62.convertToBuffer = void 0;
  var Vb6 = Hn1(),
    Cb6 = typeof Buffer !== "undefined" && Buffer.from ? function(A) {
      return Buffer.from(A, "utf8")
    } : Vb6.fromUtf8;

  function Kb6(A) {
    if (A instanceof Uint8Array) return A;
    if (typeof A === "string") return Cb6(A);
    if (ArrayBuffer.isView(A)) return new Uint8Array(A.buffer, A.byteOffset, A.byteLength / Uint8Array.BYTES_PER_ELEMENT);
    return new Uint8Array(A)
  }
  m62.convertToBuffer = Kb6
})
// @from(Start 5992314, End 5992561)
l62 = z((p62) => {
  Object.defineProperty(p62, "__esModule", {
    value: !0
  });
  p62.isEmptyData = void 0;

  function Hb6(A) {
    if (typeof A === "string") return A.length === 0;
    return A.byteLength === 0
  }
  p62.isEmptyData = Hb6
})
// @from(Start 5992567, End 5992829)
a62 = z((i62) => {
  Object.defineProperty(i62, "__esModule", {
    value: !0
  });
  i62.numToUint8 = void 0;

  function zb6(A) {
    return new Uint8Array([(A & 4278190080) >> 24, (A & 16711680) >> 16, (A & 65280) >> 8, A & 255])
  }
  i62.numToUint8 = zb6
})
// @from(Start 5992835, End 5993191)
o62 = z((s62) => {
  Object.defineProperty(s62, "__esModule", {
    value: !0
  });
  s62.uint32ArrayFrom = void 0;

  function wb6(A) {
    if (!Uint32Array.from) {
      var B = new Uint32Array(A.length),
        Q = 0;
      while (Q < A.length) B[Q] = A[Q], Q += 1;
      return B
    }
    return Uint32Array.from(A)
  }
  s62.uint32ArrayFrom = wb6
})
// @from(Start 5993197, End 5993967)
Nn1 = z((Qd) => {
  Object.defineProperty(Qd, "__esModule", {
    value: !0
  });
  Qd.uint32ArrayFrom = Qd.numToUint8 = Qd.isEmptyData = Qd.convertToBuffer = void 0;
  var Eb6 = u62();
  Object.defineProperty(Qd, "convertToBuffer", {
    enumerable: !0,
    get: function() {
      return Eb6.convertToBuffer
    }
  });
  var Ub6 = l62();
  Object.defineProperty(Qd, "isEmptyData", {
    enumerable: !0,
    get: function() {
      return Ub6.isEmptyData
    }
  });
  var Nb6 = a62();
  Object.defineProperty(Qd, "numToUint8", {
    enumerable: !0,
    get: function() {
      return Nb6.numToUint8
    }
  });
  var $b6 = o62();
  Object.defineProperty(Qd, "uint32ArrayFrom", {
    enumerable: !0,
    get: function() {
      return $b6.uint32ArrayFrom
    }
  })
})
// @from(Start 5993973, End 5994724)
Q52 = z((A52) => {
  Object.defineProperty(A52, "__esModule", {
    value: !0
  });
  A52.AwsCrc32 = void 0;
  var t62 = Un1(),
    $n1 = Nn1(),
    e62 = UX1(),
    Mb6 = function() {
      function A() {
        this.crc32 = new e62.Crc32
      }
      return A.prototype.update = function(B) {
        if ($n1.isEmptyData(B)) return;
        this.crc32.update($n1.convertToBuffer(B))
      }, A.prototype.digest = function() {
        return t62.__awaiter(this, void 0, void 0, function() {
          return t62.__generator(this, function(B) {
            return [2, $n1.numToUint8(this.crc32.digest())]
          })
        })
      }, A.prototype.reset = function() {
        this.crc32 = new e62.Crc32
      }, A
    }();
  A52.AwsCrc32 = Mb6
})
// @from(Start 5994730, End 5998885)
UX1 = z((qn1) => {
  Object.defineProperty(qn1, "__esModule", {
    value: !0
  });
  qn1.AwsCrc32 = qn1.Crc32 = qn1.crc32 = void 0;
  var Lb6 = Un1(),
    Rb6 = Nn1();

  function Ob6(A) {
    return new I52().update(A).digest()
  }
  qn1.crc32 = Ob6;
  var I52 = function() {
    function A() {
      this.checksum = 4294967295
    }
    return A.prototype.update = function(B) {
      var Q, I;
      try {
        for (var G = Lb6.__values(B), Z = G.next(); !Z.done; Z = G.next()) {
          var D = Z.value;
          this.checksum = this.checksum >>> 8 ^ Pb6[(this.checksum ^ D) & 255]
        }
      } catch (Y) {
        Q = {
          error: Y
        }
      } finally {
        try {
          if (Z && !Z.done && (I = G.return)) I.call(G)
        } finally {
          if (Q) throw Q.error
        }
      }
      return this
    }, A.prototype.digest = function() {
      return (this.checksum ^ 4294967295) >>> 0
    }, A
  }();
  qn1.Crc32 = I52;
  var Tb6 = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918000, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117],
    Pb6 = Rb6.uint32ArrayFrom(Tb6),
    Sb6 = Q52();
  Object.defineProperty(qn1, "AwsCrc32", {
    enumerable: !0,
    get: function() {
      return Sb6.AwsCrc32
    }
  })
})
// @from(Start 5998891, End 6000425)
F52 = z((Gh8, J52) => {
  var {
    defineProperty: NX1,
    getOwnPropertyDescriptor: kb6,
    getOwnPropertyNames: xb6
  } = Object, fb6 = Object.prototype.hasOwnProperty, G52 = (A, B) => NX1(A, "name", {
    value: B,
    configurable: !0
  }), vb6 = (A, B) => {
    for (var Q in B) NX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, bb6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of xb6(B))
        if (!fb6.call(A, G) && G !== Q) NX1(A, G, {
          get: () => B[G],
          enumerable: !(I = kb6(B, G)) || I.enumerable
        })
    }
    return A
  }, gb6 = (A) => bb6(NX1({}, "__esModule", {
    value: !0
  }), A), Z52 = {};
  vb6(Z52, {
    fromHex: () => Y52,
    toHex: () => W52
  });
  J52.exports = gb6(Z52);
  var D52 = {},
    Mn1 = {};
  for (let A = 0; A < 256; A++) {
    let B = A.toString(16).toLowerCase();
    if (B.length === 1) B = `0${B}`;
    D52[A] = B, Mn1[B] = A
  }

  function Y52(A) {
    if (A.length % 2 !== 0) throw new Error("Hex encoded strings must have an even number length");
    let B = new Uint8Array(A.length / 2);
    for (let Q = 0; Q < A.length; Q += 2) {
      let I = A.slice(Q, Q + 2).toLowerCase();
      if (I in Mn1) B[Q / 2] = Mn1[I];
      else throw new Error(`Cannot decode unrecognized sequence ${I} as hexadecimal`)
    }
    return B
  }
  G52(Y52, "fromHex");

  function W52(A) {
    let B = "";
    for (let Q = 0; Q < A.byteLength; Q++) B += D52[A[Q]];
    return B
  }
  G52(W52, "toHex")
})
// @from(Start 6000431, End 6011118)
L52 = z((Zh8, M52) => {
  var {
    defineProperty: qX1,
    getOwnPropertyDescriptor: hb6,
    getOwnPropertyNames: mb6
  } = Object, db6 = Object.prototype.hasOwnProperty, W$ = (A, B) => qX1(A, "name", {
    value: B,
    configurable: !0
  }), ub6 = (A, B) => {
    for (var Q in B) qX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, pb6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of mb6(B))
        if (!db6.call(A, G) && G !== Q) qX1(A, G, {
          get: () => B[G],
          enumerable: !(I = hb6(B, G)) || I.enumerable
        })
    }
    return A
  }, cb6 = (A) => pb6(qX1({}, "__esModule", {
    value: !0
  }), A), V52 = {};
  ub6(V52, {
    EventStreamCodec: () => Ig6,
    HeaderMarshaller: () => H52,
    Int64: () => $X1,
    MessageDecoderStream: () => Gg6,
    MessageEncoderStream: () => Zg6,
    SmithyMessageDecoderStream: () => Dg6,
    SmithyMessageEncoderStream: () => Yg6
  });
  M52.exports = cb6(V52);
  var lb6 = UX1(),
    mj = F52(),
    C52 = class A {
      constructor(B) {
        if (this.bytes = B, B.byteLength !== 8) throw new Error("Int64 buffers must be exactly 8 bytes")
      }
      static fromNumber(B) {
        if (B > 9223372036854776000 || B < -9223372036854776000) throw new Error(`${B} is too large (or, if negative, too small) to represent as an Int64`);
        let Q = new Uint8Array(8);
        for (let I = 7, G = Math.abs(Math.round(B)); I > -1 && G > 0; I--, G /= 256) Q[I] = G;
        if (B < 0) Ln1(Q);
        return new A(Q)
      }
      valueOf() {
        let B = this.bytes.slice(0),
          Q = B[0] & 128;
        if (Q) Ln1(B);
        return parseInt(mj.toHex(B), 16) * (Q ? -1 : 1)
      }
      toString() {
        return String(this.valueOf())
      }
    };
  W$(C52, "Int64");
  var $X1 = C52;

  function Ln1(A) {
    for (let B = 0; B < 8; B++) A[B] ^= 255;
    for (let B = 7; B > -1; B--)
      if (A[B]++, A[B] !== 0) break
  }
  W$(Ln1, "negate");
  var K52 = class A {
    constructor(B, Q) {
      this.toUtf8 = B, this.fromUtf8 = Q
    }
    format(B) {
      let Q = [];
      for (let Z of Object.keys(B)) {
        let D = this.fromUtf8(Z);
        Q.push(Uint8Array.from([D.byteLength]), D, this.formatHeaderValue(B[Z]))
      }
      let I = new Uint8Array(Q.reduce((Z, D) => Z + D.byteLength, 0)),
        G = 0;
      for (let Z of Q) I.set(Z, G), G += Z.byteLength;
      return I
    }
    formatHeaderValue(B) {
      switch (B.type) {
        case "boolean":
          return Uint8Array.from([B.value ? 0 : 1]);
        case "byte":
          return Uint8Array.from([2, B.value]);
        case "short":
          let Q = new DataView(new ArrayBuffer(3));
          return Q.setUint8(0, 3), Q.setInt16(1, B.value, !1), new Uint8Array(Q.buffer);
        case "integer":
          let I = new DataView(new ArrayBuffer(5));
          return I.setUint8(0, 4), I.setInt32(1, B.value, !1), new Uint8Array(I.buffer);
        case "long":
          let G = new Uint8Array(9);
          return G[0] = 5, G.set(B.value.bytes, 1), G;
        case "binary":
          let Z = new DataView(new ArrayBuffer(3 + B.value.byteLength));
          Z.setUint8(0, 6), Z.setUint16(1, B.value.byteLength, !1);
          let D = new Uint8Array(Z.buffer);
          return D.set(B.value, 3), D;
        case "string":
          let Y = this.fromUtf8(B.value),
            W = new DataView(new ArrayBuffer(3 + Y.byteLength));
          W.setUint8(0, 7), W.setUint16(1, Y.byteLength, !1);
          let J = new Uint8Array(W.buffer);
          return J.set(Y, 3), J;
        case "timestamp":
          let F = new Uint8Array(9);
          return F[0] = 8, F.set($X1.fromNumber(B.value.valueOf()).bytes, 1), F;
        case "uuid":
          if (!Ag6.test(B.value)) throw new Error(`Invalid UUID received: ${B.value}`);
          let X = new Uint8Array(17);
          return X[0] = 9, X.set(mj.fromHex(B.value.replace(/\-/g, "")), 1), X
      }
    }
    parse(B) {
      let Q = {},
        I = 0;
      while (I < B.byteLength) {
        let G = B.getUint8(I++),
          Z = this.toUtf8(new Uint8Array(B.buffer, B.byteOffset + I, G));
        switch (I += G, B.getUint8(I++)) {
          case 0:
            Q[Z] = {
              type: X52,
              value: !0
            };
            break;
          case 1:
            Q[Z] = {
              type: X52,
              value: !1
            };
            break;
          case 2:
            Q[Z] = {
              type: ib6,
              value: B.getInt8(I++)
            };
            break;
          case 3:
            Q[Z] = {
              type: nb6,
              value: B.getInt16(I, !1)
            }, I += 2;
            break;
          case 4:
            Q[Z] = {
              type: ab6,
              value: B.getInt32(I, !1)
            }, I += 4;
            break;
          case 5:
            Q[Z] = {
              type: sb6,
              value: new $X1(new Uint8Array(B.buffer, B.byteOffset + I, 8))
            }, I += 8;
            break;
          case 6:
            let D = B.getUint16(I, !1);
            I += 2, Q[Z] = {
              type: rb6,
              value: new Uint8Array(B.buffer, B.byteOffset + I, D)
            }, I += D;
            break;
          case 7:
            let Y = B.getUint16(I, !1);
            I += 2, Q[Z] = {
              type: ob6,
              value: this.toUtf8(new Uint8Array(B.buffer, B.byteOffset + I, Y))
            }, I += Y;
            break;
          case 8:
            Q[Z] = {
              type: tb6,
              value: new Date(new $X1(new Uint8Array(B.buffer, B.byteOffset + I, 8)).valueOf())
            }, I += 8;
            break;
          case 9:
            let W = new Uint8Array(B.buffer, B.byteOffset + I, 16);
            I += 16, Q[Z] = {
              type: eb6,
              value: `${mj.toHex(W.subarray(0,4))}-${mj.toHex(W.subarray(4,6))}-${mj.toHex(W.subarray(6,8))}-${mj.toHex(W.subarray(8,10))}-${mj.toHex(W.subarray(10))}`
            };
            break;
          default:
            throw new Error("Unrecognized header type tag")
        }
      }
      return Q
    }
  };
  W$(K52, "HeaderMarshaller");
  var H52 = K52,
    X52 = "boolean",
    ib6 = "byte",
    nb6 = "short",
    ab6 = "integer",
    sb6 = "long",
    rb6 = "binary",
    ob6 = "string",
    tb6 = "timestamp",
    eb6 = "uuid",
    Ag6 = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/,
    Bg6 = UX1(),
    z52 = 4,
    QO = z52 * 2,
    dj = 4,
    Qg6 = QO + dj * 2;

  function w52({
    byteLength: A,
    byteOffset: B,
    buffer: Q
  }) {
    if (A < Qg6) throw new Error("Provided message too short to accommodate event stream message overhead");
    let I = new DataView(Q, B, A),
      G = I.getUint32(0, !1);
    if (A !== G) throw new Error("Reported message length does not match received message length");
    let Z = I.getUint32(z52, !1),
      D = I.getUint32(QO, !1),
      Y = I.getUint32(A - dj, !1),
      W = new Bg6.Crc32().update(new Uint8Array(Q, B, QO));
    if (D !== W.digest()) throw new Error(`The prelude checksum specified in the message (${D}) does not match the calculated CRC32 checksum (${W.digest()})`);
    if (W.update(new Uint8Array(Q, B + QO, A - (QO + dj))), Y !== W.digest()) throw new Error(`The message checksum (${W.digest()}) did not match the expected value of ${Y}`);
    return {
      headers: new DataView(Q, B + QO + dj, Z),
      body: new Uint8Array(Q, B + QO + dj + Z, G - Z - (QO + dj + dj))
    }
  }
  W$(w52, "splitMessage");
  var E52 = class A {
    constructor(B, Q) {
      this.headerMarshaller = new H52(B, Q), this.messageBuffer = [], this.isEndOfStream = !1
    }
    feed(B) {
      this.messageBuffer.push(this.decode(B))
    }
    endOfStream() {
      this.isEndOfStream = !0
    }
    getMessage() {
      let B = this.messageBuffer.pop(),
        Q = this.isEndOfStream;
      return {
        getMessage() {
          return B
        },
        isEndOfStream() {
          return Q
        }
      }
    }
    getAvailableMessages() {
      let B = this.messageBuffer;
      this.messageBuffer = [];
      let Q = this.isEndOfStream;
      return {
        getMessages() {
          return B
        },
        isEndOfStream() {
          return Q
        }
      }
    }
    encode({
      headers: B,
      body: Q
    }) {
      let I = this.headerMarshaller.format(B),
        G = I.byteLength + Q.byteLength + 16,
        Z = new Uint8Array(G),
        D = new DataView(Z.buffer, Z.byteOffset, Z.byteLength),
        Y = new lb6.Crc32;
      return D.setUint32(0, G, !1), D.setUint32(4, I.byteLength, !1), D.setUint32(8, Y.update(Z.subarray(0, 8)).digest(), !1), Z.set(I, 12), Z.set(Q, I.byteLength + 12), D.setUint32(G - 4, Y.update(Z.subarray(8, G - 4)).digest(), !1), Z
    }
    decode(B) {
      let {
        headers: Q,
        body: I
      } = w52(B);
      return {
        headers: this.headerMarshaller.parse(Q),
        body: I
      }
    }
    formatHeaders(B) {
      return this.headerMarshaller.format(B)
    }
  };
  W$(E52, "EventStreamCodec");
  var Ig6 = E52,
    U52 = class A {
      constructor(B) {
        this.options = B
      } [Symbol.asyncIterator]() {
        return this.asyncIterator()
      }
      async * asyncIterator() {
        for await (let B of this.options.inputStream) yield this.options.decoder.decode(B)
      }
    };
  W$(U52, "MessageDecoderStream");
  var Gg6 = U52,
    N52 = class A {
      constructor(B) {
        this.options = B
      } [Symbol.asyncIterator]() {
        return this.asyncIterator()
      }
      async * asyncIterator() {
        for await (let B of this.options.messageStream) yield this.options.encoder.encode(B);
        if (this.options.includeEndFrame) yield new Uint8Array(0)
      }
    };
  W$(N52, "MessageEncoderStream");
  var Zg6 = N52,
    $52 = class A {
      constructor(B) {
        this.options = B
      } [Symbol.asyncIterator]() {
        return this.asyncIterator()
      }
      async * asyncIterator() {
        for await (let B of this.options.messageStream) {
          let Q = await this.options.deserializer(B);
          if (Q === void 0) continue;
          yield Q
        }
      }
    };
  W$($52, "SmithyMessageDecoderStream");
  var Dg6 = $52,
    q52 = class A {
      constructor(B) {
        this.options = B
      } [Symbol.asyncIterator]() {
        return this.asyncIterator()
      }
      async * asyncIterator() {
        for await (let B of this.options.inputStream) yield this.options.serializer(B)
      }
    };
  W$(q52, "SmithyMessageEncoderStream");
  var Yg6 = q52
})
// @from(Start 6011124, End 6015100)
j52 = z((Dh8, _52) => {
  var {
    defineProperty: MX1,
    getOwnPropertyDescriptor: Wg6,
    getOwnPropertyNames: Jg6
  } = Object, Fg6 = Object.prototype.hasOwnProperty, Id = (A, B) => MX1(A, "name", {
    value: B,
    configurable: !0
  }), Xg6 = (A, B) => {
    for (var Q in B) MX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Vg6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Jg6(B))
        if (!Fg6.call(A, G) && G !== Q) MX1(A, G, {
          get: () => B[G],
          enumerable: !(I = Wg6(B, G)) || I.enumerable
        })
    }
    return A
  }, Cg6 = (A) => Vg6(MX1({}, "__esModule", {
    value: !0
  }), A), R52 = {};
  Xg6(R52, {
    EventStreamMarshaller: () => S52,
    eventStreamSerdeProvider: () => Kg6
  });
  _52.exports = Cg6(R52);
  var at = L52();

  function O52(A) {
    let B = 0,
      Q = 0,
      I = null,
      G = null,
      Z = Id((Y) => {
        if (typeof Y !== "number") throw new Error("Attempted to allocate an event message where size was not a number: " + Y);
        B = Y, Q = 4, I = new Uint8Array(Y), new DataView(I.buffer).setUint32(0, Y, !1)
      }, "allocateMessage"),
      D = Id(async function*() {
        let Y = A[Symbol.asyncIterator]();
        while (!0) {
          let {
            value: W,
            done: J
          } = await Y.next();
          if (J) {
            if (!B) return;
            else if (B === Q) yield I;
            else throw new Error("Truncated event message received.");
            return
          }
          let F = W.length,
            X = 0;
          while (X < F) {
            if (!I) {
              let C = F - X;
              if (!G) G = new Uint8Array(4);
              let K = Math.min(4 - Q, C);
              if (G.set(W.slice(X, X + K), Q), Q += K, X += K, Q < 4) break;
              Z(new DataView(G.buffer).getUint32(0, !1)), G = null
            }
            let V = Math.min(B - Q, F - X);
            if (I.set(W.slice(X, X + V), Q), Q += V, X += V, B && B === Q) yield I, I = null, B = 0, Q = 0
          }
        }
      }, "iterator");
    return {
      [Symbol.asyncIterator]: D
    }
  }
  Id(O52, "getChunkedStream");

  function T52(A, B) {
    return async function(Q) {
      let {
        value: I
      } = Q.headers[":message-type"];
      if (I === "error") {
        let G = new Error(Q.headers[":error-message"].value || "UnknownError");
        throw G.name = Q.headers[":error-code"].value, G
      } else if (I === "exception") {
        let G = Q.headers[":exception-type"].value,
          Z = {
            [G]: Q
          },
          D = await A(Z);
        if (D.$unknown) {
          let Y = new Error(B(Q.body));
          throw Y.name = G, Y
        }
        throw D[G]
      } else if (I === "event") {
        let G = {
            [Q.headers[":event-type"].value]: Q
          },
          Z = await A(G);
        if (Z.$unknown) return;
        return Z
      } else throw Error(`Unrecognizable event type: ${Q.headers[":event-type"].value}`)
    }
  }
  Id(T52, "getMessageUnmarshaller");
  var P52 = class A {
    constructor({
      utf8Encoder: B,
      utf8Decoder: Q
    }) {
      this.eventStreamCodec = new at.EventStreamCodec(B, Q), this.utfEncoder = B
    }
    deserialize(B, Q) {
      let I = O52(B);
      return new at.SmithyMessageDecoderStream({
        messageStream: new at.MessageDecoderStream({
          inputStream: I,
          decoder: this.eventStreamCodec
        }),
        deserializer: T52(Q, this.utfEncoder)
      })
    }
    serialize(B, Q) {
      return new at.MessageEncoderStream({
        messageStream: new at.SmithyMessageEncoderStream({
          inputStream: B,
          serializer: Q
        }),
        encoder: this.eventStreamCodec,
        includeEndFrame: !0
      })
    }
  };
  Id(P52, "EventStreamMarshaller");
  var S52 = P52,
    Kg6 = Id((A) => new S52(A), "eventStreamSerdeProvider")
})
// @from(Start 6015106, End 6017015)
b52 = z((Yh8, v52) => {
  var {
    defineProperty: LX1,
    getOwnPropertyDescriptor: Hg6,
    getOwnPropertyNames: zg6
  } = Object, wg6 = Object.prototype.hasOwnProperty, Rn1 = (A, B) => LX1(A, "name", {
    value: B,
    configurable: !0
  }), Eg6 = (A, B) => {
    for (var Q in B) LX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Ug6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of zg6(B))
        if (!wg6.call(A, G) && G !== Q) LX1(A, G, {
          get: () => B[G],
          enumerable: !(I = Hg6(B, G)) || I.enumerable
        })
    }
    return A
  }, Ng6 = (A) => Ug6(LX1({}, "__esModule", {
    value: !0
  }), A), y52 = {};
  Eg6(y52, {
    EventStreamMarshaller: () => f52,
    eventStreamSerdeProvider: () => Mg6
  });
  v52.exports = Ng6(y52);
  var $g6 = j52(),
    qg6 = Z1("stream");
  async function* k52(A) {
    let B = !1,
      Q = !1,
      I = new Array;
    A.on("error", (G) => {
      if (!B) B = !0;
      if (G) throw G
    }), A.on("data", (G) => {
      I.push(G)
    }), A.on("end", () => {
      B = !0
    });
    while (!Q) {
      let G = await new Promise((Z) => setTimeout(() => Z(I.shift()), 0));
      if (G) yield G;
      Q = B && I.length === 0
    }
  }
  Rn1(k52, "readabletoIterable");
  var x52 = class A {
    constructor({
      utf8Encoder: B,
      utf8Decoder: Q
    }) {
      this.universalMarshaller = new $g6.EventStreamMarshaller({
        utf8Decoder: Q,
        utf8Encoder: B
      })
    }
    deserialize(B, Q) {
      let I = typeof B[Symbol.asyncIterator] === "function" ? B : k52(B);
      return this.universalMarshaller.deserialize(I, Q)
    }
    serialize(B, Q) {
      return qg6.Readable.from(this.universalMarshaller.serialize(B, Q))
    }
  };
  Rn1(x52, "EventStreamMarshaller");
  var f52 = x52,
    Mg6 = Rn1((A) => new f52(A), "eventStreamSerdeProvider")
})
// @from(Start 6017021, End 6017974)
m52 = z((Wh8, h52) => {
  var {
    defineProperty: RX1,
    getOwnPropertyDescriptor: Lg6,
    getOwnPropertyNames: Rg6
  } = Object, Og6 = Object.prototype.hasOwnProperty, Tg6 = (A, B) => RX1(A, "name", {
    value: B,
    configurable: !0
  }), Pg6 = (A, B) => {
    for (var Q in B) RX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Sg6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Rg6(B))
        if (!Og6.call(A, G) && G !== Q) RX1(A, G, {
          get: () => B[G],
          enumerable: !(I = Lg6(B, G)) || I.enumerable
        })
    }
    return A
  }, _g6 = (A) => Sg6(RX1({}, "__esModule", {
    value: !0
  }), A), g52 = {};
  Pg6(g52, {
    isArrayBuffer: () => jg6
  });
  h52.exports = _g6(g52);
  var jg6 = Tg6((A) => typeof ArrayBuffer === "function" && A instanceof ArrayBuffer || Object.prototype.toString.call(A) === "[object ArrayBuffer]", "isArrayBuffer")
})
// @from(Start 6017980, End 6019329)
TX1 = z((Jh8, p52) => {
  var {
    defineProperty: OX1,
    getOwnPropertyDescriptor: yg6,
    getOwnPropertyNames: kg6
  } = Object, xg6 = Object.prototype.hasOwnProperty, d52 = (A, B) => OX1(A, "name", {
    value: B,
    configurable: !0
  }), fg6 = (A, B) => {
    for (var Q in B) OX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, vg6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of kg6(B))
        if (!xg6.call(A, G) && G !== Q) OX1(A, G, {
          get: () => B[G],
          enumerable: !(I = yg6(B, G)) || I.enumerable
        })
    }
    return A
  }, bg6 = (A) => vg6(OX1({}, "__esModule", {
    value: !0
  }), A), u52 = {};
  fg6(u52, {
    fromArrayBuffer: () => hg6,
    fromString: () => mg6
  });
  p52.exports = bg6(u52);
  var gg6 = m52(),
    On1 = Z1("buffer"),
    hg6 = d52((A, B = 0, Q = A.byteLength - B) => {
      if (!gg6.isArrayBuffer(A)) throw new TypeError(`The "input" argument must be ArrayBuffer. Received type ${typeof A} (${A})`);
      return On1.Buffer.from(A, B, Q)
    }, "fromArrayBuffer"),
    mg6 = d52((A, B) => {
      if (typeof A !== "string") throw new TypeError(`The "input" argument must be of type string. Received type ${typeof A} (${A})`);
      return B ? On1.Buffer.from(A, B) : On1.Buffer.from(A)
    }, "fromString")
})
// @from(Start 6019335, End 6019826)
i52 = z((c52) => {
  Object.defineProperty(c52, "__esModule", {
    value: !0
  });
  c52.fromBase64 = void 0;
  var dg6 = TX1(),
    ug6 = /^[A-Za-z0-9+/]*={0,2}$/,
    pg6 = (A) => {
      if (A.length * 3 % 4 !== 0) throw new TypeError("Incorrect padding on base64 string.");
      if (!ug6.exec(A)) throw new TypeError("Invalid base64 string.");
      let B = dg6.fromString(A, "base64");
      return new Uint8Array(B.buffer, B.byteOffset, B.byteLength)
    };
  c52.fromBase64 = pg6
})
// @from(Start 6019832, End 6021489)
o52 = z((Xh8, r52) => {
  var {
    defineProperty: PX1,
    getOwnPropertyDescriptor: cg6,
    getOwnPropertyNames: lg6
  } = Object, ig6 = Object.prototype.hasOwnProperty, Tn1 = (A, B) => PX1(A, "name", {
    value: B,
    configurable: !0
  }), ng6 = (A, B) => {
    for (var Q in B) PX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, ag6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of lg6(B))
        if (!ig6.call(A, G) && G !== Q) PX1(A, G, {
          get: () => B[G],
          enumerable: !(I = cg6(B, G)) || I.enumerable
        })
    }
    return A
  }, sg6 = (A) => ag6(PX1({}, "__esModule", {
    value: !0
  }), A), n52 = {};
  ng6(n52, {
    fromUtf8: () => s52,
    toUint8Array: () => rg6,
    toUtf8: () => og6
  });
  r52.exports = sg6(n52);
  var a52 = TX1(),
    s52 = Tn1((A) => {
      let B = a52.fromString(A, "utf8");
      return new Uint8Array(B.buffer, B.byteOffset, B.byteLength / Uint8Array.BYTES_PER_ELEMENT)
    }, "fromUtf8"),
    rg6 = Tn1((A) => {
      if (typeof A === "string") return s52(A);
      if (ArrayBuffer.isView(A)) return new Uint8Array(A.buffer, A.byteOffset, A.byteLength / Uint8Array.BYTES_PER_ELEMENT);
      return new Uint8Array(A)
    }, "toUint8Array"),
    og6 = Tn1((A) => {
      if (typeof A === "string") return A;
      if (typeof A !== "object" || typeof A.byteOffset !== "number" || typeof A.byteLength !== "number") throw new Error("@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.");
      return a52.fromArrayBuffer(A.buffer, A.byteOffset, A.byteLength).toString("utf8")
    }, "toUtf8")
})
// @from(Start 6021495, End 6022070)
A82 = z((t52) => {
  Object.defineProperty(t52, "__esModule", {
    value: !0
  });
  t52.toBase64 = void 0;
  var tg6 = TX1(),
    eg6 = o52(),
    Ah6 = (A) => {
      let B;
      if (typeof A === "string") B = eg6.fromUtf8(A);
      else B = A;
      if (typeof B !== "object" || typeof B.byteOffset !== "number" || typeof B.byteLength !== "number") throw new Error("@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.");
      return tg6.fromArrayBuffer(B.buffer, B.byteOffset, B.byteLength).toString("base64")
    };
  t52.toBase64 = Ah6
})
// @from(Start 6022076, End 6022772)
_X1 = z((Ch8, SX1) => {
  var {
    defineProperty: B82,
    getOwnPropertyDescriptor: Bh6,
    getOwnPropertyNames: Qh6
  } = Object, Ih6 = Object.prototype.hasOwnProperty, Pn1 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Qh6(B))
        if (!Ih6.call(A, G) && G !== Q) B82(A, G, {
          get: () => B[G],
          enumerable: !(I = Bh6(B, G)) || I.enumerable
        })
    }
    return A
  }, Q82 = (A, B, Q) => (Pn1(A, B, "default"), Q && Pn1(Q, B, "default")), Gh6 = (A) => Pn1(B82({}, "__esModule", {
    value: !0
  }), A), Sn1 = {};
  SX1.exports = Gh6(Sn1);
  Q82(Sn1, i52(), SX1.exports);
  Q82(Sn1, A82(), SX1.exports)
})
// @from(Start 6022778, End 6023831)
D82 = z((Kh8, Z82) => {
  var {
    defineProperty: jX1,
    getOwnPropertyDescriptor: Zh6,
    getOwnPropertyNames: Dh6
  } = Object, Yh6 = Object.prototype.hasOwnProperty, _n1 = (A, B) => jX1(A, "name", {
    value: B,
    configurable: !0
  }), Wh6 = (A, B) => {
    for (var Q in B) jX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Jh6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Dh6(B))
        if (!Yh6.call(A, G) && G !== Q) jX1(A, G, {
          get: () => B[G],
          enumerable: !(I = Zh6(B, G)) || I.enumerable
        })
    }
    return A
  }, Fh6 = (A) => Jh6(jX1({}, "__esModule", {
    value: !0
  }), A), I82 = {};
  Wh6(I82, {
    escapeUri: () => G82,
    escapeUriPath: () => Vh6
  });
  Z82.exports = Fh6(I82);
  var G82 = _n1((A) => encodeURIComponent(A).replace(/[!'()*]/g, Xh6), "escapeUri"),
    Xh6 = _n1((A) => `%${A.charCodeAt(0).toString(16).toUpperCase()}`, "hexEncode"),
    Vh6 = _n1((A) => A.split("/").map(G82).join("/"), "escapeUriPath")
})
// @from(Start 6023837, End 6025075)
yn1 = z((Hh8, J82) => {
  var {
    defineProperty: yX1,
    getOwnPropertyDescriptor: Ch6,
    getOwnPropertyNames: Kh6
  } = Object, Hh6 = Object.prototype.hasOwnProperty, zh6 = (A, B) => yX1(A, "name", {
    value: B,
    configurable: !0
  }), wh6 = (A, B) => {
    for (var Q in B) yX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Eh6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Kh6(B))
        if (!Hh6.call(A, G) && G !== Q) yX1(A, G, {
          get: () => B[G],
          enumerable: !(I = Ch6(B, G)) || I.enumerable
        })
    }
    return A
  }, Uh6 = (A) => Eh6(yX1({}, "__esModule", {
    value: !0
  }), A), Y82 = {};
  wh6(Y82, {
    buildQueryString: () => W82
  });
  J82.exports = Uh6(Y82);
  var jn1 = D82();

  function W82(A) {
    let B = [];
    for (let Q of Object.keys(A).sort()) {
      let I = A[Q];
      if (Q = jn1.escapeUri(Q), Array.isArray(I))
        for (let G = 0, Z = I.length; G < Z; G++) B.push(`${Q}=${jn1.escapeUri(I[G])}`);
      else {
        let G = Q;
        if (I || typeof I === "string") G += `=${jn1.escapeUri(I)}`;
        B.push(G)
      }
    }
    return B.join("&")
  }
  zh6(W82, "buildQueryString")
})
// @from(Start 6025081, End 6030185)
U82 = z((zh8, E82) => {
  var {
    defineProperty: kX1,
    getOwnPropertyDescriptor: Nh6,
    getOwnPropertyNames: $h6
  } = Object, qh6 = Object.prototype.hasOwnProperty, Gd = (A, B) => kX1(A, "name", {
    value: B,
    configurable: !0
  }), Mh6 = (A, B) => {
    for (var Q in B) kX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Lh6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of $h6(B))
        if (!qh6.call(A, G) && G !== Q) kX1(A, G, {
          get: () => B[G],
          enumerable: !(I = Nh6(B, G)) || I.enumerable
        })
    }
    return A
  }, Rh6 = (A) => Lh6(kX1({}, "__esModule", {
    value: !0
  }), A), X82 = {};
  Mh6(X82, {
    FetchHttpHandler: () => Th6,
    keepAliveSupport: () => C82,
    streamCollector: () => Sh6
  });
  E82.exports = Rh6(X82);
  var F82 = VX1(),
    Oh6 = yn1();

  function V82(A = 0) {
    return new Promise((B, Q) => {
      if (A) setTimeout(() => {
        let I = new Error(`Request did not complete within ${A} ms`);
        I.name = "TimeoutError", Q(I)
      }, A)
    })
  }
  Gd(V82, "requestTimeout");
  var C82 = {
      supported: Boolean(typeof Request !== "undefined" && "keepalive" in new Request("https://[::1]"))
    },
    K82 = class A {
      static create(B) {
        if (typeof(B == null ? void 0 : B.handle) === "function") return B;
        return new A(B)
      }
      constructor(B) {
        if (typeof B === "function") this.configProvider = B().then((Q) => Q || {});
        else this.config = B ?? {}, this.configProvider = Promise.resolve(this.config)
      }
      destroy() {}
      async handle(B, {
        abortSignal: Q
      } = {}) {
        if (!this.config) this.config = await this.configProvider;
        let I = this.config.requestTimeout,
          G = this.config.keepAlive === !0;
        if (Q == null ? void 0 : Q.aborted) {
          let E = new Error("Request aborted");
          return E.name = "AbortError", Promise.reject(E)
        }
        let Z = B.path,
          D = Oh6.buildQueryString(B.query || {});
        if (D) Z += `?${D}`;
        if (B.fragment) Z += `#${B.fragment}`;
        let Y = "";
        if (B.username != null || B.password != null) {
          let E = B.username ?? "",
            N = B.password ?? "";
          Y = `${E}:${N}@`
        }
        let {
          port: W,
          method: J
        } = B, F = `${B.protocol}//${Y}${B.hostname}${W?`:${W}`:""}${Z}`, V = {
          body: J === "GET" || J === "HEAD" ? void 0 : B.body,
          headers: new Headers(B.headers),
          method: J
        };
        if (typeof AbortController !== "undefined") V.signal = Q;
        if (C82.supported) V.keepalive = G;
        let C = new Request(F, V),
          K = [fetch(C).then((E) => {
            let N = E.headers,
              q = {};
            for (let R of N.entries()) q[R[0]] = R[1];
            if (E.body == null) return E.blob().then((R) => ({
              response: new F82.HttpResponse({
                headers: q,
                reason: E.statusText,
                statusCode: E.status,
                body: R
              })
            }));
            return {
              response: new F82.HttpResponse({
                headers: q,
                reason: E.statusText,
                statusCode: E.status,
                body: E.body
              })
            }
          }), V82(I)];
        if (Q) K.push(new Promise((E, N) => {
          Q.onabort = () => {
            let q = new Error("Request aborted");
            q.name = "AbortError", N(q)
          }
        }));
        return Promise.race(K)
      }
      updateHttpClientConfig(B, Q) {
        this.config = void 0, this.configProvider = this.configProvider.then((I) => {
          return I[B] = Q, I
        })
      }
      httpHandlerConfigs() {
        return this.config ?? {}
      }
    };
  Gd(K82, "FetchHttpHandler");
  var Th6 = K82,
    Ph6 = _X1(),
    Sh6 = Gd((A) => {
      if (typeof Blob === "function" && A instanceof Blob) return H82(A);
      return z82(A)
    }, "streamCollector");
  async function H82(A) {
    let B = await w82(A),
      Q = Ph6.fromBase64(B);
    return new Uint8Array(Q)
  }
  Gd(H82, "collectBlob");
  async function z82(A) {
    let B = new Uint8Array(0),
      Q = A.getReader(),
      I = !1;
    while (!I) {
      let {
        done: G,
        value: Z
      } = await Q.read();
      if (Z) {
        let D = B;
        B = new Uint8Array(D.length + Z.length), B.set(D), B.set(Z, D.length)
      }
      I = G
    }
    return B
  }
  Gd(z82, "collectStream");

  function w82(A) {
    return new Promise((B, Q) => {
      let I = new FileReader;
      I.onloadend = () => {
        if (I.readyState !== 2) return Q(new Error("Reader aborted too early"));
        let G = I.result ?? "",
          Z = G.indexOf(","),
          D = Z > -1 ? Z + 1 : G.length;
        B(G.substring(D))
      }, I.onabort = () => Q(new Error("Read aborted")), I.onerror = () => Q(I.error), I.readAsDataURL(A)
    })
  }
  Gd(w82, "readToBase64")
})
// @from(Start 6030191, End 6038310)
L82 = z((wh8, M82) => {
  var {
    defineProperty: xX1,
    getOwnPropertyDescriptor: _h6,
    getOwnPropertyNames: jh6
  } = Object, yh6 = Object.prototype.hasOwnProperty, tX = (A, B) => xX1(A, "name", {
    value: B,
    configurable: !0
  }), kh6 = (A, B) => {
    for (var Q in B) xX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, xh6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of jh6(B))
        if (!yh6.call(A, G) && G !== Q) xX1(A, G, {
          get: () => B[G],
          enumerable: !(I = _h6(B, G)) || I.enumerable
        })
    }
    return A
  }, fh6 = (A) => xh6(xX1({}, "__esModule", {
    value: !0
  }), A), q82 = {};
  kh6(q82, {
    constructStack: () => kn1
  });
  M82.exports = fh6(q82);
  var uj = tX((A, B) => {
      let Q = [];
      if (A) Q.push(A);
      if (B)
        for (let I of B) Q.push(I);
      return Q
    }, "getAllAliases"),
    IO = tX((A, B) => {
      return `${A||"anonymous"}${B&&B.length>0?` (a.k.a. ${B.join(",")})`:""}`
    }, "getMiddlewareNameWithAliases"),
    kn1 = tX(() => {
      let A = [],
        B = [],
        Q = !1,
        I = new Set,
        G = tX((X) => X.sort((V, C) => N82[C.step] - N82[V.step] || $82[C.priority || "normal"] - $82[V.priority || "normal"]), "sort"),
        Z = tX((X) => {
          let V = !1,
            C = tX((K) => {
              let E = uj(K.name, K.aliases);
              if (E.includes(X)) {
                V = !0;
                for (let N of E) I.delete(N);
                return !1
              }
              return !0
            }, "filterCb");
          return A = A.filter(C), B = B.filter(C), V
        }, "removeByName"),
        D = tX((X) => {
          let V = !1,
            C = tX((K) => {
              if (K.middleware === X) {
                V = !0;
                for (let E of uj(K.name, K.aliases)) I.delete(E);
                return !1
              }
              return !0
            }, "filterCb");
          return A = A.filter(C), B = B.filter(C), V
        }, "removeByReference"),
        Y = tX((X) => {
          var V;
          return A.forEach((C) => {
            X.add(C.middleware, {
              ...C
            })
          }), B.forEach((C) => {
            X.addRelativeTo(C.middleware, {
              ...C
            })
          }), (V = X.identifyOnResolve) == null || V.call(X, F.identifyOnResolve()), X
        }, "cloneTo"),
        W = tX((X) => {
          let V = [];
          return X.before.forEach((C) => {
            if (C.before.length === 0 && C.after.length === 0) V.push(C);
            else V.push(...W(C))
          }), V.push(X), X.after.reverse().forEach((C) => {
            if (C.before.length === 0 && C.after.length === 0) V.push(C);
            else V.push(...W(C))
          }), V
        }, "expandRelativeMiddlewareList"),
        J = tX((X = !1) => {
          let V = [],
            C = [],
            K = {};
          return A.forEach((N) => {
            let q = {
              ...N,
              before: [],
              after: []
            };
            for (let O of uj(q.name, q.aliases)) K[O] = q;
            V.push(q)
          }), B.forEach((N) => {
            let q = {
              ...N,
              before: [],
              after: []
            };
            for (let O of uj(q.name, q.aliases)) K[O] = q;
            C.push(q)
          }), C.forEach((N) => {
            if (N.toMiddleware) {
              let q = K[N.toMiddleware];
              if (q === void 0) {
                if (X) return;
                throw new Error(`${N.toMiddleware} is not found when adding ${IO(N.name,N.aliases)} middleware ${N.relation} ${N.toMiddleware}`)
              }
              if (N.relation === "after") q.after.push(N);
              if (N.relation === "before") q.before.push(N)
            }
          }), G(V).map(W).reduce((N, q) => {
            return N.push(...q), N
          }, [])
        }, "getMiddlewareList"),
        F = {
          add: (X, V = {}) => {
            let {
              name: C,
              override: K,
              aliases: E
            } = V, N = {
              step: "initialize",
              priority: "normal",
              middleware: X,
              ...V
            }, q = uj(C, E);
            if (q.length > 0) {
              if (q.some((O) => I.has(O))) {
                if (!K) throw new Error(`Duplicate middleware name '${IO(C,E)}'`);
                for (let O of q) {
                  let R = A.findIndex((L) => {
                    var _;
                    return L.name === O || ((_ = L.aliases) == null ? void 0 : _.some((k) => k === O))
                  });
                  if (R === -1) continue;
                  let T = A[R];
                  if (T.step !== N.step || N.priority !== T.priority) throw new Error(`"${IO(T.name,T.aliases)}" middleware with ${T.priority} priority in ${T.step} step cannot be overridden by "${IO(C,E)}" middleware with ${N.priority} priority in ${N.step} step.`);
                  A.splice(R, 1)
                }
              }
              for (let O of q) I.add(O)
            }
            A.push(N)
          },
          addRelativeTo: (X, V) => {
            let {
              name: C,
              override: K,
              aliases: E
            } = V, N = {
              middleware: X,
              ...V
            }, q = uj(C, E);
            if (q.length > 0) {
              if (q.some((O) => I.has(O))) {
                if (!K) throw new Error(`Duplicate middleware name '${IO(C,E)}'`);
                for (let O of q) {
                  let R = B.findIndex((L) => {
                    var _;
                    return L.name === O || ((_ = L.aliases) == null ? void 0 : _.some((k) => k === O))
                  });
                  if (R === -1) continue;
                  let T = B[R];
                  if (T.toMiddleware !== N.toMiddleware || T.relation !== N.relation) throw new Error(`"${IO(T.name,T.aliases)}" middleware ${T.relation} "${T.toMiddleware}" middleware cannot be overridden by "${IO(C,E)}" middleware ${N.relation} "${N.toMiddleware}" middleware.`);
                  B.splice(R, 1)
                }
              }
              for (let O of q) I.add(O)
            }
            B.push(N)
          },
          clone: () => Y(kn1()),
          use: (X) => {
            X.applyToStack(F)
          },
          remove: (X) => {
            if (typeof X === "string") return Z(X);
            else return D(X)
          },
          removeByTag: (X) => {
            let V = !1,
              C = tX((K) => {
                let {
                  tags: E,
                  name: N,
                  aliases: q
                } = K;
                if (E && E.includes(X)) {
                  let O = uj(N, q);
                  for (let R of O) I.delete(R);
                  return V = !0, !1
                }
                return !0
              }, "filterCb");
            return A = A.filter(C), B = B.filter(C), V
          },
          concat: (X) => {
            var V;
            let C = Y(kn1());
            return C.use(X), C.identifyOnResolve(Q || C.identifyOnResolve() || (((V = X.identifyOnResolve) == null ? void 0 : V.call(X)) ?? !1)), C
          },
          applyToStack: Y,
          identify: () => {
            return J(!0).map((X) => {
              let V = X.step ?? X.relation + " " + X.toMiddleware;
              return IO(X.name, X.aliases) + " - " + V
            })
          },
          identifyOnResolve(X) {
            if (typeof X === "boolean") Q = X;
            return Q
          },
          resolve: (X, V) => {
            for (let C of J().map((K) => K.middleware).reverse()) X = C(X, V);
            if (Q) console.log(F.identify());
            return X
          }
        };
      return F
    }, "constructStack"),
    N82 = {
      initialize: 5,
      serialize: 4,
      build: 3,
      finalizeRequest: 2,
      deserialize: 1
    },
    $82 = {
      high: 3,
      normal: 2,
      low: 1
    }
})
// @from(Start 6038316, End 6039269)
T82 = z((Eh8, O82) => {
  var {
    defineProperty: fX1,
    getOwnPropertyDescriptor: vh6,
    getOwnPropertyNames: bh6
  } = Object, gh6 = Object.prototype.hasOwnProperty, hh6 = (A, B) => fX1(A, "name", {
    value: B,
    configurable: !0
  }), mh6 = (A, B) => {
    for (var Q in B) fX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, dh6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of bh6(B))
        if (!gh6.call(A, G) && G !== Q) fX1(A, G, {
          get: () => B[G],
          enumerable: !(I = vh6(B, G)) || I.enumerable
        })
    }
    return A
  }, uh6 = (A) => dh6(fX1({}, "__esModule", {
    value: !0
  }), A), R82 = {};
  mh6(R82, {
    isArrayBuffer: () => ph6
  });
  O82.exports = uh6(R82);
  var ph6 = hh6((A) => typeof ArrayBuffer === "function" && A instanceof ArrayBuffer || Object.prototype.toString.call(A) === "[object ArrayBuffer]", "isArrayBuffer")
})
// @from(Start 6039275, End 6040624)
fn1 = z((Uh8, _82) => {
  var {
    defineProperty: vX1,
    getOwnPropertyDescriptor: ch6,
    getOwnPropertyNames: lh6
  } = Object, ih6 = Object.prototype.hasOwnProperty, P82 = (A, B) => vX1(A, "name", {
    value: B,
    configurable: !0
  }), nh6 = (A, B) => {
    for (var Q in B) vX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, ah6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of lh6(B))
        if (!ih6.call(A, G) && G !== Q) vX1(A, G, {
          get: () => B[G],
          enumerable: !(I = ch6(B, G)) || I.enumerable
        })
    }
    return A
  }, sh6 = (A) => ah6(vX1({}, "__esModule", {
    value: !0
  }), A), S82 = {};
  nh6(S82, {
    fromArrayBuffer: () => oh6,
    fromString: () => th6
  });
  _82.exports = sh6(S82);
  var rh6 = T82(),
    xn1 = Z1("buffer"),
    oh6 = P82((A, B = 0, Q = A.byteLength - B) => {
      if (!rh6.isArrayBuffer(A)) throw new TypeError(`The "input" argument must be ArrayBuffer. Received type ${typeof A} (${A})`);
      return xn1.Buffer.from(A, B, Q)
    }, "fromArrayBuffer"),
    th6 = P82((A, B) => {
      if (typeof A !== "string") throw new TypeError(`The "input" argument must be of type string. Received type ${typeof A} (${A})`);
      return B ? xn1.Buffer.from(A, B) : xn1.Buffer.from(A)
    }, "fromString")
})
// @from(Start 6040630, End 6042287)
f82 = z((Nh8, x82) => {
  var {
    defineProperty: bX1,
    getOwnPropertyDescriptor: eh6,
    getOwnPropertyNames: Am6
  } = Object, Bm6 = Object.prototype.hasOwnProperty, vn1 = (A, B) => bX1(A, "name", {
    value: B,
    configurable: !0
  }), Qm6 = (A, B) => {
    for (var Q in B) bX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, Im6 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Am6(B))
        if (!Bm6.call(A, G) && G !== Q) bX1(A, G, {
          get: () => B[G],
          enumerable: !(I = eh6(B, G)) || I.enumerable
        })
    }
    return A
  }, Gm6 = (A) => Im6(bX1({}, "__esModule", {
    value: !0
  }), A), j82 = {};
  Qm6(j82, {
    fromUtf8: () => k82,
    toUint8Array: () => Zm6,
    toUtf8: () => Dm6
  });
  x82.exports = Gm6(j82);
  var y82 = fn1(),
    k82 = vn1((A) => {
      let B = y82.fromString(A, "utf8");
      return new Uint8Array(B.buffer, B.byteOffset, B.byteLength / Uint8Array.BYTES_PER_ELEMENT)
    }, "fromUtf8"),
    Zm6 = vn1((A) => {
      if (typeof A === "string") return k82(A);
      if (ArrayBuffer.isView(A)) return new Uint8Array(A.buffer, A.byteOffset, A.byteLength / Uint8Array.BYTES_PER_ELEMENT);
      return new Uint8Array(A)
    }, "toUint8Array"),
    Dm6 = vn1((A) => {
      if (typeof A === "string") return A;
      if (typeof A !== "object" || typeof A.byteOffset !== "number" || typeof A.byteLength !== "number") throw new Error("@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.");
      return y82.fromArrayBuffer(A.buffer, A.byteOffset, A.byteLength).toString("utf8")
    }, "toUtf8")
})
// @from(Start 6042293, End 6043153)
g82 = z((v82) => {
  Object.defineProperty(v82, "__esModule", {
    value: !0
  });
  v82.getAwsChunkedEncodingStream = void 0;
  var Ym6 = Z1("stream"),
    Wm6 = (A, B) => {
      let {
        base64Encoder: Q,
        bodyLengthChecker: I,
        checksumAlgorithmFn: G,
        checksumLocationName: Z,
        streamHasher: D
      } = B, Y = Q !== void 0 && G !== void 0 && Z !== void 0 && D !== void 0, W = Y ? D(G, A) : void 0, J = new Ym6.Readable({
        read: () => {}
      });
      return A.on("data", (F) => {
        let X = I(F) || 0;
        J.push(`${X.toString(16)}\r
`), J.push(F), J.push(`\r
`)
      }), A.on("end", async () => {
        if (J.push(`0\r
`), Y) {
          let F = Q(await W);
          J.push(`${Z}:${F}\r
`), J.push(`\r
`)
        }
        J.push(null)
      }), J
    };
  v82.getAwsChunkedEncodingStream = Wm6
})
// @from(Start 6043159, End 6059824)
AB2 = z((qh8, e82) => {
  var {
    create: Jm6,
    defineProperty: st,
    getOwnPropertyDescriptor: Fm6,
    getOwnPropertyNames: Xm6,
    getPrototypeOf: Vm6
  } = Object, Cm6 = Object.prototype.hasOwnProperty, jI = (A, B) => st(A, "name", {
    value: B,
    configurable: !0
  }), Km6 = (A, B) => {
    for (var Q in B) st(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, d82 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of Xm6(B))
        if (!Cm6.call(A, G) && G !== Q) st(A, G, {
          get: () => B[G],
          enumerable: !(I = Fm6(B, G)) || I.enumerable
        })
    }
    return A
  }, Hm6 = (A, B, Q) => (Q = A != null ? Jm6(Vm6(A)) : {}, d82(B || !A || !A.__esModule ? st(Q, "default", {
    value: A,
    enumerable: !0
  }) : Q, A)), zm6 = (A) => d82(st({}, "__esModule", {
    value: !0
  }), A), u82 = {};
  Km6(u82, {
    DEFAULT_REQUEST_TIMEOUT: () => $m6,
    NodeHttp2Handler: () => Om6,
    NodeHttpHandler: () => qm6,
    streamCollector: () => Pm6
  });
  e82.exports = zm6(u82);
  var p82 = VX1(),
    c82 = yn1(),
    bn1 = Z1("http"),
    gn1 = Z1("https"),
    wm6 = ["ECONNRESET", "EPIPE", "ETIMEDOUT"],
    l82 = jI((A) => {
      let B = {};
      for (let Q of Object.keys(A)) {
        let I = A[Q];
        B[Q] = Array.isArray(I) ? I.join(",") : I
      }
      return B
    }, "getTransformedHeaders"),
    Em6 = jI((A, B, Q = 0) => {
      if (!Q) return;
      let I = setTimeout(() => {
        A.destroy(), B(Object.assign(new Error(`Socket timed out without establishing a connection within ${Q} ms`), {
          name: "TimeoutError"
        }))
      }, Q);
      A.on("socket", (G) => {
        if (G.connecting) G.on("connect", () => {
          clearTimeout(I)
        });
        else clearTimeout(I)
      })
    }, "setConnectionTimeout"),
    Um6 = jI((A, {
      keepAlive: B,
      keepAliveMsecs: Q
    }) => {
      if (B !== !0) return;
      A.on("socket", (I) => {
        I.setKeepAlive(B, Q || 0)
      })
    }, "setSocketKeepAlive"),
    Nm6 = jI((A, B, Q = 0) => {
      A.setTimeout(Q, () => {
        A.destroy(), B(Object.assign(new Error(`Connection timed out after ${Q} ms`), {
          name: "TimeoutError"
        }))
      })
    }, "setSocketTimeout"),
    i82 = Z1("stream"),
    h82 = 1000;
  async function hn1(A, B, Q = h82) {
    let I = B.headers ?? {},
      G = I.Expect || I.expect,
      Z = -1,
      D = !1;
    if (G === "100-continue") await Promise.race([new Promise((Y) => {
      Z = Number(setTimeout(Y, Math.max(h82, Q)))
    }), new Promise((Y) => {
      A.on("continue", () => {
        clearTimeout(Z), Y()
      }), A.on("error", () => {
        D = !0, clearTimeout(Z), Y()
      })
    })]);
    if (!D) n82(A, B.body)
  }
  jI(hn1, "writeRequestBody");

  function n82(A, B) {
    if (B instanceof i82.Readable) {
      B.pipe(A);
      return
    }
    if (B) {
      if (Buffer.isBuffer(B) || typeof B === "string") {
        A.end(B);
        return
      }
      let Q = B;
      if (typeof Q === "object" && Q.buffer && typeof Q.byteOffset === "number" && typeof Q.byteLength === "number") {
        A.end(Buffer.from(Q.buffer, Q.byteOffset, Q.byteLength));
        return
      }
      A.end(Buffer.from(B));
      return
    }
    A.end()
  }
  jI(n82, "writeBody");
  var $m6 = 0,
    a82 = class A {
      constructor(B) {
        this.socketWarningTimestamp = 0, this.metadata = {
          handlerProtocol: "http/1.1"
        }, this.configProvider = new Promise((Q, I) => {
          if (typeof B === "function") B().then((G) => {
            Q(this.resolveDefaultConfig(G))
          }).catch(I);
          else Q(this.resolveDefaultConfig(B))
        })
      }
      static create(B) {
        if (typeof(B == null ? void 0 : B.handle) === "function") return B;
        return new A(B)
      }
      static checkSocketUsage(B, Q) {
        var I, G;
        let {
          sockets: Z,
          requests: D,
          maxSockets: Y
        } = B;
        if (typeof Y !== "number" || Y === 1 / 0) return Q;
        let W = 15000;
        if (Date.now() - W < Q) return Q;
        if (Z && D)
          for (let J in Z) {
            let F = ((I = Z[J]) == null ? void 0 : I.length) ?? 0,
              X = ((G = D[J]) == null ? void 0 : G.length) ?? 0;
            if (F >= Y && X >= 2 * Y) return console.warn("@smithy/node-http-handler:WARN", `socket usage at capacity=${F} and ${X} additional requests are enqueued.`, "See https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/node-configuring-maxsockets.html", "or increase socketAcquisitionWarningTimeout=(millis) in the NodeHttpHandler config."), Date.now()
          }
        return Q
      }
      resolveDefaultConfig(B) {
        let {
          requestTimeout: Q,
          connectionTimeout: I,
          socketTimeout: G,
          httpAgent: Z,
          httpsAgent: D
        } = B || {}, Y = !0, W = 50;
        return {
          connectionTimeout: I,
          requestTimeout: Q ?? G,
          httpAgent: (() => {
            if (Z instanceof bn1.Agent || typeof(Z == null ? void 0 : Z.destroy) === "function") return Z;
            return new bn1.Agent({
              keepAlive: !0,
              maxSockets: 50,
              ...Z
            })
          })(),
          httpsAgent: (() => {
            if (D instanceof gn1.Agent || typeof(D == null ? void 0 : D.destroy) === "function") return D;
            return new gn1.Agent({
              keepAlive: !0,
              maxSockets: 50,
              ...D
            })
          })()
        }
      }
      destroy() {
        var B, Q, I, G;
        (Q = (B = this.config) == null ? void 0 : B.httpAgent) == null || Q.destroy(), (G = (I = this.config) == null ? void 0 : I.httpsAgent) == null || G.destroy()
      }
      async handle(B, {
        abortSignal: Q
      } = {}) {
        if (!this.config) this.config = await this.configProvider;
        let I;
        return new Promise((G, Z) => {
          let D = void 0,
            Y = jI(async (O) => {
              await D, clearTimeout(I), G(O)
            }, "resolve"),
            W = jI(async (O) => {
              await D, Z(O)
            }, "reject");
          if (!this.config) throw new Error("Node HTTP request handler config is not resolved");
          if (Q == null ? void 0 : Q.aborted) {
            let O = new Error("Request aborted");
            O.name = "AbortError", W(O);
            return
          }
          let J = B.protocol === "https:",
            F = J ? this.config.httpsAgent : this.config.httpAgent;
          I = setTimeout(() => {
            this.socketWarningTimestamp = A.checkSocketUsage(F, this.socketWarningTimestamp)
          }, this.config.socketAcquisitionWarningTimeout ?? (this.config.requestTimeout ?? 2000) + (this.config.connectionTimeout ?? 1000));
          let X = c82.buildQueryString(B.query || {}),
            V = void 0;
          if (B.username != null || B.password != null) {
            let O = B.username ?? "",
              R = B.password ?? "";
            V = `${O}:${R}`
          }
          let C = B.path;
          if (X) C += `?${X}`;
          if (B.fragment) C += `#${B.fragment}`;
          let K = {
              headers: B.headers,
              host: B.hostname,
              method: B.method,
              path: C,
              port: B.port,
              agent: F,
              auth: V
            },
            N = (J ? gn1.request : bn1.request)(K, (O) => {
              let R = new p82.HttpResponse({
                statusCode: O.statusCode || -1,
                reason: O.statusMessage,
                headers: l82(O.headers),
                body: O
              });
              Y({
                response: R
              })
            });
          if (N.on("error", (O) => {
              if (wm6.includes(O.code)) W(Object.assign(O, {
                name: "TimeoutError"
              }));
              else W(O)
            }), Em6(N, W, this.config.connectionTimeout), Nm6(N, W, this.config.requestTimeout), Q) Q.onabort = () => {
            N.abort();
            let O = new Error("Request aborted");
            O.name = "AbortError", W(O)
          };
          let q = K.agent;
          if (typeof q === "object" && "keepAlive" in q) Um6(N, {
            keepAlive: q.keepAlive,
            keepAliveMsecs: q.keepAliveMsecs
          });
          D = hn1(N, B, this.config.requestTimeout).catch(Z)
        })
      }
      updateHttpClientConfig(B, Q) {
        this.config = void 0, this.configProvider = this.configProvider.then((I) => {
          return {
            ...I,
            [B]: Q
          }
        })
      }
      httpHandlerConfigs() {
        return this.config ?? {}
      }
    };
  jI(a82, "NodeHttpHandler");
  var qm6 = a82,
    m82 = Z1("http2"),
    Mm6 = Hm6(Z1("http2")),
    s82 = class A {
      constructor(B) {
        this.sessions = [], this.sessions = B ?? []
      }
      poll() {
        if (this.sessions.length > 0) return this.sessions.shift()
      }
      offerLast(B) {
        this.sessions.push(B)
      }
      contains(B) {
        return this.sessions.includes(B)
      }
      remove(B) {
        this.sessions = this.sessions.filter((Q) => Q !== B)
      } [Symbol.iterator]() {
        return this.sessions[Symbol.iterator]()
      }
      destroy(B) {
        for (let Q of this.sessions)
          if (Q === B) {
            if (!Q.destroyed) Q.destroy()
          }
      }
    };
  jI(s82, "NodeHttp2ConnectionPool");
  var Lm6 = s82,
    r82 = class A {
      constructor(B) {
        if (this.sessionCache = new Map, this.config = B, this.config.maxConcurrency && this.config.maxConcurrency <= 0) throw new RangeError("maxConcurrency must be greater than zero.")
      }
      lease(B, Q) {
        let I = this.getUrlString(B),
          G = this.sessionCache.get(I);
        if (G) {
          let W = G.poll();
          if (W && !this.config.disableConcurrency) return W
        }
        let Z = Mm6.default.connect(I);
        if (this.config.maxConcurrency) Z.settings({
          maxConcurrentStreams: this.config.maxConcurrency
        }, (W) => {
          if (W) throw new Error("Fail to set maxConcurrentStreams to " + this.config.maxConcurrency + "when creating new session for " + B.destination.toString())
        });
        Z.unref();
        let D = jI(() => {
          Z.destroy(), this.deleteSession(I, Z)
        }, "destroySessionCb");
        if (Z.on("goaway", D), Z.on("error", D), Z.on("frameError", D), Z.on("close", () => this.deleteSession(I, Z)), Q.requestTimeout) Z.setTimeout(Q.requestTimeout, D);
        let Y = this.sessionCache.get(I) || new Lm6;
        return Y.offerLast(Z), this.sessionCache.set(I, Y), Z
      }
      deleteSession(B, Q) {
        let I = this.sessionCache.get(B);
        if (!I) return;
        if (!I.contains(Q)) return;
        I.remove(Q), this.sessionCache.set(B, I)
      }
      release(B, Q) {
        var I;
        let G = this.getUrlString(B);
        (I = this.sessionCache.get(G)) == null || I.offerLast(Q)
      }
      destroy() {
        for (let [B, Q] of this.sessionCache) {
          for (let I of Q) {
            if (!I.destroyed) I.destroy();
            Q.remove(I)
          }
          this.sessionCache.delete(B)
        }
      }
      setMaxConcurrentStreams(B) {
        if (this.config.maxConcurrency && this.config.maxConcurrency <= 0) throw new RangeError("maxConcurrentStreams must be greater than zero.");
        this.config.maxConcurrency = B
      }
      setDisableConcurrentStreams(B) {
        this.config.disableConcurrency = B
      }
      getUrlString(B) {
        return B.destination.toString()
      }
    };
  jI(r82, "NodeHttp2ConnectionManager");
  var Rm6 = r82,
    o82 = class A {
      constructor(B) {
        this.metadata = {
          handlerProtocol: "h2"
        }, this.connectionManager = new Rm6({}), this.configProvider = new Promise((Q, I) => {
          if (typeof B === "function") B().then((G) => {
            Q(G || {})
          }).catch(I);
          else Q(B || {})
        })
      }
      static create(B) {
        if (typeof(B == null ? void 0 : B.handle) === "function") return B;
        return new A(B)
      }
      destroy() {
        this.connectionManager.destroy()
      }
      async handle(B, {
        abortSignal: Q
      } = {}) {
        if (!this.config) {
          if (this.config = await this.configProvider, this.connectionManager.setDisableConcurrentStreams(this.config.disableConcurrentStreams || !1), this.config.maxConcurrentStreams) this.connectionManager.setMaxConcurrentStreams(this.config.maxConcurrentStreams)
        }
        let {
          requestTimeout: I,
          disableConcurrentStreams: G
        } = this.config;
        return new Promise((Z, D) => {
          var Y;
          let W = !1,
            J = void 0,
            F = jI(async (x) => {
              await J, Z(x)
            }, "resolve"),
            X = jI(async (x) => {
              await J, D(x)
            }, "reject");
          if (Q == null ? void 0 : Q.aborted) {
            W = !0;
            let x = new Error("Request aborted");
            x.name = "AbortError", X(x);
            return
          }
          let {
            hostname: V,
            method: C,
            port: K,
            protocol: E,
            query: N
          } = B, q = "";
          if (B.username != null || B.password != null) {
            let x = B.username ?? "",
              s = B.password ?? "";
            q = `${x}:${s}@`
          }
          let O = `${E}//${q}${V}${K?`:${K}`:""}`,
            R = {
              destination: new URL(O)
            },
            T = this.connectionManager.lease(R, {
              requestTimeout: (Y = this.config) == null ? void 0 : Y.sessionTimeout,
              disableConcurrentStreams: G || !1
            }),
            L = jI((x) => {
              if (G) this.destroySession(T);
              W = !0, X(x)
            }, "rejectWithDestroy"),
            _ = c82.buildQueryString(N || {}),
            k = B.path;
          if (_) k += `?${_}`;
          if (B.fragment) k += `#${B.fragment}`;
          let i = T.request({
            ...B.headers,
            [m82.constants.HTTP2_HEADER_PATH]: k,
            [m82.constants.HTTP2_HEADER_METHOD]: C
          });
          if (T.ref(), i.on("response", (x) => {
              let s = new p82.HttpResponse({
                statusCode: x[":status"] || -1,
                headers: l82(x),
                body: i
              });
              if (W = !0, F({
                  response: s
                }), G) T.close(), this.connectionManager.deleteSession(O, T)
            }), I) i.setTimeout(I, () => {
            i.close();
            let x = new Error(`Stream timed out because of no activity for ${I} ms`);
            x.name = "TimeoutError", L(x)
          });
          if (Q) Q.onabort = () => {
            i.close();
            let x = new Error("Request aborted");
            x.name = "AbortError", L(x)
          };
          i.on("frameError", (x, s, d) => {
            L(new Error(`Frame type id ${x} in stream id ${d} has failed with code ${s}.`))
          }), i.on("error", L), i.on("aborted", () => {
            L(new Error(`HTTP/2 stream is abnormally aborted in mid-communication with result code ${i.rstCode}.`))
          }), i.on("close", () => {
            if (T.unref(), G) T.destroy();
            if (!W) L(new Error("Unexpected error: http2 request did not get a response"))
          }), J = hn1(i, B, I)
        })
      }
      updateHttpClientConfig(B, Q) {
        this.config = void 0, this.configProvider = this.configProvider.then((I) => {
          return {
            ...I,
            [B]: Q
          }
        })
      }
      httpHandlerConfigs() {
        return this.config ?? {}
      }
      destroySession(B) {
        if (!B.destroyed) B.destroy()
      }
    };
  jI(o82, "NodeHttp2Handler");
  var Om6 = o82,
    t82 = class A extends i82.Writable {
      constructor() {
        super(...arguments);
        this.bufferedBytes = []
      }
      _write(B, Q, I) {
        this.bufferedBytes.push(B), I()
      }
    };
  jI(t82, "Collector");
  var Tm6 = t82,
    Pm6 = jI((A) => new Promise((B, Q) => {
      let I = new Tm6;
      A.pipe(I), A.on("error", (G) => {
        I.end(), Q(G)
      }), I.on("error", Q), I.on("finish", function() {
        let G = new Uint8Array(Buffer.concat(this.bufferedBytes));
        B(G)
      })
    }), "streamCollector")
})
// @from(Start 6059830, End 6061405)
GB2 = z((QB2) => {
  Object.defineProperty(QB2, "__esModule", {
    value: !0
  });
  QB2.sdkStreamMixin = void 0;
  var Sm6 = AB2(),
    _m6 = fn1(),
    mn1 = Z1("stream"),
    jm6 = Z1("util"),
    BB2 = "The stream has already been transformed.",
    ym6 = (A) => {
      var B, Q;
      if (!(A instanceof mn1.Readable)) {
        let Z = ((Q = (B = A === null || A === void 0 ? void 0 : A.__proto__) === null || B === void 0 ? void 0 : B.constructor) === null || Q === void 0 ? void 0 : Q.name) || A;
        throw new Error(`Unexpected stream implementation, expect Stream.Readable instance, got ${Z}`)
      }
      let I = !1,
        G = async () => {
          if (I) throw new Error(BB2);
          return I = !0, await Sm6.streamCollector(A)
        };
      return Object.assign(A, {
        transformToByteArray: G,
        transformToString: async (Z) => {
          let D = await G();
          if (Z === void 0 || Buffer.isEncoding(Z)) return _m6.fromArrayBuffer(D.buffer, D.byteOffset, D.byteLength).toString(Z);
          else return new jm6.TextDecoder(Z).decode(D)
        },
        transformToWebStream: () => {
          if (I) throw new Error(BB2);
          if (A.readableFlowing !== null) throw new Error("The stream has been consumed by other callbacks.");
          if (typeof mn1.Readable.toWeb !== "function") throw new Error("Readable.toWeb() is not supported. Please make sure you are using Node.js >= 17.0.0, or polyfill is available.");
          return I = !0, mn1.Readable.toWeb(A)
        }
      })
    };
  QB2.sdkStreamMixin = ym6
})
// @from(Start 6061411, End 6063177)
XB2 = z((Lh8, mX1) => {
  var {
    defineProperty: gX1,
    getOwnPropertyDescriptor: km6,
    getOwnPropertyNames: xm6
  } = Object, fm6 = Object.prototype.hasOwnProperty, pn1 = (A, B) => gX1(A, "name", {
    value: B,
    configurable: !0
  }), vm6 = (A, B) => {
    for (var Q in B) gX1(A, Q, {
      get: B[Q],
      enumerable: !0
    })
  }, dn1 = (A, B, Q, I) => {
    if (B && typeof B === "object" || typeof B === "function") {
      for (let G of xm6(B))
        if (!fm6.call(A, G) && G !== Q) gX1(A, G, {
          get: () => B[G],
          enumerable: !(I = km6(B, G)) || I.enumerable
        })
    }
    return A
  }, ZB2 = (A, B, Q) => (dn1(A, B, "default"), Q && dn1(Q, B, "default")), bm6 = (A) => dn1(gX1({}, "__esModule", {
    value: !0
  }), A), hX1 = {};
  vm6(hX1, {
    Uint8ArrayBlobAdapter: () => un1
  });
  mX1.exports = bm6(hX1);
  var DB2 = _X1(),
    YB2 = f82();

  function WB2(A, B = "utf-8") {
    if (B === "base64") return DB2.toBase64(A);
    return YB2.toUtf8(A)
  }
  pn1(WB2, "transformToString");

  function JB2(A, B) {
    if (B === "base64") return un1.mutate(DB2.fromBase64(A));
    return un1.mutate(YB2.fromUtf8(A))
  }
  pn1(JB2, "transformFromString");
  var FB2 = class A extends Uint8Array {
    static fromString(B, Q = "utf-8") {
      switch (typeof B) {
        case "string":
          return JB2(B, Q);
        default:
          throw new Error(`Unsupported conversion from ${typeof B} to Uint8ArrayBlobAdapter.`)
      }
    }
    static mutate(B) {
      return Object.setPrototypeOf(B, A.prototype), B
    }
    transformToString(B = "utf-8") {
      return WB2(this, B)
    }
  };
  pn1(FB2, "Uint8ArrayBlobAdapter");
  var un1 = FB2;
  ZB2(hX1, g82(), mX1.exports);
  ZB2(hX1, GB2(), mX1.exports)
})